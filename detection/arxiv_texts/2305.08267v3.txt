arXiv:2305.08267v3  [quant-ph]  19 Jul 2024Generation of Kochen-Specker contextual sets in higher dim ensions by dimensional
upscaling whose complexity does not scale with dimension an d their applications
Mladen Paviˇ ci´ c1,∗and Mordecai Waegell2
1Center of Excellence for Advanced Materials and Sensing Dev ices (CEMS), Photonics and Quantum Optics Unit,
Ruder Boˇ skovi´ c Institute and Institute of Physics, 10000 Zagr eb, Croatia.
2Institute for Quantum Studies, Chapman University, Orange , CA 92866, U.S.A.
Recently, handling of contextual sets, in particular Koche n-Specker (KS) sets, in higher dimensions
has been given an increasing attention, both theoretically and experimentally. However, methods
of their generation are diverse, not generally applicable i n every dimension, and of exponential
complexity. Therefore, we design a dimensional upscaling m ethod, whose complexity does not scale
with dimension. As a proof of principle we generate manageab le-sized KS master sets in up to
27 dimensional spaces and show that well over 32 dimensions c an be reached. From these master
sets we obtain an ample number of smaller KS sets. We discuss t hree kinds of applications that
work with KS sets in higher dimensions. We anticipate other a pplications of KS sets for quantum
information processing that make use of large families of no nisomorphic KS sets.
I. INTRODUCTION
It has been proven that applications in quantum com-
putation [1, 2], quantum steering [3], and quantum com-
munication[4]relyonquantumcontextualityandcontex-
tual sets. Small contextual sets, predominantly Kochen-
Specker (KS) sets [5], in low dimensional spaces have
been implemented in a series of experiments using pho-
tons [6–11], neutrons [12, 13], trapped ions [14], and solid
state molecular nuclear spins [15]. KS sets are sets that
prove the KS theorem, i.e., sets of quantum measure-
ments whose outcomes cannot be predicted by means of
classical (noncontextual) value assignment [16].
Some of the applications that have been developed for
KS sets, such as oblivious communication and quantum
key distribution, can make use of any KS set, and having
access to a large number of alternatives may actually
increase the security of these protocols [4, 17–22]. In this
paper, we give two applications that work with KS sets
in any dimension, and another for a particular family of
KS sets in even dimensions.
As forimplementations ofcontextualsets, it is ofinter-
est to achievethem in anydimension. By employingpho-
ton orbital angular momentum technique one can imple-
ment “high-dimensional photon quantum gates” [23, 24]
in dimensions up to eight. Equally so for “multi-photon
entanglement in high dimensions” [25] or for “time-
energy entanglement with high-dimensional encoding”
[26]. Apparently this is also a current upper limit for
implementation of contextual sets [10, 27, 28]. However,
the long-term goal of a quantum internet, quantum com-
munication and quantum computation alike, requiresim-
plementations in much higher dimensions than current
experiments can achieve; see [29] and [30], respectively.
For exploring the scope of future theoretical uses or
experimental implementations of contextuality it would
∗mpavicic@irb.hrthus be valuable to develop a universal method of gen-
erating high dimensional contextual sets which may lead
to new and diﬀerent applications. Existing methods for
ﬁnding contextual sets work in high dimensions are di-
verse and often limited to a particular family of sets,
so the results are relatively few, and are unevenly dis-
tributed. Let us ﬁrst review some of these particular
casesbeforemovingontoourmethodsofgeneratingfam-
ilies of contextual sets.
Ramanathan et al. [19] consider KS contextual sets
in dimensions ≥217to obtain as large violations of
non-contextuality inequalities as possible. Zhan and Hu
[31] consider dimensions up to 20 to obtain “dimension-
dependent noncontextuality inequalities.” Frembs et
al.[32]showthat thecontextualityofquditsofdimension
pr,pprime,r∈N, is a resourcefor a measurement-based
quantum computation. Waegell and Aravind [33] show
that codewords of the binary and ternary Golay codes
canbe convertedinto raysin RP23andRP11that provide
proofsoftheKochen-Speckertheoreminrealstatespaces
of dimensions 24 and 12, respectively. Wang et al. [34]
make use of dndimensional unitary gate U∈SU(dn)
operating on the n-qudit state (where qudit is of dimen-
siond) to provide a “high-dimensional quantum comput-
ing” resource and show that a contextual system solves
a problem faster than the classical methods.
Many authors have therefore undertaken an eﬀort to
computationally generate contextual sets for possible
subsequent usage and application [35–37], [38, Supple-
mental Material], [39–43]. They generate KS sets from
vectors, projectors, operators, graphs, stabilizer opera-
tions, polytopes, Lie groups, etc. Fortunately, all these
entities can be reduced to hypergraphs.
So, in order to unify the generation methods and ob-
tain more general results, exhaustive algorithms for ob-
taining contextual hypergraphs from simple vector com-
ponents, say {0,±1},in odd and even dimensional spaces
have recently been proposed [39, 42]. But, although the
algorithm of this method is valid for any dimension, in
practice, it is limited by its exponential computational2
complexity. It faces a computational barrier in dimen-
sions greater than eight.
Therefore, in this paper, we oﬀer a method of generat-
ing manageable-sized master KS sets whose complexity
does not grow with dimension and which can straightfor-
wardly yield smaller sets, with implementation-optimal
vectorcomponents {0,±1},in higherdimensionalspaces.
It can provide us with contextual sets of moderate size in
achosendimension, eachwithdistinct structuralfeatures
that may be relevant for some particular application. We
can generate new sets on demand limited only by com-
putational resources, and we can also catalog and store
many examples in a database for possible future usage.
We stressherethat somecontextualsetsin higherdimen-
sions are so huge that most probably the need for very
big ones will never materialize, but smaller sets, whose
structuralproperties canbe more easilyunderstood, may
be useful for many applications. Also, ample contextual
sets in a chosen dimension might prove themselves indis-
pensable for testing possible new hypotheses made of a
set constructed in the dimension for the purpose.
The method stems from previous dimensional upscal-
ingapproaches[38,44–46] whichoﬀeredseveralexamples
asproofsofprincipleforthe methods, andﬂeshed outthe
simplest KS sets in lower dimensions. We extend and
unify these approaches into a method for constructing
KS sets with desired properties in any dimension, which
enables us to ﬁnd manageable-sizedsets in higher dimen-
sions using presently available computational resources.
We give examples in all dimensions up to 16, then in 27D
(27-dim), and ﬁnally we give a blueprint on how one can
generate 32D examples. A generation of non-isomorphic
sets in much higher dimensions is just a question of how
much CPU time one is willing to dedicate to these tasks.
The method relies on a remarkable feature of contextual
sets that their “minimal complexity does not scale with
dimension” as proved in [38]. Our results are discussed
throughout the remainder of this paper.
TodescribeandhandleKSsetswemakeuseofMcKay-
Megill-Paviˇ ci´ c-hypergraphs (MMPH) [43] which we will
alternatively simply call hypergraphs . In Sec. II we elab-
orate on MMPHs in some details. A hypergraph rep-
resents each state vector by a vertex, and states which
are mutually orthogonal belong to hyperedges which we
will alternatively simply call edges. Hypergraphs are the
mostcompactwaytorepresentaKSsetwithoutomitting
any structural details, and without assigning particular
state vectors to the vertices (although some applications
may depend in other ways on the particular assignment
of state vectors).
The paper is organized as follows:
In Sec. II we present the hypergraph formalism we
make use of, i.e., the MMPH formalism.
In Sec. III we introduce our dimensional upscaling
method.
In Sec. IV we present master KS MMPHs we obtained
by means of our dimensional upscaling method as well
as the smaller KS MMPHs we obtained from the formerMMPHs. Subsections IVB, IVC, and IVF provide us
with seeds for obtaining higher dimensional MMPHs in
remaining subsections.
In Sec. V we oﬀer three applications of higher di-
mensional MMPHs: Larger alphabet (VA), Oblivious
communicationprotocolandcommunicationofbounded-
dimensional systems protocols (VB), and Generalized
Hadamard matrices (VB).
A discussion is given in Sec. VI.
In Appendix we give KS MMPH’s strings and coordi-
natizations of masters and the smallest KS MMPHs for
each dimension obtained in Sec. IV.
II. HYPERGRAPH FORMALISM
An MMPH is a special case of a hypergraph. An nD
(n-dim) MMPH is a connected hypergraph k-lwithk
vertices and lhyperedges (often simply called edges) in
which (i) every vertex belongs to at least one hyperedge;
(ii) every hyperedge contains nvertices; (iii) no hyper-
edge shares only one vertex with another hyperedge; (iv)
hyperedges may intersect each other in at most n−2
vertices; (v) graphically, vertices are represented as dots
and hyperedges as (curved) lines passing through them.
We encode MMPHs by means of the printable ASCII
characters for each vertex, with the exception of ‘space’,
‘0’, ‘+’, ‘,’ and ‘.’. When all 90 characters are exhausted,
we reuse them preﬁxed by ‘ +’ (again for each vertex),
when those are exhausted by ‘ ++’ and so on. Hyperedges
are separated by ‘,’ and each MMPH is terminated by ‘.’.
There is no limit on their size.
A KS MMPH is an nD (n≥3) MMPH to whose ver-
tices it is impossible to assign 1s and 0s in such a way
that the following rules hold: (I) no two vertices in any
edge are both assigned the value 1; (II) in no edge all of
the vertices are assigned the value 0 [43, Th. 3.2].
A given MMPH may or may not have a coordinati-
zation, i.e., a representation (of vertices) by means of
vectors in a Hilbert space.
Our notion of coordinatization diﬀers the notion or-
thonormal representation used by Lov´ asz [47]. First,
Lov´ asz considers an orthonormal representation of unit
vectors in a Euclidean space such that if iandjare non-
adjacent [not connected by an edge] vertices, then viand
vjare orthogonal, while in our notation vectors assigned
to adjacent [connected by an (hyper)edge] vertices are
orthogonal. Second, to Lov´ asz every graph has an or-
thonormal representation, while not every MMPH has
a coordinatization, e.g., the 6-3 KS MMP (hyper)graph
shown in [39, Fig. 1] does not have it.
When acoordinatizationisattachedtoverticesofaKS
MMPH, then the KS theorem [5, 44] states that such a
hypergraphexists. Thisisin contrastto classicalsystems
(in, e.g., classical computation) which always allow the
aforementioned assignments of 1’s and 0’s.
For a KS MMPH with a coordinatization, its nD space
becomes an nD Hilbert space spanned by n-tuples of mu-3
tually orthogonal vectors, where the n-tuples correspond
to hyperedges and vectors to vertices.
Ak-lMMPHclassis a collection of all sub-MMPHs
contained in the k-lMMPH. (A class may contain both
non-KS and KS MMPHs.)
AcriticalKS MMPH is a KS MMPH which is minimal
in the sense that removing any of its hyperedges turns it
into a non-KS non-contextual MMPH.
AKSMMPH masterisanon-criticalKSMMPHwhich
contains smaller KS proper sub-MMPHs.
The smallest masters contain just one critical proper
KS MMPH. A master may contain non-KS MMPH. A
master must contain at least one proper KS sub-MMPH.
A classical vertex index, HIc, is the number of 1s one
can assign to vertices of an MMPH so as to satisfy the
conditions(I)and(II)oftheKStheorem. Maximal(min-
imal)HIcis denoted as HIcM(HIcm). It can be proved
thatHIcM=α[43, Th. 3.2], where αis Lov´ asz’s in-
dependence number [48, p. 192]. HIcmenables us to
visually and/or numerically straightforwardly prove any
KS MMPH. See Sec. IVL.
III. DIMENSIONAL UPSCALING METHOD
An essential feature of any set we consider is that it
consists of mutually orthogonal elements organized in
blocks that are themselves mutually linked so as to form
the set. These elements might be operators, projectors,
states, vectors, graph vertices, or hypergraph vertices.
E.g., vector blocks in an n-dim space are n-tuples of
mutually orthogonal vectors. For all these elements and
blocks we adopt an MMPHrepresentationwhich we shall
often simply call a hypergraph representation. To arrive
at ourmastersets below we make use of vector represen-
tation, i.e, ofhypergraphswith coordinatization. To gen-
erate smaller sets from master sets and therefore to form
their distributions we make use of hypergraphswithout a
coordinatization since then their handling and computa-
tion are much faster and data much more compact. They
reacquirea coordinatizationsin aseparatestep after gen-
eration.
In [39, 43] we generated billions of KS hypergraphs
in dimensions up to eight, directly from simple vec-
tor components. Such a generation in 9+ dimensional
spaces takes too much CPU time even on supercomput-
ers, though.
TogeneratecomparativelysmallKShypergraphsindi-
mensions higher than those obtained directly from vector
components in [39, 43], we make use of a generalization
of methods developed in [37–39, 42, 43].
We generalize the Matsuno/Penrose-Zimba method,
along with some other tools, to generate manageable-
sized KS hypergraphs which could then be searched for
smaller KS sub-hypergraphs they contain. Our general-
ization works by combining two KS sets from lower di-
mensions so as to allow the number of unique vertices in
the new combined set to be minimized; it is not guar-anteed that the new set gives a KS hypergraph, so this
has to be checked as a separate step. Given a KS set of
dimension n1withk1vectors and another of dimension
n2≤n1withk2vectors, we can construct a new set in
any dimension n≤n1+n2. The most interesting cases
are with n < n1+n2, since then the number of resulting
unique vectors may be signiﬁcantly less than k1+k2.
The method works by extending the vectors of each
parent set with enough vector components 0 to reach
dimension n. For the ﬁrst set, these are all appended at
the end of the existing vectors. For the second set, the
n−n2vector components 0 are distributed among the
ﬁrstn1dimensions (the same placements for everyvector
in the second set), so that the last n−n1dimensions are
occupied bythe nonzerovectorcomponents ofthe second
set, which assures that the new set has nonzero vector
components in all ncardinal directions in the space. At
this point, some of the new vectors from the ﬁrst set
may be identical to some of the new vectors from the
second set, which reduces the total number of unique
vectors in the new set. Thus, to ﬁnd the new set with
the fewest unique vectors, we consider all permutations
of the locations of the vector components 0 in the second
set, and for each of these, all permutations of the order
of then2dimensions. Because we are using the vector
components {0,±1}, this method allows us to ﬁnd new
sets with ksigniﬁcantlylessthan k1+k2for manychoices
of parent KS sets, and nearly all of these turn out to
give KS hypergraphs—which might not work for more
complicated sets of vector components.
Once we ﬁnd a minimal set we can check whether it
gives a KS hypergraph or not. If it does, we have a
new master set which likely contains many smaller KS
hypergraphs that we can search for using other methods.
To use the new sets as parents in another round of
upscaling to higher dimension, we want the new KS sets
withsmallestnumberofvectors,sowealsocheckwhether
any particular vertices can be removed, along with all of
their associated edges, to leave a smaller KS hypergraph
behind, and in many cases this allows us to remove sev-
eral extraneous vectors.
Finding new KS sets proceeds in a cyclic way, combin-
ing known KS set in small dimensions to ﬁnd the new
ones in slightly higher dimensions, keeping the small-
est ones, and then repeating this process and moving
to higher dimensions at each iteration. We probably
have not found the smallest sets with vector components
{0,±1}for dim>8, but it seems likely that we do have
them for 4 ≤dim≤8.
Finding the KS sets with the fewest vertices is also
important for computing their set of edges, which takes
time that scales exponentially with both the dimension
and the rough number of vertices in the set.
Our general goal was to ﬁnd new master KS hyper-
graphs with a relatively small number of edges (ideally
around 100, but not more than 1000), which could then
be eﬀectively searched for many smaller KS hypergraphs
using our programs MMPstrip, MMPshuffle , and4
States01 [43] with presentlyavailablecomputationalre-
sources. The results of these searches are presented and
discussed in Secs. IV and VI.
In particular, this allowsusto ﬁnd the KShypergraphs
with fewest edges, and the general pattern that emerges
is consistent with the general result that the minimum
complexity of KS hypergraphs does not scale with di-
mension. As expected, the minimum number of vertices
seems to grow roughly linearly with dimension, while the
minimum number of edges in ≥4D ﬂuctuates between 9
and 16. With diﬀerent vector components, KS sets with
fewer edges are known in certain dimensions (recall that
among the 6D hypergraphs with complex vector com-
ponents the smallest one has just 7 edges [49]), so the
general minimum is not known in all dimensions and for
all vector components, but this gives an upper bound.
We present and discuss the outcomes of our method in
all dimensions up to 16 and in 27D in Sec. IV.
IV. HYPERGRAPHS GENERATED BY THE
UPSCALING METHOD IN HIGHER
DIMENSIONS
We generate MMPHs with coordinatizations with vec-
tor components from the set {0,±1}. Their ﬁgures and
distributions are shown in this section and their strings
and coordinatizations are given in Appendix.
The ﬁrst three subsections bellow we provide for the
sake of completeness and because we use some of their
MMPHs as seeds for generating MMPHs in higher di-
mensions via dimensional upscaling in subsequent sub-
sections.
A. 3D MMPHs—vector component generation
3DMMPH generatedfrom {0,±1}is not a KS set [42].
B. 4D MMPHs—vector component generation
We obtain the KS master MMPH 24-24 directly from
the vector component set {0,±1}via our programs at
[61],vecfind (which determines generates a master
from vector components and/or whether a vector
assignment to vertices in an MMPH is possible), mmp-
strip(which outputs all subsets of the input MMPHs
that have a speciﬁed number of hyperedges removed),
states01 (which determines whether an MMP diagram
admits a 0,1 (non-dispersive) state), and shortd (which
removes duplicates from input MMPHs): ( vecfind -4d
-master -nommp -vgen=0,1,-1 | mmpstrip -U |
grep v24e24| states01 -1 -r 1000 | shortd -G ).
From it we obtain six critical KS MMPHs, shown in
Fig. 1(a) (two 20-11 and two 22-13) within seconds
on a single CPU. Also, via our program mmpsubset ,
we obtain 224−1 sub-MMPHs from which we ﬁlterout 1232 nonisomorphic KS MMPHs via states01
andshortd within minutes on a single CPU [50].
Previously, the 24-24 and 18-9 were obtained in [51]
and [52], respectively, by other methods. See also a
diagrammatic representation of 24-24 [53]. A graphical
presentation of 18-9 was ﬁrst given in [54, Fig. 3(a)] with
redundant cyclically closed hyperedges. In this paper,
all MMPHs are presented by means of non-redundant
graphical presentation of hyperedges. For instance, in
Fig. 1(b) vertices Cand5are not connected directly by
a straight line since they are already connected via the
CE34line.
1
2
76
89ACEFGH
18−9(b)4D
9
15
241843
5D
BI
1113 15
20
22
24
24−2440−32(a)
l
k
FIG. 1. (a) Distribution of the 4D critical KS MMPHs ob-
tained from the master 40-32 itself generated by {0,±1}vec-
tor components [39]; 40-32 consists of 2 MMPHs: a KS 24-
24 and a noncontextual 16-8; abscissa is l(number of hy-
peredges); (negative) ordinate is k(number of vertices); (b)
the smallest 4D critical KS MMPH 18-9; HIcM=α= 4,
HIcm= 3; strings & coordinatizations of 24-24, 18-9 are given
in Appendix 1.
In the subsequent paragraphs we make use of these
three KS MMPHs as well as of some higher dimensional
MMPHs as seeds for generating MMPHs via dimensional
upscaling in higher dimensions.
C. 5D MMPHs—vector component generation
Arbitrarily exhaustive number of critical 5D KS
MMPHs shown in Fig. 2(a) were obtained in [41, 42]
403016
5029
60
55(a)
105−136OH
F
TB
SG
E9JN 2
K
4D
1MI L
Q8PR
C
A37
6
529−16(b)
415D
FIG. 2. (a) Distribution of the 5D critical KS MMPHs ob-
tained from the master 105-136 itself generated by {0,±1}
vector components [42]; abscissa is l(number of hyperedges);
(negative) ordinate is k(number of vertices); Cf. Fig. 1(a);
(b) One of the two smallest ﬁve-dimensional 29-16 critical K S
MMPH; HIcM=α=7,HIcm=3; strings and coordinatizations
are given in Appendix 2.5
directly from the set {0,±1}by vector component gen-
eration. Critical 29-16 (Fig. 2(b)) serves us as a seed for
generating some master MMPHs in higher dimensions.
D. 6D MMPHs—dimensional upscaling
Six dimensional Hilbert spaces are inhabited by ei-
ther spin-5
2systems or by qubit-qutrit systems ( H6=
H2⊗H3). The former representation in a complex space
has been implemented in [11]. It turned out to have
a fairly small master MMPH [39, 41, 55] and therefore
it had been easy to ﬁnd all its subgraphs. In the real
space, the 332-1408 master MMPH generated by {0,±1}
components is huge and alreadyat the time of its genera-
tion [37, 39] we were well aware that then obtained 34-16
critical might not be the smallest. Our dimensional up-
scaling conﬁrms that conjecture and provides us with a
31-15critical MMPH shown in Fig. 3(b). We obtain it
A
8B
C
GKLMEFST
D
3NO
R
H
5Q
I UV9
131
vertices32
33
1617hyperedges
33−1931−1615(a) (b)
6D47
62P
J31−15
FIG. 3. (a) Distribution of the smallest 6-dim critical KS
MMPHs obtained from the masters 31-16 and 33-19 by di-
mensional upscaling; abscissa is l(number of hyperedges);
(negative) ordinate is k(number of vertices); Cf. Fig. 1(a);
(b) the smallest critical KS MMPHs 31-15 in the 31-16 class;
HIcM=α= 7,HIcm= 2; strings and coordinatizations of
31-15, 32-16, and 33-17 are given in Appendix 3.
from the master 31-16. From another 33-19 master we
obtain three additional MMPHs, one of which (32-16)
is also smaller then the 34-16. Their distributions are
shown in Fig. 3(a).
E. 7D MMPHs—dimensional upscaling
The vector components {0,±1}in a 7D spin-3 space
generate an 805-9936 master MMPH which generates a
class whose partial distribution is shown in [42]. Its
vectors were automatically generated from the master
MMPH by means of our programs MMPstrip, MMP-
shuffle , andStates01 .
However, such a direct exhaustive generation takes too
much CPU time on a supercomputer and therefore we
here generate a partial distribution of KS MMPHs with
small number ofverticesand hyperedges(not obtained in
[42]) from master 47-176 obtained here via dimensional
upscaling as shown in Fig. 4(a). The smallest critical
34-14MMPH from this class is shown in Fig. 4(b). Note
the cutoﬀlevelat the 63verticescharacteristicofallmas-
ters that are not generated directly from the vector com-NR
8
B
KH
5A Y
G
OFCW
LI
V
MED
9
31UTS
verticeshyperedges47−176 class
4714 Q (a)
34(b)
277D
46J
P
X
7
234−14
FIG. 4. (a) Distribution of a million of 7D critical KS MMPHs
from the 47-176 master; Cf. Fig. 1(a); (b) the smallest criti cals
34-14 from the 47-176 master; HIcM=α= 7,HIcm= 3;
strings and coordinatizations of 33-14 are given in Appendi x
4.
ponents. The ones that are we sometimes call supermas-
tersand the formerones a submasters . Analogouscutoﬀs
are evident for all higher dimensional sub-masters below.
F. 8D MMPHs—vector component generation
Billions of 8D critical KS MMPHs obtainable from the
3280-1361376 {0,±}master are given in [37]. So, there is
no need to employ the dimensional upscaling to replicate
some of them here. However, we do make use of the
smallest34- 9KSMMPH,showninFig.5(a), asaseedfor
dimensional upscaling of MMPHs in higher dimensions.
1
2
3
86
7
9DEF
G
J
LH
K
MOPQT U RSI
4
5
NBC
V
W
XAYZ
aM
B6
5
T
J78
9S
HU
L
E A
Y XF4
CGK I2 3 1
WV
DONQR P
34−9(a) (b)
8D36−9
FIG. 5. (a) one of the two smallest non-isomorphic criticals
34-9 [37]; HIcM=α= 4,HIcm= 3; Cf. Fig. 1(a); (b) star-
like 36-9 [37] proved by the S-Htheorem ([56]; see Sec. V C);
strings and coordinatizations are given in Appendix 5.
G. 9D MMPHs—dimensional upscaling
Two entangled qutrits live in a 9D space and in [43] we
generated their MMPH supermaster from {0,±1}com-
ponents. It consists of 9,586 vertices and 12,068,704 hy-
peredgesand that istoo hugeforadirectgenerationfrom
the master MMPH. However, small critical KS MMPHs
can be obtained by dimensional upscaling which yields
47-144 and 63-1200 master MMPHs whose distributions
are shown in Fig. 6(a). Critical KS MMPHs are gener-
ated from the masters via States01 .6
3147−144 471620 24
vertices
53hyperedges (a)
63−1200
633
N R O BQSY
54D
JZF b
A
ET H LU
19W
8MI
V
6
7f
e2
PX
dgh
ia
kG
jlCKc47−16(b)9D
FIG. 6. (a) Distribution of 41,000 9D critical KS MMPHs
obtained via dimensional upscaling from the 47-144 and 63-
1200 master MMPHs; Cf. Fig. 1(a); (b) the smallest critical
47-16 from the 47-144 class; HIcM=α= 7,HIcm= 3;
strings and coordinatizations of 47-16 are given in Appendi x
6.
H. 10D MMPHs—dimensional upscaling
From the spin-9
2MMPH masters 52-141, 60-96, and
74-610, whose distributions are shown in Fig. 7(a), we
T1
VO
4ce
FD
lL
YB
C
J
Qa
j
G
o6
bmE
M
UdA
p
fi
n50−1523
525425
31
6058
7336
68
72(a)
15
5048 48−1616
52−14160−96
74−610
1 million MMPHs(b) (c)
55−1110D
W
R
h1
A tq RY nJ
j es
S
I
89PH2
kXNZ
g57q
FIG. 7. (a) Distribution of 10D critical KS MMPHs ob-
tained from the 52-141, 60-96, and 74-610 master MMPHs;
Cf. Fig. 1(a); (b) the smallest critical KS MMPH 50-15 from
the 52-141 class; HIcM=α= 7,HIcm= 2; (c) star-like KS
MMPH 55-11 whose existence was proved by the S-Htheo-
rem ([56]; see Sec. V C; the string and coordinatization of th e
50-15 and the string of the 55-11 are given in Appendix 7; it
is a critical KS MMPH with a parity proof.
obtain critical MMPHs, the smallest of which (50- 15)
is shown in Fig. 7(a). Their strings might have gaps in
characters (e.g., 3andKare missing in 50-15). The gaps
can be closed by program MMPshuffle if needed (e.g.,
for further processing).
The 10D KS master MMPHs are generated by means
of particular combinations of hypergraphs from smaller
dimensions. See Sec. IVJ.
I. 11D MMPHs—dimensional upscaling
Spin-5 11D master MMPHs with {0,±1}vector com-
ponents generate smaller critical KS MMPHs by the di-
mensional upscaling. The master MMPHs are 50-38,
54-162, 65-198, and 71-4224. From them we generated
the following critical KS MMPHs: 50-14, ...,60-16, 54-
18,..., 54-23, and 61-21,..., 70-30 (each of which is com-
ing in many non-isomorphic instances) whose distribu-tions are shown in Fig. 8(a). We give the smallest one
50-14in Fig. 8(b).
edfED1
6
ML
O
Y UVA
Jc
Qi
nj
mTF
oba
GB4C
l50−14
711823
54
61
71−422454−162
3065−1985014 16(b)
50−38(a)11D
W
Rh
N
I7 2
k
P9Kg
X5
S
Z
H83
FIG. 8. (a) Distribution of 11D critical KS MMPHs obtained
from the 50-38, 54-162, 65-198, and 71-4224 master MMPHs
via dimensional upscaling; Cf. Fig. 1(a); (b) the smallest c rit-
ical 50-14 we obtained from the 50-38; HIcM=α= 6,
HIcm= 3; strings and coordinatizations of 50-14 are given
in Appendix 8.
J. 12D MMPHs—dimensional upscaling
12D MMPHs can be represented either by spin-11
2sys-
temsorbytwoqubits andaqutrit ( H12=H2⊗H2⊗H3).
The critical 52- 9shown in Fig. 9(b) is one of 502 non-
32
68
7520
6830
64
676528
66 316318
7474−70168−348
75−136185216 9
39UV
ae
cdQf
iY
4T
6G
J
jK
CAE
BOFm
n
o
bDLlpM(b) (a)52−81
67−41912D
W52−9
R
h
8
Zk
g
P
3
7S
91
25H
INX
q
FIG. 9. (a) Distribution of 12D critical KS MMPHs obtained
from the 52-81, 67-419, 68-348, 74-701, and 75-136 master
MMPHs which are themselves obtained via dimensional up-
scaling; Cf. Fig. 1(a); (b) the smallest critical KS MMPH
52-9 we obtained from the 52-81 master; HIcM=α= 4,
HIcm= 3; strings and coordinatizations of 52-9 are given in
Appendix 9.
isomorphic critical 52-9s from the 52-81 master. It rep-
resents a partial constructive proof (for MMPHs with
{0,±1}component coordinatization) of the result that
MMPHs in an even dimensional space n≥10 require at
most nine hyperedges [38].
The 12D 52-81 master was obtained by combining the
34-9 set in 8D with the 18-9 in 4D. The 67-419 master is
obtained as follows. First, we combine two 18-9 sets in
4D to get a 35-32 in 7D. Next, we combine the 35-32 in
7D with the 18-9 in 4D to get a 52-141 set in 10D (see
Fig. 7(a)). And ﬁnally, wecombinethis 52-141set in 10D
with the 18-9in 4Dto get a67-419in 12D.Similarly with
the remaining four masters. We then apply MMPstrip7
andStates01 programs to them to obtain distributions
of all smaller KS hypergraphs contained in the masters.
The ﬁve distributions are shown in the ﬁgure. The small-
est KS hypergraph 52-9 (shown in Fig. 9(b)) is contained
in just one of the masters (52-81).
K. 13D MMPHs—dimensional upscaling
Spin-6 13D criticals MMPHs shown in Fig. 10 are less
abundant than the ones obtained in lower dimensions.
This is due to the complexity of generation of MMPHs
which forced us to generate as small masters as possible
in order to shorten the runtimes of generation. However,
althoughthenumberofverticesandhyperedgesislimited
we still get a high number of non-isomorphic criticals.
Actually, among 100,000 of generated MMPHs there are
no two isomorphic ones. Their distributions are shown
in Fig. 10(a). The smallest critical is 63- 16(Fig. 10(b)).
61 KlmstQ
ap
43C
VebG
LJT
cv
u z !
F
j
dxU
i
ABE
Yo"O
nw
yfD
r
M27
27697067
7269
1970−102617
69−58316
63(a)
2263−144
78−13234
7840(b)
13D
63−16W
Rh
529
7
8HZ
P
X
kS
IgN q
FIG. 10. (a) Distribution of 100,000 13D critical KS MMPHs
obtained from the 63-144, 69-583, 70-1026, and 78-132 maste r
MMPHs obtained via dimensional upscaling; Cf. Fig. 1(a); (b )
one of the smallest criticals, KS MMPH 63-16 we obtained
from the 63-144 master; HIcM=α= 7,HIcm= 3; strings
and coordinatizations of 63-16 are given in Appendix 10.
L. 14D MMPHs—dimensional upscaling
Spin-13
214D criticals MMPHs shown in Fig. 11(a) are
evenfewerthanthe13Dones,againduetothegeneration
complexity. LongerCPUtime is notviableat the present
level of our research which is to show that one can gen-
erate thousands of comparatively small non-isomorphic
criticals in high dimensional spaces. The smallest criti-
cal we obtained is 66- 15in Fig. 11(b).
HIcm= 2 for 66-15 means that it is, for instance, pos-
sible to assign 1 to just bandB. Then, all other vertices
must be assigned 0 and that violates the condition (II)
of the KS theorem for, e.g., the top red hyperedge. Al-
ternatively, a numerical veriﬁcation can be carried out
on its MMPH string (Sec. 11) proving that the (top red)
hyperedge ekdfghijlm47E3 contains neither bnorB.4
Q J F3
MT OoG
bcV Y
Lvw
Kpy
tz
uE
ml ij def
sx"$%
!
r
aU#C
n
6
A
B
D
16615 22
70(a)
71−107167−157
6727
71(b)14D
W66−15
Rh7
k
N5
PZ
SIHg
28
9
X
q
FIG. 11. (a) Distribution of 20,000 14D critical KS MMPHs
obtained from the 67-157 and 71-1071 master MMPHs ob-
tained via dimensional upscaling; Cf. Fig. 1(a); (b) the sma ll-
est critical KS MMPH 66-15 we obtained from the 67-157
master;HIcM=α= 6,HIcm= 2; strings and coordinatiza-
tions of 66-15 are given in Appendix 11.
M. 15D MMPHs—dimensional upscaling
With spin-7 15D criticals MMPHs shown in Fig. 12 we
f
Ci d
DVUO
w
x"#$
yjbBYe
KJ
EF%T t
p436
v1c
A
a
QL
rsmlo
n!GM
uz
6616 14(a)
7126
7676−24366−38(b)15D
W
66−14Rh
S
Z9g
8I
k
72
5
PN
HX
q
FIG. 12. (a) Distribution of 80,000 15D critical KS
MMPHs obtained from the 66-38 and 76-243 master MMPHs;
Cf. Fig. 1(a); (b) the smallest critical KS MMPH 66-14 we
obtained from the 66-38 master; HIcM=α= 6,HIcm= 2;
strings and coordinatizations of 66-14 are given in Appendi x
12.
succeeded in establishing an optimal dimensional upscal-
ing. So, the complexity of generation just allowed a more
abundant distribution than in the 14D space, while the
minimal MMPH has fewer hyperedges. The advantage
of the low level distribution is that we obtain fairly small
criticals. Note that the smallest obtained MMPH in the
15D space—66- 14shown in Fig. 12(b)—has fewer hyper-
edges than the ones in 13D and 14D obtained above; in
the 16D they are even fewer.
N. 16D MMPHs—dimensional upscaling
16D space hosts four entangled qubits: n= 24. The
smallest 16D critical MMPH with nine hyperedges 70- 9
we obtained via dimensional upscaling from the master
80-855, shown in Fig. 13(b), conﬁrms our result from [38]
according to which 4 nD MMPHs (for positive integers
n) require at most nine hyperedges, and at most ﬁfteen
hyperedges in dimensions 4n+2.8
(a)
19
76
802470689
68−93
VT
y"
#F
Qa
Ur&
p4G
6
B
M
j%o
v1s e!L’
YwuncK
Jx
dmi
$O
lz
C
A
fb
D
E16
141
80−855(b)
141−16
16D(c)
(d)27D
tW70−9
R
hHN7
SZ
(5
XI)
82
k
9Pg
q141−16
FIG. 13. (a) Distribution of 10,000 16D critical KS MMPHs
obtained from the 80-855 master MMPH; Cf. Fig. 1(a); (b)
the smallest critical KS MMPH 70-9 we obtained from the
master 80-855; HIcM=α= 4,HIcm= 3; (c) critical 141-16
is the only MMPH of the 141-16 master; (d) its biggest loop;
HIcM=α= 7,HIcm= 3 strings and coordinatizations of
70-9 and 141-16 are given in Appendix 13.
O. 27D MMPHs—dimensional upscaling
The 27D is the space of three entangled qutrits. We
apply a rank-scaling method to our 9D 47-16 to get a
27D 141-16 (3 ×47 = 141) shown in Fig. 13(c,d) (its
hyperedges are too interwoven to be discernible in (d);
therefore,onlyitsbiggestloopisgiven). Accordingtothe
hyperedge pattern that other MMPHs follow we should
be able to obtain a 27D MMPH with 14 hyperedges if we
only kept our computer search running long enough.
P. 32D MMPHs—dimensional upscaling
We are also able to straightforwardly generate 32D
(ﬁveentangledqubits)bycombiningtwoofthe16D68-9s
to get 32D 136-9 but did not do it here because the hy-
pergraphisalreadylisted in[38, TableV], under n= 8N,
34N-9and becausequite a number of32Dcritical KS hy-
pergraphs, obtained by another method, is already given
in [37, Sec. XI].
V. APPLICATIONS
Exhaustive development of the applications presented
here is outside of the scope of this paper. However, we
demonstratethatanyandallKSsetsinthehigherdimen-
sions presented below do have potential practical usage.
A. Larger alphabet
We extend the lager alphabet procedure from [57]. A
4D KS “protection” of quantum key distribution (QKD)
protocols, has been put forward in [58] based on a mod-
iﬁcation of the BB84 protocol in [59]. A KS hypergraph
with 9 edges has been used. (i) Alice randomly picks
one of 9 edges (bases) and sends Bob a randomly chosen
state (vertex) of that edge; (ii) Bob picks one of 9 edgesat random and measures the system received from Alice.
So, instead ofqubits wedeal with ququartsand the infor-
mation transferred via a system is not 1 but 2 bits [57].
We can modify and generalize this QKD protocol so as
to apply it to any k-lhypergraph ( kvertices, ledges).
The probability of Bob’s picking a correct edge is1
land
the number of vertices rises linearly with dimension (see
Table I). The higher the dimension, the more errors Eve
introduces. However,themainadvantageoftheKSQKD
isthatthenumberof1’sonecanassigntoverticesismax-
imised [43, Def. 4.7, Lemma 4.8] (Lov´ asz’s independence
numberα[48, p. 192]). α’s for minimal hypergraphs in
9D,10D,...,16D,27D are given in Secs. VI.
Ideally, if we obtained a higher number of 1’s for any
complete set of data, Eve would be in the line. One
can implement the protocol by means of orbital angular
momentums which reachover100 ×100entangleddimen-
sionality [60]. Finally, the huge multiplicity of available
hypergraphs enhances the security of QKD, since an at-
tacker may not know which protocol is being used.
B. Oblivious communication protocol and
communication of bounded-dimensional systems
protocols.
The one-way communication tasks presented in [4],
which can make use of any KS set, are communication
of a system with bounded dimension, and communica-
tion of a system with no dimensional bound, but with
some information about the sender’s input unrevealed
(i.e., oblivious communication). The complete set of ver-
tices (quantum states) in the KS set (in the appropriate
dimension) are used as the input alphabet for both the
sender’s state preparation and receiver’s measurement
setting. As a result, these quantum communication pro-
tocols outperform the best corresponding classical proto-
cols for the same communication tasks.
The protocol we have described is already completely
characterized in the research we have cited for lower di-
mensions, and they demonstrate that any and all KS sets
have practical applications. Here, we show that the pro-
tocolcanbestraightforwardlyextendedtoanydimension
given the necessary computational resources, which scale
sub-exponentially with the dimension.
C. Generalized Hadamard matrices.
Practically all known quantum computation algo-
rithms are based on Fourier transform of which
Hadamard ( H) transform is a special case. Recently,
a newSclass ofHmatrices ( S-H) of even order in Cn
has been designed for proving the existence of KS hyper-
graphs in even nD. Our method generates any of these
KS hypergraphs (which all turn out to be star-like) and
therefore—inversely—the elements of the corresponding
S-Hmatrices.9
The new Sclass ofH(Hadamard) S-Hmatrices de-
signed in [56] relies on the following theorem.
Theorem (Lisonˇ ek 2019): Suppose that there exists an
S-Hmatrix of order n(neven); then there exists a KS
hypergraph k-linCnsuch that k=/parenleftbign+1
2/parenrightbig
andl=n+1
In [56] Lisonˇ ekdeﬁnes a KS hypergraphin Cn(Def. 1).
By Def. 2.1 he deﬁnes an S-Hmatrix and in Def. 2.2 a
generalized Hadamard matrix. Via Theorem 3.1 he con-
nects a KS hypergraph and a corresponding S-Hmatrix.
The proof provides us with an algorithm for a mutual
mapping of their elements in any even dimension. The
details are outside the scope of the present paper and we
direct the reader to Ref. [56] for them.
Only the 6D 21-7 KS hypergraph was known to [56],
i.e., only one particular S-Hmatrix (apart of the ex-
istence of all of them). Our method generates any of
these KS hypergraphs together with their coordinatiza-
tion. Inversely, and that is the core of its application, it
gives the elements of the corresponding S-Hmatrices. It
alsoshowsthatallthe correspondingKShypergraphsare
star-like. Thelatterfeatureclariﬁeswhy nhastobeeven:
one cannot draw a regular star with the Schl¨ aﬂi symbol
{n+1/n
2}in odd dimensional spaces becausen
2has to be
an integer. The 8D star 36-9 is given in Sec. IVF. Note
the{0,±1}coordinatization. The 10Dstar55-11isgiven
in Sec. IVH.
VI. DISCUSSION
To summarize, we design a feasible uniﬁed method of
generating quantum contextual sets in higher dimensions
as a response to recent calls for high dimensional contex-
tual applications in quantum computation and quantum
communication. The need for such a uniﬁed method ap-
peared because previous particular attempts were scat-
tered, and the only previously existing unifying method
was of exponential complexity and therefore not applica-
ble to 9+ dimensions. This is all presented in detail with
references in the Introduction.
Because the complexity of small KS sets does not scale
with dimension, the computational resources needed for
our method do not generally scale exponentially, de-
pending on the type of new KS sets one is looking for.
It is based on dimensional upscaling, i.e., on obtaining
higher dimensional contextual sets from previously ob-
tained ones in lower dimensions. Its goal is to generate
manageable-sized master KS hypergraph wherefrom we
can obtain a large number of non-isomorphic KS hyper-graphs in high dimensional spaces for any possible fu-
ture application and implementation, e.g., in quantum
computation and communication, parity oblivious trans-
fer, genuinerandomnumbergeneration,quantumdimen-
sion certiﬁcation, and relationaldatabasetheory, three of
which are presented in Sec. V. A list of the smallest ob-
tained KS hypergraphs is given in Table I.
Our preliminary testings show that KS hypergraphs in
dimensions much higher than 32 can be generated de-
pending on the amount of the CPU time one is ready to
sacriﬁce on supercomputers.
TABLE I. The smallest KS hypergraphs obtained by our
methods. A pattern appears to emerge wherein the minimum
number of edges per hypergraph of dimension 4 n+ (0,1,2,3)
are (9,16,15,14) for integers n≥1, which conﬁrms that the
minimum complexity of KS hypergraphs does not grow with
dimension; distributions are given in Sec. IV and MMPH
strings and coordinatizations are given in Appendix.
dimSmallest
αLov´ aszNo. ofSmallest Vector
critical non-isommaster components
hypergraphs smallest
4D 18-94 1 24-24 {0,±1}
5D 29-16 7 2 105-136 {0,±1}
6D 31-15 7 1 31-16 {0,±1}
7D 34-14 7 2 47-176 {0,±1}
8D 34-94 2 120-2024 {0,±1}
9D 47-16 7 2 47-144 {0,±1}
10D 50-15 7 66 52-141 {0,±1}
11D 50-14 6 1603 50-38 {0,±1}
12D 52-94 502 52-81 {0,±1}
13D 63-16 7 23 63-144 {0,±1}
14D 66-15 6 17 67-157 {0,±1}
15D 66-14 6 177 66-38 {0,±1}
16D 68-94 1 68-9 {0,±1}
. . . . . . . . . . . . . . . . . .
27D 141-16 7 1 141-16 {0,±1}
Acknowledgements —Supported by the Ministry of Sci-
ence, Education, and Youth of Croatia through Cen-
ter of Excellence CEMS funding, and by the European
structural and investment funds (ESIF), MSE Grant No.
KK.01.1.1.01.0001. Computationalsupportwasprovided
by the Zagreb University Computing Centre. Programs
are freely available from our repository [61].
Appendix : KS MMPH’s strings and coordinatizations
Below we provide strings and coordinatizations of KS MMPH’s referre d to in Sections IV.B-O.10
1. 4D MMPHs; 9 hyperedges (18-9)
18-91234,4567,789A,ABCD,DEFG,GHI1,35EC,29BI,68FH. 1 =(0,0,0,1), 2=(0,0,1,0), 3=(1,1,0,0), 4=(1,-1,0,0),
5=(0,0,1,1), 6=(1,1,1,-1), 7=(1,1,-1,1), 8=(1,-1,1,1), 9=(1,0,0,-1), A=(0,1,1,0), B=(1,0,0,1), C=(1,-1,1,-1),
D=(1,1,-1,-1), E=(1,-1,-1,1), F=(0,1,0,1), G=(1,0,1,0), H=(1,0,-1,0), I=(0,1,0,0)
24-24LMNO,HIJK,DEFG,BCFG,9ADE,78EG,56DF,5678,9ABC,68JK,5 7HI,ACIK,9BHJ,1234,4DGO,3EFN,258M,167L,
19CM,2ABL,3HKO,4IJN,34NO,12LM. 1 =(0,0,0,1), 2=(0,0,1,0), 3=(1,1,0,0), 4=(1,-1,0,0), 5=(0,1,0,-1), 6=(1,0,-1,0),
7=(1,0,1,0), 8=(0,1,0,1), 9=(0,1,-1,0), A=(1,0,0,-1), B=(1,0,0,1), C=(0,1,1,0), D=(1,1,1,1), E=(1,-1,-1,1), F=(1,-1,1,-1),
G=(1,1,-1,-1), H=(-1,1,1,1), I=(1,1,-1,1), J=(1,1,1,-1), K=(1,-1,1,1), L=(0,1,0,0), M=(1,0,0,0), N=(0,0,1,1), O=(0,0,1,-1)
2. 5D MMPH; 16 hyperedges
29-16HOINJ,JGSTF,FT4Q8,85679,92LOH,PQRST,KLMNO,CDEIO,ABE GT,34DMO,12BRT,237CO,146AT,279OP,468KT,
5EJOT. 1 =(1,-1,1,0,-1), 2=(1,0,-1,0,0), 3=(1,-1,1,1,0), 4=(0,1,1,0,0), 5=(0,0,1,0,0), 6=(1,0,0,0,1), 7=(0,1,0,1,0),
8=(1,0,0,0,-1), 9=(0,1,0,-1,0), A=(1,1,-1,0,-1), B=(1,1,1,0,1), C=(1,1,1,-1,0), D=(1,1,-1,1,0), E=(1,-1,0,0,0),
F=(1,-1,1,0,1), G=(0,0,1,0,-1), H=(1,-1,1,-1,0), I=(0,0,1,1,0), J=(1,1,0,0,0), K=(0,1,-1,0,0), L=(1,1,1,1,0),
M=(1,0,0,-1,0), N=(1,-1,-1,1,0), O=(0,0,0,0,1), P=(1,0,1,0,0), Q=(1,1,-1,0,1), R=(0,1,0,0,-1), S=(-1,1,1,0,1),
T=(0,0,0,1,0)
3. 6D MMPHs; 15 to 17 hyperedges
31-15A78B91,194CD3,3GK65J,J5HLME,EFQSTA,123456,2EF9AB,GH I856,NOI756,NP4K56,OPFQR6,OPFLM5,EFRSCU,
EFVLDU,EFVMBT. 1 =(0,1,0,0,0,0); 2=(0,0,1,0,0,0); G=(1,1,1,1,0,0); H=(1,-1,1,-1,0,0); J=(1,-1,-1,1,0,0);
N=(1,-1,-1,-1,0,0); O=(1,1,-1,1,0,0); P=(1,1,1,-1,0,0); E=(1,1,0,0,0,0); F=(1,-1,0,0,0,0); I=(0,1,0,-1,0,0);
7=(1,0,1,0,0,0); 8=(1,0,-1,0,0,0); 3=(1,0,0,-1,0,0); 4=(1,0,0,1,0,0); K=(0,1,-1,0,0,0); 9=(0,0,0,0,1,0); Q=(0,0,1,1,1,1);
R=(0,0,1,1,-1,-1); S=(0,0,1,-1,1,-1); V=(0,0,1,-1,1,1); L=(0,0,1,1,-1,1); M=(0,0,1,1,1,-1); 5=(0,0,0,0,1,1);
6=(0,0,0,0,1,-1); C=(0,0,1,0,0,1); D=(0,0,1,0,0,-1); U=(0,0,0,1,1,0); A=(0,0,0,1,0,-1); B=(0,0,0,1,0,1);
T=(0,0,1,0,-1,0).
32-16123456,123789,12ABCD,12BE9F,12ECG5,12HIG6,12IJ8F,13 KL47,23MN47,OPLQ47,ORMS47,PRTBCD,UVTA47,
UVTHJD,UWNS47,VWKQ47. 1 =(1,0,0,0,0,0); 2=(0,1,0,0,0,0); 3=(0,0,1,0,0,0); O=(1,1,1,1,0,0);
P=(1,-1,1,-1,0,0); R=(1,-1,-1,1,0,0); U=(1,-1,-1,-1,0,0); V=(1,-1,1,1,0,0); W=(1,1,1,-1,0,0); T=(1,1,0,0,0,0);
A=(0,0,1,-1,0,0); K=(0,1,0,1,0,0); L=(0,1,0,-1,0,0); Q=(1,0,-1,0,0,0); M=(1,0,0,-1,0,0); N=(1,0,0,1,0,0);
S=(0,1,-1,0,0,0); 4=(0,0,0,0,1,0); 7=(0,0,0,0,0,1); B=(0,0,1,1,1,1); E=(0,0,1,-1,-1,1); C=(0,0,1,1,-1,-1);
H=(0,0,1,-1,-1,-1); I=(0,0,1,1,-1,1); J=(0,0,1,-1,1,1); G=(0,0,1,0,1,0); 5=(0,0,0,1,0,1); 6=(0,0,0,1,0,-1); 8=(0,0,0,1,1,0);
9=(0,0,0,1,-1,0); F=(0,0,1,0,0,-1); D=(0,0,0,0,1,-1).
33-17(one of four) 123456,123789,12ABCD,12EFGD,12FH9I,12HGJ5,12BKJ6,12 KC8I,13LM47,23NO47,PQMR47,
PSNT47,QSUA47,QSUFGD,VWUE47,VXOT47,WXLR47. 1 =(1,0,0,0,0,0); 2=(0,1,0,0,0,0); 3=(0,0,1,0,0,0); P=(1,1,1,1,0,0);
Q=(1,-1,1,-1,0,0); S=(1,-1,-1,1,0,0); V=(1,-1,-1,-1,0,0); W=(1,-1,1,1,0,0); X=(1,1,1,-1,0,0); U=(1,1,0,0,0,0);
A=(0,0,1,1,0,0); E=(0,0,1,-1,0,0); L=(0,1,0,1,0,0); M=(0,1,0,-1,0,0); R=(1,0,-1,0,0,0); N=(1,0,0,-1,0,0); O=(1,0,0,1,0,0);
T=(0,1,-1,0,0,0); 4=(0,0,0,0,1,0); 7=(0,0,0,0,0,1); F=(0,0,1,1,1,1); H=(0,0,1,-1,-1,1); G=(0,0,1,1,-1,-1);
B=(0,0,1,-1,-1,-1); K=(0,0,1,1,-1,1); C=(0,0,1,-1,1,1); J=(0,0,1,0,1,0); 5=(0,0,0,1,0,1); 6=(0,0,0,1,0,-1); 8=(0,0,0,1,1,0);
9=(0,0,0,1,-1,0); I=(0,0,1,0,0,-1); D=(0,0,0,0,1,-1).
4. 7D MMPH; 14 hyperedges
34-141234567, 189A5BC, 189DE7F, 189GHIJ, 189KHBL, 2MNDOIP, 2MN EOCL, 2MNGK6F, QRNSAJP, QT4U567,
RTV9567, WXMS567, WYV8AJP, XY3U567. 1 =(0,0,0,1,0,0,0); 2=(0,0,1,0,0,0,0); 3=(1,-1,0,0,0,0,0); 4=(1,1,0,0,0,0,0);
5=(0,0,0,0,0,0,1); 6=(0,0,0,0,1,1,0); 7=(0,0,0,0,1,-1,0); 8=(0,1,-1,0,0,0,0); 9=(0,1,1,0,0,0,0); A=(0,0,0,0,1,0,0);
B=(1,0,0,0,0,-1,0); C=(1,0,0,0,0,1,0); D=(1,0,0,0,1,1,-1); E=(-1,0,0,0,1,1,1); F=(1,0,0,0,0,0,1); G=(1,0,0,0,1,-1,-1);
H=(1,0,0,0,1,1,1); I=(1,0,0,0,-1,0,0); J=(0,0,0,0,0,1,-1); K=(1,0,0,0,-1,1,-1); L=(0,0,0,0,1,0,-1); M=(0,1,0,1,0,0,0);
N=(0,1,0,-1,0,0,0); O=(1,0,0,0,1,-1,1); P=(0,0,0,0,0,1,1); Q=(-1,1,1,1,0,0,0); R=(1,1,-1,1,0,0,0); S=(1,0,1,0,0,0,0); T=(1,-
1,1,1,0,0,0); U=(0,0,1,-1,0,0,0); V=(1,0,0,-1,0,0,0); W=(1,-1,-1,1,0,0,0); X=(1,1,-1,-1,0,0,0); Y=(1,1,1,1,0,0,0).11
5. 8D MMPH; 9 hyperedges
34-9 12345678,9ABCDEFG,HIJKLMFG,NOPQME78,RSTULD56,VWXUKC 46,XTPQJB36,YVWOIA28,YRSNH918.
1=(0,0,1,0,0,0,0,0), 2=(1,0,0,0,0,0,0,0), 3=(0,0,0,0,0,1,0,0), 4=(0,0,0,0,1,0,0,0), 5=(0,0,0,1,0,0,0,0),
6=(0,0,0,0,0,0,0,1), 7=(0,1,0,0,0,0,0,0), 8=(0,0,0,0,0,0,1,0), 9=(1,1,0,-1,0,0,0,-1), A=(0,1,-1,0,-1,0,0,1),
B=(0,1,0,1,1,0,-1,0), C=(1,0,0,1,0,-1,1,0), D=(0,0,-1,0,1,1,1,0), E=(1,0,1,0,0,1,0,1), F=(-1,1,1,0,0,0,1,0),
G=(0,0,0,1,-1,1,0,-1), H=(1,1,0,1,0,0,0,1), I=(0,1,-1,0,1,0,0,-1), J=(0,-1,0,1,1,0,1,0), K=(1,0,0,-1,0,1,1,0),
L=(0,0,1,0,1,1,-1,0), M=(1,0,1,0,0,-1,0,-1), N=(0,0,0,1,1,1,0,-1), O=(0,0,0,1,1,-1,0,1), P=(0,0,0,1,-1,0,0,0),
Q=(1,0,-1,0,0,0,0,0), R=(0,0,0,0,1,-1,0,0), S=(1,-1,0,0,0,0,0,0), T=(1,1,1,0,0,0,1,0), U=(1,1,-1,0,0,0,-1,0),
V=(0,0,0,1,0,1,0,0), W=(0,1,1,0,0,0,0,0), X=(1,-1,1,0,0,0,-1,0), Y=(0,0,0,-1,1,1,0,1)
36-9 12345678,89ABCDEF,FGHI4JKL,L7MNBOPQ,QERSI3TU,UK6VNA WX,XPDYSH2Z,ZTJ5VM9a,aWOCYRG1.
1=(0,0,0,0,0,0,0,1), 2=(0,0,0,0,0,0,1,0), 3=(0,0,0,0,0,1,0,0), 4=(0,0,0,0,1,0,0,0), 5=(0,0,1,1,0,0,0,0),
6=(0,0,1,-1,0,0,0,0), 7=(1,1,0,0,0,0,0,0), 8=(1,-1,0,0,0,0,0,0), 9=(1,1,0,0,0,0,-1,1), A=(0,0,1,1,1,-1,0,0),
B=(0,0,0,0,0,0,1,1), C=(0,0,1,-1,1,1,0,0), D=(0,0,0,1,0,1,0,0), E=(0,0,1,0,-1,0,0,0), F=(1,1,0,0,0,0,1,-1),
G=(0,0,1,0,0,-1,0,0), H=(1,0,0,0,0,0,0,1), I=(0,0,0,1,0,0,0,0), J=(1,-1,0,0,0,0,-1,-1), K=(0,1,0,0,0,0,-1,0),
L=(0,0,1,0,0,1,0,0), M=(0,0,1,-1,1,-1,0,0), N=(1,-1,0,0,0,0,-1,1), O=(0,0,0,1,1,0,0,0), P=(0,0,1,1,-1,-1,0,0),
Q=(1,-1,0,0,0,0,1,-1), R=(1,0,0,0,0,0,-1,0), S=(0,0,1,0,1,0,0,0), T=(0,1,0,0,0,0,0,-1), U=(1,1,0,0,0,0,1,1),
V=(0,0,0,0,1,1,0,0), W=(0,0,1,1,-1,1,0,0), X=(1,0,0,0,0,0,0,-1), Y=(0,1,0,0,0,0,0,0), Z=(0,0,1,-1,-1,1,0,0),
a=(1,0,0,0,0,0,1,0)
6. 9D MMPH; 16 hyperedges
47-16234567891,1BOPERSNQ,QdgXJDaFY,YaFZIbc32,12ABC5DEF,1 3GHIJ7KF,1A4567LMN,1G4567STU,1HOV6KWLU,
1XOV6KRT9,1XIJ7KWM8,deHfOV6KF,eghA4567F,ijhBOPEQF,i kZXPVblF,jkGfC4lcF. 1 =(1,0,0,0,0,0,0,0,0);
2=(0,1,0,0,0,0,0,0,0); 3=(0,0,1,0,0,0,0,0,0); d=(1,1,1,1,0,0,0,0,0); e=(1,-1,1,-1,0,0,0,0,0); g=(1,-1,-1,1,0,0,0,0,0);
i=(1,-1,-1,-1,0,0,0,0,0); j=(1,-1,1,1,0,0,0,0,0); k=(1,1,1,-1,0,0,0,0,0); h=(1,1,0,0,0,0,0,0,0); A=(0,0,1,1,0,0,0,0,0);
B=(0,0,1,-1,0,0,0,0,0); G=(0,1,0,1,0,0,0,0,0); H=(0,1,0,-1,0,0,0,0,0); f=(1,0,-1,0,0,0,0,0,0); Y=(1,0,0,-1,0,0,0,0,0);
Z=(1,0,0,1,0,0,0,0,0); X=(0,1,-1,0,0,0,0,0,0); C=(0,0,0,0,1,0,0,0,0); 4=(0,0,0,0,0,1,0,0,0); 5=(0,0,0,0,0,0,1,0,0);
O=(0,0,0,0,1,1,1,1,0); P=(0,0,0,0,1,-1,1,-1,0); V=(0,0,0,0,1,-1,-1,1,0); I=(0,0,0,0,1,-1,-1,-1,0); a=(0,0,0,0,1,-1,1,1,0);
J=(0,0,0,0,1,1,1,-1,0); b=(0,0,0,0,1,1,0,0,0); l=(0,0,0,0,0,0,1,1,0); c=(0,0,0,0,0,0,1,-1,0); D=(0,0,0,0,0,1,0,1,0);
E=(0,0,0,0,0,1,0,-1,0); Q=(0,0,0,0,1,0,-1,0,0); 6=(0,0,0,0,1,0,0,-1,0); 7=(0,0,0,0,1,0,0,1,0); K=(0,0,0,0,0,1,-1,0,0);
F=(0,0,0,0,0,0,0,0,1); W=(0,1,1,1,0,0,0,0,1); L=(0,1,-1,1,0,0,0,0,-1); M=(0,1,1,-1,0,0,0,0,-1); R=(0,1,1,1,0,0,0,0,-1);
S=(0,1,-1,-1,0,0,0,0,-1); T=(0,1,1,-1,0,0,0,0,1); N=(0,1,0,0,0,0,0,0,1); U=(0,0,1,0,0,0,0,0,-1); 8=(0,0,0,1,0,0,0,0,-1);
9=(0,0,0,1,0,0,0,0,1)
7. 10D MMPH; 11 and 15 hyperedges
Star-like 55-11 123456789A,ABCDEFGHIJ,JKLMN5OPQR,R9STUEVWXY,YIZabN4 cde,eQ8fgUDhij,jXHklbM3mn,
ndP7ogTCpq,qiWGrlaL2s,smcO6ofSBt,tphVFrkZK1.
50-152ajkBCJST1,1TEOPRbmlD,Dl89FghnVU,UV46IceoqG,GHLNXZa jk2,1DEJXYdeij,1DELMVWajk,2GHJXYfhpq,
2GHMNRSblm,2GHOQYZblm,2GHPQUWajk,45EFUVabop,56ABUVc dmn,78ACUVfgik,79HIJSTblm. 1 =(1,0,0,0,0,0,0,0,0,0);
2=(0,1,0,0,0,0,0,0,0,0); 4=(1,1,1,1,0,0,0,0,0,0); 5=(1,-1,1,-1,0,0,0,0,0,0); 6=(1,-1,-1,1,0,0,0,0,0,0);
7=(1,-1,-1,-1,0,0,0,0,0,0); 8=(1,-1,1,1,0,0,0,0,0,0); 9=(1,1,1,-1,0,0,0,0,0,0); A=(1,1,0,0,0,0,0,0,0,0);
B=(0,0,1,1,0,0,0,0,0,0); C=(0,0,1,-1,0,0,0,0,0,0); D=(0,1,0,1,0,0,0,0,0,0); E=(0,1,0,-1,0,0,0,0,0,0);
F=(1,0,-1,0,0,0,0,0,0,0); G=(1,0,0,-1,0,0,0,0,0,0); H=(1,0,0,1,0,0,0,0,0,0); I=(0,1,-1,0,0,0,0,0,0,0);
J=(0,0,0,0,1,0,0,0,0,0); L=(0,0,1,0,1,1,1,0,0,0); M=(0,0,1,0,-1,1,-1,0,0,0); N=(0,0,1,0,-1,-1,1,0,0,0);
O=(0,0,1,0,-1,-1,-1,0,0,0); P=(0,0,1,0,-1,1,1,0,0,0); Q=(0,0,1,0,1,1,-1,0,0,0); R=(0,0,1,0,1,0,0,0,0,0);
S=(0,0,0,0,0,1,1,0,0,0); T=(0,0,0,0,0,1,-1,0,0,0); U=(0,0,0,0,1,0,1,0,0,0); V=(0,0,0,0,1,0,-1,0,0,0);
W=(0,0,1,0,0,-1,0,0,0,0); X=(0,0,1,0,0,0,-1,0,0,0); Y=(0,0,1,0,0,0,1,0,0,0); Z=(0,0,0,0,1,-1,0,0,0,0);
a=(0,0,0,0,0,0,0,1,0,0); b=(0,0,0,0,0,0,0,0,1,0); c=(0,0,0,0,0,1,0,1,1,1); d=(0,0,0,0,0,1,0,-1,1,-1);
e=(0,0,0,0,0,1,0,-1,-1,1); f=(0,0,0,0,0,1,0,-1,-1,-1); g=(0,0,0,0,0,1,0,-1,1,1); h=(0,0,0,0,0,1,0,1,1,-1);
i=(0,0,0,0,0,1,0,1,0,0); j=(0,0,0,0,0,0,0,0,1,1); k=(0,0,0,0,0,0,0,0,1,-1); l=(0,0,0,0,0,0,0,1,0,1);
m=(0,0,0,0,0,0,0,1,0,-1); n=(0,0,0,0,0,1,0,0,-1,0); o=(0,0,0,0,0,1,0,0,0,-1); p=(0,0,0,0,0,1,0,0,0,1);
q=(0,0,0,0,0,0,0,1,-1,0)12
8. 11D MMPH; 14 hyperedges
50-14 567E234CFD1,1DGHJKLMANI,IYlmnUk9QXe,ecdfgOW67E5,123 456789AB,1GHIJKLOPQR,27STUVKL8FW,
27STUVKL9QX,347YZabMDAN,567cdefMCXR,567cdefgPBN,cdh ijkJV8FW,fZoHTjmn8FW,abGShilo8FW.
1=(0,0,1,1,1,1,0,0,0,0,0); 2=(0,0,1,-1,1,-1,0,0,0,0,0); 3=(0,0,0,1,0,-1,0,0,0,0,0); 4=(0,0,1,0,-1,0,0,0,0,0,0);
5=(0,1,0,0,0,0,0,0,0,0,0); 6=(1,0,0,0,0,0,0,0,0,0,0); 7=(0,0,0,0,0,0,1,0,0,0,0); 8=(0,0,0,1,0,0,0,0,0,0,0);
9=(0,0,1,0,0,0,0,0,0,0,0); A=(0,0,0,0,0,1,0,0,0,0,0); B=(0,0,0,0,1,0,0,0,0,0,0); C=(1,-1,1,0,1,0,0,0,0,0,0);
D=(1,1,0,1,0,1,0,0,0,0,0); E=(1,1,0,-1,0,-1,0,0,0,0,0); F=(-1,1,1,0,1,0,0,0,0,0,0); G=(0,1,-1,1,0,0,1,0,0,0,0);
H=(1,0,1,1,0,0,0,-1,0,0,0); I=(1,0,0,0,1,1,0,1,0,0,0); J=(0,1,0,0,-1,1,-1,0,0,0,0); K=(0,0,1,0,-1,0,1,1,0,0,0);
L=(0,0,0,1,0,-1,-1,1,0,0,0); M=(1,0,1,0,0,-1,1,0,0,0,0); N=(0,-1,1,0,0,1,0,1,0,0,0); O=(-1,1,0,0,0,0,1,1,0,0,0);
P=(1,0,-1,-1,0,0,0,1,0,0,0); Q=(0,1,1,-1,0,0,-1,0,0,0,0); R=(1,0,0,1,-1,0,-1,0,0,0,0); S=(0,1,0,1,1,0,0,1,0,0,0);
T=(1,1,0,0,0,0,1,-1,0,0,0); U=(0,1,0,0,1,-1,-1,0,0,0,0); V=(1,0,0,0,-1,-1,0,1,0,0,0); W=(1,1,0,-1,0,1,0,0,0,0,0);
X=(1,-1,-1,0,1,0,0,0,0,0,0); Y=(0,0,0,0,0,0,0,0,1,0,0); Z=(0,0,0,0,0,0,0,0,0,1,0); a=(0,0,0,0,0,0,0,1,1,1,1);
b=(0,0,0,0,0,0,0,1,-1,1,-1); c=(0,0,0,0,0,0,0,1,-1,-1,1); d=(0,0,0,0,0,0,0,1,-1,-1,-1); e=(0,0,0,0,0,0,0,1,-1,1,1);
f=(0,0,0,0,0,0,0,1,1,1,-1); g=(0,0,0,0,0,0,0,1,1,0,0); h=(0,0,0,0,0,0,0,0,0,1,1); i=(0,0,0,0,0,0,0,0,0,1,-1);
j=(0,0,0,0,0,0,0,0,1,0,1); k=(0,0,0,0,0,0,0,0,1,0,-1); l=(0,0,0,0,0,0,0,1,0,-1,0); m=(0,0,0,0,0,0,0,1,0,0,-1);
n=(0,0,0,0,0,0,0,1,0,0,1); o=(0,0,0,0,0,0,0,0,1,-1,0)
9. 12D MMPH; 9 hyperedges
52-9UVX34STYR8W7,78W56bcdQaeZ,ZaehiGPjJgkf,fgkDMlpqLVXU ,123456789ABC,17DEFGHIJBKL,28MNOPHIQAKR,
bSlmnFOijdoC,cTpENhmn9qYo. 1 =(0,0,1,1,1,1,0,0,0,0,0,0); 2=(0,0,1,-1,1,-1,0,0,0,0,0,0); 3=(0,0,0,1,0,-1,0,0,0,0,0,0);
4=(0,0,1,0,-1,0,0,0,0,0,0,0); 5=(0,1,0,0,0,0,0,0,0,0,0,0); 6=(1,0,0,0,0,0,0,0,0,0,0,0); 7=(0,0,0,0,0,0,0,1,0,0,0,0);
8=(0,0,0,0,0,0,1,0,0,0,0,0); Z=(0,0,0,1,0,0,0,0,0,0,0,0); a=(0,0,1,0,0,0,0,0,0,0,0,0); b=(0,0,0,0,0,1,0,0,0,0,0,0);
c=(0,0,0,0,1,0,0,0,0,0,0,0); S=(1,-1,1,0,1,0,0,0,0,0,0,0); T=(1,1,0,1,0,1,0,0,0,0,0,0); U=(1,1,0,-1,0,-1,0,0,0,0,0,0);
V=(-1,1,1,0,1,0,0,0,0,0,0,0); D=(0,1,-1,1,0,0,1,0,0,0,0,0); M=(1,0,1,1,0,0,0,-1,0,0,0,0); f=(1,0,0,0,1,1,0,1,0,0,0,0);
g=(0,1,0,0,-1,1,-1,0,0,0,0,0); l=(0,0,1,0,-1,0,1,1,0,0,0,0); p=(0,0,0,1,0,-1,-1,1,0,0,0,0); E=(1,0,1,0,0,-1,1,0,0,0,0,0);
N=(0,-1,1,0,0,1,0,1,0,0,0,0); h=(-1,1,0,0,0,0,1,1,0,0,0,0); m=(1,0,-1,-1,0,0,0,1,0,0,0,0); n=(0,1,1,-1,0,0,-1,0,0,0,0,0);
F=(1,0,0,1,-1,0,-1,0,0,0,0,0); O=(0,1,0,1,1,0,0,1,0,0,0,0); i=(1,1,0,0,0,0,1,-1,0,0,0,0); G=(0,1,0,0,1,-1,-1,0,0,0,0,0);
P=(1,0,0,0,-1,-1,0,1,0,0,0,0); H=(1,1,0,-1,0,1,0,0,0,0,0,0); I=(1,-1,-1,0,1,0,0,0,0,0,0,0); j=(0,0,0,0,0,0,0,0,1,0,0,0);
d=(0,0,0,0,0,0,0,0,0,1,0,0); J=(0,0,0,0,0,0,0,0,0,1,1,0); k=(0,0,0,0,0,0,0,0,0,1,-1,0); W=(0,0,0,0,0,0,0,0,1,0,1,0);
Q=(0,0,0,0,0,0,0,0,1,0,-1,0); 9=(0,0,0,0,0,0,0,0,1,-1,0,0); e=(0,0,0,0,0,0,0,0,0,0,0,1); A=(0,0,0,0,0,0,0,0,1,1,1,1);
B=(0,0,0,0,0,0,0,0,1,1,-1,-1); K=(0,0,0,0,0,0,0,0,1,-1,1,-1); X=(0,0,0,0,0,0,0,0,1,-1,-1,-1); q=(0,0,0,0,0,0,0,0,1,1,1,-1);
Y=(0,0,0,0,0,0,0,0,1,1,-1,1); L=(0,0,0,0,0,0,0,0,1,0,0,1); o=(0,0,0,0,0,0,0,0,0,0,1,1); C=(0,0,0,0,0,0,0,0,0,0,1,-1);
R=(0,0,0,0,0,0,0,0,0,1,0,-1)
10. 13D MMPHs; 16 hyperedges
63-16 123456789ABCD,123456789EFGH,12345678IJKLM,17NOPQRST UVWM,28XYZaRS9EbBM,3478cdef9bghH,
3478cdef9WhiC,3478cdefIjVkM,5678lmno9LpGq,5678lmnoA TrBM,lmstuvQa9WpFD,lmstuvQaEKwxM,
ncyz!PZv9AkLM,od"OYuz!9kgiq,od"OYuz!bUjxM,efNXsty"r JwWM. 1 =(0,0,1,1,1,1,0,0,0,0,0,0,0);
2=(0,0,1,-1,1,-1,0,0,0,0,0,0,0); 3=(0,0,0,1,0,-1,0,0,0,0,0,0,0); 4=(0,0,1,0,-1,0,0,0,0,0,0,0,0); 5=(0,1,0,0,0,0,0,0,0,0,0,0,0);
6=(1,0,0,0,0,0,0,0,0,0,0,0,0); 7=(0,0,0,0,0,0,0,1,0,0,0,0,0); 8=(0,0,0,0,0,0,1,0,0,0,0,0,0); l=(0,0,0,1,0,0,0,0,0,0,0,0,0);
m=(0,0,1,0,0,0,0,0,0,0,0,0,0); n=(0,0,0,0,0,1,0,0,0,0,0,0,0); o=(0,0,0,0,1,0,0,0,0,0,0,0,0); c=(1,-1,1,0,1,0,0,0,0,0,0,0,0);
d=(1,1,0,1,0,1,0,0,0,0,0,0,0); e=(1,1,0,-1,0,-1,0,0,0,0,0,0,0); f=(-1,1,1,0,1,0,0,0,0,0,0,0,0); N=(0,1,-1,1,0,0,1,0,0,0,0,0,0);
X=(1,0,1,1,0,0,0,-1,0,0,0,0,0); s=(1,0,0,0,1,1,0,1,0,0,0,0,0); t=(0,1,0,0,-1,1,-1,0,0,0,0,0,0); y=(0,0,1,0,-1,0,1,1,0,0,0,0,0);
"=(0,0,0,1,0,-1,-1,1,0,0,0,0,0); O=(1,0,1,0,0,-1,1,0,0,0,0,0,0); Y=(0,-1,1,0,0,1,0,1,0,0,0,0,0); u=(-1,1,0,0,0,0,1,1,0,0,0,0,0);
z=(1,0,-1,-1,0,0,0,1,0,0,0,0,0); !=(0,1,1,-1,0,0,-1,0,0,0,0,0,0); P=(1,0,0,1,-1,0,-1,0,0,0,0,0,0);
Z=(0,1,0,1,1,0,0,1,0,0,0,0,0); v=(1,1,0,0,0,0,1,-1,0,0,0,0,0); Q=(0,1,0,0,1,-1,-1,0,0,0,0,0,0); a=(1,0,0,0,-1,-1,0,1,0,0,0,0,0);
R=(1,1,0,-1,0,1,0,0,0,0,0,0,0); S=(1,-1,-1,0,1,0,0,0,0,0,0,0,0); 9=(0,0,0,0,0,0,0,0,1,0,0,0,0); A=(0,0,0,0,0,0,0,0,0,1,0,0,0);
E=(0,0,0,0,0,0,0,0,0,1,1,0,0); b=(0,0,0,0,0,0,0,0,0,1,-1,0,0); T=(0,0,0,0,0,0,0,0,1,0,1,0,0); r=(0,0,0,0,0,0,0,0,1,0,-1,0,0);
I=(0,0,0,0,0,0,0,0,1,-1,0,0,0); B=(0,0,0,0,0,0,0,0,0,0,0,1,0); J=(0,0,0,0,0,0,0,0,1,1,1,1,0);
K=(0,0,0,0,0,0,0,0,1,1,-1,-1,0); w=(0,0,0,0,0,0,0,0,1,-1,1,-1,0); U=(0,0,0,0,0,0,0,0,1,-1,-1,-1,0);
j=(0,0,0,0,0,0,0,0,1,1,1,-1,0); V=(0,0,0,0,0,0,0,0,1,1,-1,1,0); x=(0,0,0,0,0,0,0,0,1,0,0,1,0); k=(0,0,0,0,0,0,0,0,0,0,1,1,0);
L=(0,0,0,0,0,0,0,0,0,0,1,-1,0); W=(0,0,0,0,0,0,0,0,0,1,0,-1,0); M=(0,0,0,0,0,0,0,0,0,0,0,0,1); p=(0,0,0,0,0,0,0,0,0,1,1,1,1);
F=(0,0,0,0,0,0,0,0,0,1,-1,1,-1); G=(0,0,0,0,0,0,0,0,0,1,-1,-1,1); g=(0,0,0,0,0,0,0,0,0,1,1,-1,1); h=(0,0,0,0,0,0,0,0,0,1,1,1,-1);
i=(0,0,0,0,0,0,0,0,0,1,-1,1,1); H=(0,0,0,0,0,0,0,0,0,0,0,1,1); C=(0,0,0,0,0,0,0,0,0,0,1,0,1); D=(0,0,0,0,0,0,0,0,0,0,1,0,-1);13
q=(0,0,0,0,0,0,0,0,0,1,0,0,-1)
11. 14D MMPH; 15 hyperedges
66-15347E25689ABCD1,1IKLMNOPFQRSTJ,Jr $Vx!"s%abcke,ekdfghijlm47E3,12345679ABFGDH,27UVWXMNY ZTabc,
347defg9ABPHnm,347defgFijkGDH,567opqrOBPFsZt,567opq r9ABaunl,567opqrijbkCGu,opvwxyLX9iQYab,
qdz!"KWyAt#Sab,fgIUvwz $Oh89AB,fgIUvwz $#R%jab. 1 =(0,0,1,1,1,1,0,0,0,0,0,0,0,0);
2=(0,0,1,-1,1,-1,0,0,0,0,0,0,0,0); 3=(0,0,0,1,0,-1,0,0,0,0,0,0,0,0); 4=(0,0,1,0,-1,0,0,0,0,0,0,0,0,0);
5=(0,1,0,0,0,0,0,0,0,0,0,0,0,0); 6=(1,0,0,0,0,0,0,0,0,0,0,0,0,0); 7=(0,0,0,0,0,0,1,0,0,0,0,0,0,0);
o=(0,0,0,1,0,0,0,0,0,0,0,0,0,0); p=(0,0,1,0,0,0,0,0,0,0,0,0,0,0); q=(0,0,0,0,0,1,0,0,0,0,0,0,0,0);
r=(0,0,0,0,1,0,0,0,0,0,0,0,0,0); d=(1,-1,1,0,1,0,0,0,0,0,0,0,0,0); e=(1,1,0,1,0,1,0,0,0,0,0,0,0,0);
f=(1,1,0,-1,0,-1,0,0,0,0,0,0,0,0); g=(-1,1,1,0,1,0,0,0,0,0,0,0,0,0); I=(0,1,-1,1,0,0,1,0,0,0,0,0,0,0);
U=(1,0,1,1,0,0,0,-1,0,0,0,0,0,0); v=(1,0,0,0,1,1,0,1,0,0,0,0,0,0); w=(0,1,0,0,-1,1,-1,0,0,0,0,0,0,0);
z=(0,0,1,0,-1,0,1,1,0,0,0,0,0,0); $=(0,0,0,1,0,-1,-1,1,0,0,0,0,0,0); J=(1,0,1,0,0,-1,1,0,0,0,0,0,0,0);
V=(0,-1,1,0,0,1,0,1,0,0,0,0,0,0); x=(-1,1,0,0,0,0,1,1,0,0,0,0,0,0); !=(1,0,-1,-1,0,0,0,1,0,0,0,0,0,0);
"=(0,1,1,-1,0,0,-1,0,0,0,0,0,0,0); K=(1,0,0,1,-1,0,-1,0,0,0,0,0,0,0); W=(0,1,0,1,1,0,0,1,0,0,0,0,0,0);
y=(1,1,0,0,0,0,1,-1,0,0,0,0,0,0); L=(0,1,0,0,1,-1,-1,0,0,0,0,0,0,0); X=(1,0,0,0,-1,-1,0,1,0,0,0,0,0,0);
M=(1,1,0,-1,0,1,0,0,0,0,0,0,0,0); N=(1,-1,-1,0,1,0,0,0,0,0,0,0,0,0); O=(0,0,0,0,0,0,0,0,0,0,1,0,0,0);
h=(0,0,0,0,0,0,0,0,1,-1,0,0,0,0); 8=(0,0,0,0,0,0,0,0,1,1,0,0,0,0); 9=(0,0,0,0,0,0,0,0,0,0,0,0,0,1);
A=(0,0,0,0,0,0,0,0,0,0,0,1,1,0); B=(0,0,0,0,0,0,0,0,0,0,0,1,-1,0); P=(0,0,0,0,0,0,0,1,0,-1,0,0,0,0);
F=(0,0,0,0,0,0,0,1,0,1,0,0,0,0); i=(0,0,0,0,0,0,0,0,0,0,0,1,0,0); Q=(0,0,0,0,0,0,0,0,1,0,0,0,-1,0);
Y=(0,0,0,0,0,0,0,0,1,0,0,0,1,0); s=(0,0,0,0,0,0,0,0,1,0,0,1,1,-1); Z=(0,0,0,0,0,0,0,0,1,0,0,-1,-1,-1);
t=(0,0,0,0,0,0,0,0,1,0,0,0,0,1); #=(0,0,0,0,0,0,0,0,1,0,0,1,-1,-1); R=(0,0,0,0,0,0,0,0,1,0,0,1,1,1);
%=(0,0,0,0,0,0,0,0,1,0,0,-1,0,0); j=(0,0,0,0,0,0,0,0,0,0,0,0,1,-1); S=(0,0,0,0,0,0,0,0,1,0,0,-1,1,-1);
T=(0,0,0,0,0,0,0,0,0,0,0,1,0,-1); a=(0,0,0,0,0,0,0,0,0,1,1,0,0,0); b=(0,0,0,0,0,0,0,0,0,1,-1,0,0,0);
c=(0,0,0,0,0,0,0,0,1,0,0,1,-1,1); k=(0,0,0,0,0,0,0,0,0,0,0,0,1,1); C=(0,0,0,0,0,0,0,1,-1,1,1,0,0,0);
G=(0,0,0,0,0,0,0,1,-1,-1,-1,0,0,0); u=(0,0,0,0,0,0,0,1,1,0,0,0,0,0); D=(0,0,0,0,0,0,0,1,1,-1,1,0,0,0);
E=(0,0,0,0,0,0,0,1,0,0,-1,0,0,0); H=(0,0,0,0,0,0,0,0,1,0,-1,0,0,0); n=(0,0,0,0,0,0,0,1,-1,1,-1,0,0,0);
l=(0,0,0,0,0,0,0,1,-1,-1,1,0,0,0); m=(0,0,0,0,0,0,0,1,1,1,1,0,0,0)
12. 15D MMPH; 14 hyperedges
66-14 fg1256v!"#47pq3,347pqDEFlmnorsC,CAKPQRSYZabcdeT,Tcd e89IJOUVhigf,1234567Ydnty" $%,
1GMRUWXYdnty" $%,27HNSVWXcdefghi,347CDEFhjrwxyz!,347CDEFikstuvwx,5 6789ABZeouz# $%,56789ABabdejklm,
89IJOTUVYZabcde,BDLMNOPQYZabcde,EFGHIJKLYZabcde. 1 =(0,0,1,1,1,1.0,0,0,0,0,0,0,0,0);
2=(0,0,1,-1,1,-1.0,0,0,0,0,0,0,0,0); 3=(0,0,0,1,0,-1.0,0,0,0,0,0,0,0,0); 4=(0,0,1,0,-1,0.0,0,0,0,0,0,0,0,0);
5=(0,1,0,0,0,0.0,0,0,0,0,0,0,0,0); 6=(1,0,0,0,0,0.0,0,0,0,0,0,0,0,0); 7=(0,0,0,0,0,0.1,0,0,0,0,0,0,0,0);
8=(0,0,0,1,0,0.0,0,0,0,0,0,0,0,0); 9=(0,0,1,0,0,0.0,0,0,0,0,0,0,0,0); A=(0,0,0,0,0,1.0,0,0,0,0,0,0,0,0);
B=(0,0,0,0,1,0.0,0,0,0,0,0,0,0,0); C=(1,-1,1,0,1,0.0,0,0,0,0,0,0,0,0); D=(1,1,0,1,0,1.0,0,0,0,0,0,0,0,0);
E=(1,1,0,-1,0,-1.0,0,0,0,0,0,0,0,0); F=(-1,1,1,0,1,0.0,0,0,0,0,0,0,0,0); G=(0,1,-1,1,0,0.1,0,0,0,0,0,0,0,0);
H=(1,0,1,1,0,0.0,-1,0,0,0,0,0,0,0); I=(1,0,0,0,1,1.0,1,0,0,0,0,0,0,0); J=(0,1,0,0,-1,1.-1,0,0,0,0,0,0,0,0);
K=(0,0,1,0,-1,0.1,1,0,0,0,0,0,0,0); L=(0,0,0,1,0,-1.-1,1,0,0,0,0,0,0,0); M=(1,0,1,0,0,-1.1,0,0,0,0,0,0,0,0);
N=(0,-1,1,0,0,1.0,1,0,0,0,0,0,0,0); O=(-1,1,0,0,0,0.1,1,0,0,0,0,0,0,0); P=(1,0,-1,-1,0,0.0,1,0,0,0,0,0,0,0);
Q=(0,1,1,-1,0,0.-1,0,0,0,0,0,0,0,0); R=(1,0,0,1,-1,0.-1,0,0,0,0,0,0,0,0); S=(0,1,0,1,1,0.0,1,0,0,0,0,0,0,0);
T=(1,1,0,0,0,0.1,-1,0,0,0,0,0,0,0); U=(0,1,0,0,1,-1.-1,0,0,0,0,0,0,0,0); V=(1,0,0,0,-1,-1.0,1,0,0,0,0,0,0,0);
W=(1,1,0,-1,0,1.0,0,0,0,0,0,0,0,0); X=(1,-1,-1,0,1,0.0,0,0,0,0,0,0,0,0); Y=(0,0,0,0,0,0.0,0,0,1,1,1,1,0,0);
Z=(0,0,0,0,0,0.0,0,0,1,-1,1,-1,0,0); a=(0,0,0,0,0,0.0,0,0,0,1,0,-1,0,0); b=(0,0,0,0,0,0.0,0,0,1,0,-1,0,0,0);
c=(0,0,0,0,0,0.0,0,1,0,0,0,0,0,0); d=(0,0,0,0,0,0.0,0,0,0,0,0,0,0,1); e=(0,0,0,0,0,0.0,0,0,0,0,0,0,1,0);
f=(0,0,0,0,0,0.0,0,0,0,1,0,0,0,0); g=(0,0,0,0,0,0.0,0,0,1,0,0,0,0,0); h=(0,0,0,0,0,0.0,0,0,0,0,0,1,0,0);
i=(0,0,0,0,0,0.0,0,0,0,0,1,0,0,0); j=(0,0,0,0,0,0.0,1,-1,1,0,1,0,0,0); k=(0,0,0,0,0,0.0,1,1,0,1,0,1,0,0);
l=(0,0,0,0,0,0.0,1,1,0,-1,0,-1,0,0); m=(0,0,0,0,0,0.0,1,-1,-1,0,-1,0,0,0); n=(0,0,0,0,0,0.0,0,1,-1,1,0,0,1,0);
o=(0,0,0,0,0,0.0,1,0,1,1,0,0,0,-1); p=(0,0,0,0,0,0.0,1,0,0,0,1,1,0,1); q=(0,0,0,0,0,0.0,0,1,0,0,-1,1,-1,0);
r=(0,0,0,0,0,0.0,0,0,1,0,-1,0,1,1); s=(0,0,0,0,0,0.0,0,0,0,1,0,-1,-1,1); t=(0,0,0,0,0,0.0,1,0,1,0,0,-1,1,0);
u=(0,0,0,0,0,0.0,0,1,-1,0,0,-1,0,-1); v=(0,0,0,0,0,0.0,1,-1,0,0,0,0,-1,-1); w=(0,0,0,0,0,0.0,1,0,-1,-1,0,0,0,1);
x=(0,0,0,0,0,0.0,0,1,1,-1,0,0,-1,0); y=(0,0,0,0,0,0.0,1,0,0,1,-1,0,-1,0); z=(0,0,0,0,0,0.0,0,1,0,1,1,0,0,1);
!=(0,0,0,0,0,0.0,1,1,0,0,0,0,1,-1); "=(0,0,0,0,0,0.0,0,1,0,0,1,-1,-1,0); #=(0,0,0,0,0,0.0,1,0,0,0,-1,-1,0,1);
$=(0,0,0,0,0,0.0,1,1,0,-1,0,1,0,0); %=(0,0,0,0,0,0.0,1,-1,-1,0,1,0,0,0).14
13. 16D MMPH; 9 hyperedges
70-9 28)3456Zaop#%7v1,17vHNSVehjqsyYwX,XYwIOTWcklnz"8)2, 3478DEFGbijnu# $&,56789ABCdkmqrtuy,
9AJKPUVWflmot!"&,BDLQRSTUZbcgrs’(,CEMNOPQRfhipx $%’,FGHIJKLMadegxz!(.
1=(0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0); 2=(0,0,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0); 3=(0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0);
4=(0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,0); 5=(0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0); 6=(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
7=(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0); 8=(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0); 9=(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0);
A=(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0); B=(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0); C=(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0);
D=(1,-1,1,0,1,0,0,0,0,0,0,0,0,0,0,0); E=(1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0); F=(1,1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0);
G=(-1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0); H=(0,1,-1,1,0,0,1,0,0,0,0,0,0,0,0,0); I=(1,0,1,1,0,0,0,-1,0,0,0,0,0,0,0,0);
J=(1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0); K=(0,1,0,0,-1,1,-1,0,0,0,0,0,0,0,0,0); L=(0,0,1,0,-1,0,1,1,0,0,0,0,0,0,0,0);
M=(0,0,0,1,0,-1,-1,1,0,0,0,0,0,0,0,0); N=(1,0,1,0,0,-1,1,0,0,0,0,0,0,0,0,0); O=(0,-1,1,0,0,1,0,1,0,0,0,0,0,0,0,0);
P=(-1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0); Q=(1,0,-1,-1,0,0,0,1,0,0,0,0,0,0,0,0); R=(0,1,1,-1,0,0,-1,0,0,0,0,0,0,0,0,0);
S=(1,0,0,1,-1,0,-1,0,0,0,0,0,0,0,0,0); T=(0,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0); U=(1,1,0,0,0,0,1,-1,0,0,0,0,0,0,0,0);
V=(0,1,0,0,1,-1,-1,0,0,0,0,0,0,0,0,0); W=(1,0,0,0,-1,-1,0,1,0,0,0,0,0,0,0,0); X=(1,1,0,-1,0,1,0,0,0,0,0,0,0,0,0,0);
Y=(1,-1,-1,0,1,0,0,0,0,0,0,0,0,0,0,0); Z=(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0); a=(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0);
b=(0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0); c=(0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0); d=(0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0);
e=(0,0,0,0,0,0,0,0,1,0,-1,0,0,0,0,0); f=(0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0); g=(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0);
h=(0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0); i=(0,0,0,0,0,0,0,0,1,1,-1,-1,0,0,0,0); j=(0,0,0,0,0,0,0,0,1,-1,1,-1,0,0,0,0);
k=(0,0,0,0,0,0,0,0,1,-1,-1,-1,0,0,0,0); l=(0,0,0,0,0,0,0,0,1,1,1,-1,0,0,0,0); m=(0,0,0,0,0,0,0,0,1,1,-1,1,0,0,0,0);
n=(0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0); o=(0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0); p=(0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0);
q=(0,0,0,0,0,0,0,0,0,1,0,-1,0,0,0,0); r=(0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0); s=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0);
t=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0); u=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0); v=(0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0);
w=(0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1,0); x=(0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0); y=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1);
z=(0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1); !=(0,0,0,0,0,0,0,0,0,0,0,0,1,1,-1,-1); "=(0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,-1);
#=(0,0,0,0,0,0,0,0,0,0,0,0,1,-1,-1,-1); $=(0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,-1); %=(0,0,0,0,0,0,0,0,0,0,0,0,1,1,-1,1);
&=(0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1); ’=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1); (=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1);
)=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1)
14. 27D MMPH; 16 hyperedges
141-16 123456789ABCDEFGHIJKLMNOPQR,9STUVWXYZIabcdefghRijkl mnop,Zqrstuvwxhyz!"# $%&p’()*-/:;,
xvw<=>?21& $%@[\]BA;/:^ ‘{KJ,91|S}4uVwIA∼a+1D#d%RJ+2i+3M-l:,92+4+5=t6+6wIB+7+8["F+9%RK+A+B *O+C:,
9|3456+D+EYI ∼CDEF+F+GgR+2LMNO+H+Io,9+43456X+J+KI+7CDEFf+L+MR+ALM NOn+N+O,
9+5T+P5+6+Q+D+KI+8b+RE+9+S+F+MR+Bj+TN+C+U+H+O,9sT+P 5+6W+J8I!b+RE+9e+LHR)j+TN+Cm+NQ,
9s=t6+6+Q+E7I!["F+9+S+GGR) *O+C+U+IP,q+V+5+WT+P5+6wy+X+8+Yb+RE+9%’+Z+B+aj+TN+C :,
+Vr+b|3456w+Xz+c ∼CDEF%+Z(+d+2LMNO:,+e+f+bSTUVZw+g+h+cabcdh%+i+j+dijk lp:,
+e+k<sU+P>+lw+g+m@!c+R \+n%+i+o^)k+T‘+p:,+f+k+4+W }3+l?w+h+m+7+Y+1C+n]%+j+o+A+a+3L+p {:.
1=(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), 2=(0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
3=(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), 4=(1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
5=(1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), 6=(1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
7=(1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), 8=(1,-1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
9=(1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), A=(1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
B=(0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), C=(0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
D=(0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), E=(0,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
F=(1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), G=(1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
H=(1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), I=(0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
J=(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), K=(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
L=(0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), M=(0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
N=(0,0,0,0,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), O=(0,0,0,0,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
P=(0,0,0,0,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), Q=(0,0,0,0,1,-1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
R=(0,0,0,0,1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), S=(0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
T=(0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), U=(0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
V=(0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), W=(0,0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
X=(0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), Y=(0,0,0,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
Z=(0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), a=(0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
b=(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), c=(0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),15
d=(0,1,-1,1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), e=(0,1,1,-1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
f=(0,1,1,1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), g=(0,1,-1,-1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
h=(0,1,1,-1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), i=(0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
j=(0,0,1,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), k=(0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
l=(0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), m=(0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
n=(0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), o=(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
p=(0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0), q=(0,0,0,0,0,0,0,0,0,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
r=(0,0,0,0,0,0,0,0,0,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0), s=(0,0,0,0,0,0,0,0,0,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
t=(0,0,0,0,0,0,0,0,0,1,-1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0), u=(0,0,0,0,0,0,0,0,0,1,1,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
v=(0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), w=(0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
x=(0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0), y=(0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
z=(0,0,0,0,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0), !=(0,0,0,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
"=(0,0,0,0,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0), #=(0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
$=(0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0), %=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0),
&=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0), ’=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0),
(=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0), )=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,-1,0,0,0,0,0,0,0,0,0,0),
*=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,-1,1,0,0,0,0,0,0,0,0,0,0), -=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0),
/=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,1,0,0,0,0,0,0,0,0,0,0), :=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,-1,0,0,0,0,0,0,0,0,0,0),
;=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0), <=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0),
==(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0), >=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0),
?=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0), @=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,0,0,0,0,0,0),
[=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,0,0,0,0,0), \=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0),
]=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0,0,0,0,0,0), ^=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0),
=(0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0), ‘=(0,0,0,0,0,0,0,0,0,0,1,-1,1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0),
{=(0,0,0,0,0,0,0,0,0,0,1,1,-1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0), |=(0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0),
}=(0,0,0,0,0,0,0,0,0,0,1,-1,-1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0), ∼=(0,0,0,0,0,0,0,0,0,0,1,1,-1,0,0,0,0,1,0,0,0,0,0,0,0,0,0),
+1=(0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0), +2=(0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0),
+3=(0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0), +4=(0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0),
+5=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0), +6=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0),
+7=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0), +8=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0),
+9=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,-1,0,0,0,0,0), +A=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,-1,1,0,0,0,0,0),
+B=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,-1,-1,0,0,0,0,0), +C=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,1,0,0,0,0,0),
+D=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,-1,0,0,0,0,0), +E=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0),
+F=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0), +G=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0),
+H=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0), +I=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1,0,0,0,0,0),
+J=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,0), +K=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,-1,0,0,0,0,0),
+L=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0), +M=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0,0,0,0,0),
+N=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0), +O=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0),
+P=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0), +Q=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0),
+R=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,-1,0), +S=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,-1,1,0),
+T=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,-1,-1,0), +U=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,1,0),
+V=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,-1,0), +W=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0),
+X=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0), +Y=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0),
+Z=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0), +a=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1,0),
+b=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-1,0,0), +c=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,-1,0),
+d=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0), +e=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,0,0),
+f=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1), +g=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1),
+h=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,1,0,0,0,0,-1), +i=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,-1,0,0,0,0,-1),
+j=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,-1), +k=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,-1,-1,0,0,0,0,-1),
+l=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,-1,0,0,0,0,1), +m=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1),
+n=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,-1), +o=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,-1),
+p=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1)
[1] M. Howard, J. Wallman, V. Veitech, and J. Emerson,
Contextuality supplies the ‘magic’ for quantum compu-tation,Nature510, 351 (2014).16
[2] S. D. Bartlett, Powered by magic,
Nature510, 345 (2014).
[3] A. Tavakoli and R. Uola, Measurement incompatibility
and steering are necessary and suﬃcient for operational
contextuality, Phys. Rev. Research 2, 013011 (2020).
[4] D. Saha, P. Horodecki, and M. Paw/suppress lowski, State inde-
pendent contextuality advances one-way communication,
New J. Phys. 21, 093057 (2019).
[5] S. Kochen and E. P. Specker, The problem
of hidden variables in quantum mechanics,
J. Math. Mech. 17, 58 (1967).
[6] E. Amselem, M. R˚ admark, M. Bourennane, and A. Ca-
bello, State-independent quantum contextuality with sin-
gle photons, Phys. Rev. Lett. 103, 160405 (2009).
[7] B. H. Liu, Y. F. Huang, Y. X. Gong, F. W. Sun, Y. S.
Zhang, C. F. Li, and G. C. Guo, Experimental demon-
stration of quantum contextuality with nonentangled
photons, Phys. Rev. A 80, 044101 (2009).
[8] V. D’Ambrosio, I. Herbauts, E. Amselem, E. Nagali,
M. Bourennane, F. Sciarrino, and A. Cabello, Experi-
mental implementation of a Kochen-Specker set of quan-
tum tests, Phys. Rev. X 3, 011012 (2013).
[9] Y.-F. Huang, C.-F. Li, Y.-S. Zhang, J.-W. Pan, and G.-C.
Guo, Experimental test of the Kochen-Specker theorem
with single photons, Phys. Rev. Lett. 90, 250401 (2003).
[10] G. Ca˜ nas, S. Etcheverry, E. S. G´ omez, C. Saave-
dra, G. B. Xavier, G. Lima, and A. Cabello, Ex-
perimental implementation of an eight-dimensional
Kochen-Specker set and observation of its connec-
tion with the Greenberger-Horne-Zeilinger theorem,
Phys. Rev. A 90, 012119 (2014).
[11] G. Ca˜ nas, M. Arias, S. Etcheverry, E. S. G´ omez, A. Ca-
bello, C. Saavedra, G. B. Xavier, and G. Lima, Applying
the simplest Kochen-Specker set for quantum informa-
tion processing, Phys. Rev. Lett. 113, 090404 (2014).
[12] Y. Hasegawa, R. Loidl, G. Badurek, M. Baron, and
H. Rauch, Quantum contextuality in a single-neutron op-
tical experiment, Phys. Rev. Lett. 97, 230401 (2006).
[13] H. Bartosik, J. Klepp, C. Schmitzer, S. Sponar, A. Ca-
bello, H. Rauch, and Y. Hasegawa, Experimental test
of quantum contextuality in neutron interferometry,
Phys. Rev. Lett. 103, 040403 (2009).
[14] G. Kirchmair, F. Z¨ ahringer, R. Gerritsma, M. Klein-
mann, O. G¨ uhne, A. Cabello, R. Blatt, and C. F. Roos,
State-independent experimental test of quantum contex-
tuality,Nature460, 494 (2009).
[15] O. Moussa, C. A. Ryan, D. G. Cory, and R. Laﬂamme,
Testing contextuality on quantum ensembles with one
clean qubit, Phys. Rev. Lett. 104, 160501 (2010).
[16] A. Cabello, Converting contextuality into nonlocalit y,
Phys. Rev. Lett. 127, 070401 (2021).
[17] R. Ramanathan, M. Rosicka, K. Horodecki, S. Piro-
nio, M. Horodecki, and P. Horodecki, Gadget struc-
tures in proofs of the Kochen-Specker theorem,
Quantum 4, 308 (2020), arXiv:1807.00113v2.
[18] K. Horodecki, M. Horodecki, P. Horodecki, R. Horodecki ,
M. Paw/suppress lowski, and M. Bourennane, Contextuality oﬀers
device-independent security, arXiv:1006.0468 [quant-ph ]
(2010).
[19] R. Ramanathan, Y. Liu, and P. Horodecki, Large viola-
tions in Kochen Specker contextuality and their applica-
tions,New J. Phys. 24, 033035 (2022).
[20] A. Kulikov, M. Jerger, A. Potoˇ cnik, A. Wallraﬀ, and
A. Fedorov, Realization of a quantum random generatorcertiﬁed with the Kochen-Specker theorem, Phys. Rev.
Lett.119, 240501 (2017).
[21] R. Gallego, N. Brunner, C. Hadley, and A. Ac´ ın, Device-
independent tests of classical and quantum dimensions,
Phys. Rev. Lett. 105, 230501 (2010).
[22] S. Wehner, M. Christandl, and A. C. Doherty, Lower
bound on the dimension of a quantum system given mea-
sured data, Phys. Rev. A 78, 062112 (2008).
[23] A. Babazadeh, M. Erhard, F. Wang, M. Malik,
R. Nouroozi, M. Krenn, and A. Zeilinger, High-
dimensional single-photon quantum gates: Concepts and
experiments, Phys. Rev. Lett 119, 180510 (2017).
[24] M. Krenn, M. Malik, R. Fickler, and A. Zeilinger, Auto-
mated search for new quantum experiments, Phys. Rev.
Lett.116, 090405 (2016).
[25] M. Malik, M. Erhard, M. Huber, M. Krenn, R. Fickler,
and A. Zeilinger, Multi-photon entanglement in high di-
mensions, Nature Phot. 55, 248 (2016).
[26] T. Zhong, H. Zhou, R. D. Horansky, C. Lee, V. B.
Verma, A. E. Lita, A. Restelli, J. C. Bienfang, R. P.
Mirin, T. Gerrits, S. W. Nam, F. Marsili, M. D. Shaw,
Z. Zhang, L. Wang, D. Englund, G. W. Wornell, J. H.
Shapiro, and F. N. C. Wong, Photon-eﬃcient quantum
key distribution using time-energy entanglement with
high-dimensional encoding, New J. Phys. 17, 022002
(2015).
[27] C. Budroni, A. Cabello, O. G¨ uhne, M. Klein-
mann, and J.- ˚A. Larsson, Kochen-Specker contextuality,
Rev. Mod. Phys. 94, 0450007 (2022), arXiv:2102.13036.
[28] Z.-H. Liu, H.-X. Meng, Z.-P. Xu, J. Zhou, J.-L.
Chen, J.-S. Xu, C.-F. Li, G.-C. Guo, and A. Ca-
bello, Experimental test of high-dimensional quan-
tum contextuality based on contextuality concentration,
Phys. Rev. Lett 130, 240202 (2023).
[29] S. Paesani, J. F. F. Bulmer, A. E. Jones, R. Santagati,
and A. Laing, Scheme for universal high-dimensional
quantum computation with linear optics, Phys. Rev. Lett.
126, 230504 (2021).
[30] D. Bacco, J. F. F. Bulmer, M. Erhard, M. Huber, and
S. Paesani, Proposal for practical multidimensional quan-
tum networks, Phys. Rev. A 104, 052618 (2021).
[31] X. Zhan and L. Hu, Dimension-dependent noncontextu-
ality inequalities with large contexts, Phys. Rev. A 104,
032208 (2021).
[32] M. Frembs, S. Roberts, and S. D. Bartlett, Contextualit y
as a resource for measurement-based quantum computa-
tion beyond qubits, New J. Phys. 20, 103011 (2018).
[33] M. Waegell and P. K. Aravind, Golay codes and quantum
contextuality, Phys. Rev. A 106, 062421 (2022).
[34] Y. Wang, Z. Hu, B. C. Sanders, and S. Kais,
Qudits and high-dimensional quantum computing,
Frontiers Phys. 8, 589504 (2022).
[35] M. Planat and M. Saniga, Five-qubit contextuality, noi se-
like distribution of distances between maximal bases and
ﬁnite geometry, Phys. Lett. A 376, 3485 (2012).
[36] M. Waegell and P. K. Aravind, Parity proofs of the
Kochen-Specker theorem based on the Lie algebra E8,
J. Phys. A 48, 225301 (2015).
[37] M. Paviˇ ci´ c, Arbitrarily exhaustive hypergraph gene ration
of 4-, 6-, 8-, 16-, and 32-dimensional quantum contextual
sets,Phys. Rev. A 95, 062121 (2017).
[38] M. Waegell and P. K. Aravind, Minimal com-
plexity of Kochen-Specker sets does not scale
with dimension, Phys. Rev. A 95, 050101 (2017),17
Supplemental Material https://journals.aps.org/
pra/supplemental/10.1103/PhysRevA.95.050101.
[39] M. Paviˇ ci´ c and N. D. Megill, Vector generation of quan -
tum contextual sets in even dimensional Hilbert spaces,
Entropy 20, 928 (2018).
[40] M. Paviˇ ci´ c, Hypergraph contextuality,
Entropy 21(11) , 1107 (2019).
[41] M. Paviˇ ci´ c, M. Waegel, N. D. Megill, and P. Ar-
avind, Automated generation of Kochen-Specker sets,
Scientiﬁc Reports 9, 6765 (2019).
[42] M. Paviˇ ci´ c and N. D. Megill, Automated genera-
tion of arbitrarily many Kochen-Specker and other
contextual sets in odd dimensional Hilbert spaces,
Phys. Rev. A 106, L060203 (2022).
[43] M. Paviˇ ci´ c, Quantum contextuality,
Quantum 7, 953 (2023).
[44] J. Zimba and R. Penrose, On Bell non-locality
without probabilities: More curious geometry,
Stud. Hist. Phil. Sci. 24, 697 (1993).
[45] S. Matsuno, The construction of Kochen–Specker non-
colourable sets in higher-dimensional space from corre-
sponding sets in lower dimension: Modiﬁcation of Ca-
bello, Estebaranz and Garc´ ıa-Alcaine’s method, J. Phys.
A40, 9507 (2007).
[46] A. Cabello, J. M. Estebaranz, and G. Garc´ ıa-Alcaine,
Recursive proof of the Bell-Kochen-Specker theorem in
any dimension n >3,Phys. Lett. A 339, 425 (2005).
[47] L. Lov´ asz, On the Shannon capacity of a graph, ISSS
Trans. Information Theory 25, 1 (1979).
[48] M. Gr¨ otschel, L. Lov´ asz, and A. Schrijver, The ellips oid
method and its consequences in combinatorial optimiza-
tion,Combinatorica 1, 169 (1981).
[49] P. Lisonˇ ek, P. Badzi¸ ag, J. R. Portillo, and A. Ca-
bello, Kochen-Specker set with seven contexts,Phys. Rev. A 800, 142 (2019).
[50] M. Paviˇ ci´ c, N. D. Megill, and J.-P. Merlet,
New Kochen-Specker sets in four dimensions,
Phys. Lett. A 374, 2122 (2010).
[51] A. Peres, Two simple proofs of the Bell-Kochen-Specker
theorem, J. Phys. A 24, L175 (1991).
[52] A. Cabello, J. M. Estebaranz, and G. Garc´ ıa-Alcaine,
Bell-Kochen-Specker theorem: A proof with 18 vectors,
Phys. Lett. A 212, 183 (1996).
[53] M. Waegell and P. K. Aravind, Parity proofs of the
Kochen-Specker theorem based on 24 rays of Peres,
Found. Phys. 41, 1785 (2011).
[54] M. Paviˇ ci´ c, J.-P. Merlet, B. D. McKay, and N. D. Megill ,
Kochen-Specker vectors, J. Phys. A 38, 1577 (2005).
[55] M. Paviˇ ci´ c and N. D. Megill, Vec-
tor generation of contextual sets,
EPJ Web of Conferences 198, 00009 (2019) 198, 00009 (2019).
[56] P. Lisonˇ ek, Kochen-Specker sets and Hadamard matrice s,
Theor. Comp. Sci. 800, 042101 (2019).
[57] H. Bechmann-Pasquinucci and W. Tittel, Quantum cryp-
tography using larger alphabets, Phys. Rev. A 61, 062308
(2000).
[58] A. Cabello, V. D’Ambrosio, E. Nagali, and F. Scia-
rrino, Hybrid ququart-encoded quantum cryptography
protected by Kochen-Specker contextuality, Phys. Rev.
A84, 030302(R) (2011).
[59] K. Svozil, Bertlmann’s chocolate balls and quantum typ e
cryptography, in Physics and Computation 2010 , edited
by H. Guerra (Department of Mathematics, University
of Azores, Ponta Delgada, Portugal, 2010) pp. 235–249.
[60] M. Krenn, M. Huber, R. Fickler, R. Lapkiewicz,
S. Ramelow, and A. Zeilinger, Generation and conﬁr-
mation of a (100 ×100)-dimensional entangled quantum
system,PNAS111, 6243 (2014).
[61] http://puh.srce.hr/s/Qegixzz2BdjYwFL.
1
A Fairness-Aware Attacker-Defender Model for
Optimal Edge Network Operation and Protection
Duong Thuy Anh Nguyen, Student Member, IEEE , Jiaming Cheng, Student Member, IEEE ,
Ni Trieu, Member, IEEE , and Duong Tung Nguyen, Member, IEEE
Abstract —While various aspects of edge computing (EC) have
been studied extensively, the current literature has overlooked the
robust edge network operations and planning problem. To this
end, this letter proposes a novel fairness-aware attacker-defender
model for optimal edge network operation and hardening against
possible attacks and disruptions. The proposed model helps EC
platforms identify the set of most critical nodes to be protected to
mitigate the impact of failures on system performance. Numerical
results demonstrate that the proposed solution not only ensures
good service quality but also maintains fairness among different
areas during disruptions.
Index Terms —Edge computing, attacker-defender, fairness,
network hardening, proactive protection, network disruptions.
I. I NTRODUCTION
Edge computing (EC) has been proposed as a complement
to the cloud to enhance user experience and support a variety
of Internet of Things (IoT) applications. The new EC paradigm
offers powerful computing resources by enabling computation
to be performed at the network edge in close proximity to end-
users, instead of being centralized in cloud environments. The
decentralization of resources has alleviated bandwidth con-
straints and overcomes latency issues, making the optimization
of edge network operation and planning a critial problem. In
EC, there are multiple heterogeneous edge nodes (ENs) with
varying capacities, thus, an important question is to allocate
edge resources efﬁciently and effectively [1]–[4], with the aim
of reducing latency, energy consumption, and unmet demand.
In light of the open nature of the EC ecosystem and
the vulnerability of IoT devices with limited resources to
attacks, reliability and resilience are also crucial challenges,
given the growing risk of failures. In practice, various factors
such as cyber-attacks, natural disasters, software errors, and
power outages can result in component failures and disrupt
the edge network operation, leading to substantial economic
losses and safety concerns for mission-critical services, and
negatively impacting the user experience. Despite this, the
issue of resilience in EC remains unresolved [5].
An initial discussion of reliability challenges in EC was
introduced in [6]; however, limited efforts have been made
to address these challenges. One line of research aims at
accurately estimating failures in the ﬁeld. For instance, in [7],
a Bayesian-based technique is introduced to exploit the causal
relationship between different types of failures and identify
the availability of virtual machines running on different data
Duong Thuy Anh Nguyen, Ni Trieu, and Duong Tung Nguyen are with
Arizona State University, Tempe, AZ, United States. Email: fdtnguy52, ni-
trieu, duongnt g@asu.edu. Jiaming Cheng is with University of British
Columbia, Vancouver, BC, Canada. Email: jiaming@ece.ubc.ca .centers. In [8], the authors leverage spatio-temporal failure
dependencies among edge servers and employ a learning
approach to compute the joint failure probability of the servers.
Additionally, in [9], [10], the authors present a federated
learning-based decentralized communication approach to mit-
igate the negative impacts on the network after node failures.
Another line of research focuses on optimizing edge systems
under unpredictable failures. Reference [11] proposes to model
latency and resilience requirements of EC applications as an
optimization problem by reserving bandwidth and resource
capacities. To investigate optimal service placement strategies,
[4], [12] formulate robust optimization (RO) models under
uncertain EN failures. A heuristic solution is proposed in
[11]. The later work [12] exploits the monotone submodular
property to develop approximation algorithms while a globally
optimal solution is proposed in [4]. Reference [13] presents a
min-max optimization model for preventive priority setting
to handle load balancing against controller failures in
software-deﬁned networks. A robust mixed integer linear
programming (MILP) model is proposed in [14] to minimize
the total required backup capacity against simultaneous fail-
ures of physical machines.
The existing works primarily focus on the probability of
failures and optimizing decisions under failure events using
probabilistic or robust models. There is limited attention paid
to developing effective defense strategies prior to failures that
can enable the edge platform to dynamically adapt its opera-
tions and maintain a high quality of service during disruptions.
this letter seeks to address the gap in the literature by focusing
on the proactive edge network protection problem to mitigate
the impacts of failure events on system performance.
The protection of edge networks against attacks is a com-
plex issue, due to the uncertainty of network failures. For
simplicity, this work considers EN failures only. Node failures
can occur due to various reasons including power outages,
internal component failures, software errors or misconﬁgura-
tions, natural disasters, or cyberattacks. When an EN fails, it
is considered as being attacked by a hypothetical attacker and
is virtually eliminated from the network. As a result, the work-
load previously assigned to the failed EN must be reallocated
to other active ENs, potentially leading to increased latency
for some users. Additionally, as the number of node failures
increases, the available edge resources decrease, potentially
resulting in an increase in unmet demand. Therefore, it is of
utmost importance to mitigate the degradation of services in
the face of network failures.
Contributions: This letter presents a novel bilevel attacker-
defender optimization model and corresponding solution tech-arXiv:2301.06644v2  [math.OC]  6 Feb 20232
niques for ensuring the survivability of edge networks (ENs) in
the face of failures through proactive protection. The objective
of the attacker is to maximize the degradation of user experi-
ence, as reﬂected by unmet demand and delay. By considering
the problem from the attacker’s perspective, the proposed
techniques help to understand the most disruptive attacks and
identify the critical set of ENs for effective protection.
Protection of ENs can be achieved through various means,
such as placement in secure locations, installation of ﬁrewalls
and security software, implementation of intrusion detection
and prevention systems, and use of Uninterruptible Power
Supply (UPS) units. The proposed approach solves a max-
min model representing the optimal attack problem to obtain
a robust proactive protection strategy, using an efﬁcient al-
gorithm based on linear programming duality to compute the
exact global optimum of the bi-level optimization problem.
In addition, node failures can lead to insufﬁcient edge
resources and raise concerns about the fair distribution of re-
sources to users during disruptions. The issue of fairness-aware
resource allocation under disruption has been overlooked in
prior work. To address this, a novel notion of fairness in the
context of edge resource allocation is introduced, which pre-
vents the edge platform from prioritizing serving the demands
from some areas over others to maximize its utility and ensures
sufﬁcient resources to serve critical services in every area
during network failures. The fairness aspect of the decision-
making process is reﬂected through the fairness constraints
in our formulation, which allows the platform to balance the
trade-off between fairness and efﬁciency. Simulation results
show that proactive provisioning signiﬁcantly improves system
performance in terms of service quality and fairness.
II. S YSTEM MODEL AND PROBLEM FORMULATION
A. System Model
The system model is illustrated in Fig. 1. We consider an EC
platform that manages a set NofNENs to serve users located
in different areas, each of which is represented by an Access
Point (AP). LetMbe the set of MAPs. We deﬁne iandj
as the AP index and EN index, respectively. The computing
resource capacity of EN jisCj. Letibe the total resource
demand of users in area i. We use the terms “ demand ” and
“workload ” interchangeably in this letter. The network delay
between AP iand ENjisdi;j. The platform aims to reduce
the overall delay as well as maximize the amount of workload
served at the ENs. Denote the workload from area ithat is
allocated to EN jbyxi;j. The service requests from each area
must be either served by some ENs or dropped (i.e., counted
as the unmet demand qi), and the penalty is ifor each unit
of unmet demand in area i.
Fig. 1: System modelThe operation of the edge network can be disrupted for
various reasons. To account for this, we consider the presence
of a hypothetical intelligent adversary, i.e., an attacker, whose
objective is to cause maximum damage to the edge system per-
formance given its limited attack resources. The EC platform
acts as the defender. We assume the attacker has complete
knowledge of the optimal operation plan of the platform. This
is a reasonable assumption as the defender would not be worse
off even if the attacker possesses a less-than-perfect model of
the defender’s system or fails to execute a perfect attack plan.
When an EN fails due to any reason, we consider it as
being attacked by the hypothetical attacker. The workload
initially assigned to the failed EN must be reallocated to
the remaining active ENs. The survivability of the system
against edge failures can be achieved through EN protection.
We assume that the EC platform has a certain budget for
EN hardening, and the maximum number of ENs that can be
protected is represented by K. Then, the platform can optimize
the EN protection decision by viewing this problem through
the lens of an attacker who can only successfully attack at
mostKsimultaneous ENs. Obviously, KjNj =N.
Since the exact node failures can not be predicted accurately
at the time of making the protection decision, we propose
techniques to search for optimal disruptive attacks, given the
posited offensive resources of the attacker. To this end, we
formulate a bilevel optimization problem where the defender
solves the inner problem to minimize the impact on user
experience, while the attacker solves the outer problem to
maximize the degradation of system performance. The solution
to this problem yields the most disruptive attack that the
attacker could undertake, as well as the critical ENs that should
be reinforced for optimal protection.
B. EC Platform Optimization Model
First, we present the optimal operating model for the EC
platform under normal conditions without attack. The plat-
form’s objective is to improve the user experience by reducing
the overall delay and the extent of unmet demand. Hence, it
needs to solve the following optimization problem:
(D) min
x;q(1 )X
iiqi+X
i;jdi;jxi;j (1a)
s.t.X
ixi;jCj;8j (1b)
X
jxi;j+qi=i;8i;xi;jCjai;j;8i;j(1c)
qi
i;8i;qi
i qi0
i0;8i;i0(1d)
xi;j0;8i;j; qi0;8i: (1e)
The ﬁrst term in the objective function (1a) captures the total
penalty for unmet demand. The second term represents the
delay penalty. The weighing factor can be used by the EC
platform to express its priorities towards reducing the delay
and the unmet demand. Overall, the EC platform aims to
minimize the weighted sum of the unmet demand penalty and
the delay penalty. The computing resource capacity constraints
are presented in (1b), which shows that the total amount of
workload allocated to EN jcan not exceed its capacity. The3
workload allocation constraints (1c) indicate the demand from
each area must be either served by some ENs or dropped.
Since we focus on delay-sensitive services, constraints (1c)
also impose that the demand from each area can only be served
by a subset of ENs which are sufﬁciently close to that area.
We useai;jas a binary indicator to denote if EN jsatisﬁes the
prerequisites for serving the demand from area i. In particular,
ifai;j= 0, thenxi;j= 0, i.e., ENjis not eligible to serve the
demand from area i. Otherwise, the workload assigned from
areaito ENjshould not exceed the capacity Cjof the EN.
For quality control, the EC platform can enforce that the
ratio of the unmet demand to the total demand in each area
ishould not exceed a given threshold as shown in (1d).
This condition ensures that each area is allocated sufﬁcient
resources for operating critical services in case of disruption.
Constraints (1d) enforces a soft fairness condition among
different areas in terms of the proportions of unmet demand.
Speciﬁcally, the proportions of unmet demand between any
two areas should not differ more than a certain threshold .
C. Attacker-Defender Model
We are now ready to describe the attacker-defender model
to determine the set of critical ENs. The attacker can use
this model to ﬁnd an optimal attack plan, given its limited
offensive resources, to maximally degrades the performance
of the EC platform during disruptions by increasing the total
amount of unmet demand as well as the overall network delay
By studying attack strategies through the lens of the attacker,
it helps us understand how to make the edge network less
vulnerable. In our model, the EC platform acts as the defender.
Letzjbe a binary variable that takes the value of 1if
ENjis successfully attacked by the attacker. For simplicity,
we assume that an EN will completely fail if it is attacked.
Denote an attack plan of the attacker by z= (z1;;zN)
2Z, whereZis the set of all possible attack plans that can
be carried out by the attacker. In other words, Zis the set
of the attacker’s options to interdict different combinations of
ENs in the network. A natural form of set Zis:
Z=n
z2f0;1gN:X
jzjKo
; (2)
whereKis the maximum number of ENs that the attacker
can attack simultaneously. Note that our proposed model and
solution can easily deal with a more general (polyhedral)
form of setZ. Overall, the attacker-defender model can be
expressed as a max-min optimization problem as follows:
(AD) max
z2Zmin
x;q2S(z)(1 )X
iiqi+X
i;jdi;jxi;j;(3)
whereS(z)represents the defender’s set of feasible actions,
restricted by the attack plan z. Concretely,S(z)captures all
the operational constraints of the defender during an attack.
Since attacked ENs cannot serve any demand, constraints (1b)
need to be modiﬁed as follows:
X
ixi;jCj(1 zj);8j: (4)
It can be seen that if EN jfails (i.e.,zj= 1), then (4) impliesP
ixi;j= 0, thus,xi;j= 0;8i;j, and ENjis unable to serve
any user requests. Since (4) already enforces xi;j= 0;8i;j,whenzj= 1, we do not need to modify (1c). Hence, the
feasible setS(z)given the attack plan zcan be given as:
S(z) =n
x;q:(1c) (1e);(4)o
: (5)
The attacker-defender model (3) aims to ﬁnd a critical set
of ENs by identifying a maximally disruptive resource-
constrained attack that an attacker might undertake. The inner
minimization problem in (3) represents the optimal operation
model of the EC platform (i.e., the defender) under a speciﬁc
attack plan z. The outer maximization problem models the
attacker’s objective to incur the highest cost to the EC platform
during the attack. The solutions obtained from solving the
optimal-attack problem (3) suggest the set of K-critical ENs
to be protected to maximize the user experience.
The attacker-defender problem (AD) in (3) is a challenging
bilevel program [15]. Refer to Appendix A in [16] for the
bilevel formulation. The computational difﬁculty stems from
themax-min structure of the problem. The outer problem
also referred to as the leader problem, represents the attacker
problem that seeks to maximize the defender’s loss caused by
the disruption. The inner minimization problem, also referred
to as the follower problem, captures the optimal operation of
the edge platform under a speciﬁc attack plan z. The platform
aims to optimally allocate the workload to non-attacked ENs
to mitigate the impact of attacks by minimizing the amount
of unmet demand as well as the overall network delay.
III. S OLUTION APPROACH
To solve the problem (3), we ﬁrst convert the inner problem
into a linear program (LP) for a ﬁxed value of z. Then, (3)
becomes a bilevel LP with binary variables in the upper level,
which imposes difﬁculties [15]. We propose transforming the
inner minimization problem into a maximization problem by
relying on LP duality. Consequently, the max-min problem (3)
can now be reformulated as a max-max problem, which is
simply a maximization problem. The resulting maximization
problem is a mixed-integer nonlinear program (MINLP) con-
taining several bilinear terms. By linearizing the bilinear terms,
we can convert the MINLP into an MILP that can be solved by
off-the-shelf solvers. The detailed solution is described below.
First, given a ﬁxed attack plan z, the inner minimization
problem in (3) can be rewritten as an equivalent LP below:
min
x;q(1 )X
iiqi+X
i;jdi;jxi;j (6a)
s.t.X
ixi;jCj(1 zj);8j (j) (6b)
X
jxi;j+qi=i;8i (i) (6c)
xi;jCjai;j;8i;j (i;j)(6d)
qi
i qi0
i0;8i;i0(i;i0)(6e)
qi
i qi0
i0 ;8i;i0(i;i0)(6f)
xi;j0;8i;j;qi0;8i;qi
i;8i(i) (6g)
j;i;i;j;i;i0;i;i0;iare the dual variables associated with
constraints (6b)-(6g), respectively.4
To transform the max-min bilevel program into a single-
level problem, a common approach is to utilize the
Karush–Kuhn–Tucker (KKT) conditions to convert the inner
follower problem into a set of linear constraints (see Appendix
Bin our technical report [16]). However, this solution is not
computationally efﬁcient because the reformulated single-level
optimization problem contains a large number of complimen-
tary constraints. Instead, we employ the LP duality to convert
the minimization problem (6a)-(6g) to the following equivalent
maximization problem.
max
;;;;; X
jCj(1 zj)j+X
iii X
i;jCjai;ji;j
 X
iMX
i0=i+1(i;i0+i;i0) X
ii(7a)
s.t. j+i i;jdi;j;8i;j (7b)
i 1
iMX
l=i+1(i;l i;l) +1
ii 1X
l=1(l;i l;i) i
i
(1 )i;8i(7c)
j0;i;j0;i;i00;i;i00;i0;8i;i0;j:(7d)
The bilinear term (1 zj)jin (7a) is a product of a continuous
variable and a binary variable. To tackle this, we deﬁne a new
auxiliary non-negative continuous variable gj, wheregj= (1 
zj)j;8j. The constraint gj= (1 zj)jcan be implemented
equivalently through the following linear inequalities:
gjMj(1 zj); gjj;8j (8a)
gj0; gjj Mjzj;8j; (8b)
where each Mjis a sufﬁciently large number. Based on the
linearization steps above, we obtain an MILP that is equivalent
to the attacker-defender problem (3), as follows:
max
z;g;;;;;; X
jCjgj+X
iii X
i;jCjai;ji;j
 X
iMX
i0=i+1(i;i0+i;i0) X
ii (9a)
s.t. (7b) (8b);X
jzjK;zj2f0;1g;8j:(9b)
This MILP problem can now be solved efﬁciently by MILP
solvers such as Gurobi, CPLEX, and Mosek. Table I compares
the number of constraints and variables between duality- and
KKT- based reformulations. The duality reformulation has a
simpler structure and fewer variables and constraints and is
usually less computationally expensive. Another disadvantage
of the KKT-based method lies in the weak relaxation of the
big-M method, which can greatly affect the running time.
KKT Duality
# constraints 5N+M(8M+ 8N+ 1) 6N+ 2M(M+N)
# variables ( Z) 2N+ 2M(M+N) N
# variables ( R)N+ 2M(M+N+ 1) 2N+M(2M+N)
TABLE I: KKT-based vs duality-based reformulationsIV. N UMERICAL RESULTS
Similar to [1]–[3], we adopt the Barabasi-Albert model to
generate a random scale-free edge network topology with 100
nodes and the attachment rate of 2[1]. The link delay between
each pair of nodes is generated randomly in the range of [2,
5] ms. The network delay between any two nodes is the delay
of the shortest path between them [2]. From the generated
topology, 80 nodes are chosen as APs and 30 nodes are
chosen as ENs for our performance evaluation (i.e., M= 80 ,
N= 30 ). Also,ai;jis set to be 1 if di;jis less than 20
ms. The capacity Cjof each EN jis randomly selected from
the setf16;32;64;128;256;512;1024gvCPUs. The resource
demand (i.e., workload) in each area is randomly drawn in
the range of [20, 35] vCPUs [2]. The penalty for each unit of
unmet demand is set to be 5 $/vCPU (i.e., i= 5;8i). The
EC platform can adjust to control the trade-off between the
unmet demand and the overall network delay. A smaller value
ofimplies the platform gives more priority to unmet demand
mitigation than to delay reduction. For illustration purposes,
we setto be 0:1. Also,is set to be 0.8.
We ﬁrst evaluate the performance of the proposed model
and three benchmark schemes, including: (i) No hardening :
proactive EN protection is not considered; (ii) Heuristic : the
system protects KENs with highest computing capacities; and
(iii)Random: a random protection plan within the protection
budget, i.e., protecting KENs at random. The simulation is
conducted for different values of Kand the number of actual
EN failures. We run each scheme to obtain a set of ENs to be
protected. For our proposed model, we solve (3) to obtain the
set ofKcritical ENs. This set and the set of actual EN failures
are then used as an input to problem (6a)-(6g) to compute
the actual total cost of the platform. For each experiment, we
randomly generate 500 scenarios of actual EN failures and
compute both average and worst-case performance.
(a) Average Cost
 (b) Worst-case Cost
Fig. 2: Performance comparison
Fig. 2 compares the performance of the four hardening
schemes when the actual number of failures equals the defense
budgetK. Among the total of N= 30 ENs, we vary the
number of EN failures Kfrom 1 to 6. As expected, “ No
Hardening ” results in the highest cost for every value of K,
as all ENs are susceptible to attacks and the attacker has more
ﬂexibility to target the critical ENs that cause the greatest
disruption. In contrast, the attacker has more limited options
with EN protection considered in the other schemes. The
proposed scheme signiﬁcantly outperforms the other schemes.
Also, for every scheme, the total cost increases as Kincreases
since there are fewer surviving ENs to serve the demand.
Fig. 3 illustrates the beneﬁt of proactive EN hardening using
our model by showing the effect of having different numbers
of protected ENs during the planning stage for different at-
tack/failure scenarios. The performance for different numbers5
of protected ENs ( K) and the actual number of EN failures ( Q)
are examined. Each curve in the ﬁgure corresponds to a given
value ofQ. We can easily see that the total cost increases as
Qincreases. More interestingly, the defender can drastically
reduce its cost by protecting just a few ENs. For example,
protecting only one or two ENs results in a signiﬁcantly lower
total cost compared to the case without any protection. Thus,
proactive EN protection is beneﬁcial even when the number
of actual failures is larger than the defense budget .
(a) Average Cost
 (b) Worst-case Cost
Fig. 3: Impacts of proactive EN protection on the total cost
(a)= 0:2
 (b)= 0:8
Fig. 4: The proportions of unmet demands in different areas
Fig. 4 shows the impact of fairness consideration. A lower
value ofimplies that the platform cares more about fairness
during disruptions. When the fairness condition is relaxed, i.e,
larger values of (e.g.,= 0:8in Fig. 4(b)), there are some
areas with particularly high rates of dropped requests (i.e.,
higher unmet demand). On the other hand, when the fairness
condition is strictly imposed (e.g., = 0:2in Fig. 4(a)), all
the areas have comparable proportions of unmet demand.
= 0:2 = 0:8
K= 2 f24;26g f24;26g
K= 4 f2;11;15;21g f2;10;24;26g
K= 6 f2;11;15;21;23;26g f2;5;10;24;25;26g
TABLE II: The set of critical ENs
Table II presents the critical EN sets for values of 0:2
and0:8. The sets are found to be signiﬁcantly different, with
a varying degree of fairness consideration. When the fairness
constraint is less stringent (i.e., = 0:8), the set tends to
consist of ENs with high capacity. However, when the fairness
constraint is more stringent (i.e., = 0:2), the set tends to
comprise ENs with smaller capacities that have more potential
to serve requests from more areas (i.e., close to more areas).
The resource allocation decision during disruption can also
differ, even if the sets of critical ENs are the same. Indeed,
there is an inherent trade-off between fairness and cost, as
depicted in Fig. 5. Finally, Table III compares the running
time of the KKT-based and duality-based reformulations. It
should be noted that all the experiments were conducted
on an M1 MacBook Air with 3.2 GHz processor and 8 GB
RAM. On high-performance computing servers, the actual
running time can be signiﬁcantly faster.
Fig. 5: Total penalty for different values of 
KKT (seconds) Duality (seconds)
N= 10;M = 30 15:5208 2:9579
N= 30;M = 80 235:0888 7:8576
N= 80;M = 100 4359:9689 27:1822
N= 200; M = 1000 N/A 18599:8247
TABLE III: Computational time comparison
V. C ONCLUSION
This letter introduced a novel fairness-aware robust model to
help a budget-constrained EC platform determine the critical
ENs to be safeguarded against possible disruptions. The model
incorporates the coordination of both hardening and resource
allocation decisions in order to enhance system resilience
and service quality while striking a balance between fairness
and system efﬁciency. For future research, it is intended to
integrate multiple uncertainties, as well as multiple services
and resource types into the proposed framework. Exploring the
impact of proactive defense through a multi-faceted defender-
attacker-defender model is another interesting direction.
REFERENCES
[1] D. T. Nguyen, L. B. Le, and V . Bhargava, “Price-based resource
allocation for edge computing: a market equilibrium approach,” IEEE
Trans. Cloud Comput. , vol. 9, no. 1, pp. 302–317, Jan.–Mar. 2021.
[2] T. Nisha, D. T. Nguyen and V . K. Bhargava, “A Bilevel programming
framework for joint edge resource management and pricing,” IEEE
Internet Things J. , vol. 9, no. 18, pp. 17280–17291, Sept. 2022.
[3] D. T. Nguyen, H. T. Nguyen, N. Trieu, and V . K. Bhargava, “Two-stage
robust edge service placement and sizing under demand uncertainty,”
IEEE Internet Things J. , vol. 9, no. 2, pp. 1560-1574, 15 Jan.15, 2022.
[4] J. Cheng, D. T. Nguyen, and V . K. Bhargava, “Resilient edge service
placement under demand and node failure uncertainties,” arXiv , 2022.
[5] R. Roman, J. Lopez, and M. Mambo, “Mobile edge computing, fog et
al.: A survey and analysis of security threats and challenges,” Future
Gener. Comput. Syst. , vol. 78, pp. 680–698, 2018.
[6] H. Madsen, B. Burtschy, G. Albeanu, and F. Popentiu-Vladicescu, “Re-
liability in the utility computing era: Towards reliable fog computing,”
inProc. Int. Conf. Syst. Signals Image Process. , pp. 43–46, 2013.
[7] A. Aral and I. Brandic, “QoS channelling for latency sensitive edge
applications,” in Proc. IEEE EDGE , pp. 166–173, 2017.
[8] A. Aral and I. Brandic, “Learning spatio-temporal failure dependencies
for resilient edge computing services,” IEEE Trans. Parallel Distrib.
Syst., vol. 32, no. 7, pp. 1578–1590, Jul. 2021.
[9] S. Liu, J. Yu, X. Deng and S. Wan, “FedCPF: An efﬁcient-
communication federated learning approach for vehicular edge comput-
ing in 6G communication networks,” IEEE Trans. Intell. Transp. Syst. ,
vol. 23, no. 2, pp. 1616-1629, Feb. 2022
[10] C. Wang, X. Wu, G. Liu, T. Deng, K. Peng and S. Wan, “Safeguarding
cross-silo federated learning with local differential privacy,” Digital
Commun. Net. , vol. 8, pp. 446-454, 2022
[11] R. Ford, A. Sridharan, R. Margolies, R. Jana, and S. Rangan, “Provi-
sioning low latency, resilient mobile edge clouds for 5G,” in Proc. IEEE
Conf. Comput. Commun. Workshops , May 2017, pp. 169–174.
[12] Y . Qu, D. Lu, H. Dai, H. Tan, S. Tang, F. Wu, and C. Dong, “Resilient
service provisioning for edge computing,” IEEE Internet Things J. , 2021.
[13] F. He and E. Oki, “Load balancing model against multiple controller
failures in software deﬁned networks,” in Proc. IEEE ICC , Dublin,
Ireland, 2020.
[14] M. Ito, F. He, and E. Oki, “Robust optimization for probabilistic pro-
tection with primary and backup allocations under uncertain demands”,
inProc. IEEE DRCN , pp. 1–6, 2021.
[15] O. Ben-Ayed and C. E. Blair, “Computational difﬁculties of bilevel linear
programming,” Oper. Res. , vol. 38, no. 3, pp. 556–560, 1990.
[16] Technical report, https://arxiv.org/pdf/2301.06644.pdf6
APPENDIX
A. The Bilevel Attacker-Defender Optimization Problem
(AD) max
z(1 )X
iiqi+X
i;jdi;jxi;j
subject toX
jzjK;zj2f0;1g;8j
x;q2argmin
x;q(
(1 )X
iiqi+X
i;jdi;jxi;j
subject toX
ixi;jCj(1 zj);8j
X
jxi;j+qi=i;8i
0xi;jCjai;j;8i;j
0qi
i;8i
qi
i qi0
i0;8i; i0)
:
B. KKT-based Solution
The Lagrangian function of the inner minimization problem
(6a)-(6g) in the subproblem (SP) is:
L(x;q;j;i;i;j;i;i0;i;i0;i;i;j;i) = X
i;ji;jxi;j
 X
iiqi+ (1 )X
iiqi+X
i;jdi;jxi;j
+X
jjX
ixi;j Cj(1 zj)
+X
iiX
jxi;j+qi i
+X
i;ji;j
xi;j Cjai;j
+X
iiqi
i 
+X
i;i0i;i0qi
i qi0
i0 
 X
i;i0i;i0qi
i qi0
i0+
:
The KKT conditions give
@L
@xi;j=di;j+j+i+i;j i;j= 0;8i;j (12a)
@L
@qi= (1 )i+i+1
iMX
l=i+1(i;l i;l)
 1
ii 1X
l=1(l;i l;i) +i
i i= 0;8i (12b)
0j?Cj(1 zj) X
ixi;j0;8j (12c)
X
jxi;j+qi=i;8j (12d)
0i;j?Cjai;j xi;j0;8j (12e)
0i? qi
i0;8i;j (12f)
0i;j?xi;j0;8i;j (12g)
0i?qi0;8i (12h)where (12a)-(12b) are the stationary conditions, (12c)-(12h)
are the primal feasibility, dual feasibility and complementary
slackness conditions. From (12a)-(12b), we have:
di;j+j+i+i;j=i;j;8i;j (13)
(1 )i+i+1
iMX
l=i+1(i;l i;l)
 1
ii 1X
l=1(l;i l;i) +i
i=i;8i: (14)
Moreover, from (12g), if xi;j>0, theni;j= 0 and (13)
implies that di;j+j+i;j+i= 0;8i;j:Thus,

di;j+j+i;j+i
xi;j= 0;8i;j: (15)
Similarly, we have
"
(1 )i+i+1
iMX
l=i+1(i;l i;l)
 1
ii 1X
l=1(l;i l;i) +i
i#
qi= 0;8i:(16)
Therefore, the conditions (12g)-(14) are equivalent to the
following set of constraints:
0di;j+j+i+i;j?xi;j0;8i;j (17a)
0(1 )i+i+1
iMX
l=i+1(i;l i;l)
 1
ii 1X
l=1(l;i l;i) +i
i?qi0;8i: (17b)
It is worth noting that we can directly use the set of KKT
conditions (13)-(14) to solve the subproblem, but it will
involve more variables (i.e., and) compared to solv-
ing the subproblem with (17a)-(17b). In brief, based on
the Karush–Kuhn–Tucker (KKT) conditions above, the ( AD)
problem (3) is equivalent to the following problem with
complementary constraints:
max
x;q;z;;;;;;(1 )X
iiqi+X
i;jdi;jxi;j (18a)
subject to (12c) ;(12e);(12d);(12f);(17a);(17b) (18b)
zj2f0;1g;8j;X
jzjK; (18c)
where the last constraints in (18c) represents the set of feasible
attack plansZ.
The Complete MILP Formulation Note that a compli-
mentary constraint 0x?0meansx0;and
x:= 0. Thus, it is a nonlinear constraint. However, this
nonlinear complimentary constraint can be transformed into
equivalent exact linear constraints by using the Fortuny-Amat
transformation. Speciﬁcally, the complementarity condition
0x?0is equivalent to the following set of mixed-
integer linear constraints:
x0;x(1 u)M (19a)
0;uM; u2f0; 1g; (19b)7
where M is a sufﬁciently large constant. By applying this
transformation to all the complementary constraints listed in
(18b), we obtain an MILP that is equivalent to the problem
(3). The explicit form of this MILP is as follows:
max
x;q;z;;;;;;; u(1 )X
iiqi+X
i;jdi;jxi;j(20a)
subject to
0di;j+j+i+i;ju0
i;jM0
i;j;8i;j (20b)
0xi;j(1 u0
i;j)M0
i;j ;8i;j (20c)
0(1 )i+i+1
iMX
l=i+1(i;l i;l)
 1
ii 1X
l=1(l;i l;i) +i
iu1
iM1
i;8i (20d)
0qi(1 u1
i)M1
i ;8i (20e)
0Cj(1 zj) X
ixi;ju2
jM2
j;8j (20f)
0j(1 u2
j)M2
j ;8j (20g)
0Cjai;j xi;ju3
i;jM3
i;j ;8i;j (20h)
0i;j(1 u3
i;j)M3
i;j ;8i;j (20i)
0 qi
i+qi0
i0u4
i;i0M4
i;i0 ;8i;i0(20j)
0i;i0(1 u4
i;i0)M4
i;i0 ;8i;i0(20k)
0qi
i qi0
i0+u5
i;i0M5
i;i0 ;8i;i0(20l)
0i;i0(1 u5
i;i0)M5
i;i0 ;8i;i0(20m)
0 qi
iu6
iM6
i ;8i (20n)
0i(1 u6
i)M6
i ;8i (20o)X
jxi;j+qi=i ;8i (20p)
C. Flowchart of the Proposed Solution Approach
The ﬂow chart shown in Figure 6 summarizes the proposed
system model and solution approach. Speciﬁcally, the inner
minimization problem in (3) is ﬁrst converted as a linear min-
imization program shown in (6). Then, by using strong duality
in linear programming , (6) is equivalent to the non-linear
maximization problem (7). At this step, the bilevel maxmin
problem becomes a single-level non-linear maximization prob-
lem. The Fortuny-Amat transformation (big-M method) is then
employed to convert bilinear constraints into equivalent sets of
linear equations. Consequently, the initial bilevel problem (3)u0
i;j;u1
i;u2
j;u3
i;j;u4
i;i0;u5
i;i0;u6
i2f0;1g;8i;i0;j(20q)X
jzjK; zj2f0;1g ;8j (20r)
where urepresents the set of binary variables u0;u1;u2,
u3;u4;u5;u6. Also,M0
i;j;M1
i;M2
j;M3
i;j;M4
i;i0;M5
i;i0;M6
iare
sufﬁciently large numbers. The value of each Mshould be
large enough to ensure feasibility of the associated constraint.
On the other hand, the value of each Mshould not be too large
to enhance the computational speed of the solver. Indeed, the
value of each Mshould be tighten to the limits of parameters
and variables in the corresponding constraint.
is transformed into a mixed-integer linear program (MILP)
as shown in (9), which can be solved efﬁciently by off-
the-shelf MILP solvers such as Gurobi, Mosek, Cplex. Note
that instead of using LP strong duality theorem, we can also
use KKT conditions to convert (6) into an equivalent set
of linear equations. The KKT-based solution is presented in
Appendix B . However, as explained, the KKT-based approach
results in more integer variables and constraints in the MILP
reformulation compared to that of the duality-based approach.
The solution to the reformulated MILP problem is an optimal
set of critical ENs that should be protected.
Fig. 6: Flowchart of the solution approach
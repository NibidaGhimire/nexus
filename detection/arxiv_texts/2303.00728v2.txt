On the universality of Sn-equivariant k-body gates
Sujay Kazi,1,∗Martín Larocca,2, 3and M. Cerezo4,†
1Courant Institute of Mathematical Sciences, New York University, New York, New York 10012, USA
2Theoretical Division, Los Alamos National Laboratory, Los Alamos, New Mexico 87545, USA
3Center for Nonlinear Studies, Los Alamos National Laboratory, Los Alamos, New Mexico 87545, USA
4Information Sciences, Los Alamos National Laboratory, Los Alamos, NM 87545, USA
Theimportanceofsymmetrieshasrecentlybeenrecognizedinquantummachinelearningfromthe
simple motto: if a task exhibits a symmetry (given by a group G), the learning model should respect
said symmetry. This can be instantiated via G-equivariant Quantum Neural Networks (QNNs), i.e.,
parametrized quantum circuits whose gates are generated by operators commuting with a given
representation of G. In practice, however, there might be additional restrictions to the types of
gates one can use, such as being able to act on at most kqubits. In this work we study how the
interplay between symmetry and k-bodyness in the QNN generators affect its expressiveness for
the special case of G=Sn, the symmetric group. Our results show that if the QNN is generated
by one- and two-body Sn-equivariant gates, the QNN is semi-universal but not universal. That is,
the QNN can generate any arbitrary special unitary matrix in the invariant subspaces, but has no
control over the relative phases between them. Then, we show that in order to reach universality
one needs to include n-body generators (if nis even) or (n−1)-body generators (if nis odd). As
such, our results brings us a step closer to better understanding the capabilities and limitations of
equivariant QNNs.
I. INTRODUCTION
Quantum Machine Learning (QML) aims to use quan-
tum computers to classify, cluster, and make predictions
from classical data encoded in quantum states, or from
quantum data produced by some quantum mechanical
process [1, 2]. Despite the tremendous attention QML
has received, its true potential and limitations are still
unclear [3]. Recent results have shown that QML models
lacking inductive biases (i.e., models that do not con-
tain information about the specific problem being tack-
led) can encounter serious trainability and generalization
issues [4–7]. This can be understood as a form of “no-
free-luch” wherebyhigh-expressiveness, multi-purposeal-
gorithms will have overall poor performance.
Numerous endeavors have been undertaken to create
learning models that are tailored specifically to a given
task. Among these, Geometric Quantum Machine Learn-
ing (GQML) has emerged as one of the most promising
approaches [8–15]. The fundamental idea behind GQML
is to leverage the symmetries present in the task to de-
velop sharp inductive biases for the learning models. For
instance, when dealing with the task of classifying n-
qubit pure states from n-qubit mixed states, GQML sug-
gests using models whose outputs remain invariant under
arbitrary unitaries applied to the qubits [8]. This is be-
cause these unitaries cannot change the purity and are
therefore symmetries of the task.
The GQML program consists of several steps. First,
one needs to identify the group of transformations pre-
serving some important property of the data (e.g., a sym-
metry that preserves the labels in supervised learning).
∗sujay.kazi@gmail.com
†cerezo@lanl.govIn the case of purity, the group is G=U(2n). The next
step is to build a model that generates labels that re-
main invariant under G. Several recent works provide
templates for developing such G-invariant models, which
can be found in Refs. [9, 11]. For models based on Quan-
tum Neural Networks (QNNs), one needs to leverage the
concept of equivariance [11, 16].
An equivariant QNN is a parametrized quantum cir-
cuit ansatz that commutes, for all values of parameters,
with the representation of G. Figure 1 illustrates this
constraint on the set of unitaries that the QNN can ex-
press (i.e., to the subspace of G-symmetric operators).
Given the practical limitations on implementing many-
body gates, it is reasonable to ask whether having ac-
cess to elementary up-to- k-local equivariant gates suf-
fices for the QNN to express anypossible equivariant
unitary. This question was first studied in Ref. [17],
where the authors found that, as opposed to the well-
known result which states that any unitary can be de-
composed in one- and two-qubit gates, certain equivari-
antunitariescannotbedecomposedinequivariant k-local
gates. These result were then extended in Ref. [18–20] to
rotationally-invariant circuits, tensor product represen-
tations of groups acting on qudits, and tensor product
representations of Abelian symmetries.
In this work, we will focus on G=Sn, the symmetric
group of permutations, with its action on nqubits. This
group is of special interest as it is the relevant symmetry
group for a wide range of learning tasks related to prob-
lems defined on sets, graphs and grids, molecular sys-
tems, multipartite entanglement, and distributed quan-
tum sensing [15, 21–29]. Our results can be summarized
asfollows. First, weshowthatthat Sn-equivariantQNNs
with 2-body gates are enough to reach semi-universality
(and hence subspace controllability), but not universal-
ity. This means that the circuit can generate anyar-arXiv:2303.00728v2  [quant-ph]  31 May 20242
bitrary special unitary matrix in each of the subspaces
but that one has no control over all their relative phases.
We demonstrate that this small, albeit important, dif-
ference follows from the central projection theorem of
Ref. [30]. Next, we prove that if one wishes to attain sub-
space universality, then the QNN must contain n-body
Sn-equivariant gates (if nis even) or (n−1)-body gates
(ifnis odd). Hence, our theorems impose restrictions on
the set of unitaries that can be generated when combin-
ing symmetry and few-bodyness. We further argue that
our results are important for the field of quantum opti-
mal control [31] as they correct a previous result in the
literature [32].
II. RESULTS
A. Background: Dynamical Lie algebra and
dynamical Lie group for QNNs
Parametrized quantum circuits, or more generally,
QNNs, are one of the most widely used computational
paradigms to process information in near-term quantum
computers due to their high versatility [3, 33]. In what
follows, we will consider QNNs acting on systems of n
qubits (with associated d= 2n-dimensional Hilbert space
H) of the form
U(θ) =MY
m=1e−iθmHm, (1)
where HmareHermitianoperatorstakenfromagiven set
of generators G, and θ= (θ1, . . . θ M)∈RMare trainable
parameters. Here we note that the operators in Gcon-
stitute a veritable fingerprint for the QNN, as they allow
us to differentiate a given architecture from another.
Inthisworkweconsiderthecasewhere Gcontainsonly
up-to- k-body gates, i.e., gates acting non-trivially on at
most kqubits. Suchrestrictionisusuallyphysicallymoti-
vated and arises when working with gates that are native
to some specific hardware [34]. At this point, we find it
convenient to recall that in the absence of symmetries,
2-local gates are universal [35, 36]. That is, they suf-
fice to generate any d-dimensional unitary. However, the
same is generally not true when the operators in Gare lo-
cal, but also chosen to respect a certain symmetry group
G[17, 20]. Hence, given these constraints, it is critical
to quantify the QNN’s expressiveness, i.e., the breadth
of unitaries that U(θ)can generate when varying the pa-
rameters θ(see Fig. 1(b)). By inspecting Eq. (1) one can
see that two main factors come into play: the number of
parameters M, andthesetofgenerators G. Whileseveral
measures of expressiveness exist [5, 30, 37], here we will
focus on the so-called Dynamical Lie Algebra (DLA) [38],
which captures the potential expressiveness of the QNN
(under arbitrary depth, or number of parameters).
Given a set of Hermitian generators G, the DLA is the
subspace of operator space u(d)spanned by the repeated
Figure1.Summaryofourmainresults. a)Recentresults
in the field of GQML indicate that if the problem has a given
relevant symmetry G, then the gates in the QNN should be
G-equivariant [11]. In this work we consider the case where
G=Sn, the permutation group, and study how the expres-
siveness of the QNN changes when one imposes the additional
constraint of few-bodyness on the QNN’s gates. In the cir-
cuit, gates with the same color share a common parameter.
b) The effect of restricting the set of available elementary
gates in the QNN is to restrict its expressiveness, i.e., how
much of the unitary space it can cover by varying its param-
eters. Imposing G-equivariance can appropriately reduce the
QNN’s expressiveness to a region of unitaries respecting the
task’s symmetry. Imposing additional restrictions, such as
few-bodyness, further restricts its expressiveness.
nested commutators of the elements in G. That is,
g=⟨iG⟩Lie, (2)
where ⟨·⟩Liedenotes the Lie closure. Notably, the DLA
fully determines the ultimate expressiveness of the QNN,
as we have
U(θ)∈G=eg⊆U(d). (3)
Here, Gdenotes the dynamical Lie group, and is com-
posedofanypossibleunitarygeneratedbyaunitary U(θ)
as in Eq. (1) for any possible choice of θandM. When
G=SU(d)orG=U(d), the QNN is said to be control-
lable, oruniversal , as any unitary can be generated from
U(θ)(up to a global phase) [31, 39]. In what follows, we
will study how constraints in G(such as equivariance or
few-bodyness) alter the QNN’s ability to become univer-
sal. For this purpose, we recall the mathematical defi-
nition of G-equivariance [9, 11–13]. Given a symmetry3
Figure 2. Important Lie algebras and the irrep structure of the elements in the associated Lie groups . In
the main text we have defined three important subalgebras. a) The first is the maximal G-symmetric subalgebra uG(d). As
schematically shown, the associated Lie group contains the set of matrices where an arbitrary unitary can be prepared in each
isotypic component. b) Next, we define the special subalgebra of uG(d), which we denote as suG(d). Now the associated Lie
group contains all the matrices where an arbitrary unitary can be prepared in each isotypic component, under the additional
restriction that the determinant of the overall matrix must be equal to one. c) Finally, we define the centerless subalgebra of
uG(d), which we denote as suG
cless(d). In this case, the Lie group contains all matrices where an arbitrary special unitary can be
prepared in each isotypic component. Note that the difference between suG
cless(d)anduG(d)is that the former does not allow
us to control the relative phases between the isotypic components.
group G(which we henceforth assume to be compact),
we have the following definition.
Definition 1 (Equivariant operators) .An operator His
said to be G-equivariant if it commutes with a represen-
tation of a given compact group G. That is, if
[H, R (g)] = 0 , g∈G, (4)
where Ris a unitary representation of Gon the d-
dimensional Hilbert space H.
Note that if all the generators in Gare equivariant, the
QNN can be readily shown to be equivariant itself [9, 11].
We also highlight the fact that Definition 1 implies
H∈comm (G), (5)
where comm (G)denotes the commutant algebra of the
(representation Rof the) group G, i.e., the associative
matrix algebra of linear operators that commute with
every element in G:
comm (G) ={A∈ B(H)|[A, R(g)] = 0 ,∀g∈G}.(6)
Here,B(H)denotesthespaceofboundedlinearoperators
inH.
Next, it is fundamental to recall that the representa-
tionRadmits an isotypic decomposition
R(g∈G)∼=LM
λ=1rλ(g)⊗11mλ, (7)
where rλis adλ= dim( rλ)-dimensional irreducible rep-
resentation (irrep) of G, and11mλis an identity of dimen-
sionmλ. Hence, mλdenotes the multiplicity associatedto each irrep. In this case, the Hilbert space Hcan be
expressed as
H=M
λ,νHν
λ, (8)
where Hν
λis amλ-dimensional space, and ν= 1,···, dλ.
Moreover, using Pν
λto denote the projector onto the sub-
spaceHν
λ, we can focus on the part of the DLA that acts
non-trivially on each Hν
λ, given by
gν
λ={Pν
λiH , iH ∈g}. (9)
Note that by definition gν
λ=gν′
λ, which allows us to
simply use the notation gλ:=gν
λ.
The previous motivates us to define three important
Lie subalgebras of u(d). First, we define the maximal
G-symmetric subalgebra uG(d) =comm (G)∩u(d)as
uG(d) =Q LM
λ=1u(mλ)!
=LM
λ=111dλ⊗u(mλ),(10)
where Qis a representation defined by the right-hand-
side of Eq. (10). We then define the maximal special
subalgebra suG(d) =comm (G)∩su(d), given by
suG(d) =s"LM
λ=111dλ⊗u(mλ)#
, (11)
where s[·]denotes keeping the operators with vanishing
trace. Finally, we also define the maximal centerless G-
symmetric subalgebra
suG
cless(d) =Q LM
λ=1su(mλ)!
=LM
λ=111dλ⊗su(mλ).(12)4
In Fig. 2 we show how the previous three algebras lead
to different unitaries in their associated Lie groups.
With the previous algebras in mind, we can introduce
three key definitions that will allow us to study control-
lability and degrees of universality when there are sym-
metries in play.
Definition 2. The QNN, or its associated DLA, is said
to be:
•Subspace controllable, if for all λ,
su(mλ)⊆gλ⊆u(mλ). (13)
•Semi-universal, if
suG
cless(d)⊆g⊆uG(d). (14)
•Universal, or completely controllable, if
suG(d)⊆g⊆uG(d). (15)
It is clear that complete controllability [31] implies
semi-universality [20], which in turn implies subspace
controllability [40]. The key difference between the uni-
taries arising from a DLA which is semi-universal but not
universal is that one cannot control the relativephases
between the unitaries acting within each isotypic com-
ponent (see Fig. 2). On the other hand, a QNN that is
subspace controllable can generate arbitrary unitaries in
each subspace, but not necessarily independently as in
the semi-universal case. For instance, if H=Hλ1⊗ H λ2
with dim(Hλ1) = dim( Hλ2) =d/2, then a QNN produc-
ing unitaries of the form V⊕Vwith V∈esu(d/2)is sub-
space controllable but not semi-universal. As we will see
below, distinguishing between these three cases will be
extremely important to better understand the expressive
capacity of QNNs with equivariance and few-bodyness
constraints.
To finish this section we recall a fundamental concept:
Given a Lie algebra h⊆u(d), its center z(h)is composed
of all the elements in hthat commute with every element
inh, i.e.,
z(h) ={iH∈h|[H, H′] = 0 ,∀iH′∈h}.(16)
In particular, z(uG(d)) = QLL
λ=1u(1)
and it follows
that every element iE∈z(uG(d))has the form (see
Ref. [41], Theorem 1.7.8)
iE=LM
λ=1ieλ11dλ⊗11mλ, (17)
where eλ∈R. Moreover, it also follows that
dim 
z(uG(d))
=L , (18)
i.e., there are as many elements in the center as irreps in
Eq. (10). Finally, let us note that suG
cless(d)is the max-
imal G-symmetric centerless subalgebra of uG(d). That
is,
uG(d) =suG
cless(d)∪z(uG(d)). (19)B. Main results
In what follows we will consider Gto be the symmetric
group SnandRthequbit-permutingrepresentationof Sn
onnqubits,
R(π∈Sn)nO
i=1|ψi⟩=nO
i=1|ψπ−1(i)⟩.(20)
Given a set of equivariant k-local generators, it is natural
to ask:can we achieve subspace controllability, or even
(semi-)universality? In this section we characterize the
expressiveness of permutation-equivariant few-bodyness-
constrained ansatze.
First, let us investigate the case of 1-body symmetric
operators. For instance, consider the (single element) set
G1=

nX
j=1Xj

, (21)
where we use Xj, Yj, Zjto denote the corresponding
Pauli operator acting on the jthqubit. By inspection,Pn
j=1XjisSn-equivariant, as it is invariant under any
qubit permutation. Moreover, we can also see that the
corresponding DLA g1is a representation of u(1). Next,
consider the set
G′
1=

nX
j=1Xj,nX
j=1Yj

, (22)
for which the DLA g′
1is a representation of su(2). These
two cases show that, unsurprisingly, one cannot obtain
subspace controllability (let alone semi-universality or
universality) using 1-body symmetric operators.
Let us now consider up-to- 2-body Sn-equivariant gen-
erators. In particular, consider the set
G2=

nX
j=1Xj,nX
j=1Yj,nX
j1<j2Zj1Zj2

.(23)
The expressiveness of G2is captured by the following the-
orem.
Theorem 1. Consider the set G2ofSn-equivariant gen-
erators in Eq. (23). The associated DLA is
g2=Q LM
λ=1su(mλ)⊕u(1)!
(24)
=suSn
cless(d)⊞Q(u(1)), (25)
where ⊞denotes the Minkowski sum1and where
Q(u(1))⊂z(uSn(d)).
1Given two sets AandB, their Minkowski sum is defined as A⊞
B={a+b|a∈A, b∈B}.5
Theorem 1 has several important implications. First,
it shows that adding a single Sn-equivariant 2-body op-
erator to G′
1significantly increases its expressiveness, as
it leads to a DLA g2that contains suSn
cless(d)plus the span
of an element in the center z(uSn(d)).
The second implication of Theorem 1 is that the sys-
tem is semi-universal (and thus subspace controllable)
according to Definition 2. However, we note that the
previous result also implies that g2fails to be universal
(see Definition 2). This is in contrast to the claims in
Ref. [32] which state that g2is universal. To clarify this
discrepancy, we show in the Supplemental Material that
the proof of universality in Ref. [32] contains an error.
While we leave the full proof of Theorem 1 for the Sup-
plementalMaterial, herewewillexplaintheintuitionand
mainstepsbehindit. Inparticular, wewillconstructively
show that g2contains the centerless subalgebra suSn
cless(d)
plus the span of a single element in the center z 
uSn(d)
.
The main tool behind deriving the latter result is the
central projections condition of [30].
Let us introduce some useful notation. First, we will
define the Sn-symmetrized Pauli strings.
Definition 3 (Symmetrized Pauli strings) .Define
P(kx,ky,kz)to be the operator corresponding to the sum
of all distinct Pauli strings that have kxXsymbols, ky
Ysymbols, and kzZsymbols.
With this definition we can rewrite the set of gen-
erators in Eq. (23) as G2={P(1,0,0), P(0,1,0), P(0,0,2)}.
Clearly, the set of all P(kx,ky,kz)spans the maximal Sn-
equivariant operator algebra. That is,
uSn(d) = spanR{iP(kx,ky,kz)|kx+ky+kz≤n}.(26)
Moreover, if we leave outside P(0,0,0)=11, we get the
specialmaximal subalgebra
suSn(d) = spanR{iP(kx,ky,kz)|0< kx+ky+kz≤n}.(27)
Next, let us define the following set of operators:
Definition 4. For each integer 0≤µ≤ ⌊n/2⌋, define:
Cµ=X
a+b+c=µ(2a)!(2b)!(2c)!
a!b!c!P(2a,2b,2c).(28)
Each Cµconsists exclusively of P(kx,ky,kz)terms where
kx, ky, kzare all even and add to 2µ. Thus, Cµis a2µ-
body operator. For example, consider the case
C2=12(P(4,0,0)+P(0,4,0)+P(0,0,4))
+ 4(P(2,2,0)+P(2,0,2)+P(0,2,2)).
The significance of the Cµoperators is explained by the
following proposition, proved in the Supplemental Mate-
rial. (For additional properties of the Cµoperators, we
also refer the reader to Ref. [18], where they are referred
to as Clwith l= 2µ.)Proposition 1 (Center of the Sn-equivariant Lie alge-
bra).The center of the Sn-equivariant Lie algebra uSn(d)
is spanned by the Cµoperators:
z(uSn(d)) = spanRn
iCµ|0≤µ≤jn
2ko
.(29)
We can see from Eqs. (26) and (28) that the maximal
Sn-equivariant centerless subalgebra suSn
cless(d)is given by
all linear combinations of the form
iX
0≤kx+ky+kz≤nc(kx,ky,kz)P(kx,ky,kz),(30)
with c(kx,ky,kz)∈R, such that
X
a+b+c=µc(2a,2b,2c)
a!b!c!= 0, (31)
for each integer 0≤µ≤ ⌊n/2⌋.
Aspreviouslymentioned(andasseeninEq.(19)),fora
DLA to be universal it needs to generate all the elements
insuSn
cless(d)plus all the traceless elements in the center
z(uSn(d)). Notably, onecanprovethefollowingnecessary
condition for a DLA to be able to generate elements in
the center:
Theorem 2 (Central Projections. Result 1 in [30], Re-
stated).Letgbe the DLA obtained from a set of gener-
atorsG. If[H, C ] = 0andTr[HC] = 0for every Hin
G, then Tr[MC] = 0for every Ming. In particular, for
gto contain a nonzero central element C, it is necessary
thatTr[HC]̸= 0for some HinG.
Theorem 2 indicates that an element in the center
cannot be in the DLA if all of the generators have
zero projection onto it (in the sense that they are or-
thogonal with respect to the Frobenius inner product
⟨A, B⟩= Tr[ A†B]). Now we can use the following Theo-
rem, proved in the Supplemental Material.
Theorem 3. Consider the set G2ofSn-equivariant gen-
erators in Eq. (23). Then, one has that
Tr[HCµ] = 0 , (32)
for all H∈ G2and for all Cµwith 0≤µ≤ ⌊n/2⌋except
µ= 1.
Theorem 3 shows that the set of generators have no
projection onto all center elements Cµwith 0≤µ≤
⌊n/2⌋except for that with µ= 1. Therefore, according
to Theorem 2, no Cµwith 0≤µ≤ ⌊n/2⌋(except for
that with µ= 1) can be generated within the DLA. It
is important to remark that the previous does not imply
thatC1actually appears in the DLA, as Theorem 2 only
provides a necessary condition. However, one can prove
by direct construction that g2indeed contains C1, as well
as any operator in suSn
cless(d). That is, one can prove that
the following theorem holds.6
Theorem 4. Consider the set G2ofSn-equivariant gen-
erators in Eq. (23). The associated DLA g2contains all
linear combinations of the form
iX
0≤kx+ky+kz≤nc(kx,ky,kz)P(kx,ky,kz),(33)
for a collection of real coefficients c(kx,ky,kz)that satisfy
X
a+b+c=µc(2a,2b,2c)
a!b!c!= 0 (34)
for each integer 0≤µ≤ ⌊n/2⌋except µ= 1.
Here we note that Theorem 4 is simply a reformulation
of Theorem 1 which allows us to directly identify g2as
containing all elements in suSn
cless(d)plus the span of the
center element Q(u(1)) = spanR{iC1}. In addition, we
can infer from Theorem 4 that the dimension of g2is
dim(g2) =n+ 3
3
−jn
2k
. (35)
Our previous results proved that sets of generators
with Sn-equivariant 1-body and 2-body operators are not
sufficient to generate suSn(d). A natural question then
is whether this can be fixed by including in the set of
k-body Sn-equivariant generators (for k⩾3). Defining
the set of generators
Gk={P(1,0,0), P(0,1,0)} ∪ {P(0,0,κ)}k
κ=2,(36)
we find that the following result also holds (see the Sup-
plementary Information for a proof).
Theorem 5. Consider the set GkofSn-equivariant gen-
erators in Eq. (36). Then, the associated DLA gkis
gk=Q
LM
λ=1su(mλ)⊕u(1)⊕ ··· ⊕ u(1)| {z }
⌊k/2⌋
(37)
=suSn
cless(d)⊞Q
u(1)⊕ ··· ⊕ u(1)| {z }
⌊k/2⌋
,(38)
where Q(u(1)⊕ ··· ⊕ u(1)) = spanR{iC1,···, iC⌊k/2⌋}is
a⌊k/2⌋-dimensional subalgebra of z(uSn(d)).
Theorem 5 shows that one element in the center is gen-
erated in the DLA every time one adds a generator with
evenbodyness. Crucially, this result is in accordance
with the central projections condition of Theorem 2. In
particular, the central projections condition implies that
one cannot generate suSn(d)unless one has, for every µ
from 0to⌊n/2⌋, some generator with nonzero projection
onto Cµ. However, it is easy to see that the following
theorem holds.
Figure 3. Sn-equivariance, few-bodyness, and DLA.
Here we review the main results of our work. In particu-
lar, we consider the case where the single-body operators in
GareP(1,0,0)andP(0,1,0)and where the k-body operators are
of the form P(0,0,k).
Theorem 6. Consider the set GkofSn-equivariant gen-
erators in Eq. (36). Then, one has that
Tr[HCµ] = 0 , (39)
for all H∈ Gkand for all Cµwithµ= 0and⌊k
2⌋< µ≤
⌊n/2⌋.
Theorem 6 shows that the operators in Gkhave no
projection onto Cµwith µ >⌊k
2⌋(orµ= 0). Thus, one
finds that the following corollary holds.
Corollary 1. Any set consisting of at-most- k-body Sn-
equivariant operators will always be insufficient to gener-
atesuSn(d)unless k=nforneven or k⩾n−1forn
odd.
It is worth noting that Corollary 1 can also follow from
the no-go theorem of Ref. [17], along with the fact that
the center z 
uSn(d)
contains n-body operators for n
even or (n−1)-body operators for nodd.
Theorem 5 and Corollary 1 shows that in order for a
QNN with Sn-equivariant k-body gates to be universal,
oneneedstoincludeinthesetofgeneratorsup-to- n-body
gates (for neven) or up-to- (n−1)-body gates (for nodd).
Hence, as schematically depicted in Fig. 3, this corollary
imposes a fundamental limitation of the universality of
QNNs with Sn-equivariant k-local gates.
III. DISCUSSION
The recent field of GQML has paved the way for
studying how adding symmetry information into quan-
tum learning models changes their performance in terms7
of expressiveness, trainability, and generalization. Re-
cent results has shown that GQML can indeed pro-
vide a heuristic advantage for several machine learning
tasks[42–49]overtheirsymmetryagnosticcounter-parts.
In particular, it was shown that the special case of Sn-
equivariantQNNsexhibittheholygrailofdesirableprop-
erties [12]: absence of barren plateaus, generalization
from few training points, and the capacity to be effi-
ciently overparametrized. Still, despite the great promise
of GQML there are still many open questions regarding
its full capabilities. As an example, the seminal works of
Refs. [17–20], have started to analyze restrictions to uni-
versality and their connections to the type of gates used.
Moreover, it is has been documented that quantum noise
can be quite detrimental for equivariant models [50–52]
and that reducing a quantum learning model’s expres-
sive power too much can potentially make it classically
simulable [15, 53]. As such, we expect that the study of
symmetry-enforced models will be a thriving area in the
future.
In this context, we have shown that quantum circuits
with elementary k-body Sn-equivariant gates are semi-
universal and subspace controllable (see Definition 2),
but not universal. While this result might seem negative
(as we cannot reach universality), we are inclined to note
that reaching semi-universality is in itself a tall order.
The fact that Sn-equivariant QNNs with only 2-body
gates have enough expressiveness to be semi-universal
is a notable result in itself. Crucially, it is not obvious
that such high degree of universality will generally hold.
Moreover, our results indicate that in order to reach uni-
versality, one must include up-to- n-body interactions if n
is even, and up-to- (n−1)-body interactions if nis odd.
These results have several implications. First, they high-
light the existence of a fundamental limitation to achiev-
ing universality from local permutation-invariant gates.
Second,theycorrectaresultintheliteraturewhichstates
that one- and two-body Sn-equivariant gates are indeed
enough for universality. Finally, they portray the power
of the central projections condition of Ref. [30].
Here we also note that at a higher level, the central
projections condition offers a significant obstruction to
the possibility of using only local or few-body gates to
achieve universality of gates that respect some symmetry
group (see also [18]). Of course, symmetries are neces-
sary for this phenomenon to present itself; for instance,
as illustrated by a classical result in quantum computa-
tion [35], the collection of all 1-body and 2-body Pauli
strings, which do not share any symmetry, is indeed suf-
ficient to generate all Pauli strings.
It is also worth highlighting the fact that our results
are intrinsically connected to those in Ref. [18] through
the Schur-Weyl duality. Namely, while we study circuits
with Sn-equivariance, the work in [18] studies SU(2)-
equivariant circuits. Since the qubit permuting repre-
sentation of Snand the tensor product representation
ofSU(2)mutually centralize each other, their centers
match. Hence, the conditions imposed by the centralprojections theorem to the circuit’s generators bodyness
areexactlythesamefor SU(2)-orSn-equivariantcircuits.
That is, Corollary 1 in our work is precisely, and neces-
sarily, the same as the direction of Theorem 1 in [18] that
establishesconstraintsfromthecentralprojectionscondi-
tion. This realization then allows us to identify our work
as being dual to that in Ref. [18], where each work ex-
plores how the central projections conditions affect gen-
erators on each “side” of the Schur-Weyl duality. Finally,
this connection shows that results obtained for one side
of a dual reductive pair will naturally be relevant for the
other side.
As a final note, both our work and those in Refs. [17,
18] focus primarily on obstructions to universality com-
ing from the central projections condition. However, the
characterization of Lie algebras presented in Ref. [30] has
three components: linear symmetries, quadratic symme-
tries, and central projections, with central projections
generally having the smallest impact in terms of reducing
the dimension of the Lie algebra. As an example, the Lie
algebra g2studied in this paper has a relatively small di-
mensiondeficitof ⌊n/2⌋comparedtothefull Sn-invariant
algebra uSn(d). The question of whether few-bodyness
(or locality) of symmetry-equivariant qubit gates could
enforce extra linear or quadratic symmetries has only be-
gun to be studied, for instance in Refs. [19, 20], and such
possibilities would cause the DLA dimension deficiency
to be much larger. We thus believe that a more general
investigation into the failure modes for gate sets with ad-
ditional constraints (beyond symmetry-equivariance) to
generate the full symmetry-invariant algebra will be a
fruitful area of study.
Note added: After completion of this manuscript, it
was brought to our attention that Proposition 1 of our
SupplementalMaterialisalsopresentedinaslightlymore
general form as Proposition 1 in [18].
ACKNOWLEDGEMENTS
We would like to thank Robert Zeier for useful
discussions regarding his result on linear symmetries,
quadratic symmetries, and central projections; as well
as Iman Marvian for useful discussions regarding Schur-
Weyl duality and dual reductive pairs. We also thank
Domenico D’Alessandro for useful comments regarding
our manuscript. SK was initially supported by the U.S.
DOE through a quantum computing program sponsored
by the Los Alamos National Laboratory (LANL) Infor-
mation Science & Technology Institute. ML was sup-
ported by the Center for Nonlinear Studies at LANL.
ML and MC acknowledge support by the Laboratory
Directed Research and Development (LDRD) program
of LANL under project numbers 20230527ECR and
20230049DR.8
DATA AVAILABILITY STATEMENT
No new data were created or analysed in this study.
[1] J. Biamonte, P. Wittek, N. Pancotti, P. Rebentrost,
N. Wiebe, and S. Lloyd, Quantum machine learning, Na-
ture549, 195 (2017).
[2] M. Schuld, I. Sinayskiy, and F. Petruccione, An intro-
duction to quantum machine learning, Contemporary
Physics56, 172 (2015).
[3] M. Cerezo, G. Verdon, H.-Y. Huang, L. Cincio, and P. J.
Coles, Challenges and opportunities in quantum machine
learning, Nature Computational Science 10.1038/s43588-
022-00311-3 (2022).
[4] M. Cerezo, A. Sone, T. Volkoff, L. Cincio, and P. J.
Coles, Cost function dependent barren plateaus in shal-
low parametrized quantum circuits, Nature Communica-
tions12, 1 (2021).
[5] Z. Holmes, K. Sharma, M. Cerezo, and P. J. Coles, Con-
necting ansatz expressibility to gradient magnitudes and
barren plateaus, PRX Quantum 3, 010313 (2022).
[6] J. Kübler, S. Buchholz, and B. Schölkopf, The inductive
bias of quantum kernels, Advances in Neural Information
Processing Systems 34, 12661 (2021).
[7] M. Larocca, P. Czarnik, K. Sharma, G. Muraleedharan,
P. J. Coles, and M. Cerezo, Diagnosing Barren Plateaus
with Tools from Quantum Optimal Control, Quantum 6,
824 (2022).
[8] M. Larocca, F. Sauvage, F. M. Sbahi, G. Verdon, P. J.
Coles, and M. Cerezo, Group-invariant quantum machine
learning, PRX Quantum 3, 030341 (2022).
[9] J. J. Meyer, M. Mularski, E. Gil-Fuster, A. A. Mele,
F. Arzani, A. Wilms, and J. Eisert, Exploiting symmetry
in variational quantum machine learning, PRX Quantum
4, 010328 (2023).
[10] A. Skolik, M. Cattelan, S. Yarkoni, T. Bäck, and
V. Dunjko, Equivariant quantum circuits for learning on
weighted graphs, npj Quantum Information 9, 47 (2023).
[11] Q. T. Nguyen, L. Schatzki, P. Braccia, M. Ragone, P. J.
Coles, F. Sauvage, M. Larocca, and M. Cerezo, Theory
forequivariantquantumneuralnetworks,PRXQuantum
5, 020328 (2024).
[12] L. Schatzki, M. Larocca, Q. T. Nguyen, F. Sauvage,
and M. Cerezo, Theoretical guarantees for permutation-
equivariant quantum neural networks, npj Quantum In-
formation 10, 12 (2024).
[13] M. Ragone, Q. T. Nguyen, L. Schatzki, P. Braccia,
M. Larocca, F. Sauvage, P. J. Coles, and M. Cerezo,
Representation theory for geometric quantum machine
learning, arXiv preprint arXiv:2210.07980 (2022).
[14] F. Sauvage, M. Larocca, P. J. Coles, and M. Cerezo,
Building spatial symmetries into parameterized quantum
circuits for faster training, Quantum Science and Tech-
nology9, 015029 (2024).
[15] E. R. Anschuetz, A. Bauer, B. T. Kiani, and S. Lloyd,
Efficient classical algorithms for simulating symmetric
quantum systems, Quantum 7, 1189 (2023).
[16] M. M. Bronstein, J. Bruna, T. Cohen, and P. Veličković,
Geometric deep learning: Grids, groups, graphs,
geodesics, and gauges, arXiv preprint arXiv:2104.13478(2021).
[17] I. Marvian, Restrictions on realizable unitary operations
imposed by symmetry and locality, Nature Physics 18,
283 (2022).
[18] I. Marvian, H. Liu, and A. Hulse, Rotationally invariant
circuits: Universality with the exchange interaction and
two ancilla qubits, Physical Review Letters 132, 130201
(2024).
[19] I. Marvian, H. Liu, and A. Hulse, Qudit circuits with su
(d) symmetry: Locality imposes additional conservation
laws, arXiv preprint arXiv:2105.12877 (2021).
[20] I. Marvian, (non-)universality in symmetric quantum
circuits: Why abelian symmetries are special, arXiv
preprint arXiv:2302.12466 (2023).
[21] H. Maron, O. Litany, G. Chechik, and E. Fetaya, On
learning sets of symmetric elements, in Proceedings of
the 37th International Conference on Machine Learn-
ing,ProceedingsofMachineLearningResearch, Vol.119,
editedbyH.D.IIIandA.Singh(PMLR,2020)pp.6734–
6744.
[22] H. Maron, H. Ben-Hamu, N. Shamir, and Y. Lipman, In-
variant and equivariant graph networks, in International
Conference on Learning Representations (2019).
[23] N. Keriven and G. Peyré, Universal invariant and equiv-
ariant graph neural networks, in Advances in Neural In-
formation Processing Systems , Vol. 32, edited by H. Wal-
lach, H. Larochelle, A. Beygelzimer, F. d 'Alché-Buc,
E. Fox, and R. Garnett (Curran Associates, Inc., 2019).
[24] H. Maron, H. Ben-Hamu, H. Serviansky, and
Y. Lipman, Provably powerful graph networks, Ad-
vances in neural information processing systems 32,
10.5555/3454287.3454480 (2019).
[25] G. Verdon, T. McCourt, E. Luzhnica, V. Singh, S. Le-
ichenauer, and J. Hidary, Quantum graph neural net-
works, arXiv preprint arXiv:1909.12264 (2019).
[26] I. Cong, S. Choi, and M. D. Lukin, Quantum convolu-
tional neural networks, Nature Physics 15, 1273 (2019).
[27] J.L.Beckey, N.Gigena, P.J.Coles,andM.Cerezo,Com-
putableandoperationallymeaningfulmultipartiteentan-
glement measures, Phys. Rev. Lett. 127, 140501 (2021).
[28] X. Guo, C. R. Breum, J. Borregaard, S. Izumi, M. V.
Larsen, T. Gehring, M. Christandl, J. S. Neergaard-
Nielsen, and U. L. Andersen, Distributed quantum sens-
ing in a continuous-variable entangled network, Nature
Physics16, 281 (2020).
[29] C. Huerta Alderete, M. H. Gordon, F. Sauvage, A. Sone,
A. T. Sornborger, P. J. Coles, and M. Cerezo, Inference-
based quantum sensing, Phys. Rev. Lett. 129, 190501
(2022).
[30] Z. Zimborás, R. Zeier, T. Schulte-Herbrüggen, and
D. Burgarth, Symmetry criteria for quantum simulability
of effective interactions, Physical Review A 92, 042309
(2015).
[31] D.d’Alessandro, Introduction to quantum control and dy-
namics(CRC press, 2007).9
[32] F.AlbertiniandD.D’Alessandro,Controllabilityofsym-
metric spin networks, Journal of Mathematical Physics
59, 052102 (2018).
[33] M. Cerezo, A. Arrasmith, R. Babbush, S. C. Benjamin,
S. Endo, K. Fujii, J. R. McClean, K. Mitarai, X. Yuan,
L. Cincio, and P. J. Coles, Variational quantum algo-
rithms, Nature Reviews Physics 3, 625–644 (2021).
[34] A. Kandala, A. Mezzacapo, K. Temme, M. Takita,
M. Brink, J. M. Chow, and J. M. Gambetta, Hardware-
efficient variational quantum eigensolver for small
molecules and quantum magnets, Nature 549, 242
(2017).
[35] D. P. DiVincenzo, Two-bit gates are universal for quan-
tum computation, Physical Review A 51, 1015 (1995).
[36] S. Lloyd, Almost any quantum logic gate is universal,
Physical Review Letters 75, 346 (1995).
[37] S. Sim, P. D. Johnson, and A. Aspuru-Guzik, Express-
ibility and entangling capability of parameterized quan-
tumcircuitsforhybridquantum-classicalalgorithms,Ad-
vanced Quantum Technologies 2, 1900070 (2019).
[38] R. Zeier and T. Schulte-Herbrüggen, Symmetry princi-
ples in quantum systems theory, Journal of mathematical
physics52, 113510 (2011).
[39] S. G. Schirmer, I. C. Pullen, and A. I. Solomon, Control-
lability of quantum systems, IFAC Proceedings Volumes
36, 281 (2003).
[40] X. Wang, D. Burgarth, and S. Schirmer, Subspace con-
trollability of spin-1 2 chains with symmetries, Physical
Review A 94, 052319 (2016).
[41] B. Sagan, The symmetric group: representations, com-
binatorial algorithms, and symmetric functions , Vol. 203
(Springer Science & Business Media, 2001).
[42] M. T. West, M. Sevior, and M. Usman, Reflection equiv-
ariant quantum neural networks for enhanced image clas-
sification, Machine Learning: Science and Technology 4,
035027 (2023).
[43] R. D. East, G. Alonso-Linaje, and C.-Y. Park, All
you need is spin: Su (2) equivariant variational quan-
tum circuits based on spin networks, arXiv preprint
arXiv:2309.07250 (2023).
[44] S. Y. Chang, M. Grossi, B. Le Saux, and S. Vallecorsa,
Approximately equivariant quantum neural network for
p4m group symmetries in images, in 2023 IEEE Inter-
national Conference on Quantum Computing and Engi-
neering (QCE) , Vol. 01 (2023) pp. 229–235.
[45] H. Zheng, C. Kang, G. S. Ravi, H. Wang, K. Setia, F. T.
Chong, and J. Liu, Sncqa: A hardware-efficient equivari-
ant quantum convolutional circuit architecture, in 2023IEEE International Conference on Quantum Computing
and Engineering (QCE) , Vol. 1 (IEEE, 2023) pp. 236–
245.
[46] D. Wierichs, R. D. East, M. Larocca, M. Cerezo, and
N.Killoran,Symmetricderivativesofparametrizedquan-
tum circuits, arXiv preprint arXiv:2312.06752 (2023).
[47] I. N. M. Le, O. Kiss, J. Schuhmacher, I. Tavernelli,
and F. Tacchino, Symmetry-invariant quantum machine
learning force fields, arXiv preprint arXiv:2311.11362
(2023).
[48] Z. Dong, M. Comajoan Cara, G. R. Dahale, R. T.
Forestano, S. Gleyzer, D. Justice, K. Kong, T. Magorsch,
K. T. Matchev, K. Matcheva, et al., Z2×z2 equivariant
quantum neural networks: Benchmarking against classi-
cal neural networks, Axioms 13, 188 (2024).
[49] R. T. Forestano, M. Comajoan Cara, G. R. Dahale,
Z. Dong, S. Gleyzer, D. Justice, K. Kong, T. Magorsch,
K. T. Matchev, K. Matcheva, et al., A comparison be-
tween invariant and equivariant classical and quantum
graph neural networks, Axioms 13, 160 (2024).
[50] C. Tüysüz, S. Y. Chang, M. Demidik, K. Jansen, S. Val-
lecorsa, and M. Grossi, Symmetry breaking in geometric
quantum machine learning in the presence of noise, arXiv
preprint arXiv:2401.10293 (2024).
[51] D. García-Martín, M. Larocca, and M. Cerezo, Effects
of noise on the overparametrization of quantum neural
networks, Phys. Rev. Res. 6, 013295 (2024).
[52] S. Wang, E. Fontana, M. Cerezo, K. Sharma, A. Sone,
L. Cincio, and P. J. Coles, Noise-induced barren plateaus
in variational quantum algorithms, Nature Communica-
tions12, 1 (2021).
[53] M. Cerezo, M. Larocca, D. García-Martín, N. L. Diaz,
P. Braccia, E. Fontana, M. S. Rudolph, P. Bermejo,
A. Ijaz, S. Thanasilp, et al., Does provable absence of
barren plateaus imply classical simulability? or, why we
need to rethink variational quantum computing, arXiv
preprint arXiv:2312.09121 (2023).
[54] R. Goodman and N. R. Wallach, Symmetry, representa-
tions, and invariants , Vol. 255 (Springer, 2009).
[55] J.-P. Serre et al.,Linear representations of finite groups ,
Vol. 42 (Springer, 1977).
[56] H. Zheng, Z. Li, J. Liu, S. Strelchuk, and R. Kon-
dor, Speeding up learning quantum states through group
equivariant convolutional quantum ansätze, PRX Quan-
tum4, 020327 (2023).
[57] R. Goodman and N. R. Wallach, Representations and
invariants of the classical groups (Cambridge University
Press, 2000).10
SUPPLEMENTAL MATERIAL FOR “ ON THE UNIVERSALITY OF Sn-EQUIVARIANT k-BODY
GATES”
Here we present the proofs and additional details for the results in the main text. First, in Supplementary Note A
we present preliminaries and review the notation used throughout this Supplementary Information. Then, in Supple-
mentary Note B we provide a proof for Proposition 1. In particular, we note that we will prove Theorem 1 by proving
first Theorems 3 and 4 (see Supplementary Notes C and D). Supplementary note E contains the proof of Theorem 5,
and Supplementary Note F a proof of Theorem 6. Finally, Supplementary Note G explains the bug in the proof of
Ref. [32] which claims that g2is universal.
Supplementary Note A: Review of Notation
Let us review the notation we use throughout this paper. First, we define the Pauli matrices:
I=
1 0
0 1
X=
0 1
1 0
Y=
0−i
i0
Z=
1 0
0−1
. (A1)
Next, for Hermitian operators H1, H2, H3, we will use the notation
[H1, H2]∝H3, (A2)
to signify the equation
[iH1, iH2] =−2iH3. (A3)
We will use this notation to avoid writing factors of 2iwhen taking the commutators of Pauli operators. For example,
we can write [X, Y ]∝Zin place of [iX, iY ] =−2iZ.
Furthermore, we will typically abuse notation and say that H∈gfor a Hermitian operator Hand a Lie algebra g,
when what we really mean is iH∈g, since we always deal with Lie algebras of skew-Hermitian operators unless we
explicitly state otherwise.
Now we recall the definition of Sn-symmetrized Pauli strings.
Definition 5. Define P(kx,ky,kz)to denote the sum of all distinct Pauli strings that have kxXsymbols, kyYsymbols,
andkzZsymbols. Furthermore, define the levelof this operator to be the total number of non- Isymbols, i.e.
kx+ky+kz.
In Sup. Fig. 1 we present a useful visual representation for these operators in terms of barycentric coordinates .
Here, we define the barycentric coordinates as kx,ky,kz, and the leftover as ki=n−(kx+ky+kz). This means
that the operators will be assembled into a regular tetrahedron, where for each integer 0≤k≤n, the operators at
level kform an equilateral triangle at elevation k(see the tetrahedral stack of spheres in Sup. Fig. 1(b)).
Finally, we recall that the P(kx,ky,kz)operators can be used to define some of the relevant algebras we care for:
uSn(d) = spanR{iP(kx,ky,kz)|kx+ky+kz≤n},
suSn(d) = spanR{iP(kx,ky,kz)|0< kx+ky+kz≤n}.(A4)
Using the visual aide based on barycentric coordinates in Sup. Fig. 1, we see that the dimension of uSn(d)is equal
to the (n+ 1)thtetrahedral number Te n+1= n+3
3
. There are many ways to prove the equality with the binomial
coefficient, but one of the most intuitive ones is to use the “stars and bars” combinatorial argument. In particular,
dim 
uSn(d)
equals the number of ordered triples (kx, ky, kz)of non-negative integers such that kx+ky+kz≤n.
This equals the number of ways to line up n+ 3objects and choose 3of them to be the “boundaries”, such that
kxequals the number of elements to the left of the first boundary, kyequals the number of elements between the
first and second boundaries, kzequals the number of elements between the second and third boundaries (the leftover
n−(kx+ky+kz)equals the number of elements to the right of the third boundary).11
Supplementary Figure 1. Barycentric coordinates. a) Here we show the barycentric coordinates for n= 3, where the levels
0,1,2and3shown separately for ease of visualization. b) One can imagine these levels stacked on top of each other to form a
regular tetrahedron.
Supplementary Note B: Proof of Proposition 1
Here we provide a proof for Proposition 1, which we recall for convenience.
Proposition 1. The center of the algebra uSn(d)is the span of the Cµoperators:
z(uSn(d)) = spanRn
iCµ|0≤µ≤jn
2ko
. (B1)
Here we also recall the definition of the Cµoperators. For each integer 0≤µ≤ ⌊n/2⌋, we have
Cµ=X
a+b+c=µ(2a)!(2b)!(2c)!
a!b!c!P(2a,2b,2c). (B2)
Each Cµconsists exclusively of P(kx,ky,kz)terms where kx, ky, kzare all even and add to 2µ(which also implies that
each Cµlives entirely on level 2µ, see Sup. Fig. 1(a)).
A standard result in representation theory known as the Schur-Weyl duality [54] states, in the context of a n-qudit
quantum system, that the representation RofSnthat permutes the qubits and the tensor product representation
TofU(2)that acts locally and identically on each qubit, defined by T(U∈U(2)) = U⊗n, mutually centralize each
other. That is,
uU(2)(d) = spanR{iR(π)|π∈Sn}=Sn (B3)
uSn(d) = spanR{i(T(U) +T(U)†)|U∈U(2)}=U(2), (B4)
where we use SnandU(2)to denote the Lie algebras of qubit permutations and of U(2)tensor-product rotations,
respectively. Crucially, the previous equations highlight the fact that the U(2)-symmetric part of u(d)is given by
qubit permutations and that the Sn-symmetric part of u(d)is given by U(2)rotations.
Instead of directly proving Proposition 1 we will prove the following equivalent statement.
Proposition 2. The center of the algebra uU(2)(d)is the span of the Cµoperators:
z(uU(2)(d)) = spanRn
iCµ|0≤µ≤jn
2ko
. (B5)
Crucially, Proposition 2 and Proposition 1 are equivalent since being mutual centralizers, their centers must neces-
sarily coincide: z(uSn(d)) =z(uU(2)(d)). Hence, proving Proposition 2 is the same as proving Proposition 1.
We begin by citing a general characterization of the center of any algebra defined by a finite group representation:
Lemma 1. Consider a (Hermitian unitary) representation Sof a finite group G⊆Sn, and consider the algebra
h= span {iS(g)|g∈G}. The center of this algebra, denoted z(h), is exactly the span of the conjugacy-class sums of
G. More precisely, if C1,···, Cpare the conjugacy classes of G, and S(Cj) =P
g∈CjS(g)are the conjugacy-class
sums, then
z(h) = span {iS(Cj)|1≤j≤p}. (B6)
Proof.See Ref. [55], more specifically Proposition 6 in Section 2.5 and Proposition 12 in Section 6.3.12
Lemma 1 motivates us to define the following set of operators, each of which is a conjugacy-class sum within Sn:
Definition 6. For each integer 0≤µ≤ ⌊n/2⌋, define Tµto be the set of all permutations in the symmetric group Sn
that consist of exactly µdisjoint transpositions. Then define the following operator:
Lµ=X
π∈TµR(π). (B7)
As a quick example, consider the operator obtained from two element transpositions
L1=X
1≤α<β≤nR(π= (α β)) (B8)
=X
1≤α<β≤n1
2(IαIβ+XαXβ+YαYβ+ZαZβ) (B9)
=1
2n
2
P(0,0,0)+1
2P(2,0,0)+1
2P(0,2,0)+1
2P(0,0,2). (B10)
Now, armed with Lemma 1, we can provide a proof for the following lemma (see also [56] for an alternative proof).
Lemma 2. The center of the algebra Snis the span of the Lµoperators:
z(Sn) = spann
iLµ|0≤µ≤jn
2ko
. (B11)
Proof.Each conjugacy class of the symmetric group is the set of all permutations of a given cycle type. Hence each
Tµis a conjugacy class. And since Lµis a sum over all permutation operators in this conjugacy class, Lemma 1
immediately implies that Lµcommutes with all permutation operators. Hence each Lµlies in the center of Sn.
Now it remains to show that these are all of the central elements of Sn. Clearly the Tµare only a small number of
the conjugacy classes of Sn, so Lemma 1 will not help us with that. However, it is known by an argument involving
Young diagrams that the dimension of the center of Snis given by the number of Young diagrams with ncells that
have at most 2rows [57]. Such a diagram has µcells in the second row and n−µcells in the first row for some integer
0≤µ≤ ⌊n
2⌋, so there are exactly ⌊n
2⌋+ 1such diagrams. Hence, this means that there are ⌊n
2⌋+ 1elements in the
center which coincides with the number of Lµoperators. Thus, Lµspan the center of the algebra Sn.
As a brief aside, it is worth mentioning that the theorem that we cited above regarding Young diagrams depends
on the fact that we are working with qubits. For example, if we were working with qutrits instead of qubits, then one
would instead need to look at Young diagrams with at most 3rows [57].
Up to this point, we have shown that the Lµoperators span z(Sn), so all that remains is to show that the Cµ
operators actually have the same span as the Lµoperators. We demonstrate this now via the following lemma.
Lemma 3. For each integer 0≤µ≤ ⌊n/2⌋,
Lµ=4−µ
(n−2k)!X
a+b+c+f=µ(2a)!(2b)!(2c)!(n−2(µ−f))!
a!b!c!f!P(2a,2b,2c). (B12)
As a result, we can also write
Lµ=4−µ
(n−2µ)!µX
µ′=0(n−2µ′)!
(µ−µ′)!Cµ′. (B13)
Corollary 2. For each integer 0≤µ≤ ⌊n/2⌋, the Lµoperators and the Cµ′operators for 0≤µ′≤µhave the
same span. In particular, the full set of (⌊n/2⌋+ 1) Lµoperators has the same span as the full set of (⌊n/2⌋+ 1) Cµ
operators.
Proof.The transposition (α β)has qubit representation R(π= (α β)) =1
2(IαIβ+XαXβ+YαYv+ZαZβ), and an
element π∈Tµtakes the form π= (α1β1)···(αµβµ)for distinct α1,···, αµ, v1,···, vµ∈ {1,···, n}. Therefore,
R(π) = 2−µµY
j=1(I+XαjXβj+YαjYβj+ZαjZβj), (B14)13
which after expansion implies that R(π)consists solely of Pauli strings with an even number of Xsymbols, an even
number of Ysymbols, and an even number of Zsymbols. Hence the same is true of Lµ, and since LµisSn-invariant,
we know that Lµis a linear combination of symmetrized Pauli strings P(2a,2b,2c).
The coefficient of P(2a,2b,2c)inLµequals 2−µtimes the number of permutations π∈Tµfor which any individual
Pauli string within P(2a,2b,2c)appears in the expansion of R(π). So, consider an arbitrary Pauli string with 2a X’s,
2b Y’s,2b Z’s, and n−2(a+b+c)I’s. The 2aqubits with X’s must be paired up into atranspositions within π.
The number of ways to choose how they are paired up is
1
a!2a
22a−2
2
···2
2
=(2a)!
2aa!. (B15)
The same is true for the 2bqubits with Y’s, and the same is also true for the 2cqubits with Z’s. Hence we additionally
get factors of(2b)!
2bb!and(2c)!
2cc!. The remaining freedom in defining πcomes from the number of ways to pair up some of
then−2(µ−f)qubits with I’s into the remaining dtranspositions, where we have defined f=µ−(a+b+c)for
convenience. The number of ways to do this is
1
f!n−2(µ−f)
2n−2(µ−f)−2
2
···n−2µ+ 2
2
=(n−2(µ−f))!
2ff!(n−2µ)!. (B16)
Putting this all together, we obtain that the coefficient of the Pauli string in question within Lµis
2−µ(2a)!
2aa!(2b)!
2bb!(2c)!
2cc!(n−2(µ−f))!
2ff!(n−2µ)!=4−µ
(n−2µ)!(2a)!(2b)!(2c)!(n−2(µ−f))!
a!b!c!f!. (B17)
We conclude that
Lµ=4−µ
(n−2µ)!X
a+b+c+f=µ(2a)!(2b)!(2c)!(n−2(µ−f))!
a!b!c!f!P(2a,2b,2c), (B18)
which completes the first part of this proof.
Now, for the second part of this proof, simply let µ′=a+b+c=µ−fand regroup the summation as follows:
Lµ=4−µ
(n−2µ)!X
a+b+c+f=µ(2a)!(2b)!(2c)!(n−2(µ−f))!
a!b!c!f!P(2a,2b,2c) (B19)
=4−µ
(n−2µ)!µX
f=0(n−2(µ−f))!
f!X
a+b+c=µ−f(2a)!(2b)!(2c)!
a!b!c!P(2a,2b,2c) (B20)
=4−µ
(n−2µ)!µX
f=0(n−2(µ−f))!
f!Cµ−f (B21)
=4−µ
(n−2µ)!µX
µ′=0(n−2µ′)!
(µ−µ′)!Cµ′. (B22)
To summarize, we now know from Lemma 2 that the Lµoperators span z(Sn), and we also know from Corollary
2 (an immediate consequence of Lemma 3) that the Lµoperators and the Cµoperators have the same span. We
conclude that the Cµoperators span z(Sn), which is exactly the statement of Proposition 2. In addition, since
z(uSn(d)) =z(Sn), we can also conclude that the Cµoperators span z(uSn(d)), as stated in Proposition 1.
After completion of this manuscript, it was brought to our attention that Proposition 1 in this manuscript is also
presented in a slightly more general form as Proposition 1 in [18]. Some of the lemmas used to prove this proposition,
namely Lemma 2, Lemma 3, and Corollary 2, are also presented in [18]. The LµandCµoperators in this manuscript
correspond respectively to the BmandCloperators in [18], with m= 2µandl= 2µ.
Supplementary Note C: Proof of Theorem 3
Let us now prove Theorem 3, which we restate for convenience.14
Theorem 3. Consider the set G2ofSn-equivariant generators in Eq. (23) of the main text. Then, one has that
Tr[HCµ] = 0 , (C1)
for all H∈ G2and for all Cµwith 0≤µ≤ ⌊n/2⌋except µ= 1.
Proof.None of the generators in G2share any Pauli strings in common with any Cµ, with the exception of P(0,0,2)
which shares a Pauli strings of the form ZαZβwith C1. In particular, for any 0≤µ≤ ⌊n/2⌋such that µ̸= 1,
the generators P(1,0,0),P(0,1,0), and P(0,0,2)do not share any Pauli strings with Cµ. Therefore, P(1,0,0)Cµis a linear
combination of non-identity Pauli strings. Since all non-identity Pauli strings are traceless, Tr[P(1,0,0)Cµ] = 0. The
same is true if P(1,0,0)is replaced with either of the other two generators.
TheimportanceofTheorem3comesfromthecentralprojectionscondition. Inparticular, Theorem3andTheorem2
immediately give us the following:
Corollary 3. For every M∈g2and every integer 0≤µ≤ ⌊n/2⌋except µ= 1,Tr[MC µ] = 0.
Supplementary Note D: Proof of Theorem 4
Let us now prove Theorem 4, which we restate for convenience.
Theorem 4. Consider the set G2ofSn-equivariant generators in Eq. (23) of the main text. The associated DLA
contains all linear combinations of the form
iX
0≤kx+ky+kz≤nc(kx,ky,kz)P(kx,ky,kz), (D1)
for a collection of real coefficients c(kx,ky,kz)that satisfy
X
a+b+c=µc(2a,2b,2c)
a!b!c!= 0, (D2)
for each integer 0≤µ≤ ⌊n/2⌋except µ= 1.
Let us start by noting that since the number of terms in P(kx,ky,kz)equals the multinomial coefficient
n
kx, ky, kz, n−(kx+ky+kz)
=n!
kx!ky!kz!(n−(kx+ky+kz))!, (D3)
the projection of P(kx,ky,kz)onto Ckequals
n!
(2a)!(2b)!(2c)!(n−(2a+ 2b+ 2c))!(2a)!(2b)!(2c)!
a!b!c!=n!
(n−2µ)!1
a!b!c!, (D4)
if(kx, ky, kz) = (2 a,2b,2c)such that a+b+c= 2µ, and 0otherwise. Therefore, expressing any operators Min the
DLA gas a linear combination of the form
M=X
0≤kx+ky+kz≤nc(kx,ky,kz)P(kx,ky,kz), (D5)
and using the condition Tr[MC µ] = 0for each integer 0≤µ≤ ⌊n/2⌋except µ= 1(from Corollary 3), after factoring
out a termn!
(n−2µ)!, yields the constraint
X
a+b+c=µc(2a,2b,2c)
a!b!c!= 0. (D6)
We must now show that we can in fact generate all operators that satisfy the aforementioned conditions. In what
follows, we will follow essentially the same process as that used in Ref. [32]. Given the length of the proof, we find it
convenient to summarize the main steps before diving in:15
Supplementary Figure 2. Hopping by one site. In the figure we schematically show how one can hop in the barycentric
lattice by one site within the same level by taking specific commutators. Shown is the k= 6level. The red (horizontal) arrows
show what happens when taking the commutator of a symmetrized Pauli with P(1,0,0)=Pn
j=1Xj. Similarly, the green (top-left
to bottom-right) and the orange (bottom-left to top-right) arrows respectively show the connections made when taking the
commutator with P(0,1,0)=Pn
j=1YjandP(0,0,1)=Pn
j=1Zj.
•First, we establish some preliminary results that will make the construction easier. As just one example, we
prove that, if P(kx,ky+1,kz−1)∈gandP(kx,ky,kz)∈g, then P(kx,ky−1,kz+1)∈g(as long as ky, kz≥1, of course).
•Second, we prove that, if P(k−1,1,0)∈g, then P(kx,ky,kz)∈gfor all (kx, ky, kz)such that kx+ky+kz=kand
at least one of kx, ky, kzis odd. Notice that, if kis odd, then at least one of kx, ky, kzis guaranteed to be odd,
so then we can fill out the entirety of level k.
•Third, we show that P(k−1,1,0)∈gfor all k. In combination with the previous result, this lets us fill out all of
the odd levels and all of the even levels except for operators of the form P(2a,2b,2c).
•Fourth, we prove that we can generateP
a+b+c=kc(2a,2b,2c)P(2a,2b,2c)for any set of coefficients c(2a,2b,2c)such
thatP
a+b+c=kc(2a,2b,2c)
a!b!c!= 0.
We begin with an observation that, while seemingly trivial, is still worth mentioning. We note that in the following
lemmas, when we say g, we will assume a DLA containing P(1,0,0),P(0,1,0),P(0,0,1)andP(0,0,2). That is, g2⊆g.
Lemma 4. The DLA g2is invariant under interchanges of the Pauli matrices X, Y, Z.
Proof.We can quickly carry out the following commutators that establish that P(0,0,1),P(2,0,0),P(0,2,0),P(1,1,0),
P(1,0,1), and P(0,1,1)are all in g2:

P(1,0,0), P(0,1,0)
∝P(0,0,1) (D7)
P(0,0,2), P(1,0,0)
∝P(0,1,1) (D8)
P(0,0,2), P(0,1,0)
∝ −P(1,0,1) (D9)
P(0,1,1), P(1,0,0)
∝P(0,2,0)−P(0,0,2) (D10)
P(1,0,1), P(0,1,0)
∝ −P(2,0,0)+P(0,0,2) (D11)
P(2,0,0), P(0,0,1)
∝ −P(1,1,0). (D12)
Hence the generators of g2can be taken to be the set of operators P(kx,ky,kz)for all 1≤kx+ky+kz≤2. This
generating set is invariant under interchanges of the Pauli matrices X, Y, Z, so the same must be true for g2itself.16
We now present two lemmas that will help us greatly in systematically constructing the operators we claim to be in
a given g. The basic idea is that, under certain conditions, one can "hop" by one or two spaces within the barycentric
lattice of level- ksymmetrized Pauli strings (see Sup. Fig. 2). We first present the lemma that allows one to hop by
one space.
Lemma 5. IfP(kx,ky,kz)∈gandP(kx,ky+1,kz−1)∈g, then P(kx,ky−1,kz+1)∈g(assuming, of course, that ky, kz≥1).
IfP(kx,ky,0)∈gforky≥1, then P(kx,ky−1,1)∈g. Finally, if P(kx,0,0)∈gforkx≥1, then P(kx−1,1,0)∈g.
Proof.Ifky, kz≥1, then simply use the commutator
[P(kx,ky,kz), P(1,0,0)]∝(ky+ 1)P(kx,ky+1,kz−1)−(kz+ 1)P(kx,ky−1,kz+1), (D13)
where we have used the fact that P(1,0,0)is ing. Then, since P(kx,ky+1,kz−1)∈g, we can see that P(kx,ky−1,kz+1)must
also be in g. Ifkz= 0butky≥1, then just use the commutator
[P(kx,ky,0), P(1,0,0)]∝ −(kz+ 1)P(kx,ky−1,1). (D14)
Ifky=kz= 0, then just use the commutator
[P(kx,0,0), P(0,0,1)]∝ −P(kx−1,1,0). (D15)
Note that, although the lemma focuses on hopping one space only in certain directions, the lemma stills work
regardless of which direction one hops, so long as one stays on level k. For instance, as schematically shown in Sup.
Fig. 3, taking the commutator with P(1,0,0)corresponds to hopping in the direction where one keeps the x-coordinate
constant, but one increases (decreases) the y-coordinate by 1and respectively decreases (increases) the z-coordinate
by1. Similarly, taking the commutator with P(0,1,0)corresponds to hopping in the direction where one keeps the
y-coordinate constant, and taking the commutator with P(0,0,1)corresponds to hopping in the direction where one
keeps the z-coordinate constant (see Sup. Fig. 3).
We now present the lemma that lets us hop by two spaces. This lemma follows in spirit the same idea as Lemma
5, except now one takes the commutator with P(1,0,0),P(0,1,0), orP(0,0,1)twice.
Lemma 6. IfP(kx,ky,kz)∈gandP(kx,ky+2,kz−2)∈g, then P(kx,ky−2,kz+2)∈g(assuming, of course, that ky, kz≥2).
IfP(kx,ky,kz)∈gforky≥2andkz≤1, then P(kx,ky−2,kz+2)∈g.
Proof.First, let us compute the commutator of P(kx,ky,kz)with P(1,0,0)twice, i.e., [[P(kx,ky,kz), P(1,0,0)], P(1,0,0)]. When
one takes the first commutator, one gets a linear combination of P(kx,ky+1,kz−1)andP(kx,ky−1,kz+1). Then, when one
takes the second commutator, one gets a linear combination of P(kx,ky+2,kz−2),P(kx,ky,kz), and P(kx,ky−2,kz+2). (The
exact coefficients are not important, which is why we choose not to emphasize them. The only important part is
that the coefficient of P(kx,ky−2,kz+2)is not zero.) Since we are given that P(kx,ky,kz)andP(kx,ky+2,kz−2)are in g, we
conclude that P(kx,ky−2,kz+2)∈g, as desired.
In the case where kz≤1, the method is exactly the same. Simply take the commutator with P(1,0,0)twice. The
result is a linear combination of P(kx,ky,kz)andP(kx,ky−2,kz+2), where the coefficient of the latter is nonzero. (The
only difference from the case above is that P(kx,ky+2,kz−2)no longer exists, since kz≤1.) Since we are given that
P(kx,ky,kz)∈g, we conclude that P(kx,ky−2,kz+2)∈g, as desired.
We now use Lemmas 5 and 6 to efficiently hop around the barycentric lattice and construct the operators in g2.
This idea is captured in the following lemma and in Sup. Fig. 4:
Lemma 7. IfP(k−1,1,0)∈g2,P(0,k−1,1)∈g2, and P(1,0,k−1)∈g2, then P(kx,ky,kz)∈g2for any ordered triple
(kx, ky, kz)at level kwhere at least one of kx, ky, kzis odd. In particular, if k=kx+ky+kzis odd, then any ordered
triple at level kwill satisfy this, which means that every operator at level kis in g2.
Proof.Inthisproofwewillfirstshowthatifthen P(k−1,1,0)∈g2, then P(kx,ky,kz)∈g2foranyorderedtriple (kx, ky, kz)
at level kwhere kyis odd. Once this result is established, we can use Lemma 4 to obtain the remaining cases.
We first prove that P(k−(2j+1),2j+1,0)∈g2for all 0≤j≤k−1
2
. To do this, we simply repeatedly apply Lemma
6. If P(k−1,1,0)∈g2, then P(k−3,3,0)∈g2by Lemma 6. Then, for each 2≤j≤k−1
2
in sequence, we can use the
fact that P(k−(2j−3),2j−3,0)∈g2andP(k−(2j−1),2j−1,0)∈g2to conclude using Lemma 6 that P(k−(2j+1),2j+1,0)∈g2.
Therefore, we can generate P(k−(2j+1),2j+1,0)for all 0≤j≤k−1
2
.17
Supplementary Figure 3. Examples movements in a barycentric lattice. In the figure we schematically show different
possible movements in the barycentric lattice as allowed by Lemma 5. At the top, the orange arrow shows that if one has a
symmetrized Pauli string on a corner of the level, one can generate an adjacent symmetrized Pauli string. In the middle, the
red arrow shows that if one has a symmetrized Pauli string on the edge of a level, one can generate another symmetrized Pauli
string one step inward in the same level of the lattice. Finally, in the bottom we show with black arrows that if one has two
adjacent symmetrized Pauli operators, one can generate another one in the same level.
Now, given some odd ky, we know that for any kxandkzsuch that kx+ky+kz=k, then P(kx+kz,ky,0)∈g2.
We can now repeatedly apply Lemma 5 to repeatedly subtract 1from the first coordinate and add 1to to the third
coordinate to ultimately conclude that P(kx,ky,kz)∈g2where kyis odd. As previously mentioned, the rest of the cases
follow from Lemma 4.
So far, we have proved that, if we can generate one particular operator at level k, e.g., P(k−1,1,0), then we can
generate many other operators at the same level (i.e., all the P(kx,ky,kz)∈g2at level ksuch that kyis odd). In fact, if
kis odd, and one has P(k−1,1,0),P(0,k−1,1)andP(1,k−1,0), then one can generate all other operators at level k. What
remains is to prove that you can actually generate P(k−1,1,0),P(0,k−1,1)andP(1,k−1,0)for each k. We take care of this
in the following lemma:
Lemma 8. If(kx, ky, kz)is any ordered triple such that at least one of kx, ky, kzis odd, then P(kx,ky,kz)∈g2.
Proof.We prove this by strong induction on the level k=kx+ky+kz. We start with the base cases k= 0andk= 1.
Ifk= 0, then kx=ky=kz= 0, so there are no applicable ordered triples. If k= 1, then the ordered triples are
(kx, ky, kz) = (1 ,0,0)and its permutations. But P(1,0,0)is already a generator of g2, so we are done with the base
case.
Now we proceed to the inductive step. Suppose that we have proved that P(kx,ky,kz)∈g2for all ordered triples on
level at most kwhere at least one of kx, ky, kzis odd. Then by the inductive hypothesis, P(k−1,0,1)andP(k−2,1,0)are
both in g2. Therefore, recalling that P(2,0,0)∈g2, we have that the commutator

P(k−1,0,1), P(2,0,0)
∝(k)P(k,1,0)+ (n−k+ 1)P(k−2,1,0), (D16)
implies that P(k,1,0)∈g2. Then Lemmas 4 and 7 imply that all operators P(kx,ky,kz)on level k+ 1with at least one
ofkx, ky, kzodd are contained in g2. This completes the induction and hence the proof.
But what about the ordered triples (kx, ky, kz)where all three of these values are even? Well, these are exactly the
ordered triples that show up in the central elements Cµ, so we can expect these to be restricted by central projections,
as articulated in Theorem 2. The one exception is if (kx, ky, kz)is a permutation of (2,0,0), since we are already18
Supplementary Figure 4. Schematic diagram for the proof of Lemma 7 . In this figure we exemplify the key steps
used in deriving Lemma 7 for the barycentric lattice with k= 8. We start with P(k−1,1,0), which and we repeatedly apply
Lemma 6 to generate P(k−3,3,0),P(k−5,5,0), and so on. Then, we use these operators and Lemma 5 to generate P(kx,ky,kz)for
allkx+ky+kz=kwith kybeing odd. By Lemma 4, this suffices to generate all P(kx,ky,kz)for all kx+ky+kz=kwhere at
least one kx,kyorkzis odd.
given P(0,0,2)as a generator. Sure enough, we already generate all of these operators in the proof of Lemma 4. Other
than those exceptions, we will ultimately be unable to generate P(kx,ky,kz)operators in isolation if kx, ky, kzare all
even. However, as we will see, we can still generate all combinations of these operators that satisfy the condition of
Theorem 4. This is what we show now, and it is the last step of the proof:
Lemma 9. For each integer 0≤µ≤ ⌊n
2⌋such that µ̸= 1,P
a+b+c=µc(2a,2b,2c)P(2a,2b,2c)∈g2for any set of
coefficients c(2a,2b,2c)such thatP
a+b+c=µc(2a,2b,2c)
a!b!c!= 0.
Proof.Forµ= 0, note that C0=I, and the singular constraint is c(0,0,0)= 0, so we do not need to generate anything
here. From now on, assume that µ≥2.
First, we show that, if (2a,2b,2c)and(2a′,2b′,2c′)are two ordered triples on the same level that are separated by
a distance of just 2on the barycentric lattice, then we can produce a linear combination using just P(2a,2b,2c)and
P(2a′,2b′,2c′)that lies in g2. We will call these operators two-coordinate operators for convenience. For example,
suppose that a′=a,b′=b+ 1, and c′=c−1. Then we can take the following commutator:
[P(2a,2b+1,2c−1), P(1,0,0)]∝(−2c)P(2a,2b,2c)+ (2( b+ 1)) X2a,2(b+1),2(c−1). (D17)
Notice that the two coefficients, −2cand2(b+ 1), indeed satisfy the required condition:
−2c
a!b!c!+2(b+ 1)
a!(b+ 1)!( c−1)!= 0. (D18)
If one wishes to do repeat the same calculation as above, but for two coordinates separated in the direction that keeps
they-coordinate or z-coordinate constant, then one needs to take a commutator with P(0,1,0)orP(0,0,1), respectively.
We will now use these two-coordinate operators to produce an arbitrary linear combination of the form given in the
statement of the lemma. In particular we will start by drawing an analogy to a very simple linear algebra exercise:
InRn, with ejfor1≤j≤nas the standard basis vectors, it is easy to show that the n−1vectors vj=ej−ej+1
span the space of all vectors whose components add up to 0. In particular, suppose one wants to produce the vector
(c1,···, cn)with c1+···+cn= 0. Then one just take the appropriate amount of v1to match the first component,
then the appropriate amount of v2to match the second component, and so on, until one takes the appropriate amount
ofvn−1to match the (n−1)thcomponent. Since c1+···+cn= 0, the nthcomponent will automatically equal cn.
As we can see, following the previous procedure, one successfully produces the vector (c1,···, cn).19
Supplementary Figure 5. Ordering symmetrized Pauli strings in the barycentric lattice. In the figure we schematically
showhowa“snaking” patterncanbecreatedinthebarycentriclatticethatlinesupalloperators P(2a,2b,2c)suchthat a+b+c=k
for some fixed value of k. Notice that the operators have a distance of 2from their neighbours in the line-up (here we have
shown k= 4). The previous means that we can create a two-coordinate operator as in for each pair of neighbours in the line-up.
To complete our proof, we will imitate the linear algebra exercise we just presented. Take the Nµ= µ+2
2
operators
P(2a,2b,2c)such that a+b+c=kfor a fixed value of µ, and line them up in an order such that each coordinate
has distance 2from its nearest neighbors in the line. For each jfrom 1toNµ, label the coordinate at position jin
the line as (2aj,2bj,2cj). There are many ways to do this, but one simple way is a “snaking” pattern that divides
the operators into rows based on decreasing values of a. As schematically shown in Sup. Fig. 5, one starts with the
first row, which is just P(2µ,0,0). Then goes to the next row, which will have P(2(µ−1),2,0)andP(2(µ−1),0,2)in that
order. Then one transitions to the next row and traverse it backward, so that one crosses P(2(µ−2),0,4),P(2(µ−2),2,2),
andP(2(µ−2),4,0), in that order. If one follows this pattern of alternating traversing each successive row forward or
backward, one will eventually reached the end of the lattice (see Sup. Fig. 5).
Now, for each jfrom 1toNµ−1, we can construct a two-coordinate operator Tjout of P(2aj,2bj,2cj)and
P(2aj+1,2bj+1,2cj+1). Now, suppose we wish to generate the operator M=P
a+b+c=µc(2a,2b,2c)P(2a,2b,2c)for any set of
coefficients c(2a,2b,2c)such thatP
a+b+c=µc(2a,2b,2c)
a!b!c!= 0. Then start with the right amount of T1so that the coefficient
ofP(2a1,2b1,2c1)matchesthatin M. Thenaddtherightamountof T2sothatthecoefficientof P(2a2,2b2,2c2)matchesthat
inM. Keepdoingthis, untilyoufinallyaddtherightamountof TNµ−1sothatthecoefficientof P(2aNk−1,2bNµ−1,2cNµ−1)
matchesthatin M. Duetothecentralprojectionscondition, thecoefficientof P(2aNµ,2bNµ,2cNµ)willnowautomatically
match that in M. Therefore, we have constructed our desired operator, so we are done.
The proof is now complete, so let us summarize what we have done. As shown in Theorem 2 of the main text, we
first used the central projections condition to show that being orthogonal to every Cµexcept µ= 1is a necessary
condition for an operator to be in g2. After that, we showed that g2indeed contains all operators that satisfy that
condition. As shown in Lemma 8, we successfully generated P(kx,ky,kz)where at least one of kx, ky, kzis odd. The
form of the Cµoperators makes it clear that all such P(kx,ky,kz)are already orthogonal to all of the Cµoperators.
Finally, as shown in Lemma 9, we successfully generated all linear combinations of the P(2a,2b,2c)operators on level 2µ
that are orthogonal to Cµ. Note that we could ignore µ= 1because we already showed in Lemma 4 that g2contains
all6level- 2operators.
The only operators in uSn(d)that are "missing" from g2are the Cµoperators for 0≤µ≤ ⌊n/2⌋except µ= 1.
This includes C0=I, but it also includes the operators Cµfor2≤µ≤ ⌊n/2⌋. As a result, we obtain dim (L) = n+3
3
− ⌊n/2⌋.
As a final observation for this section, note that the requirement of orthogonality with C0=Iis what prevents any
operator with a nonzero P(0,0,0)=Icomponent from being in g2. Of course, the identity will be in the center of the20
commutant of any set of generators, so the central projections condition of Ref. [30] will always exclude operators with
nonzero trace from being in the algebra if the generators are all traceless. Of course, the fact that the identity cannot
be in such an algebra is by itself a pretty trivial observation, since it is such a common fact that the commutator of
two finite-dimensional operators is traceless. But this work already serves to demonstrate that the central projections
condition can be used to prove a highly non-obvious result. It is interesting to note that the central projection
generalizes such a seemingly mundane statement as the fact that the commutator of two finite dimensional operators
is traceless, and yet it is powerful enough to crop up in unexpected ways.
Supplementary Note E: Proof of Theorem 5
Let us now prove Theorem 5, which we restate for convenience.
Theorem 5. Consider the set GkofSn-equivariant generators in Eq. (36). Then, the associated DLA gkis
gk=Q
LM
λ=1su(mλ)⊕u(1)⊕ ··· ⊕ u(1)| {z }
⌊k/2⌋
 (E1)
=suSn
cless(d)⊞Q
u(1)⊕ ··· ⊕ u(1)| {z }
⌊k/2⌋
, (E2)
where Q(u(1)⊕ ··· ⊕ u(1)) = spanR{iC1,···, iC⌊k/2⌋}is a⌊k/2⌋-dimensional subalgebra of z(uSn(d)).
Furthermore, gkcontains all linear combinations of the form
iX
0≤kx+ky+kz≤nc(kx,ky,kz)P(kx,ky,kz), (E3)
for a collection of real coefficients c(kx,ky,kz)that satisfy
X
a+b+c=µc(2a,2b,2c)
a!b!c!= 0, (E4)
forµ= 0and each integer ⌊k/2⌋+ 1≤µ≤ ⌊n/2⌋.
Proof.Since Gkcontains the generators P(1,0,0),P(0,1,0)andP(0,0,2),gkcontains g2. Therefore, by Theorem 4, gk
contains all linear combinations of the form
iX
0≤kx+ky+kz≤nc(kx,ky,kz)P(kx,ky,kz), (E5)
for a collection of real coefficients c(kx,ky,kz)that satisfy
X
a+b+c=µc(2a,2b,2c)
a!b!c!= 0, (E6)
for each integer 0≤µ≤ ⌊n/2⌋except µ= 1.
Let us now take advantage of our higher-body generators. For each 1≤µ≤k, since gkcontains the generator
P(0,0,µ), along with the one-body generators P(0,0,1)andP(0,1,0),gkcontains the full span of symmetrized Pauli strings
at level µ, since we can repeatedly apply Lemma 5 to hop around one step at a time on level µof the barycentric
lattice until we have reached every symmetrized Pauli string at level µ. This means that, among the conditions on
the coefficients that come from the central projections condition, i.e.,
X
a+b+c=µc(2a,2b,2c)
a!b!c!= 0, (E7)
foreachinteger 0≤µ≤ ⌊n/2⌋except µ= 1, wearenowabletoadditionallydisregardtheconditionfor 1≤µ≤ ⌊k/2⌋.
In particular, since the central element Cµlives entirely on level 2µ, we can now generate Cµfor every 1≤µ≤ ⌊k/2⌋.21
Since these are central elements, and there are ⌊k/2⌋of them, we know that these elements span some representation
of a direct sum of ⌊k/2⌋algebras u(1).
In contrast, for µ= 0and⌊k/2⌋+ 1≤µ≤ ⌊n/2⌋, the central projections condition still implies that Tr[MC µ] = 0
for every M∈gk, because none of the generators in Gkshare any Pauli strings in common with Cµforµ= 0and
⌊k/2⌋+ 1≤µ≤ ⌊n/2⌋. It follows that, for every M∈gk, its coefficients c(kx,ky,kz)satisfy
X
a+b+c=µc(2a,2b,2c)
a!b!c!= 0, (E8)
forµ= 0and each integer ⌊k/2⌋+ 1≤µ≤ ⌊n/2⌋.
By Theorem 6, we know that
g2=suSn
cless(d)⊞Q(u(1)), (E9)
where Qis some representation of u(1).
However, the only difference between gkandg2is the inclusion of ⌊k/2⌋ −1new central elements C2µfor2≤µ≤
⌊k/2⌋. Therefore, the only possibility for the decomposition of gkis
gk=suSn
cless(d)⊞Qk
u(1)⊕ ··· ⊕ u(1)| {z }
⌊k/2⌋
, (E10)
where Qkis some representation of a direct sum of ⌊k/2⌋algebras u(1).
Supplementary Note F: Proof of Theorem 6
Let us now prove Theorem 6, which we restate for convenience.
Theorem 6. Consider the set GkofSn-equivariant generators in Eq. (36). Then, one has that
Tr[HCµ] = 0 , (F1)
for all H∈ Gkand for all Cµwithµ= 0and⌊k
2⌋< µ≤ ⌊n/2⌋.
Proof.The proof of this theorem follows that of Theorem 3, where it suffices to note that none of the generators in
Gkshare any Pauli strings in common with any Cµ, with the exception of P(0,0,µ).
Supplementary Note G: Error in the proof of Ref. [32]
In our main results we show that the DLA ensuing from g2is semi-universal and subspace controllable but fails to
be universal. This result clashes with that of Ref. [32] where the authors claim that the DLA is universal, i.e., that
g2=suSn(d).
In this section we will follow we will follow the notation used in Ref. [32] for ease of comparison of results. Hence,
we will now redefine Y→ −YandP(kx,ky,kz)→iP(kx,ky,kz).
We can narrow down the bug in the proof of Ref. [32] as spanning from the following commutation relations
h
P(k−1,1,0), P(0,0,1)i
= (−2)(2)P(k−2,2,0)+ (2)( k)P(k,0,0), (G1)
h
P(k−1,0,1), P(0,1,0)i
= (2)(2) P(k−2,0,2)+ (−2)(k)P(k,0,0), (G2)
h
P(k−2,1,0), P(1,0,1)i
=(−2)(2(n−k+ 2)) P(k−4,2,0)+ (2)(( k−2)(n−k+ 2)) P(k−2,0,0)
+ (−2)(2(k−2))P(k−2,2,0)+ (−2)(2)P(k−2,0,2)+ (2)( k(k−1))P(k,0,0).(G3)
Here we have added in red the coefficients and indexes that were incorrectly derived in Ref. [32]. Let us explain how
we derived the coefficients for the right-hand side of Eq. (G1). First, each Pauli string in P(k−2,2,0)can be generated22
in2ways from the commutator on the left, since there are 2ways to choose which Pauli Ygot introduced. After that,
each Pauli string in P(k,0,0)can be generated in kways from the commutator on the left, since there are kways to
choose which one of the kPauli Xsymbols came from the [Y, Z]commutator. The coefficients in Eqs. (G2) and (G3)
are derived with similar combinatorial arguments.
LetAandBdenote the right-hand-sides of Eqs. (G1) and (G2), respectively:
A= (−2)(2)P(k−2,2,0)+ (2)( k)P(k,0,0)(G4)
B= (2)(2) P(k−2,0,2)+ (−2)(k)P(k,0,0). (G5)
Next, the authors of Ref. [32] claim that since P(k−4,2,0)andP(k−2,0,0)are in the DLA, then one can generate an
operator, which we call C, and which we define as
C= (−2)(2(k−2))P(k−2,2,0)+ (−2)(2)P(k−2,0,2)+ (2)( k(k−1))P(k,0,0). (G6)
Without the combinatorial corrections in red, the operators A,BandCwould be linearly independent, and this
is precisely the mistake in [32] (see Eqs. (23), (24) and (26) therein). However, with the combinatorial corrections,
these three quantities satisfy the relation
C= (k−2)A+ (−1)B. (G7)
Hence these three quantities are not linearly independent. This small, albeit important difference ruins the ability to
complete the proof in [32].
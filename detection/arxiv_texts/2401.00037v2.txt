ISMB,2024, 1–10
doi: DOI HERE
Advance Access Publication Date: Day Month Year
Paper
Messenger RNA Design via Expected Partition
Function and Continuous Optimization
Ning Dai,1Wei Yu Tang,1Tianshuo Zhou,1David H. Mathews3,4,5
and Liang Huang1,2,∗
1School of Electrical Engineering & Computer Science, Oregon State University, Corvallis, 97330, OR,
USA,2Dept. of Biochemistry & Biophysics, Oregon State University, Corvallis, 97330, OR, USA,3Dept. of
Biochemistry & Biophysics,4Center for RNA Biology and5Dept. of Biostatistics & Computational Biology,
University of Rochester Medical Center, Rochester, 14642, NY, 14642
∗Corresponding author. liang.huang.sh@gmail.com
Abstract
The tasks of designing RNAs are discrete optimization problems, and several versions of these problems are
NP-hard. As an alternative to commonly used local search methods, we formulate these problems as continuous
optimization and develop a general framework for this optimization based on a generalization of classical
partition function which we call “expected partition function”. The basic idea is to start with a distribution
over all possible candidate sequences, and extend the objective function from a sequence to a distribution.
We then use gradient descent-based optimization methods to improve the extended objective function, and
the distribution will gradually shrink towards a one-hot sequence (i.e., a single sequence). As a case study, we
consider the important problem of mRNA design with wide applications in vaccines and therapeutics. While
the recent work of LinearDesign can efficiently optimize mRNAs for minimum free energy (MFE), optimizing
for ensemble free energy is much harder and likely intractable. Our approach can consistently improve over
the LinearDesign solution in terms of ensemble free energy, with bigger improvements on longer sequences.
Key words: mRNA design, partition function, continuous optimization, gradient descent
1. Introduction
Ribonucleic acid (RNA) is of utmost importance in life because
it plays both the informational role where messenger RNAs
(mRNAs) pass genetic information from DNAs to proteins as well
as the functional roles where non-coding RNAs facilitate protein
translation, catalyze reactions, and regulate gene expression. By
contrast, DNAhasaninformationalroleandproteinonlyfunctional
ones. In addition, the public became more aware of RNA because
COVID-19 was caused by the RNA virus SARS-CoV-2 (Wu et al.,
2020), which was then partially contained by mRNA vaccines
(Baden et al., 2021; Polack et al., 2020).
The field of RNA design has applications in diagnostics and
therapeutics (Zhang et al., 2023; Zhou et al., 2023). There are
two broad categories of RNA design problems, which correspond
to the two roles of RNAs above. The first type (“information
passing”) is to design optimal mRNAs given a protein, which aims
to find the optimal mRNA in terms of factors such as stability and
codon optimality among all the mRNA sequences that translate
to that protein (Mauger et al., 2019; Cohen and Skiena, 2003;
Terai et al., 2016). For example, Zhang et al.(2023) designed
an efficient algorithm for mRNA design that jointly optimizesminimum free energy (MFE) and codon optimality, by reducing
the mRNA design problem to lattice parsing, where the design
space is a regular language (encoded by a finite-state automata) and
the objective function (energy) is encoded by a stochastic context-
free grammar. However, the mRNA design problem optimizing for
partition function (McCaskill, 1990) (i.e., ensemble free energy) is
wide open, and is likely NP-hard due to the minimization over a
summation (instead of minimization over a minimization in the
MFE case). The second type (structural/functional) is to design an
non-coding RNA for a secondary structure, which aims to find an
RNA sequence that naturally folds, or has the highest probability
of folding, into that structure. Some instance of this problem has
been proved to be NP-hard (Bonnet et al., 2020).
While these RNA design problems are by default discrete
optimization problems that were tackled by local search methods
such as random walk (Zhou et al., 2023), we offer an alternative
view and instead formulate them as continuous optimization
instances. The basic idea is to start with a distribution over all
possible candidate sequences, and extend the objective function
from a sequence to be the expectation on a distribution. This
extension employs a generalization of the classical single-sequence
©The Author 2024. Published by Oxford University Press. All rights reserved. For permissions, please e-mail: journals.permissions@oup.com 1arXiv:2401.00037v2  [q-bio.BM]  1 Mar 20242 Dai et al.
partition function (McCaskill, 1990) which we call “expected
partition function” (Section 2). Matthies et al.(2023) proposed
this concept but from a different perspective and for a different
task (see Sec. 6 for details). We then use gradient descent-based
optimizationmethods(Section4)toimprovetheextendedobjective
function, and the distribution will gradually shrink towards a one-
hot sequence (i.e., a single sequence). As a case study, we consider
the important problem of the mRNA design problem which has
broad applications in both vaccines and therapeutics (Section 3).
While previous work like LinearDesign can efficiently optimize
mRNAs for minimum free energy (MFE), optimizing for ensemble
free energy is a much harder problem and is likely intractable. On
20 protein sequences, our algorithm can consistently improve over
LinearDesign’s best-MFE results in terms of ensemble free energy,
with bigger improvements on longer sequences.
2. Optimization Framework and Expected Partition
Function
In our computational representation, an RNA sequence is denoted
asx= (x1, x2, .., xn), with each xi∈Nrepresenting the i-th
nucleotide of the sequence, drawn from the set of all possible
nucleotides, N={a,c,g,u}. To encapsulate a distribution over
sequences, we introduce individual random variables Xi, each
corresponding to a specific position in the RNA sequence. The
distribution of Xiover the nucleotide set is given by a Probability
Mass Function (PMF), Di, such that:
Di:N7→[0,1],withX
xi∈NDi(xi) = 1 ,
which implies that the sum of the probabilities of all possible
nucleotides at position iequals 1.
Here, the observed nucleotide at a given position, xi, is
considered as a sample drawn from the associated random variable
Xi, i.e., xi∼Di(·). Within this framework, an entire RNA
sequence, x, is conceived as a sample drawn from the joint
distribution of all positions, X, i.e., x∼D(·). The joint PMF
defining this distribution is defined as the product of these
individual distributions, represented by D:Nn7→[0,1]. It is
formulated as:
D(x) =Y
i=1...nDi(xi),
whereP
x∈NnD(x) = 1, ensuring that the total probability over
all positions.
Having established a distribution over RNA sequences, it is
intuitive to extend this concept to define a distribution over
partition functions. The partition function Q(x)for a specific
RNA sequence xis defined as:
Q(x) =X
y∈Y(x)e−∆G(x,y)/RT,
where Y(x)represents the set of all feasible folding structures
for the RNA sequence x, and ∆G(x,y)is an established energy
model evaluating the free energy change of mRNA xand structure
y. Given a distribution over RNA sequences, symbolized as D,
we can derive the expected partition function eQ(D)over thedistribution of RNA sequences as:
eQ(D) =Ex∼D(·)[Q(x)] =X
x∈NnD(x)Q(x)
=X
x∈NnD(x)X
y∈Y(x)e−∆G(x,y)/RT
,
which represents the expected value of the partition function
across all possible RNA sequences considering their respective
distributions.
Fig. 1 shows the pseudocode for computing the expected
partition function eQ(D)via dynamic programming, which is a
simpleextensionoftheoriginalMcCaskill(1990)algorithmfor Q(x).
For simplicity of presentation, we use the Nussinov-Jacobson energy
model for the pseudocode. For the Turner energy model (Turner
and Mathews, 2009), we need some non-trivial changes. First, we
need different nonterminals as in LinearFold (Huang et al., 2019)
and LinearPartition (e.g., hairpin candidates Hi,j, pairs Pi,j, and
multiloop candidates M1
i,j,M2
i,j,Mi,j). But more importantly, we
alsoneedtoextend Pi,jtoPi,j,twhere t∈ {au,ua,cg,gc,gu,ug}
is the pair type of (i, j), following the implementation of lattice-
parsing in LinearDesign (Zhang et al., 2023). This is because, for
example when we extend Pi,jtoPi−1,j+1to form a stack, we need
to know the identity of the (i, j)pair and the (i−1, j+ 1)pair,
which are no longer deterministic given a distribution of sequences.
We also need this information for terminal mismatches.
3.mRNA Design for Minimum Ensemble Free Energy
In mRNA design problems, given a target protein sequence p=
(p1, p2, ..., p n)where pidenotes the i-th amino acid residue, we aim
to find a mRNA sequence x= (x1, x2, .., x 3n)where xidenotes
thei-th nucleotide, which can be translated to the target protein.
During translation, every 3 nucleotides constitute a codon, and
each codon specifies a particular amino acid (Figure 2).
It is not hard to see that, for a given target protein, there are
exponentially many mRNA sequences that can be translated to the
same protein, since an amino acid could potentially be translated
from multiple codons. As a result, the number of possible mRNA
sequence candidates is the product of the kinds of condons that
each amino acid in the given protein sequence can be translated
from.
We also hope the designed mRNA sequence xsatisfies some
desired properties (e.g., low minimum free energy) that can be
evaluated by the existing computational models. For example,
LinearDesign (Zhang et al., 2023) was devised to find the optimal
mRNA sequence that has the lowest minimum folding free energy
change(MFE) among all feasible mRNA sequences. To write down
the formal definition of this optimization problem, we first define
a function MFE (x)representing the minimum folding free energy
change of mRNA xas:
MFE (x) = min
y∈Y(x)∆G(x,y),
where Y(x)is the set of all feasible folding structures of mRNA x,
and∆G(x,y)is a fixed energy model evaluating the free energy
change of mRNA xand structure y. This funtion is also known as
the RNA folding problem (Huang et al., 2019; Lorenz et al., 2011;
Doet al., 2006), where we want to find the most stable structure
for the input RNA x. Based on this function, we can express the
optimization problem as:mRNA Design via Expected Partition Function and Continuous Optimization 3
function Partition (x)
n←length of x
Q←hash() ▷hash table: from span [i, j]toQi,j
Qj,j−1←1for all jin1...n ▷ base cases
forj= 1tondo
for all isuch that [i, j−1]inQdo
Qi,j+=Qi,j−1·e−δ(xj)
RT
ifxi−1xjin {au,ua,cg,gc,gu,ug}then
for all ksuch that [k, i−2]inQdo
Qk,j+=Qk,i−2·Qi,j−1·e−ξ(xi−1,xj)
RT
return Q ▷ Partition function Q(x) =Q1,nfunction ExPartition (D=Qn
i=1Di) ▷Dis a distribution
eQ←hash() ▷hash table: from span [i, j]toeQi,j
eQj,j−1←1for all jin1...n ▷ base cases
forj= 1tondo
for all isuch that [i, j−1]ineQdo
for all cin {a,c,g,u}do ▷all nucs at position j
eQi,j+=Dj(c)·eQi,j−1·e−δ(c)
RT
for all a, bin{au,ua,cg,gc,gu,ug}do ▷all pairs
for all ksuch that [k, i−2]ineQdo
eQk,j+=Di−1(a)·Dj(b)·eQk,i−2·eQi,j−1·e−ξ(a,b)
RT
return eQ ▷ Expected partition function eQ(D) =eQ1,n
Fig. 1: Pseudocode for computing the classical partition function Q(x)for a single sequence x(top, from LinearPartition (Zhang et al.,
2020)) and our expected partition function eQ(D)for a distribution Dover sequences (bottom), using the Nussinov-Jacobson energy model
for simplicity of presentation. The former can be viewed as a special case of the latter when Dis a one-hot distribution. The changes
in the latter are colored in red. For the Turner energy model, besides different nonterminals as in LinearFold (Huang et al., 2019) and
LinearPartition (e.g., hairpin candidates Hi,j, pairs Pi,j, etc.), we also need to extend Pi,jtoPi,j,twhere t∈ {au,ua,cg,gc,gu,ug}is
the pair type of (i, j), following LinearDesign (Zhang et al., 2023).
min
xMFE (x)
s.t. x∈ X(p)
where X(p)is the set of all feasible mRNA sequences encoding
protein p. LinearDesign solved this optimization problem in
polynomial time via a dynamic programming which utilizes the
local decomposable property of ∆G(x,y).
In this work, we investigate a modified version of the above
objective. Instead of finding the mRNA sequence with the lowest
MFE (x), we aim to find the mRNA with the largest partition
function Q(x). Instead of optimizing the single most stable
structure, we want to optimize the stability of all potential folding
structures simultaneously, and end up with a much smoother
landscape. Formally, we can express the new optimization problemas:
min
x−Q(x)
s.t. x∈ X(p)(1)
By using this new objective, we can find mRNA sequences
with multiple low free energy change conformations, which could
potentially lead to more stable designed mRNAs. It turns out
that this new optimization formulation is NP-hard, and the orignal
algorithm from LinearDesign cannot be extended to efficiently solve
this problem.
Given the complexity of directly optimizing Q(x), an alternative
approach is to approximate this optimization problem by focusing
on the expected partition function eQ(D). We propose to optimize
eQ(D), whichreflectstheaveragestabilityoveradistributionofRNA
sequences. This approach simplifies the problem by considering the
average behavior rather than the exact configurations of each RNA
sequence. The new optimization problem can then be reformulated
(Glycin)Gly
(Glycin)Gly
(Phenyl-
alanin)Phe
(Leucin)Leu
(Serin)Ser
(Tyrosin)Tyr
(Cystein)Cys
(Trypto-
phan)Trp
(Leucin)Leu
(Prolin)Pro
(Histidin)His
(Gluta-
min)Gln
(Arginin)Arg
(Isoleucin)Ile(Methi-onin)
Met(Threonin)Thr(Asparagin)Asn(Lysin)Lys(Serin)Ser(Arginin)Arg(Valin)Val(Alanin)Ala(Asparagin-
säure)Asp(Glutamin-
säure)Glu
StoppStart
Fig. 2: Comprehensive Overview of mRNA Translation and Protein Synthesis. On the left, the codon wheel (Wikipedia, 2023) illustrates
the correlation between mRNA codons and their respective amino acids, with the 64 possible codon combinations made from the four
nucleotides: adenine ( a), cytosine ( c), guanine ( g), and uracil ( u). On the right, an example of mRNA sequence translation is depicted,
showcasing the process that converts a spike protein mRNA sequence into the corresponding amino acid chain. The total choices of valid
mRNA sequences are determined by the product of the number of valid codons for each amino acid at all positions.4 Dai et al.
0,0
|1,0 2,0 3,0
|
◦4,0
4,15,0
5,16,0
|
◦7,0 8,0
8,19,0
|
D(methionine ) D(leucine ) D(stop)A:1.0 U:1.0 G:1.0 U:0.5
C:0.5U:1.0
U:1.0A:0.3
G:0.7
A:0.1
C:0.4
G:0.2
U:0.3U:1.0 A:0.4
G:0.6A:0.1
G:0.9
A:1.0
Fig. 3: A deterministic finite automaton (DFA) representing mRNA codon sequences, with a probability distribution assigned to the
transitions. Each node corresponds to a state in the DFA, with outgoing edges indicating permissible nucleotides and their associated
probabilities. Nodes with a single transition, such as (0,0),(1,0),(2,0),(4,0),(4,1),(6,0),(8,1), inherently have a probability of 1. For
nodes with multiple outgoing edges (e.g., nodes (3,0),(5,0),(5,1),(7,0),(8,0)), the probabilities of the outgoing edges add up to 1,
ensuring a complete distribution. Edges are color-coded to illustrate these probability groups; edges sharing the same color sum to one,
denoting complete probability distributions for transitions from their respective nodes.
as:
min
D−eQ(D)
s.t.Dis a valid distribution over Nn(2)
In the new formulation, eQ(D)can be efficiently computed via
dynamic programming, similar to LinearDesign. This enables the
use of gradient-based optimization methods to optimize it.
Building on this foundation, we introduce the ensemble free
energy,∆G◦
ens(x), for an individual RNA sequence x. This
metric provides a more holistic view of stability by considering
contributions from all competing structures, as opposed to just the
Minimum Free Energy (MFE). It is defined as:
∆G◦
ens(x) =−RTlogQ(x),
where Ris the universal gas constant, and Tis the absolute
temperature.
Extending this concept to our previously defined expected
partition function, we introduce the generalized ensemble free
energy,]∆G◦ensemble (D). This metric captures the ensemble free
energy across the expected distribution of partition functions over
all possible RNA sequences. It is formulated as:
]∆G◦ens(D) =−RTlogeQ(D),
where eQ(D)represents the expected partition function over the
joint distribution of all positions.
Thus, the generalized ensemble free energy offers a measure of
the expected stability of an ensemble of RNA sequences, taking
into account not only the probabilistic distribution of the sequences
but also their potential folding structures.
Following Zhang et al.(2023), we approach the mRNA design
problem through lattice parsing. In this model, the RNA sequence
is represented as a path through a lattice structure, where each
node corresponds to a state in the RNA sequence construction
process. To define a distribution over this lattice, we consider
not only the per-position distribution of nucleotides but also the
transitions between states in the lattice. Each node qin the lattice
is associated with a distribution over possible outgoing transitions
(edges), which represent the addition of nucleotides at that position.For each node qin the lattice, define the distribution:
Dq:N(q)7→[0,1],s.t.X
x∈N(q)Dq(x) = 1
where N(q)is the set of nucleotides permissible at node q,
determined by the function δ(q, a), which defines the valid
transitions from node qwith nucleotide a.
The overall distribution of mRNA sequences in this lattice,
denoted as D:Nn7→[0,1], is thus a product of distributions at
each node along the path:
D(x) =Y
iDqi(xi),given q0= (0,0)andqi+1=δ(qi, xi),
where q0= (0,0)is the starting node, and qi+1=δ(qi, xi)is the
next node reached by adding nucleotide xi. For a more tangible
understanding, a specific example is illustrated in Fig. 3.
4. Constrained Optimization via Projected Gradient
Descent
In the mRNA design problem variant we introduced above, the
goal is to optimize an objective function over all valid probability
distributions Dfor RNA sequences in the design space:
min
D:X7→[0,1]ℓ(D) (3)
where we strive to identify the probability distribution Dthat yields
the minimum value for the objective function ℓ(D).
We define the parameters of the probability distribution Dby
expressing it as the product of individual probabilities, thus:
Dθ(x) =Y
iθqi,xi
Here, θqi,xistands for the probability of selecting the nucleotide
xiat the node qiwithin a lattice, and θencompasses all such
probabilities for each nucleotide at each node.
The optimization problem can then be formulated as follows:mRNA Design via Expected Partition Function and Continuous Optimization 5
min
θℓ(Dθ)
subject to ∀q,X
x∈N(q)θq,x= 1(4)
Intheequationabove, weaimtominimizetheobjectivefunction
ℓ(Dθ)subject to the constraint that for every node q, the sum of
the probabilities of each possible nucleotide is equal to 1. This
constraint ensures that each set of probabilities θqiforms a valid
multinomial distribution over the nucleotides.
Projected gradient descent provides a robust solution to the
constrained optimization problem. In this method, we first compute
the gradient of our objective function, ℓ(Dθ), with respect to the
parameters θ. The specific form of this gradient relies on the nature
ofℓ. Upon computing the gradient, we update our parameters by
stepping in the negative gradient direction:
θ′=θ(t)−α∇ℓ(Dθ(t))
where αis a learning rate, and tdenotes the current iteration.
Next, we need to project θ′back onto the set of valid
multinomial distributions. This can be done by projecting the
parameters θqin each node qback to the probability simplex,
which is equivalent to solving to following problem:
θ(t+1)
q = argmin
θq∥θq−θ′
q∥2
2
subject toX
x∈N(q)θq,x= 1, θq,x≥0,∀x∈N
The equation above represents the projection of θ(t+1)
qonto the
probability simplex, where ∥ · ∥2
2denotes the Euclidean norm. The
constraints ensure that θqis a valid probability distribution over
N. The solution to this problem can be efficiently computed using
algorithms for simplex projections.
This process of gradient update and projection is repeated
until the changes in θor the value of the objective function ℓ(Dθ)
becomes sufficiently small, which indicates that the solution has
converged.
Algorithm 1 below presents a summary of the projected gradient
descent method for the constrained optimization problem:
Algorithm 1 Projected Gradient Descent
Initialize θ(0)such that each θ(0)
qi,xiis a valid probability
distribution
whilenot converged do
Compute gradient ∇ℓ(Dθ(t))
Update θ(t+1)=θ(t)−α∇ℓ(Dθ(t))
Project θ(t+1)onto the probability simplex:
foreach qdo
solve the projection problem to update θ(t+1)
q
Update t=t+ 1
returnSolution θ∗to the optimization problem
5. Experiments and Results
In this section, we evaluate our proposed approach through a
series of experiments designed to assess its effectiveness andcharacteristics. We conducted a random sampling of 20 natural
protein sequences from the UniProt database (Consortium, 2022).
These sequences exhibit a diverse range of lengths, varying from
50 to 350 amino acids, which allows for a comprehensive analysis
across different protein sizes. The specific sequence IDs, along with
their corresponding length statistics, are detailed in Table 1.
Implementation Details
We adapted and modified the mRNA design lattice parsing
framework originally developed by Zhang et al.(2023). Our
extensions primarily focus on the computation of the expected
partition function, adopting a methodology akin to that used
in LinearPartition (Zhang et al., 2020). Additionally, we also
incorporated the beam pruning heuristic to accelerate this
computation. Regarding the calculation of gradients, we leveraged
the properties of the inside-outside algorithm, which allows us to
derive the gradients directly by combining the results from both
the inside and outside phases of the algorithm, as detailed in Eisner
(2016).
Throughout the development and experimental phases, we
observed that the projected gradient method, which primarily
considerslocalstatisticsoftheoptimizationproblem, issignificantly
influenced by the initial distribution, denoted as θ(0), in
Algorithm1. Thechoiceof θ(0)hasasubstantialimpactonthefinal
solution attained by our program. To address this, we implemented
the following strategies:
•Initializing Close to MFE Solution: Rather than starting
from a random distribution Drand, which often leads to
suboptimal solutions especially for longer proteins, we propose
using the MFE solution DMFE(a distribution contains only
the MFE mRNA sequence) from LinearDesign (Zhang et al.,
2023) as the initial point. However, directly initializing the
initial distribution Dθ(0)with the MFE solution may lead to the
algorithm becoming trapped in the MFE solution. To mitigate
this, we introduce a soft-MFE initialization strategy:
Dsoft-MFE (ε) =εDrand+ (1−ε)DMFE,
blending the random distribution Drandwith the MFE solution
DMFE, controlled by the parameter ε∈[0,1]. Setting εto 0
reduces Dsoft-MFE to MFE initialization DMFE, while setting ε
to 1 transforms it into random initialization Drand.
•Parallelization with Multiple Runs: Another strategy is
to experiment with various initializations of θ(0), executing the
gradient descent process in parallel. The optimal solution can
then be selected from the outcomes of these concurrent runs.
Baseline Method
For comparative purposes, we implemented a random walk baseline.
In this approach, we continuously refine the best mRNA sequence
we have identified by randomly altering one codon at a time.
Initially, the best mRNA sequence is set to the MFE solution from
LinearDesign. At each step, we randomly select an amino acid and
substitute its corresponding mRNA segment with a random codon.
The objective value of the new mRNA sequence is then evaluated;
if it shows an improvement over the current best sequence, it is
recorded as the new optimal sequence. This process is repeated
until a predetermined number of steps is reached.
Main Results
In our principal experiments, we conducted 20 independent runs
for each protein sequence using both the baseline method and our6 Dai et al.
Table 1.Comparative Results of Baseline and Proposed Methods across Protein Sequences. This table encapsulates the best results of 20 independent runs
per protein sequence for both the random walk baseline and our proposed soft-MFE method with ε= 0.5, beam size b=100. The evaluation metric is the
Ensemble Free Energy ( ∆G◦
ens). For each protein, identified by UniProt ID and length (in amino acids), we report the ∆G◦
ensof the best-performing
mRNA sequence as determined by LinearPartition. The table includes both the absolute ∆G◦
ensand the change in ∆G◦
ens(∆∆G◦
ens) compared to the
MFE solution, as well as the percentage of changed codons.
UniProtLengthLinearDesignRandom Walk soft-MFE ε=0.5, b=100 soft-MFE ε=0.5, b=200
ID MFE solution∆G◦
ens ∆∆G◦
ens% codon∆G◦
ens ∆∆G◦
ens% codon∆G◦
ens ∆∆G◦
ens% codon
protein / mRNA ∆G◦
ens changed changed changed
Q13794 54aa/ 162 nt -113.39 -113.58 -0.19 3.7-113.58 -0.19 3.7-113.58 -0.19 3.7
Q9UI25 63aa/ 189 nt -126.07 -126.23 -0.16 7.9-126.23 -0.16 7.9-126.23 -0.16 7.9
Q9BZL1 73aa/ 219 nt -114.87 -115.12 -0.25 6.9 -115.25 -0.38 5.5-115.25 -0.38 6.9
P60468 96aa/ 288 nt -234.36 -234.50 -0.14 2.1 -234.74 -0.38 4.2-234.74 -0.38 4.2
Q9NWD9 120 aa/ 360 nt-226.36 -226.36 0.00 0.8 -227.03 -0.67 4.2-227.03 -0.67 4.2
P14555 144 aa/ 432 nt-275.06 -275.06 0.00 0.0 -275.47 -0.41 3.5-275.47 -0.41 3.5
Q8N111 149 aa/ 447 nt-335.89 -335.94 -0.05 0.7 -336.40 -0.51 5.4-336.40 -0.51 4.7
P63125 156 aa/ 468 nt-299.18 -299.60 -0.42 3.2-299.59 -0.41 5.1 -299.59 -0.41 5.1
Q6XD76 172 aa/ 516 nt-427.19 -427.50 -0.31 1.2 -427.82 -0.63 2.9-427.82 -0.63 1.7
P0DMU9 189 aa/ 567 nt-361.48 -362.10 -0.62 2.7 -362.12 -0.64 3.7-362.12 -0.64 3.7
P0DPF6 209 aa/ 627 nt-545.55 -545.97 -0.42 1.0 -546.07 -0.52 1.9-546.07 -0.52 1.9
Q9HD15 224 aa/ 672 nt-532.98 -533.19 -0.21 2.2 -522.84 10.14 18.8 -533.30 -0.32 3.6
Q6T310 242 aa/ 726 nt-504.29 -504.53 -0.24 1.2 -504.82 -0.53 3.7-504.82 -0.53 3.3
Q9BRP0 275 aa/ 825 nt-586.50 -586.84 -0.34 0.7 -584.39 2.11 29.5 -587.49 -0.99 3.6
P56178 289 aa/ 867 nt-606.58 -607.04 -0.46 0.4 -607.50 -0.92 2.8-607.50 -0.92 2.8
Q8NH87 305 aa/ 915 nt-572.37 -572.83 -0.46 1.0 -573.43 -1.06 3.6-573.43 -1.06 3.9
Q8NGU1 314 aa/ 942 nt-612.55 -612.67 -0.12 1.3 -610.36 2.19 8.6 -613.42 -0.87 5.1
Q8NGC9 324 aa/ 972 nt-582.39 -582.86 -0.47 1.9 -578.51 3.88 23.5 -583.43 -1.04 4.3
Q99729 332 aa/ 996 nt-667.21 -667.74 -0.53 0.6 -668.21 -1.00 3.0-668.21 -1.00 3.0
Q9P2M1 347 aa/ 1041 nt-663.54 -664.15 -0.61 0.9 -664.95 -1.41 5.5 -665.07 -1.53 5.5
proposed method. Each run was initialized with a distinct random
seed, ensuring consistency across different methods and settings.
The final reported result, ∆G◦
ens, for each method and setting
was determined by selecting the best mRNA sequence evaluated
by LinearPartition (using the -V -b0 -d0 options) from all the
runs. For the baseline method, we implemented a 100-step random
walk for each run. In contrast, our method employed a 30-step
projected gradient descent, as we consistently observed model
convergence within this number of iterations for proteins of varying
lengths. Regarding the initialization parameter εin our method,
we consistently used ε= 0.5, as empirical testing revealed this to
be the most effective setting across different proteins.
Table 1 presents the comparative results of these different
methods. At a glance, the random walk method provides a robust
baseline, generally yielding mRNA sequences with lower ensemble
free energy ( ∆G◦
ens) across the tested protein sequences. However,
an analysis of the percentage change in codons compared to the
MFE solution reveals that the random walk baseline tends to
explore sequences in close proximity to the MFE solution (typically
within about 1-2% change for longer proteins), indicating its
potential limitations for longer proteins.
In contrast to the baseline, our method demonstrated the
ability to identify more diverse mRNA solutions, differing more
significantly from the MFE solution than those found by the
baseline. This is particularly evident in the case of longer proteins,
where the best solutions from our method display a 3-5% variation
in codons relative to the MFE solutions, as depicted in Fig.4a.
Additionally, our method not only explores a broader range of
mRNA sequences than the baseline but also consistently achieves
higher ensemble free energy for the best-found sequences. Moreover,
in scenarios with a beam size of 200, there is a discernible trend: for50 100 150 200 250 300 350012345678
Protein Length (amino acids)% Codon ChangedBaseline
Ours ( b=200)
(a) Percentage of Codon Change vs. Protein Length.
50 100 150 200 250 300 350−1.75−1.5−1.25−1−0.75−0.5−0.2500.250.5
Protein Length (amino acids)∆∆G◦
ensBaseline
Ours ( b=200)
(b) Change in Ensemble Free Energy ( ∆∆G◦
ens) vs. Protein Length.
Fig. 4: Comparative Analysis of Codon Changes and Ensemble
Free Energy Variations. These subfigures collectively display the
performance of the baseline method and our proposed method
(beam size of 200) in terms of codon variability and ∆∆G◦
ensacross
a range of protein lengths, according to the results in Table 1.
longer sequences, our method tends to yield solutions with greater
improvements compared to the baseline method, as illustrated in
Fig. 4b. These findings indicate the potential advantages of our
method, especially for sequences of extended length.mRNA Design via Expected Partition Function and Continuous Optimization 7
Beam Pruning Search Error Analysis
In this part, we aimed to quantify the search error introduced by
the beam pruning method. To achieve this, we tracked and recorded
the objective values computed at various beam sizes throughout the
30-step optimization process. Our analysis focused on comparing
these values with the ‘true’ objective value, which we obtained in
the absence of beam pruning. The results, illustrated in Fig. 5,
display the relative search error across different sequence lengths
and various stages of optimization.
The findings reveal that search errors tend to be more significant
during the early stages of optimization when the distributions are
relatively ‘soft’, characterized by higher entropy (see Fig. 6b). For
instance, in the initial iterations (1-5), we observed a maximum
relative error of approximately 16%, with an average error around
5%. In contrast, during the later stages of the process (iterations 11-
30), the maximum relative error notably decreases to below 1.25%,
and the mean error falls to less than 0.25%. This trend suggests
that the impact of beam pruning on search accuracy diminishes
as the optimization progresses and the distributions become more
‘focused’ or ‘sharpened.’
150 175 200 225 250 275 300 325 350
Protein Length051015Error%Iterations 1-5
150 175 200 225 250 275 300 325 350
Protein Length0246810Error%Iterations 6-10
150 175 200 225 250 275 300 325 350
Protein Length0.000.250.500.751.001.25Error%Iterations 11-30
b=100
b=100 (mean)
b=200
b=200 (mean)
Fig. 5: Beam Pruning Search Error Relative to Protein Length.
Thisfigure illustrates therelativesearcherrorfor proteinsexceeding
150 amino acids, derived from 5 independent runs using varying
beam sizes. Each run comprised 30 optimization steps. We
categorized the iterations into three groups: 1-5, 6-10, and 11-
30, to highlight the evolution of error across different optimization
stages. Initially, search errors are higher, reflecting early-stage
optimization challenges. Notably, the error does not escalate with
increasing protein length, indicating the pruning’s effectiveness and
stability across varying sequence lengths.In our subsequent analysis, we delved deeper into the
relationship between the entropy of distributions and the search
error attributable to beam pruning during the optimization process.
The data points for this analysis were consistent with those used in
the previous experiments. In this context, we quantify the entropy
of a distribution as the average entropy over all nodes in the
mRNA DFAs. The entropy of a specific node in a DFA, for a given
distribution D, is mathematically computed as follows:
Entropy (D, q) =−X
x∈N(q)Dq(x) log2Dq(x),
where qrepresents a node in the mRNA DFA, and N(q)denotes
the set of nucleotides that are permissible at node q. This set is
determined by the transition function δ(q, a), which specifies the
valid transitions from node qgiven nucleotide a.
0.1 0.2 0.3 0.4 0.5
Entropy051015Error%b=100
0.1 0.2 0.3 0.4 0.5
Entropy051015Error%b=200
(a) Search Error% vs. Entropy
0 5 10 15 20 25 30
Iteration0.10.20.30.40.5Entropy
175200225250275300325
Length
(b) Entropy vs. Iteration
Fig. 6: The interplay between Entropy and Search Error during the
Optimization Process. On the left, the correlation between search
error and entropy for a fixed beam size is shown (Fig. 6a). On the
right, the progression of entropy values through different iterations
is displayed (Fig. 6b), demonstrating a general decrease in entropy
as optimization advances, irrespective of protein length.
As depicted in Fig. 6a, there is a visible trend that, for a
given beam size, the relative search error increases together with8 Dai et al.
606
 605
 604
 603
 602
Minimum Free Energy (MFE)613.5
613.0
612.5
612.0
611.5
Ensemble Free Energy (Gens)
Q8NGU1 (Length = 314)
576
 575
 574
 573
 572
Minimum Free Energy (MFE)583.5
583.0
582.5
582.0
581.5
581.0
Q8NGC9 (Length = 324)
663
 662
 661
 660
 659
 658
Minimum Free Energy (MFE)668.0
667.5
667.0
666.5
666.0
Q99729 (Length = 332)
656
 655
 654
 653
 652
 651
Minimum Free Energy (MFE)665.0
664.5
664.0
663.5
663.0
662.5
Q9P2M1 (Length = 347)
LinearDesign Solution (Best MFE)
Different Runs (Baseline)
Best Solution (Baseline)
Different Runs (Ours)
Best Solution (Ours)
Fig. 7: Comparative 2D plots of Minimum Free Energy (MFE) and Ensemble Free Energy (EFE) values for the final solutions from 20
runs for each of the four longest protein sequences in the dataset. The focus is on the region near the MFE solution, where distinct points
represent unique solutions. Some points overlap due to identical solutions found across multiple runs, while others may not be visible if
they fall outside the zoomed-in area, usually indicating a higher Ensemble Free Energy compared to the MFE solution.
the entropy of the distribution. This observation underpins the
idea that higher uncertainty (entropy) in the distribution leads to
greater search errors during optimization. Furthermore, Fig. 6b
provides a clear illustration of the entropy dynamics throughout
the optimization process. Notably, at the start of optimization,
the entropy values are at their peak, gradually decreasing as the
process progresses. This trend is consistent regardless of the protein
length involved in the study.
Case Study on Long Protein Sequences
In this case study, we focus on four of the longest proteins examined
in our experiments: Q8NGU1,Q8NGC9,Q99729, and Q9P2M1. The
results of all 20 runs for each sequence were evaluated. We visualize
the outcomes as points on a 2D plane based on their Minimum
Free Energy (MFE) and Ensemble Free Energy (EFE) values, as
calculated by LinearFold and LinearPartition, respectively (see
Fig. 7).
Akeyobservationfromtheresultsisthetendencyofthebaseline
method to yield solutions clustered around the MFE solution.
This pattern is consistent with our earlier findings (Fig. 4a),
indicating the baseline’s limited exploration range, primarily near
the initial MFE solution. Conversely, our method demonstrates a
broader search capability, generating more diverse solutions that
significantly deviate from the MFE baseline.
Whileourapproachoutperformsthebaselineintermsofsolution
diversity, it’s crucial to note that it can sometimes converge to
suboptimal solutions with higher EFE than the MFE solution. This
outcome contrasts with the baseline method, which consistently
improves or matches the MFE solution. Our method’s divergence
from the initial distribution during gradient descent may lead
to local optima without prior knowledge of their EFE values. To
addresstheriskofconvergingtosuboptimalsolutions, weemphasize
the importance of multiple initializations and runs. By exploring
various starting points, our method increases the likelihood of
discovering superior solutions, particularly vital for long protein
sequences.
Results on the SARS-CoV-2 Spike Protein
We further test our algorithm on the SARS-CoV-2 Spike Protein,
comprising 1,273 amino acids, and compare it with both the
Random Walk baseline and LinearDesign. As indicated in Table 2,
our method’s best solution exhibits a 3.8%codon alteration,Table 2. Results of LinearDesign, Baseline, and Our Methods on the
SARS-CoV-2 Spike Protein.
LinearDesignRandom Walk soft-MFE ε=0.5, b=300
MFE solution∆G◦
ens ∆∆G◦
ens% codon∆G◦
ens ∆∆G◦
ens% codon
∆G◦
ens changed changed
-2511.49 -2512.31 -0.82 0.2 -2515.84 -4.35 3.8
2487
 2486
 2485
 2484
 2483
 2482
Minimum Free Energy (MFE)2516
2515
2514
2513
2512
2511
Ensemble Free Energy (Gens)
LinearDesign Solution (Best MFE)
Best Solution (Baseline)
Best Solution (Ours)
Fig. 8: Comparison of Minimum Free Energy (MFE) and Ensemble
Free Energy (EFE) for the best solutions from LinearDesign,
Baseline, and Our Method on the SARS-CoV-2 Spike Protein.
significantly surpassing the baseline’s 0.2%variation from the
MFE solution. This underscores our method’s advantage for
long sequences. Additionally, our method markedly improves the
Ensemble Free Energy, as depicted in Fig. 8. While aiming for
superior ensemble free energy, our solution accepts a trade-off in
minimum free energy, unlike the baseline, which maintains the
MFE but with lesser ensemble free energy improvement.
6. Related Work
The recent work by Matthies et al.(2023) proposes a framework
very similar to our expected partition function, which they call
the “structure-sequence partition function”, but from a different
motivation and for the different task of non-coding (ncRNA)
RNA design. They first defined the concept of “sequence partitionmRNA Design via Expected Partition Function and Continuous Optimization 9
function” as
eQy(D) =X
xD(x)e−∆G(x,y)/RT=Ex∼D(·)[e−∆G(x,y)/RT],
and then extended it to the “structure-sequence partition function”:
eQ(D) =X
yeQy(D).
We argue that this framework is a better fit for mRNA design
than ncRNA design because as Zhang et al.(2023) showed, the
mRNA design space can be categorized by a regular language (or
finite-state automata) and the objective function (either MFE or
partition function) can be formulated as a stochastic context-free
grammar (SCFG). It is well-known in formal language theory that
the intersection of a (stochastic) context-free language and a regular
language is another (stochastic) context-free language, which is
the essential reason why Zhang et al.(2023)’s algorithm for MFE-
based mRNA design runs in worst-case O(n3)time. By contrast,
the design space for ncRNA design given a target structure yis not
a regular, but rather a context-free language, because the paired
positions in yare correlated (for any pair (i, j)∈y,xixjmust
be pairable; it is straightforward to write a context-free grammar
for the set of all possible xfory). Unfortunately, the intersection
of two context-free languages are context sensitive, which rules
out polynomial-time algorithms. This observation suggests that
ncRNA design is fundamentally harder than mRNA design, and
this framework is more promising for mRNA design.
7. Conclusions and Future Work
We described a general framework of continuous optimization for
RNA design problems based on the concept of expected partition
function, which is a generalization of classical partition function to
a distribution of sequences. We showed how to use this framework
for an important use case, the mRNA design problem optimizing
for partition function (i.e., ensemble free energy) which is much
harder than the optimization for MFE. Our results on 20 protein
sequences showed that our approach can consistently improve
over LinearDesign’s results, with bigger improvements on longer
sequences.
References
Baden, L. R. et al.(2021). Efficacy and safety of the mRNA-
1273 SARS-CoV-2 vaccine. New England Journal of Medicine ,
384(5), 403–416.
Bonnet, É. et al.(2020). Designing RNA secondary structures is
hard. Journal of Computational Biology ,27(3), 302–316.
Cohen, B. and Skiena, S. (2003). Natural selection and algorithmic
design of mRNA. Journal of Computational Biology ,10(3-4),
419–432.
Consortium, T. U. (2022). UniProt: the Universal Protein
Knowledgebase in 2023. Nucleic Acids Research ,51(D1),
D523–D531.
Do, C. B. et al.(2006). Contrafold: RNA secondary structure
prediction without physics-based models. In Proceedings 14th
International Conference on Intelligent Systems for Molecular
Biology 2006, Fortaleza, Brazil, August 6-10, 2006 , pages 90–98.
Eisner, J. (2016). Inside-outside and forward-backward algorithms
are just backprop (tutorial paper). In K. Chang, M. Chang,A. M. Rush, and V. Srikumar, editors, Proceedings of the
Workshop on Structured Prediction for NLP@EMNLP 2016,
Austin, TX, USA, November 5, 2016 , pages 1–17. Association
for Computational Linguistics.
Huang, L. et al.(2019). LinearFold: linear-time approximate
RNA folding by 5’-to-3’ dynamic programming and beam search.
Bioinformatics ,35(14), i295–i304.
Lorenz, R. et al.(2011). Viennarna package 2.0. Algorithms Mol.
Biol.,6, 26.
Matthies, M. et al.(2023). Differentiable Partition Function
Calculation for RNA. Nucleic Acids Research .
Mauger, D. M. et al.(2019). mRNA structure regulates protein
expression through changes in functional half-life. Proceedings of
the National Academy of Sciences U.S.A. ,116(48), 24075–24083.
McCaskill, J.S.(1990). Theequilibriumpartitionfunctionandbase
pair probabilities for RNA secondary structure. Biopolymers ,
29, 1105–19.
Polack, F. P. et al.(2020). Safety and efficacy of the BNT162b2
mRNA Covid-19 vaccine. New England journal of medicine ,
383(27), 2603–2615.
Terai, G. et al.(2016). CDSfold: an algorithm for designing a
protein-codingsequencewiththemoststablesecondarystructure.
Bioinformatics ,32(6), 828–834.
Turner, D. H. and Mathews, D. H. (2009). NNDB: the nearest
neighbor parameter database for predicting stability of nucleic
acid secondary structure. Nucleic Acids Research ,38, D280–
D282.
Wikipedia (2023). DNA and RNA codon tables. Wikipedia, The
Free Encyclopedia.
Wu, F. et al.(2020). A new coronavirus associated with human
respiratory disease in china. Nature,579(7798), 265–269.
Zhang, H. et al.(2020). LinearPartition: linear-time approximation
of RNA folding partition function and base-pairing probabilities.
Bioinformatics ,36(Supplement_1), i258–i267.
Zhang, H. et al.(2023). Algorithm for optimized mRNA design
improves stability and immunogenicity. Nature,621(7978),
396–403.
Zhou, T. et al. (2023). RNA design via structure-
aware multifrontier ensemble optimization. Bioinformatics ,
39(Supplement_1), i563–i571.10 Dai et al.
function LD-Partition (D, b) ▷ bis beam size
n←length of D
QS←hash() ▷hash table: from state [qi, qj]toQS
qi,qj
QP←hash() ▷hash table: from state [qi, qj]toQP
qi,qj
forj= 4. . . ndo
forqj−1∈nodes (D, j−1)andqis.t.(qi, qj−1)∈eQSdo
forqj−1b−→qj∈out_edges (D, qj−1)do
QS
qi,qj+=QS
qi,qj−1·e−δ(b)
RT
forqi−1a−→qi∈in_edges (D, qi)do
ifa, bin{au,ua,cg,gc,gu,ug}then
QP
qi−1,qj+=QS
qi,qj−1·e−ξ(a,b)
RT
BeamPrune (QS, QP, j, b) ▷top-bamong all QP
qi,qj
forqj∈nodes (D, j)do
forqisuch that (qi, qj)∈QPdo
forqksuch that (qk, qi)∈QSdo
QS
k,j+=QS
k,i·QP
i,j
BeamPrune (QS, QS, j, b) ▷top-bamong all QS
qi,qj
return QS
q0,qnfunction LD-ExPartition (D=⟨D, τ⟩,b) ▷ bis beam size
n←length of D
eQS←hash() ▷hash table: from state [qi, qj]toeQS
qi,qj
eQP←hash() ▷hash table: from state [qi, qj]toeQP
qi,qj
forj= 4. . . ndo
forqj−1∈nodes (D, j−1)andqis.t.(qi, qj−1)∈eQSdo
forqj−1b:τ(qj−1, b)
− − − − − − − → qj∈out_edges (D, qj−1)do
eQS
qi,qj+=τ(qj−1, b)·eQS
qi,qj−1·e−δ(b)
RT
forqi−1a:τ(qi−1, a)
− − − − − − − → qi∈in_edges (D, qi)do
ifa, bin{au,ua,cg,gc,gu,ug}then
eQP
qi−1,qj+=τ(qi−1, a)·τ(qj−1, b)·eQS
qi,qj−1·e−ξ(a,b)
RT
BeamPrune (eQS,eQP, j, b) ▷top-bamong all eQP
qi,qj
forqj∈nodes (D, j)do
forqisuch that (qi, qj)∈eQPdo
forqksuch that (qk, qi)∈eQSdo
eQS
k,j+=eQS
k,i·eQP
i,j
BeamPrune (eQS,eQS, j, b) ▷top-bamong all eQS
qi,qj
return eQS
q0,qn
Fig. 9: The pseudocode of (simplified) partition function and expected partition function calculations based on LinearDesign algorithm.
function BeamPrune (QS, QX, j, b)
cands ←hash() ▷hash table: from qito score QS
q0,qi+QX
qi,qj
forqj∈nodes (j)dos
for(qi, qj)∈QXdo
cands [qi]←QS
q0,qi+QX
qi,qj▷ QS
q0,qias prefix score
cands ←SelectTopB (cands , b) ▷select top- bby score
for(qi, qj)∈QXdo
ifqi̸∈cands then
delete (qi, qj)inQX▷prune out low-scoring states
Fig. 10: The pseudocode of beam pruning.
Appendix: Probabilistic mRNA DFAs
In the context of mRNA design challenges, our objective is to
derive an mRNA sequence, x= (x1, x2, . . . , x 3n), where xi
represents the i-th nucleotide, corresponding to a given target
protein sequence, p= (p1, p2, . . . , p n)with piindicating the i-
th amino acid residue. This mRNA sequence must be capable of
being translated into the target protein. Following the framework
proposed in LinearDesign (Zhang et al., 2023), we can model
all feasible candidate mRNA sequences through a representation
known as an mRNA Deterministic Finite Automaton (DFA).
A DFA is formally defined as a 5-tuple D=⟨Q,Σ, δ, q0, F⟩,
where:
•Qdenotes the set of states,
•Σis the alphabet, for our purposes Σ ={A,C,G,U},
•q0is the initial state, denoted as state (0,0)in our analysis,
•Frepresents the set of final states, which is unique in this
context,
•δis the transition function that maps a state qand a symbol
a∈Σto a subsequent state q′, symbolically, δ(q, a) =q′, which
is represented as a labeled edge from qtoq′with label a.
To construct the mRNA DFA, we begin by creating individual
DFAs for each amino acid. These are then concatenated to form a
single comprehensive DFA, D(p), for the entire protein sequence p.
This collective DFA represents all possible mRNA sequences thatcould translate into the protein:
D(p) =D(p0)◦D(p1)◦ ··· ◦ D(p|p|−1)◦D(stop)
where the end state of the complete mRNA DFA is state(3|p|+3,0),
and the length of the DFA is defined as 3|p|+ 3.
Extending this framework, we introduce a probabilistic DFA
(pDFA) defined by a 6-tuple D=⟨D, τ⟩=⟨Q,Σ, δ, q0, F, τ⟩, where
the initial five components are identical to those in D, and τ
represents the probability function. This function assigns to each
transition from state q∈Qusing symbol a∈Σa probability
within the range [0,1]. Specifically, for any state q, the probability
distribution is given by:
τ(q,·) :N(q)7→[0,1],s.t.X
x∈N(q)τ(q, x) = 1 .
where N(q)denotes the set of nucleotides allowed from state q,
as determined by the transition function δ, defining the valid
transitions from qwith nucleotide a. Thus, each path through Dis
associated with a probability defined by τ, making Da distribution
over possible mRNA sequences.
In the pDFA D, the probability of an mRNA sequence xwithin
the distribution defined by it is conceptualized as the product of
probabilities across each node along the sequence’s path:
D(x) =Y
iτ(qi, xi),given q0= (0,0)andqi+1=δ(qi, xi),
where q0=state(0,0)is the starting node, and qi+1=δ(qi, xi)
is the next node reached by following the edge corresponding to
nucleotide xi.
For the sake of clarity in pseudocode representation, we define
nodes (D, j) ={(j,0),(j,1)}as the set of nodes at position j,
in_edges (q) ={edge(q′, a, q)|δ(q′, a) =q}to denote the set of
incoming edges to state q, andout_edges (q) ={edge(q, a, q′)|
δ(q, a) =q′}to denote the set of outgoing edges from state q.
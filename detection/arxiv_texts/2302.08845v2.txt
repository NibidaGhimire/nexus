arXiv:2302.08845v2  [eess.SP]  14 Mar 20231
On Frequency-Domain Implementation of Digital
FIR Filters Using Overlap-Add and Overlap-Save
Techniques
Håkan Johansson, Senior Member ,IEEE , and Oscar Gustafsson, Senior Member ,IEEE
Abstract —In this paper, new insights in frequency-domain
implementations of digital ﬁnite-length impulse response ﬁl-
tering (linear convolution) using overlap-add and overlap -save
techniques are provided. It is shown that, in practical ﬁnit e-
wordlength implementations, the overall system correspon ds to
a time-varying system that can be represented in essentiall y
two different ways. One way is to represent the system with
a distortion function and aliasing functions, which in this
paper is derived from multirate ﬁlter bank representations .
The other way is to use a periodically time-varying impulse-
response representation or, equivalently, a set of time-in variant
impulse responses and the corresponding frequency respons es.
The paper provides systematic derivations and analyses of t hese
representations along with ﬁlter impulse response propert ies
and design examples. The representations are particularly useful
when analyzing the effect of coefﬁcient quantizations as we ll
as the use of shorter DFT lengths than theoretically require d.
A comprehensive computational-complexity analysis is als o pro-
vided, and accurate formulas for estimating the optimal DFT
lengths for given ﬁlter lengths are derived. Using optimal D FT
lengths, it is shown that the frequency-domain implementat ions
have lower computational complexities (multiplication ra tes) than
the corresponding time-domain implementations for ﬁlter l engths
that are shorter than those reported earlier in the literatu re.
In particular, for general (unsymmetric) ﬁlters, the frequ ency-
domain implementations are shown to be more efﬁcient for
all ﬁlter lengths. This opens up for new considerations when
comparing complexities of different ﬁlter implementation s.
Index Terms —Linear convolution, FIR ﬁlters, DFT/IDFT,
frequency-domain implementation, overlap-add, overlap- save,
low complexity.
I. I NTRODUCTION
DIGITAL ﬁnite-length impulse response (FIR) ﬁltering
(linear convolution) of an inﬁnitely long (in practice
very long) input sequence can be efﬁciently implemented
in the frequency domain using overlap-add or overlap-save
techniques [1], [2]. These techniques make use of the discre te
Fourier transform (DFT) and its inverse (IDFT). In between
the transforms, there is a diagonal matrix whose diagonal
elements are the ﬁlter’s DFT coefﬁcients, hereafter also re -
ferred to as DFT ﬁlter coefﬁcients. The DFT and IDFT can
be efﬁciently implemented using fast Fourier transform (FF T)
algorithms which is the reason for the overall efﬁciency.
The basic overlap-add and overlap-save principles are well
known [1], [2], but there are few publications that consider
their fundamental implementation properties. These techn iques
The authors are with the Department of Electrical Engineeri ng,
Linköping University, Linköping, Sweden (e-mail:hakan.j ohansson@liu.se,
oscar.gustafsson@liu.se).are however gaining an increasing interest, in particular i n
applications requiring long and/or many ﬁlters. Examples
of such applications include equalization of chromatic dis -
persion in optical communications [3]–[8], ﬁlter banks and
channelizers with many channels [9]–[13], ﬁlters with narr ow
transition bands (don’t-care bands) [14], signal reconstr uc-
tion/enhancement [15], [16], and predistortion in multipl e-
input multiple-output (MIMO) systems [17].
Most of the previous papers that utilize the overlap-save-
or overlap-add-based implementations focus on the applica -
tions and study the overall system performance for differen t
instances [5], [7]–[10], [13], [17]. In this paper, the focu s
is instead on fundamental properties of the overlap-add and
overlap-save implementations. For these implementations , as
will be shown, the inevitable coefﬁcient quantizations mak e
the overall system a time-varying system instead of the in-
tended time-invariant system. Hence, the analysis of coefﬁ -
cient quantization becomes more complicated than for the
time-domain implementation, where it sufﬁces to assess the
frequency response of the ﬁlter with quantized coefﬁcients
[18], [19]. A time-varying system, on the other hand, cannot
be characterized with a frequency response. Instead, such
a system can be characterized in two different ways. One
way is to represent it with a distortion function and aliasin g
functions which can be derived from a multirate ﬁlter bank
(MFB) representation [20], [21], or via block digital ﬁlter
representation which utilizes matrix-vector quantities [ 22],
[23]. The other way is to use a periodically time-varying
impulse-response (PTVIR) representation which correspon ds
to a set of time-invariant impulse responses and their respe ctive
frequency responses [20], [21].
The MFB and PTVIR representations make it possible to
separate the coefﬁcient quantization analysis from the dat a
quantization analysis, which should be carried out separat ely
[18], [19]. The representations are also useful when analyz ing
the effect of using shorter DFT lengths than theoretically
required for a given impulse response length and input signa l
block length, which also results in a time-varying system.
This occurs for example when designing the ﬁlter using its
DFT coefﬁcients as design parameters, and when the diagonal
matrix between the DFT and IDFT is replaced with a more
general matrix, both options used as a means to reduce the
overall approximation error in the least-squares sense for given
DFT and block lengths [22], [23]. In these generalized cases ,
the overall system is also referred to as a block digital ﬁlte r
[22]. Shorter DFT lengths also occur when using zero padding2
in the frequency domain as a means to carry out time-domain
interpolation efﬁciently. An example of this will be presen ted
in Section VI of this paper.
A. Contributions
The main contributions of this paper are as follows.
•Systematic derivations and analyses of the MFB and
PTVIR representations of the overlap-add and overlap-
save frequency-domain implementations are provided.
Analysis of frequency-domain implementation of linear
convolution was also considered in [22], [23]. However,
[22], [23] expressed the overall system in terms of the
distortion and aliasing functions but did not explicitly
express the overall system in terms of the MFB and
PTVIR representations considered in this paper. Hence,
this paper provides further insights for the design, anal-
yses, and understanding, as it derives representations
in terms of ﬁlters instead of matrix-vector quantities.
It is noted here that some parts of this contribution
have been presented at a conference [24], but only the
basic principles of the overlap-add technique. Here, it is
extended to incorporate the overlap-save technique and
the additional contributions below.
•Expressions for the impulse responses in the PTVIR
representation are derived and a detailed analysis of their
lengths and relations is provided. This has not been con-
sidered earlier in the literature. The expressions hold for
quantized coefﬁcients as well, and are thus useful when
analyzing the effects of coefﬁcient quantization which,
as mentioned before, should be carried out separately
from the data quantization analysis [18], [19]. As will be
shown, which is not obvious at ﬁrst sight, the overlap-
add and overlap-save techniques have different impulse
response properties when using quantized coefﬁcients
(quantized DFT ﬁlter coefﬁcients and complex exponen-
tials in the DFT/IDFT1), as well as shorter DFT lengths
than theoretically required.
•A comprehensive computational-complexity analysis is
provided, and the issue of selecting the optimal DFT
length for a given ﬁlter length is addressed. Based on
those results, we derive accurate formulas for estimating
the optimal DFT lengths, which have not been reported
before and differ from other works where optimal de-
sign refers to optimal overall ﬁltering performance for
ﬁxed DFT and ﬁlter lengths [22], [23]. It will also be
shown that, using optimal DFT lengths, that minimize
the computational complexities (multiplication rates), t he
frequency-domain implementations become more efﬁ-
cient than the corresponding time-domain implementa-
tions for ﬁlter lengths that are shorter than those reported
earlier in the literature [1], [25], [26]. In particular, fo r
general (unsymmetric) ﬁlters, the frequency-domain im-
plementations are shown to be more efﬁcient for all ﬁlter
1In efﬁcient FFT/IFFT implementations of the DFT/IDFT, the c omplex
exponentials in the DFT/IDFT are not explicitly quantized. Instead, they are
implicitly quantized throught the quantizations of the twi ddle factors in the
FFT/IFFT architectures.lengths. This result opens up for new considerations when
comparing complexities of different ﬁlter implementation
options.
B. Outline and Notations
Following this introduction, Section II recapitulates the
overlap-add and overlap-save techniques. Sections III and
IV derive the MFB and PTVIR representations, respectively.
Section V analyzes the impulse response lengths and relatio ns
between the impulse responses in the PTVIR representation
whereas Sections VI and VII provide design examples and
computational-complexity analysis, respectively. Final ly, Sec-
tion VIII concludes the paper.
Throughout this paper, a sequence (discrete-time signal) i s
denoted as x(n). The Fourier transform of x(n)is deﬁned by
X(ejω) =∞/summationdisplay
n=−∞x(n)e−jωn, (1)
withω[rad] being the frequency variable (angle), and the
inverse Fourier transform is given by
x(n) =1
2πˆπ
−πX(ejω)ejωndω. (2)
Thez-transform of x(n),X(z), is obtained from (1) by
replacing ejωwith the complex variable z. Further, the N-
point DFT of a length- Nsequence x(n), n= 0,1,...,N−1,
is deﬁned by
X(k) =N−1/summationdisplay
n=0x(n)e−j2πkn/N, k= 0,1,...,N−1,(3)
whereas the IDFT is given by
x(n) =1
NN−1/summationdisplay
k=0X(k)ej2πkn/N, n= 0,1,...,N−1.(4)
We refer to X(k)as the DFT coefﬁcients of x(n). For an
impulse response h(n)of a ﬁlter, we refer to H(k)as the
DFT ﬁlter coefﬁcients.
II. O VERLAP -ADD AND OVERLAP -SAVE TECHNIQUES
The point of departure is that we are to implement a digital
FIR ﬁlter with the impulse response h(n)of length L(and
thus having a ﬁlter order of L−1), for an input sequence
x(n)generating an output sequence y(n). This corresponds to
linear convolution according to
y(n) =L−1/summationdisplay
p=0h(p)x(n−p). (5)
For convenience in the equations that follow, we have here
assumed that the input x(n)is zero for negative values of n.
The linear convolution can be implemented in the frequency
domain using the overlap-add and overlap-save methods as3
/MT72/MT40/MT78/MT45/MT49/MT41/MT72/MT40/MT48/MT41
/MT72/MT40/MT49/MT41
/MT73/MT68/MT70/MT84 /MT68/MT70/MT84
/MT32/MT32/MT48/MT32/MT32/MT48/MT48
/MT77/MT45/MT49
/MT78/MT45/MT49 /MT78/MT45/MT49/MT48
/MT78/MT45/MT49/MT48 /MT48
/MT78/MT45/MT49/MT120/MT109/MT40/MT48/MT41
/MT120/MT109/MT40/MT49/MT41
/MT120/MT109/MT40/MT77/MT45/MT49/MT41/MT121/MT109/MT40/MT48/MT41
/MT121/MT109/MT40/MT49/MT41
/MT121/MT109/MT40/MT78/MT45/MT49/MT41/MT77
Figure 1. Frequency-domain computation of the output segme ntym(n)in
the overlap-add technique.
detailed below. Both methods utilize a zero-padded impulse
response sequence of length2
N=L+M−1, (6)
according to
hz(n) =/braceleftBigg
h(n), n= 0,1,...,L−1,
0, n=L,L+1,...,N−1.(7)
In the implementation, the NDFT ﬁlter coefﬁcients of hz(n),
sayH(k), k= 0,1,...,N−1, will be used. They are given
by
H(k) =N−1/summationdisplay
n=0hz(n)e−j2πnk/N=L−1/summationdisplay
n=0h(n)e−j2πnk/N.(8)
Further,Mdenotes the length of the input segments (output
segments) in the overlap-add (overlap-save) methods.
A. Overlap-Add Method
In the overlap-add method [2], the input sequence x(n)is
divided into adjacent input segments xm(n), m= 0,1,2,...,
of length M. Then, each input segment is zero-padded to form
a sequence of length N=L+M−1according to
xm(n) =/braceleftBigg
x(n+mM), n= 0,1,...,M−1,
0, n =M,M+1,...,N−1.(9)
Also utilizing the zero-padded length- Nimpulse response
sequence hz(n)in (7), the output y(n)can then be computed
as a sum of shifted and partially overlapping output segment s
of length Naccording to
y(n) =∞/summationdisplay
m=0yk(n−mM), (10)
where the output segments ym(n)are obtained from the
convolution
ym(n) =N−1/summationdisplay
p=0hz(p)xm(n−p) =L−1/summationdisplay
p=0h(p)xm(n−p).(11)
2The expressions and properties to be derived in Sections III –V hold for all
N≥L. However, when N < L+M−1, i.e. the DFT length is too short,
the linear convolution is not properly implemented in the fr equency domain
and the expressions and properties can then be used to asses t he errors that
are introduced, as demonstrated in Example 2 in Section VI./MT72/MT40/MT78/MT45/MT49/MT41/MT72/MT40/MT48/MT41
/MT72/MT40/MT49/MT41/MT121/MT40/MT110/MT41
/MT122/MT150/MT49/MT122/MT150/MT49
/MT73/MT68/MT70/MT84 /MT68/MT70/MT84/MT122
/MT122/MT77 /MT120/MT40/MT110/MT41
/MT77/MT77
/MT32/MT32/MT48/MT48
/MT77/MT45/MT49
/MT78/MT45/MT49/MT77
/MT77/MT77
/MT78/MT45/MT49/MT48
/MT78/MT45/MT49/MT48 /MT48
/MT78/MT45/MT49/MT32/MT32/MT48 /MT77
Figure 2. Frequency-domain implementation using the overl ap-add technique.
Each output segment ym(n)can be computed by pointwise
multiplying H(k)byXm(k), i.e., the length- NDFT coefﬁ-
cients of xm(n), and computing the length- NIDFT of the so
obtained result. This is depicted in Fig. 1. Since the length
of the output segments yk(n)isN, whereas each of these
segments is shifted mM samples to form the output y(n),
there is an overlap of L−1samples between consecutive
output segments. For the overlapping time indices, the samp les
of the corresponding output segments are consequently adde d
to form the output samples. For the remaining time indices,
the output samples are taken directly from the correspondin g
output segment. Utilizing upsamplers and downsamplers [20 ],
the overlap-add method can be represented by the structure3
in Fig. 2.
B. Overlap-Save Method
In the overlap-save method [2], the input sequence x(n)
is divided into overlapping input segments xm(n), m=
0,1,2,..., of length Naccording to
xm(n) =x(n+mM), n= 0,1,...,N−1. (12)
The output y(n)can again be computed as a sum of output
segments ym(n)according to (10). However, here, ym(n)are
length-Msegments and thus adjacent, not overlapping. They
are obtained as
ym(n) =ymC(n+L−1), n= 0,1,...,M−1, (13)
where each ymC(n)is the length- Noutput of the circular
convolution between hz(p)andxm(n), as given by [2]
ymC(n) =N−1/summationdisplay
p=0hz(p)xm(n−pmodN). (14)
Each output segment ym(n)can be computed by ﬁrst
pointwise multiplying H(k)byXm(k), then computing the
length-NIDFT of the so obtained result, and ﬁnally discarding
the ﬁrstL−1values of the NIDFT output values. This is
illustrated in Fig. 3. An advantage of the overlap-save tech -
nique is that the output segments do not overlap which means
that the output additions present in the overlap-add method are
avoided. However, there are also other implementation aspe cts
3The noncausal (negative) delays, represented by zin the structures of Figs.
2 and 4, are not explicitly implemented. Together with the do wnsamplers, they
are used to describe how the input segments xm(n)can be generated from
x(n), which is utilized in the multirate ﬁlter bank representati on.4
/MT72/MT40/MT78/MT45/MT49/MT41/MT72/MT40/MT48/MT41
/MT72/MT40/MT49/MT41
/MT73/MT68/MT70/MT84 /MT68/MT70/MT84/MT48
/MT78/MT45/MT77
/MT78/MT45/MT49 /MT78/MT45/MT49 /MT78/MT45/MT49/MT48
/MT78/MT45/MT49/MT48 /MT120/MT109/MT40/MT48/MT41
/MT120/MT109/MT40/MT78/MT45/MT49/MT41/MT120/MT109/MT40/MT49/MT41/MT78/MT45/MT77/MT45/MT49/MT48
/MT121/MT109/MT40/MT48/MT41
/MT121/MT109/MT40/MT77/MT45/MT49/MT41/MT68/MT105/MT115/MT99/MT97/MT114/MT100/MT101/MT100
Figure 3. Frequency-domain computation of the output segme ntym(n)in
the overlap-save technique.
to consider, which means that the overlap-add technique may
still be competitive as to the overall implementation com-
plexity. In particular, one needs to consider the fact that t he
overlap-add technique uses a DFT with L−1inputs being zero,
whereas the overlap-save technique uses an IDFT with L−1
outputs being unused. Hence, in both cases, some operations
in the DFT and IDFT may be removed. The exact amount of
savings depend on the architecture as well as the values of L,
M, andN.
Finally, again utilizing upsamplers and downsamplers [20] ,
the overlap-save method can be represented by the structure
in Fig. 4 where H(k),k= 0,1,...,N−1, are again the N
DFT coefﬁcients of hz(n)given by (8).
III. M ULTIRATE FILTER BANK REPRESENTATION
Using properties of DFT FBs [20], the scheme in Fig. 2 can
be equivalently represented by an N-channel MFB, as depicted
in Fig. 5, with analysis ﬁlters Gk(z),k= 0,1,...,N−1, and
synthesis ﬁlters Fk(z),k= 0,1,...,N−1, as described below
for the two cases. It is stressed that the MFB representation in
Fig. 5 is used for analysis purposes only. It should not be use d
for the implementation of the overlap-add and overlap-save
techniques, as its complexity is higher than the complexiti es
of the schemes in Figs. 2 and 4.
A. Overlap-Add
In this case, the analysis and synthesis ﬁlters have length- M
and length- Nimpulse responses, respectively, and are given
by4
gk(n) =ej2π(n−M+1)k/N, n= 0,1,...,M−1,(15)
and
fk(n) =1
Nej2πnk/N, n= 0,1,...N−1. (16)
4Deriving gk(n)from the realizations in Figs. 2 and 4, one obtains
noncausal analysis ﬁlters (due to the use of z, see Footnote 1). To obtain the
corresponding causal ﬁlter impulse responses in (15) and (1 9), the noncausal
ﬁlter impulse responses have been right-shifted M−1andN−1steps,
respectively. This corresponds to replacing nwithn−M+1andn−N+1,
respectively. Further, since e−j2πNk/N= 1 for all integers k,Ncan be
eliminated, which leaves only n+1 seen in (19). Similarly, n−Mseen in
(20) for the overlap-save impulse responses fk(n), emanates from a left-shift
byL−1 =N−Msamples due to the discard of L−1IDFT output samples./MT72/MT40/MT78/MT45/MT49/MT41/MT72/MT40/MT48/MT41
/MT72/MT40/MT49/MT41/MT121/MT40/MT110/MT41
/MT122/MT150/MT49/MT73/MT68/MT70/MT84 /MT68/MT70/MT84/MT122
/MT122/MT77 /MT120/MT40/MT110/MT41
/MT77/MT77/MT48
/MT78/MT45/MT77
/MT78/MT45/MT49/MT77
/MT77/MT77
/MT78/MT45/MT49/MT122/MT150/MT49
/MT78/MT45/MT49/MT48
/MT78/MT45/MT49/MT48
Figure 4. Frequency-domain implementation using the overl ap-save tech-
nique.
/MT70/MT48/MT40/MT122/MT41
/MT70/MT49/MT40/MT122/MT41
/MT70/MT78/MT150/MT49/MT40/MT122/MT41/MT77
/MT77/MT77 /MT121/MT40/MT110/MT41/MT83/MT121/MT110/MT116/MT104/MT101/MT115/MT105/MT115/MT32/MT70/MT66/MT72/MT40/MT48/MT41
/MT72/MT40/MT78/MT45/MT49/MT41/MT77
/MT120/MT40/MT110/MT41
/MT77/MT77/MT65/MT110/MT97/MT108/MT121/MT115/MT105/MT115/MT32/MT70/MT66
/MT71/MT48/MT40/MT122/MT41
/MT71/MT49/MT40/MT122/MT41
/MT71/MT78/MT150/MT49/MT40/MT122/MT41/MT72/MT40/MT49/MT41
Figure 5. MFB representation of the schemes in Figs. 2 and 4. I t is used for
analysis purposes only.
The corresponding frequency responses are
Gk(ejω) =M−1/summationdisplay
n=0ej2π(n−M+1)k/Ne−jωn(17)
and
Fk(ejω) =1
NN−1/summationdisplay
n=0ej2πnk/Ne−jωn. (18)
B. Overlap-Save
Here, the analysis and synthesis ﬁlters have length- Nand
length-Mimpulse responses, respectively, and are given by
gk(n) =ej2π(n+1)k/N, n= 0,1,...,N−1, (19)
and
fk(n) =1
Nej2π(n−M)k/N, n= 0,1,...,M−1.(20)
The corresponding frequency responses are
Gk(ejω) =N−1/summationdisplay
n=0ej2π(n+1)k/Ne−jωn(21)
and
Fk(ejω) =1
NM−1/summationdisplay
n=0ej2π(n−M)k/Ne−jωn. (22)
C. Distortion and Aliasing Functions
Based on the MFB representation in Fig. 5, one can express
the output Fourier transform Y(ejω)as
Y(ejω) =M−1/summationdisplay
p=0Vp(ejω)X/parenleftbig
ej(ω−2πp/M)/parenrightbig
, (23)5
whereV0(ejω)is the distortion frequency response whereas
the remaining Vp(ejω),p= 1,2,...,M−1, are aliasing
frequency responses. Using well-known input-output relat ions
of MFBs [20], it follows that Vp(ejω)are given by
Vp(ejω) =1
MN−1/summationdisplay
k=0H(k)Gk/parenleftbig
ej(ω−2πp/M)/parenrightbig
Fk(ejω)(24)
whereH(k)is given by (8) whereas Gk(ejω)andFk(ejω)are
the frequency responses of gk(n)andfk(n), as given by (17)
and (18) for overlap-add and by (21) and (22) for overlap-sav e.
Using inﬁnite-precision DFT and IDFT coefﬁcients, we
have5V0(ejω) =H(ejω), whereH(ejω)is the frequency
response of h(n), i.e.,
H(ejω) =L−1/summationdisplay
n=0h(n)e−jωn, (25)
whereas all aliasing terms are zero, i.e., Vp(ejω) = 0 for
p= 1,2,...,M−1. However, when the DFT coefﬁcients
and complex exponentials in the DFT/IDFT are quantized
(see Footnote 1), aliasing will be introduced. This means th at
the frequency-domain implementation of linear convolutio n
corresponds to a weakly time-varying system instead of the
desired time-invariant system. The above representation i s
a useful tool for analyzing the overall system performance
when quantizing the coefﬁcients. One can thereby set requir e-
ments on V0(ejω)to approximate H(ejω)and onVp(ejω),
p= 1,2,...,M−1, to approximate zero. Alternatively,
depending on the application, it may be better to use a PTVIR
representation to assess the overall performance.
IV. P ERIODICALLY TIME-VARYING IMPULSE -RESPONSE
REPRESENTATION
An MFB with M-fold downsampling and upsampling, as in
Fig. 5, corresponds to an M-periodic linear system [21], [27].
The output y(n)of such a system, assuming an FIR system
with impulse response lengths Ln, is given by
y(n) =Ln−1/summationdisplay
q=0hn(q)x(n−q), (26)
wherehn(q) =hn+M(q)denotes the M-periodic impulse
response of the system. Due to the periodicity, such a system
is completely characterized by a set of Mimpulse responses,
hn(q),n= 0,1,...,M−1, and thus by the Mcorresponding
frequency responses
Hn(ejω) =Ln−1/summationdisplay
q=0hn(q)e−jωq. (27)
Using the inverse Fourier transform, the output can then
alternatively be written as
y(n) =1
2πˆπ
−πHn(ejω)X(ejω)ejωndω. (28)
5The frequency-domain implementations have an additional d elay ofM−1
samples due to the blockwise processing. For simplicity, th is delay is left out
in the discussions in Sections III and IV./MT40/MT98/MT41/MT120/MT40/MT110/MT41 /MT104/MT110/MT40/MT113/MT41 /MT121/MT40/MT110/MT41 /MT104/MT110/MT40/MT113/MT41/MT32/MT61/MT32/MT104/MT110/MT43/MT77/MT40/MT113/MT41/MT40/MT97/MT41
/MT121/MT40/MT110/MT41/MT49 /MT77
/MT122/MT150/MT49/MT77
/MT122/MT150/MT40/MT77/MT150/MT49/MT41/MT77/MT77
/MT77
/MT77/MT72/MT48/MT40/MT122/MT41
/MT72/MT49/MT40/MT122/MT41
/MT72/MT77/MT150/MT49/MT40/MT122/MT41/MT120/MT40/MT110/MT41/MT49
/MT122
/MT122/MT77/MT150/MT49
Figure 6. PTVIR representations of the schemes in Figs. 2 and 4.
From the ﬁltering point of view, this means that different
output samples are affected by different frequency respons es,
Hn(ejω). WhenHn(ejω) =H(ejω)for alln, the system
reduces to a regular linear and time-invariant ﬁlter with th e
frequency response H(ejω). In the frequency-domain imple-
mentation of linear convolution, this is the desired result
and corresponds to V0(ejω) =H(ejω)andVp(ejω) = 0 ,
p= 1,2,...,M−1, in the MFB representation. Using
the PTVIR representation, the overall system performance
is thus evaluated by studying Hn(ejω), all of which should
approximate H(ejω).
TheMfrequency responses Hn(ejω)can be derived from
the analysis and synthesis ﬁlters in Fig. 5. To this end, it is ﬁrst
observed that the M-periodic impulse response representation,
depicted in Fig. 6(a), can be equivalently represented by th e
structure in Fig. 6(b) [27]. This structure can also be viewe d
as an MFB representation, with trivial synthesis ﬁlters, bu t it
should not be confused with the general MFB representation
in Fig. 5 of Section III. Hence, regardless of whether the rep -
resentation in Fig. 6(a) or (b) is used, we still refer to it as the
PTVIR representation. Using polyphase decomposition, and
properties of downsamplers and upsamplers [20], it follows
that the transfer functions Hn(z)can be expressed as
Hn(z) =z−nN−1/summationdisplay
k=0H(k)Gk(z)Fkn/parenleftbig
zM/parenrightbig
, (29)
whereFkn(z)denote the polyphase components of Fk(z)in
theM-fold polyphase decomposition
Fk(z) =M−1/summationdisplay
n=0z−nFkn/parenleftbig
zM/parenrightbig
. (30)
Conversely, we can also express the distortion and aliasing
functions of the MFB representation in terms of Hn(z). Using
again well-known input-output relations of MFBs [20], it
follows that Vp(ejω)can be expressed as
Vp(ejω) =1
MM−1/summationdisplay
n=0Hn/parenleftbig
ej(ω−2πp/M)/parenrightbig
e−j2πpn/M. (31)
It is seen that the distortion frequency response V0(ejω)is the
average of the Mﬁlter frequency responses Hn(ejω), whereas6
Table I
PROPERTIES OF THE IMPULSE RESPONSES hn(q), n= 0,1,...,M−1,FOR THE OVERLAP -ADD AND OVERLAP -SAVEMETHODS .
Property Effective length Impulse responses Impulse responses
with quantized H(k) with quantized fk(n)and/orgk(n)
Overlap-add, N/n⌉gationslash=KMM×⌊(N−1−n)/M⌋+M Not circularly shifted Not circularly shifted
Overlap-add, N=KM N Circularly shifted Not circularly shifted
Overlap-save, all N N Circularly shifted Not circularly shifted
each aliasing frequency response Vp(ejω),p= 1,2,...,M−
1,is the average of frequency-shifted and rotated (due to
the multiplication by e−j2πpn/M) versions of Hn(ejω). This
means that a metric based on Hn(ejω)instead of Vp(ejω)may
be a better indicator of the worst-case time-domain error of
the overall system. This will be exempliﬁed in Section VI.
V. I MPULSE RESPONSE PROPERTIES
Using ﬁnite-wordlength coefﬁcients, i.e., quantized DFT
ﬁlter coefﬁcients H(k)and/or quantized complex exponentials
in the DFT/IDFT, i.e., quantized gk(n)and/orfk(n)(see
Footnote 1), the overlap-add and overlap-save methods have
different properties regarding the lengths of and relation s
between the Mimpulse responses hn(q), n= 0,1,...,M−1.
The properties are summarized in Table I. They can be
deduced from (29) which will be shown and discussed in detail
below in subsections V-A and V-B. For convenience, both ﬁlte r
length and order will be used in those sections, recalling th at
the length is the order plus one. Further, the effective orde r
(and length) will be considered. For an FIR ﬁlter with non-
zero impulse response values h(n)forn=n1,n1+1,...,n 2,
the effective order is n2−n1, and thus the effective length is
n2−n1+1.
A. Overlap-Add
For the overlap-add method, the length of gk(n)isM
whereas the length of fk(n)isN. It is seen in (29) that Hn(z)
depends on Gk(z)and the polyphase components of Fk(z),
i.e.,Fkn(zM)as given by (30). This means that the effective
ﬁlter order6, sayKn, ofHn(z)isKn=M−1+KFnMwhich
corresponds to the order of H(k)Gk(z)Fkn(zM), whereM−1
is the order of all Gk(z)whereasKFndenote the orders of
Fkn(z). The highest-power term in (29) is however Kn+n
due to the multiplication of z−n. Thus, in the time domain,
each impulse response hn(q)is obtained through an n-step
right-shift of the impulse response of H(k)Gk(z)Fkn(zM).
It will thus have n−1initial zero-valued impulse response
values. Furthermore, the effective order Kndepends on nin
general. This is because KFnare generally not the same for
alln. The exception is when Nis an integer multiple of M,
sayN=KM , in which case KFn=K−1for allnand,
consequently, Kn=M−1+(K−1)M=N−1for alln.
In general, when N/negationslash=KM ,KFn=⌊(N−1−n)/M⌋.
Further, since the order of Gk(z)isM−1, andGk(z)is
multiplied by Fkn(zM)when expressing the overall transfer
6The effective ﬁlter order is in general Kn. However, it can be smaller
which, in particular, occurs when all coefﬁcients are unqua ntized. In that
case, except for a delay of M−1samples, all Hn(z)coincide with the
originally designed ﬁlter H(z)whose order is L−1.functionHn(z)in (29), the impulse response of znHn(z), say
dn(q), only depends on gk(m)for one distinct time index m
for eachq. To be precise, it follows from (15), (16), and (29)
thatdn(q),q= 0,1,...,K n, can be expressed as
dn(q) =N−1/summationdisplay
k=0H(k)KFn/summationdisplay
r=0gk(q−rM)fk(n+rM). (32)
Since the length of gk(q)isM,gk(q−rM)correspond to
nonoverlapping right-shifted (by M) versions of gk(q). Hence,
for eachq, only one term in the right-most sum in (32) is non-
zero.
For the special case when N=KM , and thus KFn=
K−1,dn(q)can be written as
dn(q) =N−1/summationdisplay
k=0H(k)K−1/summationdisplay
r=0gk(q−rM)fk(n+rM)
=1
NN−1/summationdisplay
k=0H(k)
×K−1/summationdisplay
r=0ej2π(q−M+1−rM)k/Nej2π(n+rM)k/N
=1
NN−1/summationdisplay
k=0H(k)ej2π(q−M+1+n)k/N. (33)
The last equality holds since only one term in the K-term
summation is non-zero for each q. WhenH(k)are quantized,
butgk(q)andfk(q)are not quantized, dn(q)are circularly
shifted [2] versions of each other, which means that all M
impulse responses contain the same set of Nvalues. To show
this, consider dn+m(q)which amounts to replacing nwith
n+min (33). As seen in (33), this is equivalent to replacing
qwithq+m, which corresponds to dn(q)circularly shifted
to the left by msamples. It is also noted that −M+1on the
last two lines of (33) emanates from the additional delay of
M−1samples due to the block processing, as mentioned in
Footnote 5.
In the general case, when N/negationslash=KM ,KFnare not the same
for alln, in which case (32) is still valid, but not (33). Here,
since alldn(q)do not have the same length, the circular-shift
property is lost. The property is also lost for all Nwhengk(q)
andfk(q)are quantized, meaning that the complex exponen-
tials in (33) are quantized (see Footnote 1). This is because
the two independently quantized exponentials, on the secon d
last line in (33), will have index-dependent quantization e rrors
and the last equality and equivalence utilized above will th en
no longer hold.7
Table II
EXAMPLE 1: O RIGINAL IMPULSE RESPONSE h(q)(RIGHT -SHIFTED )AND OVERLAP -ADDIMPULSE RESPONSES hn(q), n= 0,1,2,3, USING
QUANTIZED H(k)BUT UNQUANTIZED gk(n)ANDfk(n), ILLUSTRATING THAT THE CIRCULAR -SHIFT PROPERTY DOES NOTHOLD WHENN/n⌉gationslash=KM .
Original, h(q−3) h0(q) h1(q) h2(q) h3(q)
0 0.000815299395028 0 0 0
0 0.000030422174521 0.000030422174521 0 0
0 0.000083095006610 0.000083095006610 0.000083095006610 0
-0.065517977199101 -0.064843750000000 -0.064843750000000 -0.064843750000000 -0.064843750000000
0.054777425047761 0.054418477371339 0.054418477371339 0.054418477371339 0.054418477371339
0.314937451772624 0.314709622812781 0.314709622812781 0.314709622812781 0.314709622812781
0.464142316077418 0.464214378227023 0.464214378227023 0.464214378227023 0.464214378227023
0.314937451772624 0.315733563910444 0.315733563910444 0.315733563910444 0.315733563910444
0.054777425047761 0.054687500000000 0.054687500000000 0.054687500000000 0.054687500000000
-0.065517977199101 -0.065629858897746 -0.065629858897746 -0.065629858897746 -0.065629858897746
0 0.000815299395028 0.000815299395028 0 0.000815299395028
0 0.000030422174521 0.000030422174521 0 0
0 0 0.000083095006611 0 0
Table III
EXAMPLE 1: O RIGINAL IMPULSE RESPONSE h(q)(RIGHT -SHIFTED )AND OVERLAP -SAVEIMPULSE RESPONSES hn(q), n= 0,1,2,3, USING
QUANTIZED H(k)BUT UNQUANTIZED gk(n)ANDfk(n), SHOWING THE CIRCULAR -SHIFT PROPERTY .
Original, h(q−3) h0(q) h1(q) h2(q) h3(q)
0 0.000815299395028 0 0 0
0 0.000030422174521 0.000030422174521 0 0
0 0.000083095006610 0.000083095006610 0.000083095006610 0
-0.065517977199101 -0.064843750000000 -0.064843750000000 -0.064843750000000 -0.064843750000000
0.054777425047761 0.054418477371339 0.054418477371339 0.054418477371339 0.054418477371339
0.314937451772624 0.314709622812781 0.314709622812781 0.314709622812781 0.314709622812781
0.464142316077418 0.464214378227023 0.464214378227023 0.464214378227023 0.464214378227023
0.314937451772624 0.315733563910444 0.315733563910444 0.315733563910444 0.315733563910444
0.054777425047761 0.054687500000000 0.054687500000000 0.054687500000000 0.054687500000000
-0.065517977199101 -0.065629858897746 -0.065629858897746 -0.065629858897746 -0.065629858897746
0 0 0.000815299395028 0.000815299395028 0.000815299395028
0 0 0 0.000030422174521 0.000030422174521
0 0 0 0 0.000083095006610
B. Overlap-Save
Here, the order of Fk(z)isM−1, which means that the
order of all polyphase components Fkn(zM)is zero, whereas
the order of Gk(z)isN−1. Consequently, the effective order
isKn=N−1for alln. This coincides with the special case
of the overlap-add method with N=KM .
Further, when H(k)are quantized, but gk(q)andfk(q)
are unquantized, the impulse responses of znHn(z),dn(q),
are circularly shifted versions of each other regardless of the
values of NandM. This is different from the overlap-add
method for which this property holds only when N=KM .
For the overlap-save method, it holds for all NandM
because the order of all polyphase components Fkn(zM)is
zero. Consequently, each Fkn(zM)is here a constant, viz.
Fkn(zM) =fk(n), and it then follows from (19), (20), and
(29), that dn(q)can be written as
dn(q) =N−1/summationdisplay
k=0H(k)gk(q)fk(n)
=1
NN−1/summationdisplay
k=0H(k)ej2π(q+1)k/Nej2π(n−M)k/N
=1
NN−1/summationdisplay
k=0H(k)ej2π(q+1+n−M)k/N. (34)
Consider now dn+m(q)which amounts to replacing nwithn+min (34). As seen in (34), this is equivalent to replacing
qwithq+m, which corresponds to dn(q)circularly shifted
to the left by msamples. As for the overlap-add method, the
property is however lost when gk(q)andfk(q)are quantized.
VI. D ESIGN EXAMPLES
Example 1. This example will illustrate the impulse response
properties provided in Section V. To this end, we use a linear -
phase FIR ﬁlter of length L= 7, a block length of M= 4
and a DFT length of N= 10 . We have used an equiripple
design, assuming passband and stopband edges at 0.3πand
0.6π, respectively, and equal passband and stopband ripples.
When rounding, we have used 8fractional bits.
Table II gives the original impulse response h(q)(right-
shifted three steps to ease the comparison) and the four
impulse responses hn(q), n= 0,1,2,3, when using the
overlap-add method and with H(k)quantized. It is seen
that the impulse responses have different effective length s
and that the circular-shift property does not hold which is
becauseN/negationslash=KM . Table III gives the corresponding impulse
responses for the overlap-save method. Here, it is seen that
the impulse responses have the same effective length and tha t
the circular-shift property holds. However, as seen in Tabl e IV,
whengk(n)andfk(n)are quantized as well (i.e., the complex
exponentials in the DFT/IDFT are quantized, see Footnote 1) ,8
Table IV
EXAMPLE 1: O RIGINAL IMPULSE RESPONSE h(q)(RIGHT -SHIFTED )AND OVERLAP -SAVEIMPULSE RESPONSES hn(q), n= 0,1,2,3, USING
QUANTIZED H(k),gk(n),ANDfk(n), SHOWING THAT THE CIRCULAR -SHIFT PROPERTY ISLOST.
Original, h(q−3) h0(q) h1(q) h2(q) h3(q)
0 0.001343357563019 0 0 0
0 0.000361371040344 0.000361371040344 0 0
0 0.000538158416748 0.000160551071167 0.000538158416748 0
-0.065517977199101 -0.064286172389984 -0.064312195777893 -0.064312195777893 -0.064286172389984
0.054777425047761 0.054309082031250 0.054947161674500 0.054378080368042 0.054947161674499
0.314937451772624 0.313703811168671 0.314443969726562 0.314058876037598 0.314058876037598
0.464142316077418 0.463059282302857 0.463059282302857 0.463626098632813 0.463081991672516
0.314937451772624 0.315321087837219 0.314716339111328 0.315321087837219 0.315228271484375
0.054777425047761 0.054968869686127 0.054803586006165 0.054803586006165 0.054968869686127
-0.065517977199101 -0.065100097656250 -0.065209484100342 -0.065339374542236 -0.065209484100342
0 0 0.001248168945313 0.000872826576233 0.000872826576233
0 0 0 0.000271606445313 0.000208508968353
0 0 0 0 0.000347900390625
also the overlap-save method loses the circular-shift prop erty,
but the impulse responses are still of the same effective len gth.
Example 2: This example will illustrate the frequency-
domain properties of the MFB and PTVIR representations.
To this end, we ﬁrst design an equiripple linear-phase FIR
ﬁlter of length L= 35 and with passband and stopband edges
at0.3πand0.5π, respectively, and passband and stopband
ripples of 0.001 (−60dB). The frequency response H(ejω)
of the initial ﬁlter with inﬁnite precision (here Matlab pre -
cision) impulse response values (coefﬁcients) h(n) is seen
in Fig. 7. Next, we implement the ﬁlter with the overlap-
add method (Fig. 2) with M= 30 , and thus N= 64 ,
and with eight fractional bits for H(k)as well as for gk(n)
andfk(n). The resulting distortion and aliasing frequency
responses V0(ejω)andVp(ejω),p= 1,2,...,M−1, in
the MFB representation (Fig. 5) are seen in Figs. 8 and 9,
respectively. The corresponding frequency responses Hn(ejω)
in the PTVIR representation (Fig. 6) are plotted in Fig. 10. A s
seen, the worst-case responses of Hn(ejω)are some 10dB
larger than the aliasing terms in the stopband. This illustr ates
that, in applications where the worst-case time-domain err or
(difference between the actual output y(n)and the desired
one) is more important than the average error, a metric based
onHn(ejω)instead of Vp(ejω)is more appropriate.
To further illustrate the difference between the MFB and
PTVIR representations, we perform the same analysis as
above, but here with a reduced DFT length of N= 56
instead of quantized coefﬁcients. The corresponding frequ ency
responses are plotted in Figs. 11–13. It is seen that the
difference between the two representations is more pronoun ced
in this case as the difference between the best and worst
Hn(ejω)is quite large. It also illustrates that one can only
use slightly shorter DFT lengths than theoretically requir ed.
Otherwise, the performance degradation becomes very large .
Example 3: Periodic signals with frequencies matching the
frequencies of a DFT of length N/P , can be efﬁciently time-
domain interpolated through the use of a DFT and IDFT
together with zero padding in the frequency domain. The basi c
principle is to, blockwise, compute a length-( N/P ) DFT of the
input signal and then use the so obtained DFT coefﬁcients as
N/P appropriately allocated nonzero-valued DFT coefﬁcients,0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-100-500Magnitude [dB]
Figure 7. Examples 2: Initial inﬁnite-precision ﬁlter freq uency response
H(ejω).
0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-100-500Magnitude [dB]
Figure 8. Example 2: Distortion frequency response V0(ejω).
0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-100-500Magnitude [dB]
Figure 9. Example 2: Aliasing frequency responses Vp(ejω),p=
1,2,...,M−1.
0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-100-500Magnitude [dB]
Figure 10. Example 2: Frequency responses Hn(ejω),n= 0,1,...,M−1.9
0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-100-500Magnitude [dB]
Figure 11. Example 2: Distortion frequency response V0(ejω)when using
a reduced DFT length.
0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-100-500Magnitude [dB]
Figure 12. Example 2: Aliasing frequency responses Vp(ejω),p=
1,2,...,M−1, when using a reduced DFT length.
0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-100-500Magnitude [dB]
Figure 13. Example 2: Frequency responses Hn(ejω),n= 0,1,...,M−1,
when using a reduced DFT length.
together with N−N/P zero-valued DFT coefﬁcients, in
a length- NDFT. Finally, a length- NIDFT is computed,
generating Ntime-domain sample values, which corresponds
to the original signal interpolated by P. Without quantized
coefﬁcients, the interpolation is error free for these peri odic
signals. However, when the signal is not periodic within a
block of N/P (N) samples before (after) the interpolation,
large errors are introduced.
To illustrate the interpolation error for nonperiodic sign als,
it is ﬁrst recognized that the scheme explained above is
equivalent to ﬁrst upsampling the signal by P, and then use the
upsampled signal as the input to the overlap-add or overlap-
save implementation with N=L=Mand with H(k) = 1
(H(k) = 0 ) fork-values corresponding to the nonzero-valued
(zero-valued) DFT coefﬁcients. For interpolated signals w ith
frequencies between 2πk/N ,k= 0,1,...,N−1, large
interpolation errors are introduced for two reasons. First ly, the
frequency response of the underlying ﬁlter, with the impuls e
response h(n)obtained from the IDFT of H(k), is poor
between the frequencies 2πk/N . This is illustrated in Fig.
14 for the case where P= 2 andN= 32 . Secondly,
sinceN=L=M, the length of the DFT, N, is shorter
than required ( L+M−1) for a proper implementation of
linear convolution. This is seen in Figs. 15 and 16 which
plot the distortion and aliasing functions, respectively. In a
proper implementation ( N=L+M−1) with unquantized0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-60-40-200Magnitude [dB]
Figure 14. Example 3: Filter frequency response H(ejω).
0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-60-40-200Magnitude [dB]
Figure 15. Example 3: Distortion frequency response V0(ejω).
0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-60-40-200Magnitude [dB]
Figure 16. Example 3: Aliasing frequency responses Vp(ejω),p=
1,2,...,M−1.
coefﬁcients, the aliasing functions are zero and the distor tion
function equals the frequency response of the underlying
length-Lﬁlter impulse response for all frequencies, not only
for the frequencies 2πk/N .
The two sources of errors for nonperiodic signals result
in large interpolation errors. This is illustrated in Fig. 1 7
which plots the signal-to-noise-and distortion ratio (SND R)
as a function of frequency, when the input signal is a noisy
sinusoid with a signal-to-noise ratio (SNR) of 80 dB. It is
seen that for the frequencies 2πk/N (periodic signals), the
SNDR is 80 dB as the interpolation is then error free and
the SNDR determined by the SNR of the input signal. For
frequencies between 2πk/N (nonperiodic signals), the SNDR
is poor, especially around the mid-point between adjacent
values of 2πk/N where it is only some 7–14dB. Figures
18 and 19 plot the spectrum for two of these signals, for
the frequencies 2π×6/32and2π×6.5/32. As the plots
show, the desired signal is obtained in the former of these tw o
cases, whereas large aliasing terms are present in the latte r,
located at the signal frequency plus/minus multiples of 2π/N .
These errors match the large aliasing functions seen in Fig.
16. In order to use frequency-domain implementation of time -
domain interpolation over the whole frequency range, it is t hus
necessary to properly design an interpolation ﬁlter and the n
implement the overlap-add or overlap-save method properly
as in, e.g., [28].10
Table V
MULTIPLICATION RATES . COMPLEX (REAL) M EANS THAT BOTH THE SIGNAL AND IMPULSE RESPONSE ARECOMPLEX -VALUED (REAL-VALUED ).
SYMMETRIC MEANS THAT THE IMPULSE RESPONSE ISSYMMETRIC (NOTCONJUGATE SYMMETRIC ).
Case Complex Complex symmetric Real Real symmetric
Time-domain multiplication rate RTD 3L 3⌈L/2⌉ L ⌈L/2⌉
Frequency-domain multiplication rate RFD2(Nlog2(N)−3N/2+4)
N−L+12(Nlog2(N)−3N/2+4)
N−L+1Nlog2(N)−3N/2+4
N−L+1Nlog2(N)−3N/2+4
N−L+1
0 0.125 0.25 0.375
Frequency ( ) [rad]020406080SNDR [dB]
Figure 17. Example 3: SNDR as a function of the frequency of th e
interpolated signal.
0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-150-100-500Amplitude [dB]
Figure 18. Example 3: Spectrum of the interpolated signal wh en its frequency
is2π×6/32.
0 0.2 0.4 0.6 0.8
Frequency ( ) [rad]-150-100-500Amplitude [dB]
Figure 19. Example 3: Spectrum of the interpolated signal wh en its frequency
is2π×6.5/32.
VII. I MPLEMENTATION COMPLEXITY
In this section, we will analyze and compare the computa-
tional complexities of the frequency-domain implementati ons
and the corresponding time-domain implementations, assum -
ing direct-form FIR ﬁlter structures [18], [19] for the latt er. As
a measure of computational complexity, we use the multipli-
cation rate which is deﬁned as the number of multiplications
required to compute each output sample. The focus is here on
multiplications as they are generally substantially more c ostly
to implement than additions.
Earlier publications on the frequency-domain implemen-
tations indicate that they become more efﬁcient than the
corresponding time-domain implementations for ﬁlter leng ths
greater than 25–80for general FIR ﬁlters7, and thus around
50–160 for linear-phase FIR ﬁlters due to their impulse-
7The references [1] and [25] indicate ﬁlter lengths 25–30and40–80,
respectively.response symmetries. However, as will be shown in this
section, the frequency-domain implementations become mor e
efﬁcient for ﬁlter lengths far below those numbers. In part,
this is because the use of more efﬁcient FFT algorithms
(in particular split-radix algorithms) can further reduce the
complexity required to implement the DFT and IDFT. These
further savings have been reported in other publications, e .g.,
in the context of chromatic-dispersion equalization [26] a nd
sampling rate conversion [28]. However, here it will be show n
that even further complexity savings are feasible using opt imal
DFT lengths which have not been used in earlier publications .
A common selection has been a DFT length that is twice the
ﬁlter length [26]. As will be seen later in this section, the o pti-
mal DFT length is around three times the ﬁlter length for shor t
ﬁlters and it increases with the ﬁlter length. In particular , with
optimal DFT lengths for general ﬁlters (without symmetries ),
we will show that the frequency-domain implementations are
more efﬁcient for all ﬁlter lengths. This was not seen in
[26], [28] where short-length ﬁlters were reported to be mor e
efﬁciently implemented in the time domain. It is noted thoug h
that [28] considers sampling rate conversions (by two in the
examples), in which case the complexity expressions and
analysis differ somewhat from the ones presented here.
A. Complexity Comparison
Table V gives the multiplication rate as a function of N
andLfor the frequency-domain and time-domain implemen-
tations, both for complex-valued and real-valued signals a nd
impulse responses, and for general and symmetric impulse
responses. For the complexity of the FFT and IFFT, we assume
that each complex multiplication is implemented using thre e
real multiplications. Assuming further that N= 2P,Pinteger,
and using split-radix algorithms, each of the FFT and IFFT ca n
then be implemented with Nlog2(N)−3N+ 4 real multi-
plications for a complex-valued signal and impulse respons e
[29], [30]. For a real-valued signal and impulse response, t he
number is halved [29], [30]. Further, the coefﬁcients H(k)
require3Nmultiplications in the complex case, but only 3N/2
in the real case because the outputs of the FFT as well as
H(k)are then conjugate symmetric. Thus, for a real-valued
signal and impulse response, the multiplication rate, say RFD,
becomes
RFD=Nlog2(N)−3N/2+4
N−L+1. (35)
For a complex-valued signal and impulse response, the multi -
plication rate is twice the right-hand side in (35).
Based on the expressions given in Table V, Fig. 20 plots
the savings when using the frequency-domain implementatio ns
instead of the time-domain implementations for L∈[2,256]11
2 5 10 15 20 25 30 35 40
Filter length  L-100-50050100Saving (%)
Complex
Complex symmetric
Real
Real symmetric
11 25 50 75 100 125 150 175 200 225 250
Filter length  L020406080100Saving (%)
Complex
Complex symmetric
Real
Real symmetric
Figure 20. Example 4: Computational complexity savings usi ng frequency-
domain implementations instead of time-domain implementa tions. (It is di-
vided into two plots for visualization reasons, and there is thus an overlap for
11≤L≤40).
(divided into two plots for visualization reasons). The sav ing
in percent is given by 100×(1−RFD/RTD), whereRTD
denotes the time-domain computational complexity. Furthe r,
for each value of L, the optimal saving has been obtained
by minimizing RFDover different N= 2P≥Land with
M=N−L+ 1. Figure 20 shows that, for the general
(unsymmetric) ﬁlters, the frequency-domain implementati on is
actually superior for all ﬁlter lengths. For symmetric ﬁlte rs, the
frequency-domain implementations are computationally mo re
efﬁcient for ﬁlter lengths of 11and above in the real case, and
more efﬁcient for odd (even) ﬁlter lengths of 3(6) and above
in the complex case.
B. Estimates of the Complexity
Figure 21 plots the complexities of the frequency-domain
and time-domain implementations, corresponding to the upp er
plot in Fig. 20 (i.e., for L∈[2,40]). As can be seen, the com-
putational complexities of the time-domain implementatio ns
grow linearly with L, in accordance with the expressions in
Table V. For the frequency-domain implementation, the com-
putational complexities are instead approximately propor tional
tolog2(L). A good estimation of the complexity for the real2 5 10 15 20 25 30 35 40
Filter length  L020406080100120Multiplication rateFrequency domain, complex
Frequency domain, real
Time domain, complex
Time domain, real,
Time domain, complex symmetric
Time domain, real symmetric
Figure 21. Example 4: Computational complexities using fre quency-domain
and time-domain implementations.
2   1024 2048 3072 4096
Filter length  L051015202530354045Multiplication rateFrequency domain, complex
Frequency domain, real
Estimate (36)
Estimate, simplified (37)
Figure 22. Example 4: Computational complexities using fre quency-domain
implementations.
case is
/hatwideRFD=log2(L)+log2(log2(L))−3
2+40
9(L×log2(L))
1−1
log2(L)+10
9(L×log2(L)).(36)
This has been derived by inserting N= 0.9Llog2(L)into (35)
(see the motivation in the last paragraph of this section). A lso
recall that the computational complexity is twice as large i n the
complex case. Figure 22 plots the computational complexiti es
of the frequency-domain implementations for L∈[2,212]
(212= 4096 ) and the corresponding estimations based on (36).
It is seen that the estimations are accurate for all values of L.
From (36), one can deduce the simpliﬁed estimation
/hatwideRFD= 1.3×log2(L), (37)
which is also included in Fig. 22. It is seen that it is somewha t
less accurate than the expression in (36), but it still gives a
good approximation of the computational complexity and it
shows that it is approximately proportional to log2(L). This
also explains the trend of the savings seen in Fig. 20 since th e
ratioRFD/RTDis proportional to log2(L)/Lwhich approaches12
10 50 100 150 200 250010002000
10 50 100 150 200 2500510
Figure 23. Example 4: DFT length Nversus ﬁlter length L.
2  25 50 75 100 125406080100Saving (%)
2  25 50 75 100 125-101Difference (% unit)
Figure 24. Example 4: Computational complexity savings for N= 2Pand
arbitrary integers N, and the difference between the savings.
zero when Lincreases. Thus, the savings approach one when
Lincreases.
Further, Fig. 23 plots the DFT length Nversus the ﬁlter
lengthL, both for the case studied above with N= 2Pand
whenNcan take on all integers. Although the expression
used for the multiplication rates, given by (35), holds only for
N= 2P, the arbitrary-integer- Ncase is also considered here
for a comparison. As illustrated in Fig. 24, there is practic ally
no difference between the two cases. In other words, the use
of an arbitrary-integer- NFFT algorithm, with a computational
complexity as in (35)8, will not offer any further complexity
reduction as the selection of the nearest Nsatisfying N=
2Presults in practically the same computational complexity.
The reason is that, for a given L, the function RFDin (35) is
ﬂat over a large region around the optimal arbitrary-intege r-N
case. This is exempliﬁed in Fig. 25 for L= 128 .
C. Estimate of the Optimal N
The optimal value of N, in the arbitrary-integer- Ncase, can
be obtained by setting the derivative of RFDin (35) to zero
8There exist efﬁcient FFT algorithms for values of N/n⌉gationslash= 2Pthat have
complexities similar to (35) [30].128 500 1000 1500 200002040Multiplication rate
Figure 25. Example 4: Computational complexity versus DFT l engthNwith
ﬁlter length L= 128 .
2   800 1600 2400 3200 4000024104
2   800 1600 2400 3200 40000.911.1
Figure 26. Example 4: Optimal DFT length Nand its estimate versus ﬁlter
lengthL, and their ratio.
and solve for N. This yields
Nopt= (L−1)ln(Nopt)+C
≈(L−1)ln(Nopt), L > L 0, (38)
where the constant Cis
C= (1−3ln(2)/2)(L−1)+4ln(2)
≈ −0.03972×(L−1)+2.773, (39)
which is much smaller than the term (L−1)ln(Nopt)in (38)
forL > L 0. For example, with L0= 8 (L0= 32 ), the
ratio between Cand(L−1)ln(Nopt)is less than 10% (1%).
We have solved equation (38) numerically using the Newton-
Raphson method with the initial value N(init)
opt=ˆNopt, where
the estimated optimal Nis
/hatwideNopt= 0.9Llog2(L), (40)
which is deduced from (38) and rather close to the optimum
for practical values of L. This is illustrated in Fig. 26, where
the optimal and estimated optimal values have been rounded
to the nearest integers.
VIII. C ONCLUSION
This paper provided systematic derivations and analyses of
MFB and PTVIR representations of frequency-domain imple-
mentations of FIR ﬁlters using the overlap-add and overlap-
save techniques. As illustrated through design examples, i n-
cluding an interpolation example, these representations a re13
useful when analyzing the effect of coefﬁcient quantizatio ns
as well as the use of shorter DFT lengths than theoretically
required. The examples also illustrated that the PTVIR repr e-
sentation is preferred when the worst-case time-domain err or is
more important than the average error which is captured by th e
MFB representation. The paper also provided detailed analy sis
of the lengths and and relations between the impulse respons es
in the PTVIR representation. It was shown that the overlap-a dd
and overlap-save techniques have different properties whe n
using quantized coefﬁcients and shorter DFT lengths.
Finally, a computational-complexity analysis was provide d,
which showed that the frequency-domain implementations
have lower computational complexities (multiplication ra tes)
than the corresponding time-domain implementations for ﬁl ter
lengths that are shorter than reported earlier in the litera ture.
In particular, for general (unsymmetric) ﬁlters, the frequ ency-
domain implementations turn out to be more efﬁcient for
all ﬁlter lengths. For symmetric ﬁlters, the frequency-dom ain
implementations are more efﬁcient for ﬁlter lengths of 11
and above in the real-signal-and-ﬁlter case, and more efﬁci ent
for odd (even) ﬁlter lengths of 3(6) and above in the
complex-signal-and-ﬁlter case. These results open up for n ew
considerations when comparing complexities of different ﬁ lter
implementation alternatives.
REFERENCES
[1] A. V . Oppenheim and R. W. Schafer, Discrete-Time Signal Processing .
Prentice Hall, 1989.
[2] S. K. Mitra, Digital Signal Processing: A Computer-Based Approach .
McGraw-Hill, 2006.
[3] A. Eghbali, H. Johansson, O. Gustafsson, and S. J. Savory , “Optimal
least-squares FIR digital ﬁlters for compensation of chrom atic dispersion
in digital coherent optical receivers,” IEEE/OSA J. Lightwave Technol-
ogy, vol. 32, no. 8, pp. 1449–1456, Apr. 2014.
[4] C. S. Martins, F. P. Guiomar, S. B. Amado, R. M. Ferreira, S . Ziaie,
A. Shahpari, A. L. Teixeira, and A. N. Pinto, “Distributive F IR-based
chromatic dispersion equalization for coherent receivers ,”IEEE/OSA J.
Lightwave Technology , vol. 34, no. 21, pp. 5023–5032, Nov. 2016.
[5] A. Kovalev, O. Gustafsson, and M. Garrido, “Implementat ion approaches
for 512-tap 60 GSa/s chromatic dispersion FIR ﬁlters,” in Proc. 51st
Asilomar Conf. Signals, Syst., Computers , Paciﬁc Grove, CA, USA, Oct.
29–Nov. 1, 2017, pp. 1779–1783.
[6] C. Bae, M. Gokhale, O. Gustafsson, and M. Garrido, “Impro ved imple-
mentation approaches for 512-tap 60 GSa/s chromatic disper sion FIR
ﬁlters,” in Proc. 52nd Asilomar Conf. Signals, Syst., Computers , Paciﬁc
Grove, Californa, USA, Oct. 28-31, 2018, pp. 213–217.
[7] D. Wang, H. Jiang, G. Liang, Q. Zhan, Z. Su, and Z. Li, “Chro matic
dispersion equalization FIR ﬁlter design based on discrete least-squares
approximation,” Opt. Express , vol. 29, no. 13, pp. 20 387–20 394, June
2021.
[8] C. Bae and O. Gustafsson, “Finite word length analysis fo r FFT-based
chromatic dispersion compensation ﬁlters,” in Proc. OSA Advanced
Photonics Congress , Washington DC, USA, July 26–29 2021.
[9] C.-W. Liu, C.-K. Chan, P.-H. Cheng, and H.-Y . Lin, “FFT-b ased
multirate signal processing for 18-band quasi-ansi s1.11 1 /3-octave ﬁlter
bank,” IEEE Trans. Circuits Syst. II: Express Briefs , vol. 66, no. 5, pp.
878–882, May 2019.
[10] J. Nadal, F. Leduc-Primeau, C. A. Nour, and A. Baghdadi, “Overlap-
save FBMC receivers,” IEEE Trans. Wireless Comm. , vol. 19, no. 8, pp.
5307–5320, Aug. 2020.
[11] R. De Gaudenzi, P. Angeletti, D. Petrolati, and E. Re, “F uture technolo-
gies for very high throughput satellite systems,” Int. J. Satellite Comm.
Networking , vol. 38, no. 2, pp. 141–161, Mar. 2020.
[12] B. Kim, H. Yu, and S. Noh, “Cognitive interference cance llation with
digital channelizer for satellite communication,” Sensors , vol. 20, no. 2,
article 355, 2020.[13] S. Ruiz, T. Dietzen, T. Van Waterschoot, and M. Moonen, “ A comparison
between overlap-save and weighted overlap-add ﬁlter banks for multi-
channel Wiener ﬁlter based noise reduction,” in Proc. 29th European
Signal Processing Conference (EUSIPCO) , Dublin, Ireland, Aug. 23-
27, 2021, pp. 336–340.
[14] X. X. Zheng, J. Yang, S. Y . Yang, W. Chen, L. Y . Huang, and X . Y .
Zhang, “Synthesis of linear-phase FIR ﬁlters with a complex exponential
impulse response,” IEEE Trans. Signal Processing , vol. 69, pp. 6101–
6115, Sept. 2021.
[15] A. K. M. Pillai and H. Johansson, “Efﬁcient recovery of s ub-Nyquist
sampled sparse multi-band signals using reconﬁgurable mul ti-channel
analysis and modulated synthesis ﬁlter banks,” IEEE Trans. Signal
Processing , vol. 63, no. 19, pp. 5238–5249, Oct. 2015.
[16] Y . Wang, H. Johansson, M. Deng, and Z. Li, “On the compens ation of
timing mismatch in two-channel time-interleaved ADCs: Str ategies and
a novel parallel compensation structure,” IEEE Trans. Signal Processing ,
vol. 70, pp. 2460–2475, May 2022.
[17] A. Brihuega, L. Anttila, and M. Valkama, “Beam-level fr equency-
domain digital predistortion for OFDM massive MIMO transmi tters,”
IEEE Trans. Microwave Theory Techn. , pp. 1–16, 2022 (early access).
[18] L. B. Jackson, Digital Filters and Signal Processing (3rd Ed.) . Kluwer
Academic Publishers, 1996.
[19] L. Wanhammar and H. Johansson, Digital Filters using Matlab .
Linköping University, 2013.
[20] P. P. Vaidyanathan, Multirate Systems and Filter Banks . Prentice Hall,
1993.
[21] A. S. Mehr and T. Chen, “Representations of linear perio dically time-
varying and multirate systems,” IEEE Trans. Signal Processing , vol. 50,
no. 9, pp. 2221–2229, Sept. 2002.
[22] G. Burel, “Optimal design of transform-based block dig ital ﬁlters using
a quadratic criterion,” IEEE Trans. Signal Processing , vol. 52, no. 7, pp.
1964–1974, July 2004.
[23] A. Daher, E. H. Baghious, G. Burel, and E. Radoi, “Overla p-save and
overlap-add ﬁlters: Optimal design and comparison,” IEEE Trans. Signal
Processing , vol. 58, no. 6, pp. 3066–3075, June 2010.
[24] H. Johansson and O. Gustafsson, “On frequency-domain i mplementation
of digital FIR ﬁlters,” in Proc. IEEE Int. Conf. Digital Signal Process-
ing., Singapore, July 21–24, 2015.
[25] R. G. Lyons, Understanding Digital Signal Processing . Pearson, 1996.
[26] K. Ishihara, R. Kudo, T. Kobayashi, A. Sano, Y . Takatori , T. Nakagawa,
and Y . Miyamoto, “Frequency-domain equalization for coher ent optical
transmission systems,” in Optical Fiber Communication Conf. Exposi-
tion and National Fiber Optic Engineers Conf. , Los Angeles, California,
USA, Mar. 6–10 2011, pp. 1–3.
[27] H. Johansson and P. Löwenborg, “Reconstruction of nonu niformly
sampled bandlimited signals by means of time-varying discr ete-time
FIR ﬁlters,” J. Applied Signal Processing, Special Issue on Frames and
Overcomplete Representations in Signal Processing, Commu nications,
and Information Theory , vol. 2006, Article ID 64185, 2006.
[28] S. Muramatsu and H. Kiya, “Extended overlap-add and -sa ve methods
for multirate signal processing,” IEEE Trans. Signal Processing , vol. 45,
no. 9, pp. 2376–2380, Sept. 1997.
[29] H. Sorensen, D. Jones, M. Heideman, and C. Burrus, “Real -valued
fast Fourier transform algorithms,” IEEE Trans. Acoust., Speech, Signal
Processing , vol. 35, no. 6, pp. 849–863, June 1987.
[30] C. S. Burrus, M. Frigo, G. S. Johnson, M. Pueschel, and I. Selesnik,
Fast Fourier Transforms . Samurai Media Limited, 2018.
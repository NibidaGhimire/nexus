Quantum Monte Carlo simulations for financial risk
analytics: scenario generation for equity, rate, and credit
risk factors
Titos Matsakos and Stuart Nield
Financial Risk Analytics, Credit & Risk Solutions, Market Intelligence, S&P Global, 25 Ropemaker St, London, EC2Y 9LY, UK
Monte Carlo (MC) simulations are
widely used in financial risk management,
from estimating value-at-risk (VaR) to
pricing over-the-counter derivatives. How-
ever, they come at a significant computa-
tional cost due to the number of scenar-
ios required for convergence. If a prob-
ability distribution is available, Quantum
Amplitude Estimation (QAE) algorithms
can provide a quadratic speed-up in mea-
suring its properties as compared to their
classicalcounterparts. Recentstudieshave
explored the calculation of common risk
measures and the optimisation of QAE al-
gorithms by initialising the input quan-
tum states with pre-computed probabil-
ity distributions. If such distributions are
not available in closed form, however, they
need to be generated numerically, and the
associated computational cost may limit
the quantum advantage. In this paper,
we bypass this challenge by incorporat-
ing scenario generation — i.e. simulation
of the risk factor evolution over time to
generate probability distributions — into
the quantum computation; we refer to this
process as Quantum MC (QMC) simula-
tions. Specifically, we assemble quantum
circuits that implement stochastic models
for equity (geometric Brownian motion),
interest rate (mean-reversion models), and
credit (structural, reduced-form, and rat-
ing migration credit models) risk factors.
We then integrate these models with QAE
to provide end-to-end examples for both
market and credit risk use cases.
Titos Matsakos: titos.matsakos@spglobal.com1 Introduction
Several papers have been published recently that
demonstrate how quantum algorithms can signif-
icantly speed up the solution of typical numeri-
cal problems in quantitative finance (for reviews,
see [1–7]). In the area of financial risk manage-
ment, applications include calculating value-at-
risk and expected shortfall [8–10], pricing of op-
tions [11–15] and collateralised debt obligations
[16], credit valuation adjustments [17, 18], and
calculating Greeks [19]. While the current state
of quantum computing hardware is years away
from being used in production systems, theoreti-
cal advances on the development and implemen-
tation of quantum algorithms are necessary to
prepare financial institutions for the transition.
The so-called Noisy Intermediate-Scale Quantum
(NISQ) technology is considered to outperform
current classical computers in the limit of 50-100
qubits (“Intermediate-Scale”) and shallow circuit
depths (“Noisy”, i.e. due to gate errors stacking
up) [20]. In this paper we consider fault-tolerant
quantum devices; namely, we focus on the repre-
sentation of stochastic models by quantum gates
ignoring the effect of quantum errors.
1.1 Monte Carlo simulations
Financial risk management applications estimate
the likelihood and size of potential losses due
to hypothetical future events, such as the ad-
verse move of equity prices, interest rates, credit
spreads, or foreign exchange rates (market risk),
the default of a debt instrument (credit risk), and
the default of a counterparty (counterparty credit
risk). The risk is generally represented by a sta-
tistical measure that depends on the properties
of the underlying risk factors. A typical calcula-
tion consists of the following three stages: i) gen-
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 1arXiv:2303.09682v2  [quant-ph]  24 Mar 2024erating a probability distribution P(Xt)of the
risk factor vector Xtat a future time t, ii) defin-
ing a risk measure F(Xt)as a function of Xt,
and iii) employing a statistical method to esti-
mate its value.1For example, consider the value
Vtof a portfolio consisting of qshares of a given
stock, with S0its price at t= 0. Here, Xtis one-
dimensional with its only element being St. The
price and volatility of the stock can be used as
inputs to model the evolution of Stand generate
a distribution P(St). Suppose we define our risk
measure as the expected value of the portfolio at
timet,E(Vt) =qE(St); then, we can estimate
E(Vt)with either analytical or numerical meth-
ods. Apart from special cases where closed-form
expressions are available, the probabilistic nature
oftheriskfactorevolutionoftenrequiresrepeated
random sampling followed by statistical estima-
tion — this type of numerical approach is called
Monte Carlo (MC) simulation.
Financial risk management calculations that
rely on MC simulations often require 10,000 to
1,000,000 experiments to achieve the desired pre-
cision. This relatively-slow convergence can be
understood by considering the following example:
suppose we want to estimate the probability pof
a random variable Xthat takes the value X= 1
withpand the value X= 0with 1−p. In an MC
simulation the experiment is repeated Ntimes,
obtainingN1observations of the outcome X= 1
andN0oftheoutcome X= 0, withN1+N0=N.
This is a binomial distribution with the expected
value of the number of occurrences of X= 1be-
ing¯N1=pNand the standard deviation being
δN1= [p(1−p)N]1/2. SinceN1is known but not
p, we can invert the expressions to approximate
pbased on the observed outcomes:
p≃¯p=N1
N, (1)
δp≃δN1
N=/bracketleftbigg¯p(1−¯p)
N/bracketrightbigg1/2
∝/parenleftbigg1
N/parenrightbigg1/2
.(2)
From the second equation we can infer that the
precision of the estimate is inversely proportional
to the square root of N.
1The same steps apply for the valuation of many
types of exchange-traded or over-the-counter derivatives,
in which case F(Xt)is the pricing function.1.2 Quantum Amplitude Estimation algo-
rithms
Equation (2) implies that, in order to im-
prove the precision by a decimal digit, classi-
cal algorithms require 100 times more experi-
ments; therefore, typical values of Nare between
10,000–1,000,000. In quantum computing (see
App. A for an introduction and definitions), it
has been shown that Quantum Amplitude Esti-
mation(QAE)algorithmscanachieveaquadratic
speed-upascomparedtoclassicalalgorithms[21].
For the example of Sect. 1.1, we can estimate the
probability pwith a quantum computer by en-
coding the probability distribution of the random
variable in the quantum state of a qubit:
|ψ⟩=/radicalbig
1−p|0⟩+√p|1⟩
= cos(θ/2)|0⟩+ sin(θ/2)|1⟩,(3)
such that the state |1⟩is measured with prob-
abilityp. However, repeating this quantum ex-
periment multiple times (each one called a shot)
and measuring the outcomes does not bypass the
classical constraint: the precision would again be
proportional to the square root of the number of
shots as in Eq. (2). Instead, the quadratic gain of
QAE algorithms is achieved by leveraging quan-
tum interference. Specifically, consider an input
qubit initialised in the superposition of Eq. (3)
and a quantum register of noutput qubits. The
QAE algorithm is based on phase kickback and
quantum amplitude estimation [21]. Essentially,
the probability p— i.e. the angle θ(Eq. 3) — is
imprinted as a phase ϕ=±kθonto the output
qubits, where ktakesthevalues 20,22,...,2n−1for
the output qubits labelled 0,1,...,n−1, respec-
tively. This operation is then followed by an in-
verse quantum Fourier transform which, through
interference, converts these phases to a binary
number; this enables to directly read off the angle
θand hence the value of p. With this approach,
the estimated value of pand its error are (see
Sect. 1.4.4):
p≃¯p= sin2/parenleftbiggθ
2/parenrightbigg
, (4)
δp≃sinθπ
2N∝1
N, (5)
whereN= 2nis the number of possible out-
comes, and, notably, δpscales as the inverse of
N.
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 21.3 Paper motivation and structure
The majority of QAE papers on financial risk
havestudiedquantumcircuitswithpre-computed
probability distributions of the random variables,
P(Xt). However, unless we can exactly encode
them in a quantum state, algorithms that involve
MonteCarlointegrationforstatepreparation[22]
may not be sufficiently efficient to preserve the
quadratic speed-up [23]. When such distributions
are readily available, there are approaches to ef-
ficiently load them on a quantum register [e.g.
24–26], as well as to simplify state preparation
and optimise circuits which can help reduce cir-
cuit complexity [13, 27]. However, if P(Xt)is not
given in closed form, an MC simulation is needed
to generate the distribution numerically with a
classical computer. In these cases, even though
QAE algorithms can measure its properties with
a quadratic speed-up, the computational cost to
generateP(Xt)— associated with the slow con-
vergenceofclassicalalgorithms—ispaidupfront.
This challenge can be bypassed by incorporat-
ing scenario generation into the quantum circuit.
In a single shot, the exact distribution of a ran-
dom variable can be represented as a superpo-
sition of quantum states. By avoiding loading
pre-computed distributions, this approach also
reduces the dependence on classical computers,
including the data transfer between classical and
quantum systems. In this context, this paper fo-
cuses on the quantum implementation of stochas-
tic risk models to generate risk factor scenar-
ios — we refer to this process as QMC simula-
tions.2The resulting distributions are then com-
bined with QAE gates to provide end-to-end ex-
ample circuits. We study the main risk factor
groups — equities, rates, and credit — but not
exchange rates as they rely on similar models
and/or can be derived from interest rates. De-
pendingonthecomplexityofthestochasticdiffer-
entialequationsthatdescribetheevolutionofrisk
factors, theoretical studies have shown that MC
simulations can be further optimised by lever-
aging quantum-accelerated multilevel MC meth-
ods [28–30]. Here, we limit our scope to assem-
bling QMC circuits for the foundational stochas-
tic models — i.e. geometric Brownian motion,
2Theterm“QMCsimulations”isnotrelatedto“Quan-
tum Monte Carlo methods” used to study complex quan-
tum systems in Physics.mean-reversion models, Poisson processes, and
multinomial trees — as most risk models are
based on these or a variation thereof.3
The paper is structured as follows. Section 1.4
presents the main steps of QAE algorithms and
their implementation in quantum circuits. In
Sect. 2, we assemble quantum circuits to perform
QMC simulations, namely to model the evolu-
tion of equity (Sect. 2.1), interest rate (Sect. 2.2),
and credit (Sect. 2.3) risk factors. Section 3 es-
timates the number of qubits and the resulting
circuit depth needed in typical financial risk use
cases. We conclude in Sect. 4.
1.4 Overview of QAE circuits
1.4.1 The circuit
To estimate a statistical measure F(Xt)∈
[Fmin,Fmax]of a risk factor Xt, a QAE circuit
would typically consist of:
1.m“risk factor” (rf) qubits to model the dis-
tribution of Xt(the initial state of which is
denoted with|0⟩⊗m
rf),
2. one “risk measure” (rm) qubit to encode
the normalised value of the risk measure4
f(Xt)∈[0,1]in the angle θ∈[0,π](the
initial state of which is denoted with |0⟩rm),
3.noutput (out) qubits to imprint multiples of
θonto their phases (the initial state of which
is denoted with|0⟩⊗n
out).5
Without loss of generality, in the following exam-
ple we choose f(Xt) =p, i.e. the risk measure to
be a probability of an outcome that depends on
Xt, i.e.f(Xt) =p.
The general structure of a QMC/QAE quan-
tum circuit is:
3For an overview of risk models, as well as their limi-
tations and extensions, see [31].
4E.g.f(Xt) = (F(Xt)−Fmin)/(Fmax−Fmin).
5We use the notation |0⟩⊗| 0⟩=|0⟩⊗2=|0⟩|0⟩=|00⟩.
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 3State Description
|bm−1...b1b0⟩mqubits as a binary, e.g. |101⟩
|j⟩,|x⟩,|z⟩qubits as an integer, e.g. |5⟩
|ψ⟩ superposition of states
|ψ⟩in input qubit(s)
|ψ⟩out output qubit(s)
|ψ⟩rf “risk factor” qubit(s) (input)
|ψ⟩rm “risk measure” qubit (input)
|ψ⟩st “state” qubit(s)
|ψ⟩c “count” qubit(s)
|ψ⟩anc “ancilla” qubit(s)
Table 1: Notation of states.
|0⟩⊗m
rfD/producttextQ
|0⟩rmM
|0⟩⊗n
outQFT QFT†QMC QAE
whereDis the gate that generates the input dis-
tribution using m“risk factor” qubits (the focus
of this paper),Mthe controlled gate that en-
codes the risk measure into the angle θof the
risk measure qubit,/producttextQthe repeated application
of the controlled gate Qto imprint θonto the
phases of the noutput qubits, and QFT/QFT†
the quantum Fourier transformation and its in-
verse to measure the phase of the output qubits
with interference. These circuit components are
described below in more detail, see Table 1 for
state notation.
1.4.2D: preparing the distribution P(Xt)
Themqubits,|0⟩⊗m
rf, can model a discrete
probability distribution of 2mpossible outcomes,
each one with a probability |aj|2, withj∈
{0,1,...,2m−1}. We use the gate Dto load the
distribution of Xtonto the “risk factor” qubits,
which can be depicted as:
|0⟩⊗m
rfD|ψ⟩rfand expressed mathematically as:
|ψ⟩rf=D|0⟩⊗m
rf
=2m−1/summationdisplay
j=0aj|bjm−1...bj1bj0⟩rf=2m−1/summationdisplay
j=0aj|j⟩rf,(6)
wherejis an integer in the decimal num-
ber system representing the binary number
bjm−1...bj1bj0, andbjl∈{0,1}is thel-th digit
of thej-th state. If the distribution is pre-
computed, it can be loaded by leveraging Quan-
tum Generative Adversarial Networks [24] or
Fourier expansion [25], among other approaches
[26, 27]. Here, the distributions will be generated
with quantum gates that implement stochastic
models for the risk factor evolution.
1.4.3M: calculating the risk measure f(Xt) =p
With the distribution P(Xt)encoded in the state
of the “risk factor” qubits, |ψ⟩rf, the next step
is to encode a risk measure f(Xt)— for exam-
ple a probability such as p=P(Xt< K)where
K∈[Xmin, Xmax]—inthestateofthe“riskmea-
sure” qubit,|0⟩rm. Thevalueof pcanbecaptured
in the angle θof a qubit with the help of a con-
trolled gateMthat reads the distribution |ψ⟩rf
and encodes p∈[0,1]→θ∈[0,π]into|0⟩rm.
This can be represented as:
|ψ⟩rf|ψ⟩rf
|0⟩rmM|ψ⟩rm
and described by the expression:
|ψ⟩in=M|ψ⟩rf|0⟩rm
=/radicalbig
1−p|ψ0⟩rf|0⟩rm+√p|ψ1⟩rf|1⟩rm
=/radicalbig
1−p|ψ0⟩in+√p|ψ1⟩in, (7)
where√1−p= cos(θ/2),√p= sin(θ/2), and
we have simplified notation by writing |ψ0⟩in=
|ψ0⟩rf|0⟩rmand|ψ1⟩in=|ψ1⟩rf|1⟩rm.
1.4.4/producttextQand QFT: estimation of p
Amplitude amplification The next part of
the circuit is the controlled Qgate, an opera-
tor which is based on the Grover search algo-
rithm [32].Qconsists of two reflections, |ψ0⟩in→
−|ψ0⟩inand|ψ⟩in→−|ψ⟩in:
Q=QψQψ0 (8)
=/parenleftbig1−2|ψ⟩in⟨ψ|in/parenrightbig/parenleftbig1−2|ψ0⟩in⟨ψ0|in/parenrightbig,
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 40.0 0.2 0.4 0.6 0.8 1.0
p02468multiplier(1−4p)2
(3−4p)2Figure 1: The amplification of the probabilities of the
states|ψ0⟩in(blue) and|ψ1⟩in(orange) whenQacts on
ψ(Eq. 9).
which amplify/deamplify the amplitudes of |ψ0⟩in
and|ψ1⟩independing on the value of p(see
App. B.1):
Q|ψ⟩in= (9)
= (1−4p)/radicalbig
1−p|ψ0⟩in+ (3−4p)√p|ψ1⟩in.
Fig. 1 shows the multipliers (1−4p)2and(3−
4p)2which increase/decrease the probabilities of
measuring|0⟩rmand|1⟩rm, respectively.6A key
property ofQis that it leaves the states:
|ψ±⟩in=1√
2/parenleftbig|ψ1⟩in±i|ψ0⟩in/parenrightbig,(10)
unchanged when applied ktimes, but introduces
a global phase (see App. B.2):
Qk|ψ±⟩in=e±ikθ|ψ±⟩in.(11)
Phase kickback We can exploit this property
by implementing a controlled gate Qacting on
|ψ⟩in, which we express as (see App. B.3):
|ψ⟩in
=−i1√
2/parenleftig
eiθ/2|ψ+⟩in−e−iθ/2|ψ−⟩in/parenrightig
.(12)
The target of this control gate is the output
qubits, after first rotating their initial state,
|0...00⟩out, with theHoperator such that it be-
comes|+...+ +⟩out. This is equivalent to a quan-
tum Fourier transformation, which we can repre-
sent as:
6Forp < 1/2, the probability of measuring the state
|1⟩rmis amplified and that of the state |0⟩rmdeamplified,
and vice versa for p > 1/2.|0⟩⊗n
outQFT|+⟩⊗n
out
and mathematically express as:
QFT|0⟩⊗n
out=n−1/circlemultiplydisplay
l=0H|0⟩l
out=|+⟩⊗n
out.(13)
Then, we can leverage phase kickback to im-
print the multiples of the angle θonto their
phases. Based on Eq. (11), the phase of an out-
put qubit|+⟩l
out=1√
2(|0⟩+|1⟩)will become
1√
2(|0⟩+eikθ|1⟩)for|ψ+⟩in, and1√
2(|0⟩+e−ikθ|1⟩)
for|ψ−⟩in, where we set k= 2l. Namely,k= 20
for the first output qubit, k= 21for the second,
..., andk= 2n−1for the last ( n-th). The re-
peated application of the controlled gate Qcan
be represented as:
···
···
···
···|ψ⟩inQQ2Q2n−1|ψ⟩in
|+⟩0
out |ψ⟩0
out
|+⟩1
out |ψ⟩1
out
|+⟩n−1
out |ψ⟩n−1
out
and the state of the output qubits can be written
as (see App. B.4):
n−1/productdisplay
l=0Q2l|ψ⟩in|+⟩⊗n
out=
=|ψ⟩in/braceleftiggn−1/circlemultiplydisplay
l=0/bracketleftbigg1√
2/parenleftig
|0⟩+e±i2lθ|1⟩/parenrightig/bracketrightbigg/bracerightigg
=|ψ⟩in/parenleftigg
1
2n/22n−1/summationdisplay
x=0e±ixθ|x⟩/parenrightigg
,(14)
wherex=/summationtextn−1
l=02lblis the binary number
bn−1...b1b0expressed in the decimal number sys-
tem.
Interference The state/summationtext2n−1
x=0ax|x⟩, where
ax= (1/2n/2)e±ixθ, can be transformed to the
standard basis/summationtext2n−1
z=0az|z⟩with an inverse quan-
tum Fourier transform, which depicted by the
gate QFT†:
/summationtext
xax|x⟩ QFT†/summationtext
zaz|z⟩
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 5and mathematically expressed by (see App. B.5):
|ψ⟩out= QFT†1
2n/22n−1/summationdisplay
x=0e±ixθ|x⟩
=1
2n2n−1/summationdisplay
z=02n−1/summationdisplay
x=0eix(±θ−2πz/2n)|z⟩,(15)
which consists of a superposition of the states |z⟩,
wherezis an integer in the decimal number sys-
tem.
Measurement The measurement of the state/summationtext
zaz|z⟩will result in the collapse of the super-
position and will give one of the possible zvalues,
z0. This can be represented by:
/summationtext
zaz|z⟩|z0⟩
Ifθhas a value such that an integer z0∈[0,2n−1]
exists that makes ±θ−2πz/2na multiple of 2π,
namely,z0= 2nθ/2πorz0= 2n(2π−θ)/2π, then
Eq.(15)implies that the measured state is one of
(see App. B.6):
|z0⟩=|2nθ/2π⟩, (16)
|z0⟩=|2n(2π−θ)/2π⟩. (17)
Then, it is straightforward to calculate the prob-
abilitypby substituting θin Eq. (3) with the
measured value of z0:
p= sin2/parenleftbiggθ
2/parenrightbigg
= sin2/parenleftbiggz0
2nπ/parenrightbigg
.(18)
If there is no z0such that±θ−2πz0/2nis a mul-
tiple of 2π, the closest integer z0is measured with
a probability|az0|2∼20%for eitherθor2π−θ,
which gives a total probability of approximately
40%to get the closest value of p(see App. B.7).
The precision with which θis estimated is
δθ≃2π/2n; therefore, the precision of pis (see
App. B.8):
δp≃sinθπ
N∝1
N, (19)
whereN= 2nis the total number of possible
outcomes. Notably, the error in QAE decreases
proportionally to 1/N(Eq. 19), much faster than
the1/N1/2scaling of classical algorithms (Eq. 2).
Apart from the basic QAE algorithm described
above which is based on quantum phase estima-
tion (QPE), recent studies have explored other
variants of the QAE family that do not require
QPE [33–35].2 Quantum gates and circuits for sce-
nario generation
2.1 Equity risk factors
Consider an equity price, St, that follows the
stochastic differential equation:
dSt=µStdt+σStdWt, (20)
whereµis the drift, σthe volatility, tthe time,
andWta Wiener process. Itô’s lemma implies
that
dlnSt=/parenleftigg
µ−σ2
2/parenrightigg
dt+σdWt,(21)
and thusStis log-normally distributed,
St+dt=Ste(µ−σ2/2)dt+σdWt,(22)
with expected value and variance:
E(St+dt) =Steµdt, (23)
Var(St+dt) =E(S2
t+dt)−E(St+dt)2
=S2
te2µdt+σ2dt−S2
te2µdt.(24)
The path of the price can be modelled with a
binomial tree with m+ 1nodes at times t=
{0, δt,2δt, ..., T}, respectively, where δt=T/m
is the time interval. At each node, the price St
can either go up by a factor u,Su
t+δt=Stu, or
down by a factor d,Sd
t+δt=Std, with probabili-
tiesqand1−q, respectively.
S0Su
δt
Sd
δtSuu
2δt
S2δt
Sdd
2δtq
1−qq
1−q
q
1−q
By requiring the discrete model to have the same
mean and variance as the continuous model, we
obtain the following expressions for uandq, re-
spectively (see App. C.1):
q=ueµδt−1
u2−1, (25)
u=1
d=eσ√
δt. (26)
Binomial trees are common in pricing equity
derivatives [36].
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 62.1.1Deq: the distribution P(St)
Since at each timestep the stock price has two
possible outcomes, we can model a transition
from time period ttot+δtwith a qubit in su-
perposition,|ψ⟩t+δt
rf, such that the states |0⟩and
|1⟩represent downwards and upwards moves, re-
spectively. Therefore, a scenario consisting of m
timesteps can be modelled with mqubits:
|ψ⟩rf=|ψ⟩δt
rf|ψ⟩2δt
rf...|ψ⟩mδt
rf,(27)
where the superscripts δt,2δt, ...,mδtare labels
of individual qubits. For m= 2, the binomial
tree is:
|∅⟩2δt
rf|∅⟩δt
rf|∅⟩2δt
rf|1⟩δt
rf
|∅⟩2δt
rf|0⟩δt
rf|1⟩2δt
rf|1⟩δt
rf
|0⟩2δt
rf|1⟩δt
rf
|1⟩2δt
rf|0⟩δt
rf
|0⟩2δt
rf|0⟩δt
rf|j= 2⟩
|j= 1⟩
|j= 0⟩
where we use the notation |∅⟩=|0⟩to denote a
qubit that has not yet been through a gate.
At each time t, the probability qcan be en-
coded into the angle θuof a “risk factor” qubit
with ay-rotation gate, Ry(θu), i.e.|ψ⟩t
rf=
cos(θu/2)|0⟩+ sin(θu/2)|1⟩withq= sin2(θu/2):
|0⟩δt
rfRy(θu)|ψ⟩δt
rf
|0⟩2δt
rfRy(θu)|ψ⟩2δt
rf
|0⟩mδt
rfRy(θu)|ψ⟩mδt
rfDeq
The inverse of this gate, D†
eq, consists of the same
rotation gates but with a negative angle, −θu:|ψ⟩δt
rfRy(−θu)|0⟩δt
rf
|ψ⟩2δt
rfRy(−θu)|0⟩2δt
rf
|ψ⟩mδt
rfRy(−θu)|0⟩mδt
rfD†
eq
2.1.2Meq: risk measures F(St)
The choice of the risk measure depends on the
use case; here, we consider as examples the prob-
abilitiesofobservingthemaximumandminimum
values.7For some risk measures, mancadditional
(“ancilla”) qubits are required to store the inter-
mediate values of the calculation. We ensure that
all assembled gates leave the state of these qubits
to their initial state |0⟩⊗manc
anc;8therefore, we do
not explicitly show them when not needed.
Maximum The gate that calculates the prob-
ability ofSTtaking its maximum value, F(ST) =
P(Smax) =P(|1⟩⊗m
rf) =qm, can be assembled
with a sequence of and(Toffoli) gates, such that
the “risk measure” qubit flips to the state |1⟩rm
if all “risk factor” qubits are in the state |1⟩⊗m
rf;
namely,|ψ⟩rm= (1−qm)|0⟩+qm|1⟩. In its sim-
plest form, an additional m−2“ancilla” qubits
are required to store the result of the andop-
erators, which are then applied a second time to
revert the “ancilla” qubits back to their original
|0⟩⊗manc
ancstate.
7While min and max are not typical risk measures of
equity price distributions, such functions appear in the
payoff of equity options [31] and thus their quantum im-
plementation is important for pricing derivatives.
8Reverting the ancilla qubits back to their original
states with a quantum gate rather than a “reset” instruc-
tion ensures the gate is reversible. This is because the
QAE algorithm relies on the application of/producttext
Q, which is
based on the operator of Eq. (30) (discussed later on) that
includes the inverse of both the DandMgates.
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 7······
······
······
······
······
······
······
······
······
······|ψ⟩δt
rf |ψ⟩δt
rf
|ψ⟩2δt
rf |ψ⟩2δt
rf
|ψ⟩3δt
rf |ψ⟩3δt
rf
|ψ⟩(m−1)δt
rf|ψ⟩(m−1)δt
rf
|ψ⟩mδt
rf |ψ⟩mδt
rf
|0⟩rm |ψ⟩rm
|0⟩1
anc |0⟩1
anc
|0⟩2
anc |0⟩2
anc
|0⟩m−3
anc |0⟩m−3
anc
|0⟩m−2
anc |0⟩m−2
ancMmax
Note that if we apply Mmaxtwice, the “risk mea-
sure” qubit returns to its initial state |0⟩rm, while
the states of all other qubits remain unchanged:
M†
maxMmax= 1; thus,M†
max=Mmax.
Minimum The probability of measuring the
minimumvalue, F(ST) =P(Smin) =P(|0⟩⊗m
rf) =
(1−q)m, can be constructed following the same
logic. We first flip all “risk factor” qubits and
thenapply andoperatorssuchthatonlythestate
|0⟩⊗m
rfwill lead to the state |1⟩rmof the “risk mea-
sure” qubit:|ψ⟩rm= [1−(1−q)m]|0⟩+(1−q)m|1⟩.
The corresponding quantum gate can be assem-
bled by leveraging Mmax:
|ψ⟩δt
rfX
MmaxX|ψ⟩δt
rf
|ψ⟩mδt
rfX X|ψ⟩mδt
rf
|0⟩rm |ψ⟩rm
|0⟩1
anc |0⟩1
anc
|0⟩m−2
anc |0⟩m−2
ancMmin
Here too, we notice that the inverse gate is
M†
min=Mmin.
Other risk measures Gates for other risk
measures can be assembled following similarlogic, e.g. for value-at-risk and expected shortfall
see Refs. [8, 9]. In Sect. 2.3 we show an example
of probability distributions that involve inequal-
ities, e.g.P(ST≥ujTS0), wherejTis a spec-
ified number of upwards moves. Generally, any
risk measure can be calculated by using quantum
gates for arithmetic operations and comparisons
[37, 38].
2.1.3 Phase estimation
To assemble the gate Q=QψQψ0, we repre-
sent the operator Qψ0= 1−2|ψ0⟩in⟨ψ0|inwith
a gate that flips the sign of the state |ψ0⟩in=
|ψ0⟩rf|0⟩rm:
|ψ0⟩rf |ψ0⟩rf
|0⟩rmXZX−|0⟩rmQψ0
Qψ0|ψ0⟩in=−|ψ0⟩in, (28)
Qψ0|ψ1⟩in=|ψ1⟩in. (29)
ForQψ, we decompose the operator as (see
App. C.2):
Qψ=MDQ00D†M†, (30)
whereQ00= 1−2|0⟩in⟨0|inis a reflection of the
initial state|0⟩in=|0⟩⊗m
rf|0⟩rm:
Q00|0⟩in=−|0⟩in, (31)
Q00|ψ̸= 0⟩in=|ψ⟩in. (32)
To apply a reflection only if all input qubits are in
thestate|0⟩, wefirstflipthemwith notgates, we
thenoperatewithasequenceof andgatesstoring
the result in the last “ancilla” qubit, and finally
we apply a controlled Zgate to flip the sign of
the “risk measure” qubit if the last “ancilla” qubit
was in the state|1⟩. Operating with the andand
notgates again brings all qubits to their initial
state (apart from the sign of the “risk measure”
qubit depending on the initial state).
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 8|0⟩δt
rfX
AA†X|0⟩δt
rf
|0⟩2δt
rfX X|0⟩2δt
rf
|0⟩mδt
rfX X|0⟩mδt
rf
|0⟩rmXZX−|0⟩rm
|0⟩1
anc |0⟩1
anc
|0⟩m−1
anc |0⟩m−1
ancQ00
where theAandA†gates consist of the and
gates:
······
······
······
······
······
······
······
······
······
······|ψ⟩δt
rf |ψ⟩δt
rf
|ψ⟩2δt
rf |ψ⟩2δt
rf
|ψ⟩3δt
rf |ψ⟩3δt
rf
|ψ⟩mδt
rf |ψ⟩mδt
rf
|0⟩rm |ψ⟩rm
|0⟩1
anc |0⟩1
anc
|0⟩2
anc |0⟩2
anc
|0⟩m−2
anc |0⟩m−2
anc
|0⟩m−1
anc |0⟩m−1
anc
|0⟩m
anc |0⟩m
ancAA†
2.1.4 Measurement
The QFT gate prepares the output qubits in the
state|+⟩:
|0⟩0
outH|+⟩0
out
|0⟩n−1
outH|+⟩n−1
outQFTParameter Value
m 6
n 1-9
T 1
µ 8%
σ 20%
u∼1.09
q∼0.56
θu180◦
π∼97.1◦
Table 2: List of the binomial tree parameters for the
equity risk factor evolution.
The QFT†gate converts the phases ±kϕto an
integerz∈[0,1,...,2n−1]; Fig. 2 shows the im-
plementation based on [39], where the controlled
rotations between qubits l1andl2are:
|ψ⟩l1
out
|ψ⟩l2
out=|ψ⟩l1
out
|ψ⟩l2
outRz/parenleftig
−π
2l2−l1/parenrightig
See App. C.3 for an example of a complete
quantum circuit that estimates P(Smax)form=
2andn= 3. The accompanying figures show a
visualisation of the qubit states and their trans-
formationsontheBlochsphere, aswellasthecor-
responding probability distributions when mea-
sured.
2.1.5 Results
To analyse the convergence of the estimate of
the risk measure we assemble 9 quantum circuits,
eachonewithadifferentnumberofoutputqubits,
n∈[1,2,...,9], and adopt the parameters listed
in Table 2 (the value of S0is not needed). The
top panel of Fig. 3 shows the probability distri-
butionP(ST)obtained after applying the gate
Deqon the “risk factor” qubits. The distribu-
tion is represented by the states |j⟩(see Eq. 6),
which consist of all possible 2mcombinations of
the “risk factor” qubits when jof them are in
the state|1⟩(i.e.jupwards price moves). Since
q > 1/2, the distribution is positively skewed:
P(ST≥u2S0)> P (ST≤d2S0). The gates
MmaxandMminessentially measure the prob-
abilities of the states |6⟩and|0⟩, respectively,
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 9·····················
·····················
·····················
·····················
········· ·········
········· ·········|ψ⟩0
out H
|ψ⟩1
out H
|ψ⟩n
2−1
outH
|ψ⟩n/2
outH
|ψ⟩n−2
out H
|ψ⟩n−1
out HQFT†
Figure 2: The inverse quantum Fourier transform gate, QFT†.
|0/angbracketright|1/angbracketright|2/angbracketright|3/angbracketright|4/angbracketright|5/angbracketright|6/angbracketright0.00.10.20.30.4P(|ψ/angbracketrightrf)
S0d6
S0d4
S0d2
S0u0
S0u2
S0u4
S0u6
|0/angbracketright|1/angbracketright0.00.20.40.60.81.0P(|ψ/angbracketrightrm)
P(Smax)
|0/angbracketright|1/angbracketrightP(Smin)
Figure 3: Top: the distribution of STform= 6qubits
as generated with the operator Deq. Bottom: the prob-
abilitiesP(Smax)(left) andP(Smin)(right) as encoded
with the operators MmaxandMmin, respectively, into
the “risk measure” qubit.which are encoded in the “risk measure” qubit;
see bottom panel of Fig. 3.
The bar charts of Fig. 4 show the distribu-
tionP(|z⟩)obtained by measuring the output
qubits (here n= 4and 10,000 shots) for the
two risk measures, P(Smax)(top) andP(Smin)
(bottom). The left and right peaks correspond to
z= 2nθ/2πandz= 2n(2π−θ)/2π, respectively,
originating from the two signs of the phase kick-
back,±kθ. ThelinechartsofFig.4showthecon-
vergence of the estimated probability p(Eq. 18),
P(Smax)(top) andP(Smin)(bottom), and error
δp(Eq. 19), as a function of the number of output
qubits,n. Here, the measured state of the output
qubits is obtained from one shot. The expected
values of the probabilities are P(Smax) =qmand
P(Smin) = (1−q)m, respectively.
Equity risk factors can also be based on trino-
mial trees, the implementation of which is pre-
sented in Sect. 2.2.
2.2 Interest rate risk factors
The evolution of interest rates can be simulated
with short-rate mean reversion models, the most
basic of which is the Vasicek model [40]:
drt=a(b−rt)dt+σdWt,(33)
wherertis the instantaneous interest rate at time
t,bthe long-term mean, athe speed of reversion,
σthe volatility, and Wta Wiener process. The
expected value and variance are asymptotically
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 10|0/angbracketright|3/angbracketright|6/angbracketright|9/angbracketright|12/angbracketright|15/angbracketright0.00.20.40.6P(|z/angbracketright)max(ST)
0 2 4 6 8 10
noutput qubits0.000.050.100.15p
expected
measured
|0/angbracketright|3/angbracketright|6/angbracketright|9/angbracketright|12/angbracketright|15/angbracketright0.00.20.40.6P(|z/angbracketright)min(ST)
0 2 4 6 8 10
noutput qubits0.000.050.100.15p
expected
measuredFigure 4: Top two panels: the probability distribution
P(Smax)(top) when measuring z0with 10,000 shots
usingn= 4qubits, and the convergence of P(Smax)→
p=qm(withδp→0, bottom), as a function of the
number of output qubits. The measured value of p(blue
dots) is calculated using Eq. (18)after measuring the re-
sult of one shot, the error δp(blue lines) is calculated
from Eq. (19), and the expected value is shown with an
orange line. Bottom two panels: the probability distri-
butionP(Smin)(top) andP(Smin)→p= (1−q)m
(bottom).constant for δt→∞, whereas for finite δtthe
expected value depends on rt:
E(rt+δt) =rte−aδt+b/parenleftig
1−e−aδt/parenrightig
,(34)
Var(rt+δt) =σ2
2a/parenleftig
1−e−2aδt/parenrightig
. (35)
Such models are often discretised with trino-
mial trees. For example, consider a simple tree
that is bounded at both low and high interest
rates, and, at each timestep, rtcan take one of
three possible values: rh
t=b+δr(high),rm
t=b
(mid), and rl
t=b−δr(low), with δra constant.
rm
0rm
δtrh
δt
rl
δtrm
2δtrh
2δt
rl
2δtrm
3δtrh
3δt
rl
3δt
The transition probabilities qt→t+δtfrom a node
rtto a nodert+δtdepend both on the tandt+δt
nodes, and thus qt→t+δtis an array of 3×3 =
9values. These probabilities can be derived by
equating the expected value and variance of the
continuous and discrete models, respectively (see
App. D).
2.2.1Dir: the distribution P(rt)
Given that at each timestep tthere are 3 possi-
ble outcomes we need two qubits, |0⟩t
rf1|0⟩t
rf0, to
encode the probabilities q; therefore, mtimesteps
require 2m“risk factor” qubits. At each timestep,
we use the first qubit (rf 0) from the pair to repre-
sent whether the interest rate transitions to the
mid level:rt→rm
t+δt. Specifically, the state |0⟩t
rf0
describes a transition to the mid node and the
state|1⟩t
rf0a transition to a different node. In the
latter case, we use the second qubit (rf 1) to model
whetherrttransitions to the high ( rt→rh
t+δt, de-
scribed by|1⟩t
rf1) or low (rt→rl
t+δt, described by
|0⟩t
rf1) levels, respectively. Because the transition
probabilities depend on the level of the interest
rate, the “risk factor” state needs to be read at
each timestep before encoding the probabilities
for the next transition. This can be facilitated by
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 11including 3additional “state” qubits — alongside
the2m“risk factor” qubits — to store the value
ofrtat each timestep; i.e. |001⟩t
st,|010⟩t
st, and
|100⟩t
st, which represent the high, mid, and low
interest rate levels, respectively. Assuming r0is
at the mid level, the tree is:
|∅∅⟩2δt
rf|∅∅⟩δt
rf
|010⟩0
st|∅∅⟩2δt
rf|00⟩δt
rf
|010⟩δt
st|∅∅⟩2δt
rf|11⟩δt
rf
|001⟩δt
st
|∅∅⟩2δt
rf|01⟩δt
rf
|100⟩δt
st|00⟩2δt
rf|ψ⟩δt
rf
|010⟩2δt
st|11⟩2δt
rf|ψ⟩δt
rf
|001⟩2δt
st
|01⟩2δt
rf|ψ⟩δt
rf
|100⟩2δt
st
The quantum state at the first timestep is:
|ψ⟩δt
rf|ψ⟩δt
st=√qmh|11⟩δt
rf|001⟩δt
st (36)
+√qmm|00⟩δt
rf|010⟩δt
st+√qml|01⟩δt
rf|100⟩δt
st,
where the first and second subscripts of the
transition probabilities denote the start and end
nodes. To assemble the gate Dirwe put together
a “read” operator Rt=Rl
tRm
tRh
t, which reads
the state|ψ⟩t
stand encodes the transition proba-
bilities to|ψ⟩t
rf. As an example, the operator Rm
δt
is:
|ψ⟩δt
rf0Ry(θmm
0)
|ψ⟩δt
rf1Ry(θmh
1)
|ψ⟩h
st
|ψ⟩m
st
|ψ⟩l
st
|0⟩ancRm
δt
where
θmm
0= 2 arcsin√qmm (37)
θmh
1= 2 arcsin/radicalig
qmh/(1−qmm).(38)Here, the controlled Ry(θhm
0)gate encodes the
probability qmm—namelythelikelihoodthatthe
rate will remain at the mid level rδt=r0=b
— into|ψ⟩δt
rf0. The second gate, and, checks
whether both r0=bandrδt̸=bare true —
namely whether the interest rate changed — and
writes the result to an “ancilla” qubit. The third
gate, controlled Ry(θmh
1), checks the result stored
in the “ancilla” qubit, and if it is |1⟩it encodes
the conditional probability of rδttransitioning to
the high interest rate value given that it did not
remain at the mid level: P(rδt=b+δr|rδt̸=b) =
P(rδt=b+δr)/P(rδt̸=b) =qmh/(1−qmm). The
fourth gate, and, ensures the “ancilla” qubit is in
its original state. The logic for the Rh
δtandRl
δt
gates is similar, see their decomposition in Fig. 5
which shows an example of the entire “read” gate
at the first timestep, Rδt.
The “write” gates Wtread the “risk factor”
qubit pair|ψ⟩t
rfand write the result to the “state”
qubits,|ψ⟩t
st:
Wt|11⟩t
rf|000⟩st=|11⟩t
rf|001⟩t
rf,(39)
Wt|00⟩t
rf|000⟩st=|00⟩t
rf|010⟩t
rf,(40)
Wt|01⟩t
rf|000⟩st=|01⟩t
rf|100⟩t
rf,(41)
see Fig. 5 for its decomposition of WtintoX
andandoperators. Before writing to the “state”
qubits, the previous state needs to be erased;
therefore, the application of Wtis always pre-
ceded by the gate W†
t−δtwhich resets the “state”
qubits back to|000⟩st. The inverses of the “read”
and “write” gates, R†
tandW†
t, consist of the com-
ponents ofRtandWtput in inverse order. Fi-
nally, the operator Dircan be assembled by a se-
quence of “read” and “write” operators for each
timestep as shown in Fig. 6.
2.2.2Mir: risk measures F(rt)
For the implementation of the trinomial tree we
consider as risk measure the probability of the
interest rate being equal to its long-term mean
level after mtimesteps. In this case, the gate
Mmis simply:
|ψ⟩h
st|ψ⟩h
st
|ψ⟩m
st|ψ⟩m
st
|ψ⟩l
st|ψ⟩l
st
|0⟩rm|ψ⟩rmMm
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 12|ψ⟩δt
rf0R R R XX
|ψ⟩δt
rf1R R R XXXX
|ψ⟩h
st
|ψ⟩m
stX X
|ψ⟩l
st
|0⟩ancW0Rh
δtRδt
Rm
δtRl
δtW†
0Wh
δtWδt
Wm
δtWl
δt
Figure 5: The decomposition of the “read” Rtand “write”Wtoperators for the first timestep, assuming that r0=b
(i.e.W0|000⟩st=|010⟩0
st). From left to right the Rgates areRy(θhm
0),Ry(θhh
1),Ry(θmm
0),Ry(θmh
1),Ry(θlm
0),
andRy(θlh
1).
···
···
···
···
···
···
···
···|ψ⟩δt
rf0
W0R1W†
0W1R2W†
1W2RmW†
m−1Wm|ψ⟩δt
rf1
|ψ⟩mδt
rf0
|ψ⟩mδt
rf1
|ψ⟩h
st
|ψ⟩m
st
|ψ⟩l
st
|0⟩ancDir
Figure 6: GateDirconsists of a sequence of “read” and “write” gates.
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 13Parameter Value
m 3
n 1-9
δr√
3Var
δt 3a/12
Table 3: List of the trinomial tree parameters for the
interest rate risk factor evolution.
qt→t+δtrt+δt
rthigh mid low
high19
244
241
24
mid4
2416
244
24
low1
244
2419
24
Table 4: The transition probabilities of the trinomial
tree.
withM†
m=Mm.
2.2.3 Results
Table 3 lists the choice of parameters for a quan-
tum circuit that implements trinomial trees for
interest rate evolution (due to our parametriza-
tion, we do not need to choose values for aand
b). For each one of the m= 3timesteps we need
2“risk factor” qubits, a total of 6:|ψ⟩rf. We need
an additional 3qubits to store the interest rate
state|ψ⟩st,1qubit for the risk measure |ψ⟩rm,
and9“ancilla” qubits|ψ⟩ancfor theAgates. We
can freely choose δr, which we set to a multiple
of the standard deviation. Note that the defini-
tion 0≤qt→t+δt≤1constrains the choice of δt
(see App. D). Having defined δrandδt, we can
calculate the transition probabilities, see Table 3.
When starting from r0=b, the probability of
measuring the value r3δt=bafter 3timesteps
can be calculated by adding up the probabilities
of all possible paths:
P(r3δt=b) =/summationdisplay
s1/bracketleftigg
qms1/parenleftigg/summationdisplay
s2qs1s2qs2m/parenrightigg/bracketrightigg
,(42)
wheres1, s2∈{h,m,l}are the nodes of the first
and second timesteps, respectively.
Figure 7 shows the probability distribution of
the “state” qubits (top panel) and the distribu-
tion of the “risk measure” qubit (bottom panel)
|001/angbracketright|010/angbracketright|100/angbracketright0.00.10.20.30.40.5P(|ψ/angbracketrightst)b+δr b b−δr
|0/angbracketright |1/angbracketright0.00.20.40.6P(|ψ/angbracketrightrm)P(b)Figure 7: The distribution P(r3δt)(top panel) and
superposition of the “risk factor” qubit that encodes
P(r3δt=b)(bottom panel).
att= 3δtwhen measuring these qubits directly
with 10,000shots.
Similar to the equity risk factor analysis, Fig. 8
shows the distribution of the output qubits for
n= 4(top panel) and the convergence of the
measured value of p=P(r3δt=b)as a function
of the number of output qubits (bottom panel).
2.3 Credit risk factors
This section focuses on simulating default prob-
abilities of issuers. Among the common ap-
proaches are structural and reduced-form credit
risk models, as well as credit rating migration.
2.3.1 Structural credit risk models
In structural credit risk models, e.g. the Merton
model [41], default takes place when the assets of
a company become less than its liabilities. As a
simple example, we assume that the liabilities Dt
have maturity at time T, and that the value of
the assetsAtfollows the stochastic process:
dAt=µAtdt+σAtdWt, (43)
whereµis the mean, σthe volatility, and Wta
Wiener process. Default occurs if at time t=T
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 14|0/angbracketright|3/angbracketright|6/angbracketright|9/angbracketright|12/angbracketright|15/angbracketright0.00.10.20.3P(|z/angbracketright)
0 2 4 6 8 10
noutput qubits0.00.20.40.60.81.0p
expected
measuredFigure 8: Top panel: the distribution P(|z⟩)of the mea-
sured output state for n= 4and10,000shots. Bottom
panel: the measured value of pas a function of the num-
ber of output qubits for 1shot.
thevalueoftheassetsislessthan, orequalto, the
liabilities,AT≤DT; therefore, the probability of
default isP(AT≤DT).
Ddef: the distribution P(At)Since this prob-
lem has a similar stochastic process to that of
equity risk factors, we can model the evolution
with a binomial tree using the gate Ddef=Deq
described in Sect. 2.1. As an example, we con-
sider the same binomial tree parameters as those
listed in Table 2 and set DT=A0d4. Based on
the top panel of Fig. 3, default occurs if j= 0or
j= 1(a “down” price move at all timesteps or a
single “up” move before time T).
Mdef: probability of default The risk mea-
sure here is the probability of default: P(AT≤
DT). While in the equity risk factor examples the
gatesMmaxandMminpick up a single value of
|ψ⟩rf(|11...1⟩rfand|00...0⟩rf, respectively), here
we assemble the gate Mdefsuch that it flips the
“risk factor” qubit for any value of |ψ⟩rfthat sat-
isfiesAT≤DT; namely, if/when the “risk fac-
tor” qubits takes one of the following 7values:
|000000⟩,|000001⟩,|000010⟩, ...,|100000⟩.For the implementation of the gate we also in-
clude “count” qubits, |ψ⟩c=|j⟩c, in order to store
the binary value of j. For 6“risk factor” qubits
we havej∈{0,...,6}, and thus 3“count” qubits
are needed to encode these 7values. We also in-
clude “state” qubits, |ψ⟩st, to represent each of
the values of jthat correspond to default; since
there are two such values here, j= 0andj= 1,
we include two “state” qubits.
The gateMdefcan be decomposed into three
parts. The first part counts the number of up
moves in|ψ⟩rf, i.e. it computes j, and writes it
to|ψ⟩c. The second part reads the state |ψ⟩cand
flips the corresponding “state” qubit when that
value isj= 0orj= 1. The third part consists
of an orgate than takes as input the two “state”
qubits and flips the “risk measure” qubit if any of
them is in the state |1⟩.
The first part can be achieved with the gate
C=Cm...C2C1:
|j⟩c=C|000⟩c, (44)
where each operator Clincrements the count by
one if the “risk factor” qubit of timestep lis an
“up” move:|ψ⟩lδt
rf=|1⟩.
··· ···
··· ···
··· ···
··· ···
··· ···
··· ···
··· ···
··· ···
··· ···
··· ···
··· ···|ψ⟩lδt
rf
|ψ⟩1
c
|ψ⟩2
c
|ψ⟩s−2
c
|ψ⟩s−1
c
|ψ⟩s
c
|0⟩1
anc
|0⟩2
anc
|0⟩s−3
anc
|0⟩s−2
anc
|0⟩s−1
ancCl
After the operator Ccounts the “up” moves ( j
in total) and writes them as a binary number to
|ψ⟩c, the operatorJ=Jm...J1J0readsjand
flips the corresponding qubit of the “state” qubits
|ψ⟩st, see Fig. 9. For our example, we are inter-
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 15···
···
···
···
···
···
···
···
···|0⟩1
cX
AA†X
AA†X
AA†X
AA†|0⟩2
cX XX X
|0⟩s
cX XX XX X
|0⟩1
anc
|0⟩s−1
anc
|0⟩j=0
st
|0⟩j=1
st
|0⟩j=2
st
|0⟩j=m
stJ0 J1 J2 Jm
Figure 9: The gates Jlthat flip the “state” qubit |0⟩j=l
stif|ψ⟩c=|l⟩c
ested in the values j= 0andj= 1so we only
include gatesJ0andJ1. Therefore, the compo-
nents of gateMdefare:
···
···
···
···
···
···|ψ⟩rf
C1C2Cm |ψ⟩c
J0
J1|0⟩anc
|0⟩j=0
st
OR |0⟩j=1
st
|0⟩rmCMdef
J
Results The top panel of Fig. 10 shows the
probability distribution of the “count” qubits and
thebottompanelthatofthe“riskmeasure” qubit.
Since the binomial tree parameters are the same
|0/angbracketright,|1/angbracketright|2/angbracketright|3/angbracketright|4/angbracketright|5/angbracketright|6/angbracketright0.00.10.20.30.4P(|ψ/angbracketrightc)
≤A0d4
A0d2
A0u0
A0u2
A0u4
A0u6
|0/angbracketright |1/angbracketright0.00.20.40.60.81.0P(|ψ/angbracketrightrm)
P(AT≤DT)Figure 10: Top panel: the distribution of ATas gener-
ated from 10,000 shots; the first bar represents the two
“default” states. Bottom panel: the distribution of the
“risk measure” qubit representing the probability of de-
fault.
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 16|0/angbracketright|3/angbracketright|6/angbracketright|9/angbracketright|12/angbracketright|15/angbracketright0.00.10.20.30.40.5P(|z/angbracketright)
0 2 4 6 8 10
noutput qubits0.00.10.20.30.40.5p
expected
measuredFigure 11: The measured probability distribution P(|z⟩)
(top panel) and the convergence of the estimated prob-
ability of default when using one shot (bottom panel).
as in the equity risk factor example, the top panel
is identical to Fig. 3 apart from the stacking of
the “default” states |0⟩and|1⟩(the probability
of which is encoded in the “risk measure” qubit
shown in the bottom panel). Figure 11 shows
the measurement of the output qubits and the
convergence of the probability distribution when
assembling all gates into a quantum circuit. The
expected value of the probability is
P(j= 0) +P(j= 1) =
=1/summationdisplay
j=0m!
(m−j)!j!qj(1−q)m−j
= (1−q)m+mq(1−q)m−1(45)
2.3.2 Reduced-form credit risk models
Another approach to estimate probabilities of de-
fault is reduced-form credit risk models, in which
default is modelled as a statistical process. The
survivalprobabilityfromtime t0totimetisgiven
by:
P(t0+t) =e−t/Tdef, (46)
whereTdefis a characteristic timescale, the in-
verse of which is called the hazard rate, λ=Parameter Value
m 6
n 1-9
T 1
qdef 2%
θdef180◦
π∼16.3◦
Table 5: List of parameters for the reduced-form credit
risk model.
1/Tdef.
To calculate the survival probability at time T
we can discretise the time interval t∈[0,T]with
mtimesteps,δt=T/m, such that the survival
probability is:
P(T) =e−/summationtext
δt/T=m/productdisplay
j=1P(δt).(47)
A visualisation of this process is:
S0Sδt
DδtS2δt
D2δtS3δt
D3δt
whereStandDtdenote the survival or default
states at time t, respectively.
Dsurv: the distribution P(T)At each of the
mtimesteps we can represent survival with one
“risk factor” qubit, such that |0⟩represents sur-
vival and|1⟩default. Thus, if the company
has survived until time t= (l−1)δt, then
|ψ⟩lδt
rf=√1−qdef|0⟩+√qdef|1⟩, whereqdef=
1−P(δt). If the company has defaulted at a
previous timestep, then: |ψ⟩lδt
rf=|1⟩. For the
example of m= 3:
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 17|∅∅∅⟩0|∅∅0⟩δt
rf
|∅∅1⟩δt
rf|∅00⟩2δt
rf
|∅10⟩2δt
rf|000⟩3δt
rf
|100⟩3δt
rf
|∅11⟩2δt
rf|110⟩3δt
rf
|111⟩3δt
rf
GateDsurvcan be assembled with rotation gates
Ry(θdef)(shown below as θdfor brevity) obtained
fromqdef= sin(θdef/2). In addition, in order
to ensure that in the event of default at time t
the company will also be in default at t+δt, we
include a controlled gate Ry(θc
def), whereθc
def+
θdef=π: this breaks the superposition of the
qubit representing t+δtand sets it to the state
|1⟩. Therefore, the gate Dsurvis:
···
···
···|0⟩δt
rfRθdy
|0⟩2δt
rf Rθc
dyRθdy
|0⟩mδt
rf Rθc
dyRθdyDsurv
The inverse gate, D†
surv, has the rotation gates in
reverse order and the signs of the rotation angles
flipped.
Msurv: survival probability The probability
of survival at t=Tis represented by the state
|0...00⟩T
rf. Therefore, wecanusethegate Msurv=
Mmindecribed in Sect 2.1, which flips the “risk
measure” qubitifall“risk factor” qubits are inthe
state|0⟩. The expected value of the probability
of survival at time Tis(1−qdef)m.
Results Table 5 lists the parameters of the
quantum circuit, and Fig. 12 the survival ( |1⟩rm)
|0/angbracketright |1/angbracketright0.00.20.40.60.81.0P(|ψ/angbracketrightrm)
1−P(T)Figure 12: The probabilities of the “risk measure” qubit
states:|1⟩denotes survival up to t=Tand|0⟩denotes
default at any timestep before reaching T.
and default (|0⟩rm) probabilities encoded in the
“risk measure” qubit. Figure 13 shows the mea-
surement of the output state and its convergence
similarly to the previous use cases.
2.3.3 Credit rating migration
A more elaborate approach to simulate probabili-
ties of default is with credit rating migration ma-
trices. For example, consider the following three
ratings: A (investment grade), B (high yield),
and D (defaulted), and assume that, at t= 0,
an issuer has the rating A 0. The evolution of the
credit rating can be described with multinomial
trees, such as this:
A0 Aδt
Bδt
DδtA2δt
B2δt
D2δtA3δt
B3δt
D3δt
where each transition, e.g. qA→Bhas a prede-
fined probability which is calibrated with histor-
ical data.
Since we have already described the implemen-
tation of such trees in Sect. 2.2, we do not provide
a more detailed example here. The credit rating
evolution and probability of default at time tcan
be modelled with the gate Dmigr=Dir(with a
minor adjustment to set the initial rating to A,
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 18|0/angbracketright|3/angbracketright|6/angbracketright|9/angbracketright|12/angbracketright|15/angbracketright0.00.20.4P(|z/angbracketright)
0 2 4 6 8 10
noutput qubits0.000.250.500.751.00p
expected
measuredFigure 13: Top panel: the probability distribution of the
output qubits for m= 4and 10,000 shots. Bottom
panel: the estimated probability (one shot) and its con-
vergence when increasing the number of output qubits.
which would correspond to the high interest rate
level), and the default probability can be encoded
withMdef=Ml(corresponding to measuring
the low interest rate level).
3 Discussion
We proceed to estimate the number of qubits re-
quired, and the resulting circuit depth, for typi-
cal financial risk use cases. We limit the analysis
to scenario generation and ignore the additional
qubits and gates that would be needed when, for
example, the pricing of a derivative is also in-
cluded in the circuit.
Since the number of “risk factor” qubits, mrf,
determines the number of time steps that discre-
tises a time period, we can consider mrfto rep-
resent “risk model accuracy”. Similarly, because
the number of output qubits, n, determines the
error of the estimate, we consider nto represent
“measurement precision”. The higher the num-
ber of input and output qubits is, the higher the
accuracy and precision are, respectively.
Financial risk models ignore intra-day changes,
thus the smallest timestep is one business day.
For scenario generation over long time horizons,
such as those that span decades, timesteps up
to one month can be a sufficient as well as anefficient choice.
Equity price scenarios are used in pric-
ing exchange-traded equity derivatives, most of
which expire in less than 12months, with some
extendingupto 2years. With∼260businessdays
in a year, theDeqgate would not require more
than∼520“risk factor” qubits. Equity scenarios
are also used in equity indices derivatives, struc-
tural credit risk models, convertible bonds, and
over-the-counter equity derivatives, all of which
can have time horizons from few months to sev-
eral years. Even for periods as large as 50years,
and by considering a timestep of one month, the
Deqgate has an upper limit of 600qubits. Be-
causethenumberof“ancilla” qubits, manc, forthe
gatesMminandMmaxscales linearly with mrf,
these gates require roughly: manc≃mrf. This is
not the case for the gate Mdef, which only needs
few additional qubits (“count”, “state”, and “an-
cilla”) asmrfincreases; e.g., only 8qubits are
needed to count from 1to256. Overall, the total
number of input qubits (“risk factor”, “risk mea-
sure”, “ancilla”, “count”, “state”) for typical use
cases of equity risk factor scenarios has an upper
limit of∼1,200.
Reduced-formcreditriskmodelscanbeusedto
simulate the survival probability of an entity over
several years, whether for credit default swaps
or counterparty credit risk use cases. Similar to
structural credit risk models, a timestep of one
month can be sufficient for long time horizons;
this limits the number of “risk factor” qubits of
theDsurvgate to be a few hundred at most (e.g.
600for50years). BecauseMsurvneeds a number
of “ancilla” qubits similar to mrf, the total num-
ber of input qubits for this type of circuits would
not exceed∼1,200either.
For interest rate scenarios, the number of “risk
factor” qubits has a linear dependence on the
number of timesteps as in the case of equity sce-
narios. Because interest rates do not fluctuate
as much on a daily basis as equities, a timestep
of one month is often adequate to model their
evolution. On the other hand, by increasing the
number of nodes per timestep, the number of
qubits needed to model the discrete interest rate
values also increases (based on the implementa-
tion of theDirgate here). The scaling is sub-
linear though, as each new additional qubit can
double the amount of interest rate values mod-
elled. Moreover, the Mmgate of our example
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 19only needs one additional qubit, the “risk mea-
sure” one. While we refrain from a more detailed
estimate, modelling a 50-year period would not
require more than a thousand input qubits. The
same analysis also applies to multinomial trees
for the modelling of credit rating migration.
In terms of precision, we can require that δp∼
1 bp = 0.01% = 10−4,9which can be achieved
withn≃14output qubits (based on Eq. 19).
Therefore, when accounting for both input
and output qubits, scenario generation for typ-
ical financial risk use cases would overall require
around or a little more than a thousand qubits
for high-accuracy, high-precision results.
Next, we proceed to estimate the circuit depth.
With current quantum computers, the higher the
numberofgatesthemorepronethecomputations
are to errors due to noise. We calculate the depth
numerically by decomposing the gates or circuits
of Sect. 2 into their constituent gates, a process
that we repeat until no further decomposition is
possible.10The left panels of Fig. 14 show the
depth of gatesDandMas a function of the
number of input qubits m(model accuracy); the
depth is found to scale linearly with m. Since
form≃10the depth is ≲500, form∼1,000
we expect the gate depth to be on the order of
≲50,000.
The right panels of Fig. 14 show the total cir-
cuit depth (it includes the gates D,M,/producttextQ,
QFT, and QFT†) in log scale as a function of
the number of output qubits n(model precision).
The depth increases exponentially with respect
tonbecause every extra output qubit doubles
the number of times the Qgate is applied (see
Eq. 14). For n= 14, the total depth is projected
to be on the order of ≲108. Estimates from pric-
ing exotic derivatives report qubit numbers and
circuit depths that are on the same order of mag-
nitude,∼103-104and∼108, respectively [14, 26].
While quantum computers are expected to
reach∼1,000qubits in the next few years, the
9“bp” stands for basis points.
10For the numerical calculation of the gate or cir-
cuit depth we use the Qiskit functions decompose() and
depth() [42]. For example, the depth of a 2-qubit cir-
cuit in which each qubit is going through an Hgate,
H|0⟩⊗H|0⟩=|++⟩, has a gate count of 2and a circuit
depth of 1because the two gates act in parallel. An ex-
ample of decomposition is breaking down the Toffoli gate
into the basic gates it consists of, which gives a gate depth
of11.estimated circuit depth prevents such use cases
from being feasible without significant progress
on fault tolerance. Moreover, note that all the
above estimates apply when modelling a single
risk factor. For a portfolio that depends on mul-
tiple risk factors, we would need that many times
of input qubits (parallel run), or to generate sce-
narios sequentially (serial run) [7]. Hardware lim-
itation make the latter option more likely in the
near term.
4 Summary and conclusions
QAE algorithms have been shown to provide a
quadratic speedup over their classical counter-
parts, a result that has motivated several recent
papers on financial risk applications. Most of
these papers start from pre-computed risk fac-
tor distributions and focus on the calculation of
common risk measures, distribution loading, and
QAE optimisations. In this paper, we extend
these studies by consistently integrating scenario
generation — which we call QMC — into QAE
quantum circuits. Specifically, we assemble quan-
tum gates that implement stochastic risk mod-
els for the evolution of equity, interest rate, and
credit risk factors. For equities, we generate sce-
narios by discretising a geometric Brownian mo-
tion with binomial trees, and for interest rates,
bydiscretisingmean-reversionstochasticdifferen-
tial equations with bounded trinomial trees. For
credit risk factors, we calculate the default prob-
ability from structural models based on binomial
trees and the survival probability from reduced-
form models based on a Poisson process. We
also describe how multinomial tress can be used
for the implementation of credit rating migration
matrices. Moreover, we assemble quantum gates
toencodegenericrisk measures, suchasthe prob-
abibilities of measuring the minimum, maximum,
and the tail of a distribution. For each use case,
we build end-to-end QMC/QAE circuits that in-
corporate: the generation of risk factor scenarios
(QMC), the encoding of the risk measure, and
the estimation of the risk measure value (QAE).
We then validate the quantum computation with
simulated runs, and demonstrate that the mea-
sured value converges to the expected value and
that the error goes to zero as the number of out-
put qubits increases.
For the typical model accuracy and measure-
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 200250500
DeqMminMmax
46
Equity (min)
Equity (max)
0250500
DirMir
46
Interest rates
0250500gate depth
DdefMdef
46log10(circuit depth)
Structural models
2 4 6 8
minput qubits (model accuracy)0250500
DsurvMsurv
2 4 6 8
noutput qubits (measurement precision)46
Reduced-form modelsFigure 14: Left panels: depth of the gates DandMas a function of the number of input qubits, m, which represents
model accuracy. Right panels: depth (in log scale) of the entire quantum circuit as a function of the number of
output qubits, n, which represents measurement precision.
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 21ment precision of realistic financial use cases,
we estimate that risk factor evolution requires
≲1,200qubits, which is within the capabilities
of the quantum computers expected in the next
few years. However, we estimate that the typical
circuit depth is on the order of ≲108, which poses
thebiggestchallengeuntilfault-tolerantquantum
devices are available.
The probabilistic output of quantum gates
combined with the quantum property of super-
position provide a natural framework for the im-
plementation of stochastic risk models. On the
one hand, quantum gates can model the out-
put states of a random variable by encoding the
probabilities of the outcomes. On the other
hand, superposition enables the quantum cir-
cuit to simultaneously model all possible paths
of a time-dependent random variable, eliminat-
ing the classical-computation constraint of iter-
ating over paths. We conclude that quantum fi-
nancial risk applications can benefit from consis-
tently incorporating scenario generation as part
of QMC/QAE simulations, further reducing their
dependency on classical computers.
Acknowledgements
We are grateful to three anonymous referees for
their detailed reports that helped improve the re-
sults and presentation of the paper. The quan-
tum computations were performed on a classical
computerusingazero-noisesimulatorfromQiskit
(version 0.24.2), an open-source framework for
quantum computing [42].
References
[1] Román Orús, Samuel Mugel, and Enrique
Lizaso. “Quantum computing for finance:
Overviewandprospects”. ReviewsinPhysics
4, 100028 (2019).
[2] Daniel J. Egger, Claudio Gambella, Jakub
Marecek, Scott McFaddin, Martin Mevissen,
Rudy Raymond, Andrea Simonetto, Stefan
Woerner, and Elena Yndurain. “Quantum
computing for finance: State-of-the-art and
future prospects”. IEEE Transactions on
Quantum Engineering 1, 1–24 (2020).
[3] Andrés Gómez, Alvaro Leitao Rodriguez,
Alberto Manzano, Maria Nogueiras, Gus-
tavo Ordóñez, and Carlos Vázquez. “A sur-vey on quantum computational finance for
derivatives pricing and var”. Archives of
Computational Methods in Engineering 29,
4137–4163 (2022).
[4] DylanHerman, CodyGoogin, XiaoyuanLiu,
Alexey Galda, Ilya Safro, Yue Sun, Marco
Pistoia, and Yuri Alexeev. “A Survey of
Quantum Computing for Finance” (2022).
arXiv:2201.02773.
[5] Sascha Wilkens and Joe Moorhouse. “Quan-
tum computing for financial risk measure-
ment”. Quantum Information Process-
ing22(2023).
[6] Philip Intallura, Georgios Korpas, Sudeepto
Chakraborty, Vyacheslav Kungurtsev, and
Jakub Marecek. “A Survey of Quan-
tum Alternatives to Randomized Algo-
rithms: Monte Carlo Integration and Be-
yond” (2023). arXiv:2303.04945.
[7] Alexander M. Dalzell, Sam McArdle, Mario
Berta, Przemyslaw Bienias, Chi-Fang Chen,
András Gilyén, Connor T. Hann, Michael J.
Kastoryano, Emil T. Khabiboulline, Alek-
sanderKubica, GrantSalton, SamsonWang,
and Fernando G. S. L. Brandão. “Quan-
tum algorithms: A survey of applica-
tions and end-to-end complexities” (2023).
arXiv:2310.03011.
[8] Stefan Woerner and Daniel J. Egger. “Quan-
tum risk analysis”. npj Quantum Informa-
tion5, 15 (2019).
[9] D. J. Egger, R. Garcia Gutierrez, J. Cahue
Mestre,andS.Woerner. “Creditriskanalysis
using quantum computers”. IEEE Transac-
tions on ComputersPages 1–1 (5555).
[10] Kazuya Kaneko, Koichi Miyamoto, Naoyuki
Takeda, and Kazuyoshi Yoshino. “Quantum
speedup of Monte Carlo integration with re-
spect to the number of dimensions and its
application to finance”. Quantum Informa-
tion Processing 20, 185 (2021).
[11] Patrick Rebentrost, Brajesh Gupt, and
Thomas R. Bromley. “Quantum computa-
tional finance: Monte carlo pricing of fi-
nancial derivatives”. Phys. Rev. A 98,
022321 (2018).
[12] Nikitas Stamatopoulos, Daniel J. Egger, Yue
Sun, Christa Zoufal, Raban Iten, Ning Shen,
and Stefan Woerner. “Option Pricing us-
ing Quantum Computers”. Quantum 4,
291 (2020).
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 22[13] Almudena Carrera Vazquez and Stefan Wo-
erner. “Efficient state preparation for quan-
tum amplitude estimation”. Phys. Rev.
Appl.15, 034027 (2021).
[14] Shouvanik Chakrabarti, Rajiv Krishnaku-
mar, Guglielmo Mazzola, Nikitas Stam-
atopoulos, Stefan Woerner, and William J.
Zeng. “A Threshold for Quantum Advan-
tage in Derivative Pricing”. Quantum 5,
463 (2021).
[15] João F. Doriguello, Alessandro Luongo,
Jinge Bao, Patrick Rebentrost, and Miklos
Santha. “Quantum algorithm for stochastic
optimal stopping problems with applications
in finance” (2021). arXiv:2111.15332.
[16] Hao Tang, Anurag Pal, Lu-Feng Qiao,
Tian-Yu Wang, Jun Gao, and Xian-Min
Jin. “Quantum Computation for Pricing
the Collateralized Debt Obligations” (2020).
arXiv:2008.04110.
[17] Javier Alcazar, Andrea Cadarso, Amara
Katabarwa, Marta Mauri, Borja Peropadre,
Guoming Wang, and Yudong Cao. “Quan-
tum algorithm for credit valuation ad-
justments”. New Journal of Physics 24,
023036 (2022).
[18] Jeong Yu Han and Patrick Rebentrost.
“Quantum advantage for multi-option
portfolio pricing and valuation adjust-
ments” (2022). arXiv:2203.04924.
[19] Nikitas Stamatopoulos, Guglielmo Mazzola,
Stefan Woerner, and William J. Zeng. “To-
wards Quantum Advantage in Financial
Market Risk using Quantum Gradient Algo-
rithms”. Quantum 6, 770 (2022).
[20] John Preskill. “Quantum Computing in
the NISQ era and beyond”. Quantum 2,
79 (2018).
[21] Gilles Brassard, Peter Høyer, Michele
Mosca, and Alain Tapp. “Quantum ampli-
tude amplification and estimation”. Quan-
tumComputationandInformationPages53–
74 (2002).
[22] Lov Grover and Terry Rudolph. “Creating
superpositions that correspond to efficiently
integrable probability distributions” (2002).
arXiv:quant-ph/0208112.
[23] Steven Herbert. “No quantum speedup with
grover-rudolph state preparation for quan-
tum monte carlo integration”. Phys. Rev. E
103, 063302 (2021).[24] Christa Zoufal, Aurélien Lucchi, and Stefan
Woerner. “Quantum generative adversarial
networks for learning and loading random
distributions”. npj Quantum Information 1,
103 (2019).
[25] JunxuLi and SabreKais. “Auniversal quan-
tum circuit design for periodical functions”.
New Journal of Physics 23, 103022 (2021).
[26] Nikitas Stamatopoulos and William J. Zeng.
“Derivative Pricing using Quantum Signal
Processing” (2023). arXiv:2307.14310.
[27] Sam McArdle, András Gilyén, and Mario
Berta. “Quantum state preparation
without coherent arithmetic” (2022).
arXiv:2210.14892.
[28] Ashley Montanaro. “Quantum speedup
of monte carlo methods”. Proceedings
of the Royal Society A: Mathematical,
Physical and Engineering Sciences 471,
20150301 (2015).
[29] Michael B. Giles. “Multilevel monte
carlo methods”. Acta Numerica 24,
259–328 (2015).
[30] Dong An, Noah Linden, Jin-Peng Liu, Ash-
ley Montanaro, Changpeng Shao, and Ji-
asu Wang. “Quantum-accelerated multilevel
Monte Carlo methods for stochastic differ-
ential equations in mathematical finance”.
Quantum 5, 481 (2021).
[31] John C. Hull. “Options, futures, and other
derivatives”. Pearson. (2021). 11thed.,pear-
son global ed. edition.
[32] Lov K. Grover. “A fast quantum mechanical
algorithm for database search”. In Gary L.
Miller, editor, Proceedings of the Twenty-
Eighth Annual ACM Symposium on the
Theory of Computing, Philadelphia, Penn-
sylvania, USA, May 22-24, 1996. Pages 212–
219. ACM (1996).
[33] Yohichi Suzuki, Shumpei Uno, Rudy Ray-
mond, Tomoki Tanaka, Tamiya Onodera,
and Naoki Yamamoto. “Amplitude estima-
tion without phase estimation”. Quantum
Information Processing 19(2020).
[34] Dmitry Grinko, Julien Gacon, Christa Zo-
ufal, and Stefan Woerner. “Iterative quan-
tum amplitude estimation”. npj Quantum
Information 7(2021).
[35] Kirill Plekhanov, Matthias Rosenkranz,
Mattia Fiorentini, and Michael Lubasch.
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 23|0/angbracketrightxyz
X|0/angbracketright=|1/angbracketrightxyz
Rπ/3
zRπ/2
y|0/angbracketright=|ψ/angbracketrightxyzFigure 15: Left: the quantum state |0⟩on the Bloch sphere. Middle: the quantum state |1⟩, which can be obtained
by acting on|0⟩with the notoperator,X. The dashed line indicates that the point is on the non-visible part of the
sphere’s surface. Right: the superposition |ψ⟩= cos(π/4)|0⟩+eiπ/3sin(π/4)|1⟩obtained by the operation of two
rotation gates.
“Variational quantum amplitude estima-
tion”. Quantum 6, 670 (2022).
[36] John C. Cox, Stephen A. Ross, and Mark
Rubinstein. “Option pricing: A simplified
approach”. Journal of Financial Economics
7, 229–263 (1979).
[37] Vlatko Vedral, Adriano Barenco, and Artur
Ekert. “Quantum networks for elementary
arithmetic operations”. Phys. Rev. A 54,
147–153 (1996).
[38] David Oliveira and Rubens Ramos. “Quan-
tum bit string comparator: Circuits and ap-
plications”. Quantum Computers and Com-
puting7(2007).
[39] Various authors. “Qiskit textbook”. Github.(2023). url: github.com/Qiskit/textbook .
[40] Oldrich Vasicek. “An equilibrium character-
ization of the term structure”. Journal of
Financial Economics 5, 177–188 (1977).
[41] Robert C. Merton. “On the pricing of cor-
porate debt: the risk structure of interest
rates”. The Journal of Finance 29, 449–
470 (1974).
[42] “Qiskit: Anopen-sourceframeworkforquan-
tum computing” (2021).
[43] John C Hull and Alan D White. “Numerical
procedures for implementing term structure
models i”. The Journal of Derivatives 2, 7–
16 (1994).
A Qubits, gates, and quantum circuits
Quantum computers consist of qubits, which are the equivalent of classical bits. The quantum states
|0⟩and|1⟩, which represent the values of 0and1, are shown on the Bloch sphere in the left and
middle panels of Fig. 15, respectively.11The key property of qubits is that they can exist in any
superposition of these two states, i.e. |ψ⟩=a0|0⟩+a1|1⟩, wherea0,a1are complex numbers satisfying
the condition|a0|2+|a1|2= 1. When such a qubit is measured, it will give either the state |0⟩
or|1⟩with probabilities a2
0anda2
1, respectively.12Due to the probabilistic nature of the measured
outcome, repeated experiments — called shots — are often needed to improve the precision of a result.
Quantum states of single qubits can be conveniently written using the real-valued parameters θ∈[0,π]
andϕ∈[0,2π]:
|ψ⟩= cos(θ/2)|0⟩+eiϕsin(θ/2)|1⟩, (48)
whereθdetermines the probability of each state and ϕis the relative phase (we have ignored the global
phase).
11|0⟩and|1⟩are orthonormal, i.e. ⟨0|0⟩= 1,⟨1|1⟩= 1, and⟨0|1⟩=⟨1|0⟩= 0.
12Measurement collapses the quantum state to a single state, destroying the superposition. If the qubit were to be
measured again, it would be found in the same state.
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 24H|0/angbracketright=|+/angbracketrightxyz
H|1/angbracketright=|−/angbracketrightxyz
ZH|0/angbracketright=|−/angbracketrightxyzFigure 16: Left and middle: the quantum states |+⟩=H|0⟩and|−⟩=H|1⟩, whereHis the Hadamard gate
rotating the qubits by πalong thex=zaxis. Right: the quantum state |−⟩=ZH|0⟩, whereZrotates the qubit
byπalong thez-axis, changing its state from |+⟩to|−⟩.
Quantum circuits are composed of quantum gates operating on qubits. Because qubits can be put in
a superposition of states, quantum gates process multiple states simultaneously, when classical gates
can only process one at a time.13Single-qubit gates modify the state of a qubit — for instance, see
the middle panel of Fig. 15 that shows the X, ornot, operator flipping |0⟩to output|1⟩. Generally,
single-qubit gates modify the parameters θandϕ. An example is shown in the right panel of Fig. 15,
where the operator Rπ/2
yrotates the qubit |0⟩byθ=πaround the y-axis, and then Rπ/3
zrotates it by
ϕ=π/3around the z-axis. The quantum circuits for the three qubits of Fig. 15 can be written as
|0⟩ |0⟩
|0⟩X |1⟩
|0⟩Rπ/2
yRπ/3
z|0⟩or|1⟩
where the third qubit has a 50%chance to be found in either the |0⟩or|1⟩state.
Two-qubit gates leverage quantum entanglement, a property that binds the states of two qubits to-
gether, and may alter the qubits depending on their initial states. This mechanism allows to implement
logical operators similar to an “if” statement, e.g. the cnot(controlled not) gate below:
|0⟩|0⟩
|0⟩|0⟩|1⟩|1⟩
|0⟩|1⟩|0⟩|0⟩
|1⟩|1⟩|1⟩|1⟩
|1⟩|0⟩
When the “control” qubit (top) is in the state |1⟩, the cnotgate flips the “target” qubit (bottom). If
the “control” qubit is in the state |0⟩, the “target” qubit remains unchanged. Another example with
thecnotgate is the “phase kickback” mechanism, where the phase of the target is “kicked back” to
the controller, e.g.
13This is one of the key properties that can make quantum computers more efficient than classical ones.
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 25|+⟩|+⟩
|+⟩|+⟩|+⟩|−⟩
|−⟩|−⟩|−⟩|−⟩
|+⟩|+⟩|−⟩|+⟩
|−⟩|−⟩
where|+⟩and|−⟩is another basis, with the qubits along the x-axis, see Fig. 16.14
Thecnotgate is a building block of the three-qubit andgate (also known as Toffoli or ccnot
gate):
|0⟩|0⟩
|0⟩|0⟩
|0⟩|0⟩AND
|1⟩
AND|1⟩
|0⟩|0⟩
|0⟩|0⟩|0⟩
AND|0⟩
|1⟩|1⟩
|0⟩|0⟩|1⟩
AND|1⟩
|1⟩|1⟩
|0⟩|1⟩
With the help of the notandandgates we can build the logic for an orgate:
|0⟩ XX|0⟩
|0⟩XX |0⟩
|0⟩ |0⟩OR
|1⟩
OR|1⟩
|0⟩|0⟩
|0⟩|1⟩|0⟩
OR|0⟩
|1⟩|1⟩
|0⟩|1⟩|1⟩
OR|1⟩
|1⟩|1⟩
|0⟩|1⟩
Other multi-qubit gates can be assembled as sub-circuits by combining basic two-qubit gates, however,
their depth is currently limited by hardware noise.
B Calculations
In the below we drop the subscript “in” for brevity.
B.1 Calculation of Q|ψ⟩
From Eq. (7)notice that:
⟨ψ0|ψ1⟩=⟨ψ0|ψ1⟩rf⟨0|1⟩rm= 0 (49)
⟨ψ1|ψ0⟩=⟨ψ1|ψ0⟩rf⟨1|0⟩rm= 0 (50)
and also
⟨ψ|ψ⟩= 1
(1−p)⟨ψ0|ψ0⟩+p⟨ψ1|ψ1⟩= 1
⟨ψ0|ψ0⟩+p(⟨ψ1|ψ1⟩−⟨ψ0|ψ0⟩) = 1 (51)
which, because it should hold for any p, implies:
⟨ψ0|ψ0⟩=⟨ψ1|ψ1⟩= 1 (52)
14The relation of the two bases is: |+⟩=1√
2(|0⟩+|1⟩)and|−⟩ =1√
2(|0⟩−| 1⟩).
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 26ApplyingQ(Eq. 8) on|ψ⟩(Eq. 7) gives:
Q|ψ⟩=Qψ/parenleftbig1−2|ψ0⟩⟨ψ0|/parenrightbig/parenleftbig/radicalbig
1−p|ψ0⟩+√p|ψ1⟩/parenrightbig
=/bracketleftbigg
1−2(1−p)|ψ0⟩⟨ψ0|−2/radicalig
p(1−p)|ψ0⟩⟨ψ1|−2/radicalig
p(1−p)|ψ1⟩⟨ψ0|−2p|ψ1⟩⟨ψ1|/bracketrightbigg
×/parenleftig
−/radicalbig
1−p|ψ0⟩+√p|ψ1⟩/parenrightig
=−/radicalbig
1−p|ψ0⟩+√p|ψ1⟩+ 2(1−p)/radicalbig
1−p|ψ0⟩−2p/radicalbig
1−p|ψ0⟩
+ 2(1−p)√p|ψ1⟩−2p√p|ψ1⟩
= (1−4p)/radicalbig
1−p|ψ0⟩+ (3−4p)√p|ψ1⟩. (53)
B.2 Calculation of Q|ψ±⟩
Q|ψ±⟩=1√
2Qψ/parenleftbig1−2|ψ0⟩⟨ψ0|/parenrightbig/parenleftbig|ψ1⟩±i|ψ0⟩/parenrightbig
=1√
2/bracketleftbigg
1−2(1−p)|ψ0⟩⟨ψ0|−2/radicalig
p(1−p)|ψ0⟩⟨ψ1|−2/radicalig
p(1−p)|ψ1⟩⟨ψ0|−2p|ψ1⟩⟨ψ1|/bracketrightbigg
×/parenleftbig|ψ1⟩∓i|ψ0⟩/parenrightbig
=1√
2/bracketleftbigg
|ψ1⟩∓i|ψ0⟩±i2(1−p)|ψ0⟩−2/radicalig
p(1−p)|ψ0⟩±i2/radicalig
p(1−p)|ψ1⟩−2p|ψ1⟩/bracketrightbigg
=1√
2/bracketleftbigg
±i(1−2p)|ψ0⟩−2/radicalig
p(1−p)|ψ0⟩+ (1−2p)|ψ1⟩±i2/radicalig
p(1−p)|ψ1⟩/bracketrightbigg
. (54)
But
1−2p= 1−2 sin2(θ/2) = cosθ, (55)
2/radicalig
p(1−p) = 2 sin(θ/2) cos(θ/2) = sinθ. (56)
Therefore,
Q|ψ±⟩=1√
2/parenleftbig±icosθ|ψ0⟩−sinθ|ψ0⟩+ cosθ|ψ1⟩±isinθ|ψ1⟩/parenrightbig
=1√
2cosθ/parenleftbig|ψ1⟩±i|ψ0⟩/parenrightbig+1√
2sinθ/parenleftbig±i|ψ1⟩−|ψ0⟩/parenrightbig
= cosθ|ψ±⟩±isinθ|ψ±⟩
=e±iθ|ψ±⟩, (57)
which implies that:
Qk|ψ±⟩=e±ikθ|ψ±⟩. (58)
B.3 Expressing|ψ⟩as a function of|ψ±⟩
We can write|ψ0⟩and|ψ1⟩as functions of|ψ±⟩:
|ψ0⟩=−i1√
2/parenleftbig|ψ+⟩−|ψ−⟩/parenrightbig, (59)
|ψ1⟩=1√
2/parenleftbig|ψ+⟩+|ψ−⟩/parenrightbig. (60)
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 27Therefore,
|ψ⟩=/radicalbig
1−p|ψ0⟩+√p|ψ1⟩
=1√
2√p/parenleftbig|ψ+⟩+|ψ−⟩/parenrightbig−i1√
2/radicalbig
1−p/parenleftbig|ψ+⟩−|ψ−⟩/parenrightbig
=−i1√
2/bracketleftbigisin(θ/2)/parenleftbig|ψ+⟩+|ψ−⟩/parenrightbig+ cos(θ/2)/parenleftbig|ψ+⟩−|ψ−⟩/parenrightbig/bracketrightbig
=−i1√
2/bracketleftig/parenleftig
cos(θ/2) +isin(θ/2)/parenrightig
|ψ+⟩−/parenleftig
cos(θ/2)−isin(θ/2)/parenrightig
|ψ−⟩/bracketrightig
=−i1√
2/parenleftbigeiθ/2|ψ+⟩−e−iθ/2|ψ−⟩/parenrightbig. (61)
B.4 The output qubits after the controlled gate Q
We set the output qubits — which we label here with l= 0,1,...,n−1— as controls to the gate Q,
and apply the gate 2ltimes for each qubit, respectively. Their output state is:
n−1/productdisplay
l=0Q2l|ψ⟩|+⟩⊗n
out=|ψ⟩n−1/circlemultiplydisplay
l=0/bracketleftbigg1√
2/parenleftig
|0⟩+e±i2lθ|1⟩/parenrightig/bracketrightbigg
=|ψ⟩1
2n/2n−1/circlemultiplydisplay
l=0/parenleftig
ei2lθ·0|0⟩+e±i2lθ·1|1⟩/parenrightig
=|ψ⟩1
2n/2n−1/circlemultiplydisplay
l=0
1/summationdisplay
bl=0e±i2lblθ|bk⟩

=|ψ⟩1
2n/21/summationdisplay
b0=01/summationdisplay
b1=0···1/summationdisplay
bn−1=0n−1/productdisplay
l=0e±i2lblθ|b0⟩|b1⟩...|bn−1⟩
=|ψ⟩1
2n/21/summationdisplay
b0=0···1/summationdisplay
bn−1=0e±/summationtextn−1
l=0i2lblθ|b0...bn−1⟩
=|ψ⟩1
2n/22n−1/summationdisplay
x=0e±ixθ|x⟩. (62)
B.5 Inverse Quantum Fourier Transform
The inverse quantum Fourier transform of the state of the output qubits gives:
|ψ⟩out= QFT†/bracketleftigg
1
2n/22n−1/summationdisplay
x=0e±ixθ|x⟩/bracketrightigg
=1
2n/22n−1/summationdisplay
x=0e±ixθQFT†|x⟩
=1
2n/22n−1/summationdisplay
x=0e±ixθ/parenleftigg
1
2n/22n−1/summationdisplay
z=0e−i2πxz/ 2n|z⟩/parenrightigg
=1
2n2n−1/summationdisplay
z=02n−1/summationdisplay
x=0eix(±θ−2πz/2n)|z⟩
=2n−1/summationdisplay
z=0az|z⟩. (63)
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 28B.6 The amplitudes azwhen 2nθ/2πor2n(2π−θ)/2πare integers
In the special case where either 2nθ/2πor2n(2π−θ)/2πis an integer equal to z0, the amplitude az0
is:
az0=1
2n2n−1/summationdisplay
x=01 = 1, (64)
and for all other az:
az=1
2n2n−1/summationdisplay
x=0eix(2πz0/2n−2πz/2n)
=1
2n2n−1/summationdisplay
x=0/parenleftig
ei2π(z0−z)/2n/parenrightigx
=1
2n
1−/parenleftig
ei2π(z0−z)/2n/parenrightig2n
1−ei2π(z0−z)/2n

=1
2n/parenleftigg
1−ei2π(z0−z)
1−ei2π(z0−z)/2n/parenrightigg
= 0 (65)
whereei2π(z0−z)= 1becausez0−zis an integer.
B.7 The general case for the amplitudes |az|
If neither 2nθ/2πnor2n(2π−θ)/2πis an integer, we can find the closest integer such that z0+ϵ=
2nθ/2πorz0+ϵ= 2n(2π−θ)/2π, whereϵ∈(0,1/2]. Namely,
az=1
2n2n−1/summationdisplay
x=0eix(2πz0/2n−2πz/2n+2πϵ/2n)
=1
2n2n−1/summationdisplay
x=0/parenleftig
ei2π(z0−z+ϵ)/2n/parenrightigx
=1
2n
1−/parenleftig
ei2π(z0−z+ϵ)/2n/parenrightig2n
1−ei2π(z0−z+ϵ)/2n

=1
2n/parenleftigg
1−ei2π(z0−z)ei2πϵ
1−ei2π(z0−z+ϵ)/2n/parenrightigg
=1
2n/parenleftigg
1−ei2πϵ
1−ei2π(z0−z+ϵ)/2n/parenrightigg
(66)
The probability|az|2is
|az|2=1
22n/parenleftigg
1−ei2πϵ
1−ei2π(z0−z+ϵ)/2n/parenrightigg/parenleftigg
1−e−i2πϵ
1−e−i2π(z0−z+ϵ)/2n/parenrightigg
=1
22n/parenleftigg
2−ei2πϵ−e−i2πϵ
2−ei2π(z0−z+ϵ)/2n−e−i2π(z0−z+ϵ)/2n/parenrightigg
=1
22n/parenleftbigg1−cos(2πϵ)
1−cos[2π(z0−z+ϵ)/2n]/parenrightbigg
, (67)
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 29and, for large n, the probability of measuring the closest integer ( z=z0) is:
|az0|2=1
22n/parenleftbigg1−cos(2πϵ)
1−cos(2πϵ/2n)/parenrightbigg
≃1
22n/bracketleftigg
1−/parenleftigg
1−(2πϵ)2
2!+(2πϵ)4
4!/parenrightigg/bracketrightigg/bracketleftigg
1−/parenleftigg
1−(2πϵ)2
22n2!/parenrightigg/bracketrightigg−1
=1
22n/bracketleftigg
(2πϵ)2
2!−(2πϵ)4
4!/bracketrightigg/bracketleftigg
22n2!
(2πϵ)2/bracketrightigg
= 1−π2ϵ2
3
≥1−π2
12, (68)
where in the last expression we took the maximum value of ϵ= 1/2.
B.8 Calculation of δpfor QAE
The error in pcan be estimated as follows:
δp=δsin2/parenleftbiggθ
2/parenrightbigg
≃2 sin/parenleftbiggθ
2/parenrightbigg
cos/parenleftbiggθ
2/parenrightbiggδθ
2
= sinθπ
2n, (69)
becauseδθ= 2π/2n.
C Equity risk factor calculations
C.1 Binomial tree parameters
By matching the mean of the continuous and discrete models we obtain the value of q:
E(St+δt) =qSu
t+δt+ (1−q)Sd
t+δt
Steµδt=qStu+ (1−q)Std
q=eµδt−d
u−d
=ueµδt−1
u2−1(70)
And from the variance, we obtain the value of u:
Var(St+δt) =E(S2
t+δt)−E(St+δt)2
S2
te2µδt+σ2δt−S2
te2µδt=q(S2
tu2) + (1−q)(S2
td2)−S2
te2µδt
e2µδt+σ2δt=qu2+ (1−q)d2
=u2ueµδt−1
u2−1+1
u2u2−ueµδt
u2−1
=1
u(u2−1)/parenleftig
u4eµδt−u3+u−eµδt/parenrightig
=1
u(u2−1)/bracketleftig
eµδt(u4−1)−u(u2−1)/bracketrightig
=1
u/bracketleftig
eµδt(u2+ 1)−u/bracketrightig
. (71)
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 30We consider small timesteps, σ√
δt≪1andµδt≪1, ignore terms higher than O(δt), and try the
solutionu=eb√
δt. With Taylor expansion, the terms eµδt+σ2δt,u,u2, andu−1are:
e2µδt+σ2δt≃1 + 2µδt+σ2δt (72)
u≃1 +b√
δt+1
2b2δt (73)
u2≃/parenleftbigg
1 +b√
δt+1
2b2δt/parenrightbigg2
≃1 +b√
δt+1
2b2δt+b√
δt+b2δt+1
2b2δt
= 1 + 2b√
δt+ 2b2δt (74)
u−1=e−b√
δt
≃1−b√
δt+1
2b2δt (75)
Therefore,
1 + 2µδt+σ2δt≃/parenleftbigg
1−b√
δt+1
2b2δt/parenrightbigg/bracketleftbigg
(1 +µδt)/parenleftig
1 + 2b√
δt+ 2b2δt+ 1/parenrightig
−/parenleftbigg
1 +b√
δt+1
2b2δt/parenrightbigg/bracketrightbigg
1 + 2µδt+σ2δt≃/parenleftbigg
1−b√
δt+1
2b2δt/parenrightbigg/parenleftbigg
2 + 2b√
δt+ 2b2δt+ 2µδt−1−b√
δt−1
2b2δt/parenrightbigg
1 + 2µδt+σ2δt≃/parenleftbigg
1−b√
δt+1
2b2δt/parenrightbigg/parenleftbigg
1 +b√
δt+3
2b2δt+ 2µδt/parenrightbigg
1 + 2µδt+σ2δt≃1 +b√
δt+3
2b2δt+ 2µδt−b√
δt−b2δt+1
2b2δt
b≃σ (76)
C.2 Decomposition of the Qψoperator
The operator that applies a reflection to the state |ψ⟩incan be written as:
Qψ= 1−2|ψ⟩in⟨ψ|in
= 1−2MD| 0⟩in⟨0|inD†M†
=MD/parenleftbig1−2|0⟩in⟨0|in/parenrightbigD†M†
=MDQ00D†M†. (77)
C.3 Example circuit with m= 2andn= 3
Below is an example of the gates Deq,Mmax,Q, QFT, and QFT†for a quantum circuit that estimates
the probability of measuring the maximum value, Smax. The parameters adopted for the binomial tree
areq= 0.3827,µ= 0,σ= 0,T= 1, and for the quantum circuit are m= 2andn= 3.
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 31|0⟩0
rfRθuy R−θuyX XRθuy
|0⟩1
rfRθuy R−θuyX XRθuy
|0⟩rm XZX X Z X
|0⟩1
anc
|0⟩2
ancDMQψ0Q
M†D†Q00 DM
|0⟩⊗5
inDMQQQQQQQ
|0⟩0
outH H
|0⟩1
outH R−π
2zH
|0⟩2
outH R−π
4zR−π
2zH
QFT QFT†
The transformation of the qubit states by the quantum gates is shown in Fig. 17. Specifically, the
“risk factor” qubits ( |0⟩0
rfand|0⟩1
rf) before and after the operation of the gate Dare shown in green in
the top left panel. The application of gate Mon the “risk measure” qubit ( |0⟩rm) is shown in red in the
bottom left panel. From left to right, the three vertical panels show the transformation of the output
qubits (in blue and orange; |0⟩0
out,|0⟩1
out, and|0⟩2
out) by the QFT,/producttextQ, and QFT†gates, respectively.
Figure 18 shows the probability distribution of the “risk factor” (left, in green), “risk measure”
(middle, in red), and output (right, in blue/orange) qubits. The distributions of the input qubits are
only shown for illustrative purposes, they are not measured in the circuit because this would collapse
their states. The measurement of the output qubit gives either the state |1⟩or|7⟩; from Eqs. (16) and
(17), these imply
1 = 23θ
2π(78)
7 = 232π−θ
2π(79)
both of which give θ=π/4. Therefore, from Eq. (4) we have p= sin(π/8)2= 0.1464, and since
p=q2(because we require two up moves), we validate the computation by recovering the input value
q= 0.3827.
D Interest rate risk factor calculations
The sum of the probabilities satisfy: qwu+qwm+qwd= 1, so
qwm= 1−qwu−qwd. (80)
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 32The expected value of the Vasicek model should match that of the trinomial tree. We can parametrise
the three possible values of rt(b−δr,b, andb+δr), asrt=b+ctδr, wherect={−1,0,1}. Therefore,
E(rt+δt) =qwu(b+δr) +qwmb+qwd(b−δr)
(b+ctδr)e−aδt+b(1−e−aδt) =qwub+qwuδr+qwmb+qwdb−qwdδr
b+cte−aδtδr=b+ (qwu−qwd)δr
qwd=qwu−cte−aδt(81)
Similarly, the variance of the continuous and discrete models should match:
Var(rt+δt) =E(r2
t+δt)−E(rt+δt)2
σ2
2a(1−e−2aδt) =qwu(b+δr)2+qwmb2+qwd(b−δr)2−(b+cte−aδtδr)2
σ2
2a(1−e−2aδt) =qwub2+ 2qwubδr+qwuδr2+qwmb2+qwdb2−2qwdbδr+qwdδr2
−b2−2bcte−aδtδr−c2
te−2aδtδr2
σ2
2a(1−e−2aδt) = 2(qwu−qwd)bδr+ (qwu+qwd)δr2−2bcte−aδtδr−c2
te−2aδtδr2
σ2
2a(1−e−2aδt) = (qwu+qwd−c2
te−2aδt)δr2(82)
By settingδr2= 3Var(rt+δt)[e.g. 43] we obtain
1
3=qwu+qwd−c2
te−2aδt
1
3= 2qwu−cte−aδt−c2
te−2aδt
qwu=1
6+1
2cte−aδt+1
2c2
te−2aδt
≃1
6+1
2/bracketleftig
ct(1−aδt) +c2
t(1−2aδt)/bracketrightig
. (83)
Forct= 0,
qmu=1
6(84)
qmm=2
3(85)
qmd=qwu (86)
Forct= 1,
quu≃1
6+ 1−3
2aδt
≃7
6−3
2aδt (87)
qud≃qwu−1 +aδt
≃1
6−1
2aδt (88)
qum≃1−8
6+ 2aδt
≃−1
3+ 2aδt (89)
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 33And forct=−1,
qdu≃1
6−1
2aδt (90)
qdd≃qwu+ 1−aδt
≃7
6−3
2aδt (91)
qdm≃1−8
6+ 2aδt
≃−1
3+ 2aδt (92)
Whenct=±1we need to ensure positive probabilities, therefore:
0<1
6−1
2aδt< 1 (93)
0<7
6−3
2aδt< 1 (94)
0<−1
3+ 2aδt< 1 (95)
or
−5
6<aδt<1
3(96)
1
9<aδt<7
9(97)
1
6<aδt<2
3(98)
which implies1
6<aδt<2
6. We choose δt=3
12a. Forct= 1, this gives
quu≃19
24(99)
qud≃1
24(100)
qum≃4
24(101)
and forct=−1,
qdu≃1
24(102)
qdd≃19
24(103)
qdm≃4
24(104)
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 34xyz
Rθrfy|0/angbracketright0
rfrisk factor qubits
Rθrfy|0/angbracketright1
rf
|ψ/angbracketrightrf=D|00/angbracketrightrf
θ=π
4
|ψ/angbracketrightin=Mmax|ψ/angbracketrightrf|0/angbracketrightrmrisk measure qubitoutput qubits: QFT
H|0/angbracketright0
out
H|0/angbracketright1
out
H|0/angbracketright2
out
|+++/angbracketrightout= QFT|000/angbracketrightoutphase kickback
φ0=±θ
Q|ψ/angbracketrightin|+/angbracketright0
out
φ1=±2θ
Q2|ψ/angbracketrightin|+/angbracketright1
out
φ2=±4θ
Q4|ψ/angbracketrightin|+/angbracketright2
outoutput qubits: QFT†
|1/angbracketright0
out|1/angbracketright0
out
|0/angbracketright1
out
|1/angbracketright1
out
|0/angbracketright2
out
|1/angbracketright2
out |ψ/angbracketrightout=
=1√
2(|001/angbracketright+|111/angbracketright)Figure 17: The qubit states before and after the operation of the quantum gates. Top left: gate Drotates the
“risk factor” qubits (green) around the y-axis. Bottom left: the controlled gate Mreads the “risk factor” qubits
and sets the “risk measure” qubit in superposition (red), encoding the probability that both “risk factor” qubits are
in the state|1⟩(since no rotation is involved, the phase of the “risk measure” qubit does not have a specific value
and we draw the state as a circle). Left vertical panel: the output qubits (blue) before and after the application of
the QFT gate, which consists of a Hadamard gate, H, applied to each qubit. Middle vertical panel: the controlled
gateQimprints the angle θof the “risk measure” qubit as a positive ( +ϕ, blue) or negative ( −ϕ, orange) phase
onto the first output qubit (top); the controlled gate Q2imprints the angle 2θonto the phase of the second qubit
(middle); the controlled gate Q4imprints the angle 4θonto the phase of the third qubit (bottom). Right vertical
panel: the inverse quantum Fourier transform gate, QFT†, leverages quantum interference to transform the phases
of the output qubits to a binary number expressed with |0⟩and|1⟩states.
|0/angbracketright|1/angbracketright|2/angbracketright
|ψ/angbracketrightrf0.00.20.40.60.81.0probability
|00/angbracketrightrf
|01/angbracketrightrf,|10/angbracketrightrf
|11/angbracketrightrf
|0/angbracketright|1/angbracketright
|ψ/angbracketrightrm|0/angbracketrightrm
|1/angbracketrightrm
|0/angbracketright|1/angbracketright|2/angbracketright|3/angbracketright|4/angbracketright|5/angbracketright|6/angbracketright|7/angbracketright
|ψ/angbracketrightoutθ= 0
π
4
π
2
3π
4
π
2π−3π
4
2π−π
2
2π−π
4|000/angbracketrightout
|001/angbracketrightout
|010/angbracketrightout
|011/angbracketrightout
|100/angbracketrightout
|101/angbracketrightout
|110/angbracketrightout
|111/angbracketrightout
Figure 18: The probability distributions of the risk factor (left), risk measure (middle), and output qubits (right).
Accepted in Quantum2024-03-20, click title to verify. Published under CC-BY 4.0. 35
Non-Numerical Weakly Relational Domains
Helmut Seidl ¨Julian Erhard ¨Sarah Tilscher ¨Michael Schwarz
Abstract The weakly relational domain of Octagons
offers a decent compromise between precision and effi-
ciency for numerical properties. Here, we are concerned
with the construction of non-numerical relational do-
mains. We provide a general construction of weakly re-
lational domains, which we exemplify with an extension
of constant propagation by disjunctions. Since for the
resulting domain of 2-disjunctive formulas, satisfiability
is NP-complete, we provide a general construction for a
further, more abstract weakly relational domain where
the abstract operations of restriction and least upper
bound can be efficiently implemented.
In the second step, we consider a relational domain
that tracks conjunctions of inequalities between vari-
ables,andbetweenvariablesandconstantsforarbitrary
partial orders of values. Examples are sub(multi)sets,
as well as prefix, substring or scattered substring or-
derings on strings. When the partial order is a lattice,
we provide precise polynomial algorithms for satisfia-
bility, restriction, and the best abstraction of disjunc-
tion. Complementary to the constructions for lattices,
we find that, in general, satisfiability of conjunctions is
NP-complete. We therefore again provide polynomial
abstract versions of restriction, conjunction, and join.
By using our generic constructions, these domains are
extended to weakly relational domains that addition-
ally track disjunctions .
For all our domains, we indicate how abstract trans-
formers for assignments and guards can be constructed.
Helmut Seidl ¨Julian Erhard ¨Sarah Tilscher ¨Michael Schwarz
Technische Universität München, Garching, Germany
E-mail: {helmut.seidl, julian.erhard, sarah.tilscher,
m.schwarz}@tum.deKeywords weaklyrelationaldomains,2-decomposable
relational domains, 2-disjunctive constants, directed
domains
1 Introduction
Relational analyses have been observed to be indispens-
able for verifying intricate program properties. In par-
ticular, this is the case when for the purpose of verifica-
tion,ghostvariables have been introduced which must
be related to program variables. Termination may be
verified by introducing a ghostloop counter, which can
be proven bounded by a relational domain relating it to
the actual bounded iteration variable [2]. The validity
of string operations on null-terminated strings as em-
ployed, e.g., in the programming language C, may be
verified by introducing ghostvariables for the length
of a buffer as well as for tracking the position of the
null byte in the buffer [12]. It also has been observed
thatmonolithic relational domains such as the poly-
hedra abstract domain [10] scale badly to larger pro-
grams. Therefore, weakly relational domains have been
proposedwhichcanonlyexpresssimplerelationalprop-
erties,buthavethepotentialtoscalebetter[16].Exam-
ples of weakly relational numerical properties are the
Two Variables Per Inequality domain [23], or domains
given by a finite set of linear templates [20]. The most
prominent example of a template numerical domain is
theOctagon domain [15, 17] which allows tracking up-
per and lower bounds not only of program variables but
also of sums and differences of twoprogram variables.
One such octagon abstract relation could, e.g., be given
by the conjunction
p´xď´5q^pxď10q^px`yď0q^px´zď1qarXiv:2401.05165v1  [cs.LO]  10 Jan 20242 H. Seidl et al.
Octagons thus can be considered as a mild extension
of the non-relational domain of Intervals for program
variables,andavarietyofefficientalgorithmshavebeen
provided [4, 5, 7, 22]. Here, we are concerned with con-
structing non-numerical abstract domains.
For that, we provide a general technique to con-
struct from everyrelational domain a weakly relational
domain. As one instance of the general construction, we
consider 2-disjunctive constants as mentioned in [21].
This weakly relational domain allows, e.g., to relate the
names of functions with function pointers as in the for-
mula
x“"foo"^y“&foo_x“"bar"^y“&bar
Since satisfiability of formulas from that domain turns
out to be NP-complete, we provide a further mild ab-
straction,againforarbitraryrelationaldomains,topro-
vide us with a weakly relational domain where all re-
quired operations become tractable.
Another family of relational non-numerical domains
has been introduced by Arceri et al. [3]. Based on a par-
tial order of values, conjunctions of ordering constraints
xĎyfor program variables x, yare considered. They
observe that analyses of prefixes or the substring re-
lation could be helpful for programs in programming
languages supporting high-level operations on strings.
Here, we study this kind of directed domains in greater
detail.Forconjunctionsofinequalitiesoversomepartial
order P, we extend the constraints from Arceri et al. [3]
by allowing for variables both lower and upper bounds
from P. For arbitrary partial orders, though, we find
that then satisfiability is NP-complete. Partial orders
pthat are lattices form a notable exception. An in-
stance of this are subsets of some universe or multisets.
For lattices, we show that satisfiability is decidable in
polynomialtime.Moreover,weprovidepolynomialcon-
structionsbothforrestrictionaswellastheoptimaljoin
operation. Turning to general partial orders of values,
we thus cannot hope for polynomial algorithms. There-
fore, we provide a meaningful abstraction so that both
abstract restriction as well as join is again polynomial.
Thisfamilyofrelationaldomainsisalreadyweaklyrela-
tional. Still, our generic constructions can be applied to
obtain more expressive weakly relational domains that
additionally support disjunctions at a limited amount
of extra costs.
The paper is organized as follows: Section 2 pro-
vides background definitions on relational domains. It
formally introduces our notion of weakly relational do-
mains and provides a general construction of weakly
relational domains. Section 3 is dedicated to disjunc-
tive constants. When applying the generic construc-
tion from the last section to this relational domain, theweakly relational domain of 2-disjunctive constants is
obtained. Here, we prove that satisfiability for these
formulas still is NP-complete. Therefore, a generic ab-
straction technique is presented so that, when applied
to disjunctive constants, normalization, projection, as
wellasleastupper boundsall turnouttobe polynomial
time.
Finally,abstracttransformersforassignmentsaswell
asguardsarederived.Section4thenintroduces directed
domains which do not track equalities but inequali-
ties over a partial order of values. While the first sub-
section provides polynomial constructions for the case
that the partial order for values is a lattice, the second
subsection is concerned with arbitrary partial orders as
value domain. Since satisfiability, in general, turns out
to be NP-complete, again a polynomial abstraction is
provided. In a further subsection, we indicate how the
generic constructions from the last sections provide us
with weakly relational domains that additionally sup-
port disjunctions of inequalities. We exemplify the re-
sulting domains with conjunctions and disjunctions of
inequalities over the integers. In the final subsection,
dedicated abstract transformers are constructed for as-
signments, while the last subsection discusses the treat-
ment of guards. Section 5 summarizes the contributions
and sketches further directions of research.
2 Weakly Relational Domains
Letusrecallbasicdefinitionsforrelationaldomains.We
mostly follow the notation used in previous work [21],
where the notion of 2-decomposability has been intro-
duced. Let Xbe some finite set of variables. A rela-
tional domain Rmaintains relations between variables
inX. We require that a relational domain is a bounded
lattice, i.e., has a partial order Ď, a least element K,
a greatest element J, as well as binary operators for
the greatest lower bound (meet) [and the least upper
bound (join)\. We do not demand relational domains
to becomplete lattices, i.e., to provide for everysubset
of elements a least upper bound: the polyhedral do-
main, e.g., is not complete [10]. However, we demand
that a relational domain supports the following mono-
tonic operations:
Jx:“eK7:RÑR(assignment of etox)
¨|Y:RÑR(restriction to YĎX)
J?cK7:RÑR(guard for condition c)
where eandcare from some expression and condition
language, respectively.
The abstract transformers for basic actions of programs
are given by these functions. Restricting a relation rtoNon-Numerical Weakly Relational Domains 3
a subset Yof variables amounts to forgetting all infor-
mation about variables in XzY. Thus, we require that
r|X“r
r|H“"Kifr“K
Jotherwise
r|Y1Ěr|Y2when Y1ĎY2
pr|Y1qˇˇ
Y2“r|Y1XY2(1)
A restriction ¨|Yto some set Ytherefore is an idempo-
tentoperation. We remark that from these axioms it
follows thatK|Y“ KandJ|Y“ Jfor any YĎX.
Given that there is some relation rcPRdescribing all
states satisfying the condition c, the transformation for
the guard ?ccan be described by
J?cK7r“r[rc (2)
– at least, if there is a concretization function γsuch
that
γpr1[r2q“γ r1Xγ r2 (3)
i.e., the binary meet operation is precise.
Example 1 For numerical variables, a variety of such
relational domains have been proposed, e.g., (conjunc-
tions of) affine equalities [14, 18, 19] or affine inequali-
ties[10]. For affine equalities or inequalities, restriction
to a subset of Yof variables corresponds to the geomet-
ricprojectionontothesubspacedefinedby Y,combined
with arbitrary values for variables zRY.[ \
One way to tackle the high cost of relational domains
is to track the relationships not between all variables,
but only between subclusters of variables. We call such
domains Weakly Relational Domains .
For a subset YĎX, letRY“ tr|Y|rPRube
the set of all abstract values from Rthat contains only
information on those variables in Y. For any collection
SĎ2Xofclustersof variables, a relation rPRcan be
approximated by a meet of relations from RY, YPS
since for every rPR,
rĎę
YPSr|Y (4)
holds, as rĎr|Yholds for each YPS. In fact, the
right-hand side of (4) is the bestapproximation of r
by some meet over abstract relations sY, YPS,with
sYPRY, i.e., with sY|Y“sY, since
r|YĎpŰY1PSsY1q|Y
ĎsY|Y (by monotonicity of restriction)
“sY
holds for all YPS.Schwarz et al. [21] have introduced 2-decomposable
relational domains. These are domains where the full
value rcan be recovered from the restrictions of rto
all clusters pfrom the set S“rXs2of non-empty clus-
tersofvariablesofsizeatmost 2.Furthermore,Schwarz
et al. [21] ask for binary least upper bounds to be deter-
mined by computing within these clusters only. More
precisely, this amounts to requiring the following two
properties
r“Ű
pPrXs2r|p (5)
pr1\r2q|p“r1|p\r2|pppPrXs2q (6)
to hold for all abstract relations r, r1, r2PR. The most
prominent example of a 2-decomposable domain is the
octagondomain [15] – either over rationals or integers,
whileaffine equalities oraffine inequalities are exam-
ples of domains that are not 2-decomposable.
Anyrelational domain R, however, which satisfies
(6) gives rise to a 2-decomposable domain R2of its
2-cluster approximations.
ForrPR, let r“Ű
pPrXs2r|pdenote the approx-
imation of rby the meet of its restrictions to clusters
pPrXs2. LetR2denote the subset of Rof all abstract
relations of the form r, rPR, where the ordering is in-
herited from R. In particular, Kas well asJfromR
are also in R2.
Theorem 1 Assume that Ris an abstract relational
domain which satisfies (6). Then the following holds:
1.r“rfor all conjunctions r“Ű
pPrXs2spwithspP
Rp, pP rXs2, i.e., all such conjunctions are con-
tained in R2.
2. For r1, r2PR2, the abstract relation r1[r2, as
provided by R, is in R2.
3. The binary least upper bound operation in R2exists
and is given by
r1\2r2“ę
pPrXs2pr1|p\r2|pq
4. For R2, the best approximation r|Y,2to the restric-
tion r|YofrPR2onto some subset YĎXof
variables is given by
r|Y,2“ę
pPrXs2r|pXY
5. the partial order R2with the given binary greatest
lower and least upper bounds is a 2-decomposable
relational domain.
ProofForaproofofstatement(1),wefirstobservethat
for each pPrXs2,
r|p“¨
˝ę
pPrXs2sp˛
‚ˇˇˇˇˇˇ
pĎsp|p“sp4 H. Seidl et al.
by monotonicity and idempotence of restriction. Thus,
rĎr“ę
pPrXs2r|pĎę
pPrXs2sp“r
where the first inequality follows from Eq. (4). Thus,
statement (1) follows.
For a proof of statement (2), consider elements r, sP
R2. Then
r[s“ę
pPrXs2r|p[ę
pPrXs2s|p“ę
pPrXs2pr|p[s|pq
Now, we claim that for every pPrXs2,
r|p[s|p“pr|p[s|pqˇˇˇ
p
To prove the claim, we argue that
r|p[s|pĎpr|p[s|pqˇˇˇ
p(by monotonicity)
Ďpr|pqˇˇˇ
p[ps|pqˇˇˇ
p(by monotonicity)
“r|p[s|p (by idempotence)
and the claim follows. So far, we have proven that
r[s“ę
pPrXs2tp
for some tpPRp,pPrXs2. Then, statement (2) follows
from statement (1).
For a proof of statement (3), we note that any upper
bound of r1, r2inR2is also an upper bound of r1\r2
inR. Therefore, the leastupper bound od r1, r2inR2
is given by r1\r2. We calculate:
r1\r2“Ű
pPrXs2pr1\r2q|p(by definition)
“Ű
pPrXs2pr1|p\r2|pq(by (6))
and statement (3) follows.
The best approximation of r|YinR2is given by
r|Y. Thus, we have
r|Y,2“ę
pPrXs2pr|Yq|p“ę
pPrXs2r|YXp“ę
pPrXs2pr|pqˇˇˇ
Y
i.e., it can be determined by applying the restriction
onto variables from Yfor each cluster pP rXs2sepa-
rately. This implies statement (4).
Statement (5) is an immediate consequence of state-
ments (3) and (4). [ \
The polyhedral domain, e.g., satisfies (6). Applied to
thepolyhedralrelationaldomain,theconstructionfrom
Theorem 1 results in the domain of affine inequalities
with at most two variables per inequality [23].
According to Theorem 1, every value rfrom the 2-
decomposable relational domain R2can be representedas the meet of its restrictions to 2-clusters, i.e., by the
collectionxr|pypPrXs2. We call this representation nor-
mal, and an algorithm that computes it normalization .
Consider now an arbitrary collectionxspypPrXs2with
spPRpwith r“Ű
pPrXs2sp. Then r|pĎspalways
holds, while equality need not hold. In the Octagon do-
main over the rationals or the integers, the normal rep-
resentation of an octagon value corresponds to its clo-
sureas introduced in previous work [4, 15]. While for
rational Octagons, closure in cubic time was already
proposed by Miné [15], it is much more recent that a
correspondingalgorithmwasprovidedforthecasewhen
constraints are interpreted over integers [4, 5].
Subsequently, we introduce non-numerical weakly
relational domains and provide polynomial algorithms
for these.
3 Disjunctive Constants
Constant propagation relies on a domain that main-
tains conjunctions of atomic propositions x“awhere
xis a program variable and ais from a finite set Uof
possible values. In the following, we consider a (mild)
generalization of this domain where also disjunctions of
at most two atomic propositions are allowed.
Assume we are given a finite set Urepresenting pos-
sible values for variables from X. We consider proposi-
tions of the form pxPAqforAĎUwhich correspond
to the disjunction of atomic propositions x“a, aPA.
Thus, the proposition xPAfor some AĎUcan be
understood as an atomic proposition of a multi-valued
propositional logic where Aserves as the set of logical
values of the propositional variable x[6]. Every mono-
tonicBooleancombination Ψofpropositions xPAwith
xPX, AĎU, represents a function JΨK:pXÑUqÑ
Bdefined by
JxPAKσ“pσ xqPA
JΨ1_Ψ2Kσ“JΨ1Kσ_JΨ2Kσ
JΨ1^Ψ2Kσ“JΨ1Kσ^JΨ2Kσ
LetCrUsdenote the complete lattice of all equivalence
classes of formulas Ψwhere the ordering is semantic
implication. The least element in this ordering can be
representedbytheemptydisjunctionor K(false),while
thegreatestelementisequivalenttotheemptyconjunc-
tionorJ(true).Eachformula ΨhasanequivalentCNF
as well as an equivalent DNF where each clause (con-
junction) contains at most one proposition xPAfor
every variable x. Converting Ψinto DNF allows check-
ingsatisfiabilityandcomputingtherestriction Ψ|Yonto
a subset YĎXof variables. A formula for Ψ|Yis ob-
tained from a DNF for Ψwhere each conjunction con-
tains at most one proposition for each variable by theNon-Numerical Weakly Relational Domains 5
following steps: First, every conjunction which contains
yPHfor some yis removed. From each remaining con-
junction, then every proposition yPAwith yRYis
removed. It follows that Ψ|Yis distributive, i.e., com-
mutes with binary least upper bounds.
For an arbitrary ΨPCrUs, computing an equiva-
lent DNF is an exponential time operation. The same
holds if all restrictions Ψ|tx,yuare computed via this
normal form. Let C2rUsdenote the 2-decomposable do-
main obtained from CrUsaccording to theorem 1. The
lattice C2rUsconsists of all elements Ψwhich can be
represented as conjunctions of clauses with at most two
propositions xPAxper clause. According to theorem
1, the least upper bound operation \2forC2rUscan
be realized by a clusterwise disjunction. In particular,
it doesnotcoincide with logical disjunction – but is an
over-approximation of it.
Example 2 LetΨ1”pxPtauqandΨ2”pyPtbu_zP
tcuq. Then both Ψ1andΨ2are from C2rUs, but their
disjunction is not. In fact, the least upper bound in
C2rUsfor
pxPtauq_p yPtbuq_p zPtcuq
isJ.[ \
3.1Approximating 2-disjunctive Conjunctions
AnyCNF Ψover some set Yof variables of bounded
sizecan,inpolynomialtime,betransformedintoaDNF
Ψ1. Each DNF over two distinct variables x, ycan be
brought into the canonical normal form
ł
pa,bqPLpx“aq^py“bq (7)
for some LĎUˆU. Conjunction and disjunction of
two such normal forms then correspond to intersection
and union of the respective subsets of UˆU.
For arbitrary sets Yof variables, though, it is non-
trivial even to decide whether a given conjunction is
different from K.
Theorem 2 To decidefor aformula ΨPC2rUswhether
or not Ψis satisfiable, i.e., different from K, is NP-
complete.
ProofSinceasatisfyingassignmentfor Ψcanbeguessed
and then checked in polynomial time, satisfiablity of Ψ
is in NP. NP-hardness, on the other hand, follows by a
reductionfrom3-colorabilityofgraphs[6].Weillustrate
the reduction with an example.Example 3 ForX“ tx1, x2, x3, x4u, consider the for-
mula Ψ
ľ
txi,xjuPEpxiPtb, cu_xjPtb, cuq ^
pxiPta, cu_xjPta, cuq^
pxiPta, bu_xjPta, buq
where Eis given by
E“ttx1, x2u,tx1, x4u,tx2, x3u,tx3, x4u,tx1, x3uu
Then Ψis satisfiableiff theundirected graph pX, Eqhas
a 3-coloring. In the given example, the graph
x1 x2
x3 x4
cannotbecoloredbythreecolors.Therefore, Ψisequiv-
alent toK.[ \
Exactnormalization (as defined in Section 2) of a rela-
tion represented by some 2-CNF thus, in general, may
be difficult to compute. Instead of giving dedicated fur-
ther abstraction techniques, we prefer to provide for an
arbitrary relational domain R, ageneralconstruction
to approximate the 2-decomposable domain R2further
by a 2-decomposable domain R7
2. This construction is
based on approximate normalization.
Assume that an element in R2is given by the meetŰRwhere Ris the collection xspypPrXs2with spPRp
(pPrXs2). According to Theorem 1, pŰRq|pĎspfor
allpPrXs2.Aswehaveseenfor2-disjunctiveconstants,
however, exactnormalization ofŰR, i.e., the values
pŰRq|pmay be hard to compute precisely. For an ap-
proximatenormalization,weintroduceaconstraintsys-
tem in unknowns rp, pPrXs2with the constraints
rtx,yuĎstx,yu px, yPXq
rtx,yuĎprtx,zu[rtz,yuqˇˇ
tx,yupx, y, zPXq(8)
This constraint system has already been considered for
the normalization of 2-projective domains [22]. As all
right-hand sides are monotonic, the constraint system
has a greatest solution – whenever each Rp, pPrXs2,
is a complete lattice.
In case that there is a greatest solution xrpypPrXs2,
pŰRq|pĎrpholds for all p, sincexpŰRq|pypPrXs2is
also a solution of the system (8). Then we call the col-
lectionxrpypPrXs2theapproximate normal form of the
collection R. Here, we are not only interested in the
existence of a greatest solution of (8) but also that it
can be effectively computed. For that, we consider the
sets of values possibly occurring during some fixpoint
iteration for a particular collection R“xspypPrXs2.
LetIRrRsp, pPrXs2,be the least collection of sets
such that6 H. Seidl et al.
–spPIRrRsp;
–Ifr, r1PRp
Rthen also r[r1PRp
R;
–IfrPIRrRstx,zuandr1PIRrRstz,yu, then
pr[r1q|tx,yuPIRrRstx,yufor all x, y, zPX.
The sets IRrRspcollect the potential iterates occurring
during greatest fixpoint iteration of (8). By construc-
tion, each set IRrRsphas a greatest element, namely,
sp, and is closed under binary [. For the termination
of Kleene fixpoint iteration for (8), it suffices for each
setIRrRspto have a leastelement – whose collection
then coincides with the greatest solution of (8). This
observation is summarized in the following proposition.
Proposition 1 Thefollowing twostatementsareequiv-
alent:
1. For each pPrXs2,IRrRsphas a least element;
2. The constraint system (8)has a greatest solution
which can be attained by Kleene fixpoint iteration.
ProofAssume that for each pPrXs2, there is a least el-
ement dpPIRrRsp. We claim that R“xdpypPrXs2is the
greatest solution of (8). Since for each pPrXs2,dpis a
lower bound to all elements in IRrRsp, all constraints
of (8) are satisfied. Therefore, Ris a solution. By in-
duction on the definition of the sets IRrRsp, any other
solution R1“xr1
pyrXs2consists of lower bounds of these
sets, i.e., r1
pĎŰIRrRsp“dp– implying our claim.
To conclude statement (2), it remains to prove that the
greatest solution Rcan be reached by Kleene iteration.
For every p,dpis an element of the set IRrRsp, and
therefore, has arrived there after finitely many applica-
tions of the inductive rule of their definitions. Let hbe
an upper bound to these numbers for all dp, pPrXs2.
Then,Kleeneiterationfortheconstraintsystem(8)will
also reach these values after at most hiterations.
For the reverse direction, assume that Kleene itera-
tion for the greatest solution of (8) terminates after h
iterations with a collection R“xdpypPrXs2. By induc-
tion on the number jof rounds, we find each value dpjq
p
attained for rp,pPrXs2, after jrounds, is an element
ofIRrRsp. Therefore, dp“dphq
pPIRrRspfor all p. It re-
mains to prove that dpis also a lower bound of IRrRsp.
To show this, we again proceed by induction, this time
on the number iof applications of the inductive rule
for the construction of the IRrRsp, and prove that for
alliand any value d1added to some set IRrRspin the
ith step, it holds that dpiq
pĎd1. Therefore, dpis a lower
bound to IRrRspfor all p, and statement (1) follows.
[ \
If all operations on abstract relations rPRYfor clus-
tersYofsizeatmost3areconstanttimeandtheheightof allRrRspare bounded by h, then the greatest solu-
tion of the constraint system (8) can be computed in
time polynomial in hand the number of variables.
We call a relational domain 2- nice, if the statements
of Proposition 1 are satisfied for each collection R“
xspypPrXs2with spPRp.
Let us instantiate this construction to 2-disjunctive
constants. First, we note that the relational domain
CrUsis finite and thus, in particular, 2-nice. Let Ψ“
xspypPrXs2denote a collection with spPCrUspfor all
p. Assume that Xconsists of nvariables, and let m
be the number of constants occurring in any of the sp.
According to the normal form (7), the lattice ICrUsrΨsp
has height at most mifpconsists of a single variable,
and height bounded by m2ifpis a two-element set.
Since there are1
2npn`1qclusters, fixpoint iteration
will terminate after Opn2¨m2qupdates.[ \
Due to NP-hardness of satisfiability, we cannot expect
the greatest solution of the constraint system for 2-
disjunctive constants to always return the exact normal
form. For the formula from Example 3, e.g., it returns
for each pair txi, xjuPE,i‰j,
pxi“a^xjPtb, cuq_p xi“b^xjPta, cuq_
pxi“c^xjPta, buq
– which is different from K.
For a relational domain R, we call a collection R“
xrpypPrXs2with rpPRpfor all p,stableif it is a solution
of the constraint system (8) with sp”rp. We remark
that stability of Rimplies that, if rp“Kfor some p,
then rp1“ Kfor all other p1P rXs2as well. Now we
introduce for a relational domain Rthe domain R7
2of
allstablecollections.Theordering Ď7onthedomain R7
2
is defined by RĎ7R1ifrpĎr1
pfor all pPrXs2when
R“ xrpypPrXs2andR1“ xr1
pypPrXs2. Thus,pŰRqĎ
pŰR1qwhenever RĎ7R1.
Abstract join as well as abstract restriction for R7
2
then is modeled along the definitions of join and re-
striction for R2, but refers to the representation as so-
lution to the constraint system (8). For R“xrpypPrXs2,
R1“xr1
pypPrXs2inR7
2, we define the abstract join by
R\7R1“xrp\r1
pypPrXs2
whilefor YĎX,and R“xrpypPrXs2,wedefineabstract
restriction by
xrpypPrXs2ˇˇ7
Y“xrp|YypPrXs2
“xrp|YXpypPrXs2
where the latter equality follows since for rpPRp,
rp|p“rp. We have:
Proposition 2 Assume that Ris 2-nice and satisfies
(6). Then we have:Non-Numerical Weakly Relational Domains 7
1. For each R, R1PR7
2, also R\7R1is again in R7
2
and is the least upper bound of R, R1. Moreover,
pę
Rq\pę
R1qĎę
pR\7R1q
2. For each RPR7
2andYĎX,R|7
Yis again in R7
2
where
pę
Rqˇˇˇ
YĎę
pR|7
Yq
holds.
3. For each R“ xrpypPrXs2,R1“ xr1
pypPrXs2inR7
2,
the greatest lower bound R[7R1“ xr2
pypPrXs2is
determined as the greatest solution of (8)with start
values sp“rp[r1
p(pPrXs2).
ProofFor the first statement, let R“ xrpypPrXs2and
R1“xr1
pypPrXs2. As the ordering on R7
2is component-
wise, it suffices to prove that R\7R1is again in R7
2,
i.e., the collection rp\r1
p, pPrXs2,is a solution of the
constraints in (8). For this, we calculate:
rtx,yu\r1
tx,yu
Ďprtx,zu[rtz,yuqˇˇ
tx,yu\pr1
tx,zu[r1
tz,yuqˇˇˇ
tx,yu
Ďpprtx,zu\r1
tx,zuq[prtz,yu\r1
tz,yuqqˇˇˇ
tx,yu
for all variables x, y, zPX. From that, the statement
follows.
To prove the second statement, we must verify that
the collection rp|YXp, pP rXs2satisfies all constraints
in (8). Indeed, we find by monotonicity,
rtx,yuˇˇ
YĎprtx,zu[rtz,yuqˇˇ
tx,yuXY
Ďprtx,zuˇˇ
Y[rtz,yuˇˇ
Yqˇˇ
tx,yuXY
for all x, y, zPX, and the claim follows. The final state-
ment then follows from the definition. [ \
Elements of R7
2are collections xrpypPrXs2. For every pP
rXs2, we can consider elements rpPRpas elements of
R7
2as well by assuming that rprepresents the stable
collectionxrp|qyqPrXs2.
According to Proposition 2, both joins and restric-
tions can be computed componentwise. As a conse-
quence, we find:
Theorem 3 For a 2-nice relational domain Rwhich
satisfies (6), the domain R7
2is a 2-decomposable rela-
tional domain. [ \
Fig. 1 shows the abstract relational domains R,R2,
andR7
2together with the mappings between them. Ac-
cording to Theorem 3, the domain C7
2rUsof abstract
2-disjunctive constants is indeed 2-decomposable. The
given construction provides us with polynomial algo-
rithmsforleastupperbound,greatestlowerbound,and
projection.
R2 R R7
2p.q
idx.|pypPrXs2
Ű.
Fig. 1: The relationship between abstract relational do-
mains.
3.2Assignments
Let us return to the relational domain C2rUsof 2-dis-
junctiveconstantsandindicatehowabstracttransform-
ers for assignments x:“scan be tailored. For 2-dis-
junctive constants, we only consider right-hand sides
swhere sis either ?(unknown value), or of the form
A|y1|. . .|ykwhere Aisasetofconstantsand y1, . . . , y kP
Xare variables. The concrete semantics of such an as-
signment is given by
Jx:“?KΣ“tσ‘txÞÑcu|σPΣ, cPUu
Jx:“A|y1|. . .|ykKΣ“tσ‘txÞÑau|σPΣ, aPAuYŤk
j“1tσ‘txÞÑσ yju|σPΣu
Generalizing the corresponding abstract semantics for
(copy) constant propagation, we define the logic trans-
former for C2rUsby
Jx:“?K2Ψ“Ψ|Xztxu
Jx:“A|y1|. . .|ykK2Ψ“pxPAq^Ψ|Xztxu\2Ůk
2j“1Jx:“yjK2Ψ
Proposition 3 1. The logic transformer Jx:“?K2is
precise, i.e.,
Jx:“?Kpγ Ψq“γpJx:“?K2Ψq (9)
In particular, it is distributive and commutes with
K.
2. The logic transformer Jx:“A|y1|. . .|ykK2is pre-
cise,if thelogic transformersfor x:“yj,j“1, . . . , k,
are.
Thus, we have reduced the construction of logic trans-
formers for assignments to restriction and the construc-
tion of logic transformers for variable-variable assign-
ments x:“y. For y”x, the assignment is the identity,
i.e., we set Jx:“xK2Ψ“Ψ. Therefore, assume that yis
different from x, and assume that Ψ|Xztxu“Ψ1. Let B
denote the set of constants so that Ψ1|tyuequals yPB.
LetΨydenote the conjunction of all formulas Ψ1|pfor
pPrXs2with yPp. Let Ψ2“Ψyrx{ysdenote the for-
mula obtained from Ψyby renaming each occurrence of
the variable ywith x. Then we define
Jx:“yK2Ψ“Ψ1^˜ł
aPBx“a^y“a¸
^Ψ28 H. Seidl et al.
Let¯Ψdenote the formula returned by that transformer
forΨ. Intuitively, our definition means for xRp, that
¯Ψˇˇ
p“Ψ|p, i.e., Ψ|pis preserved while additionally,
¯Ψˇˇ
txu“Ψ|tyurx{ys,¯Ψˇˇ
tx,yu“Ž
aPBx“b^y“b,
and for zRtx, yu,¯Ψˇˇ
tx,zu“Ψ|ty,zurx{ys.
Proposition 4 The logic transformer Jx:“yK2is pre-
cise, i.e.,
Jx:“yKpγ Ψq“γpJx:“yK2Ψq (10)
holds.[ \
The same construction allows us to construct abstract
logic transformers Jx:“sK7
2:C7
2rUs Ñ C7
2rUs– only
that the least upper bound operation and projection of
C2rUsmustbereplacedbythecorrespondingoperations
ofC7
2rUs. The abstract transformer then, however, is
onlysoundand no longer precise, since the projection
operation of C7
2rUsmay return for an abstract relation
Rwhose concretization is emptyan abstract relation
with anon-empty concretization. Accordingly, Eq. (9)
and Eq. (10) may be violated.
3.3Guards
It remains to provide the semantics of guards. Again,
we first consider the domain C2rUsof 2-disjunctive for-
mulas (modulo logical equivalence), ordered by impli-
cation. We consider positive guards of the form xPA,
and conversely, negative guards of the form xRA. Pos-
itive guards thus can directly be expressed in C2rUs.
Thus we set
J?pxPAqKΨ“Ψ^pxPAq (11)
Negative guards on the other hand cannot be directly
expressed in C2rUs– at least if there are unknown con-
stant values beyond the finite universe U. To deal with
this, we introduce a dedicated fresh symbol ‚RUwith
the understanding that ‚repesents any value aRU.
The property xRAthen can equivalently be repre-
sented by
xPpUYt‚uqz A
allowing us to deal with such co-finite sets of possible
values in the same way as we did for finite sets of values
alone.4 Directed Relational Domains
Insteadofplainequalities,letusnowconsider inequalities
between variables and constants instead of equalities
and abandon disjunctions. We will, however, add dis-
junctions in the end as well. Thus for now, we just con-
sider finite conjunctions of inequalities of the form
dĎx, x Ďy,orxĎd
for variables x, yPXand constant values d. As usual,
we consider conjunctions only up to semantic equiv-
alence. We call inequalities of the form dĎxlower
bound constraints, and da lower bound for x. Analo-
gously for upper bounds. Inequalities of the form xĎy
are called variable constraints.
Assume we are given a partial order (po), i.e., a set
Ppartially ordered by some relation ď. Examples of
partial orders of interest are
Subsets. Theset 2Uofallsubsetsofsomefiniteuniverse
Uwhere the ordering is subset inclusion Ď;
Integers. The set Zof integers equipped with the natu-
ral orderingďZ;
Multisets. Multisets, i.e., the set of all mappings µ:
UÑNfrom elements in Uto their multiplicities
ordered by multiset inclusion ĎN.
Strings.The set of all strings Σ˚for some finite alpha-
betΣ. Several partial orderings are of interest:
–theprefixorderingďp; e.g.,abďpabcd;
–thesubstring orderingďs, e.g.,bcďsabcde;
–thescattered substring orderingďss, e.g.,bdďss
abcde.
Much more expressive constraints on strings have been
studied, e.g., in [1, 8, 11, 13]. In particular, for a frag-
mentcontainingtheprefixordering,decisionprocedures
are known based on (synchronous) multi-tape finite au-
tomata [24]. Due to their expressiveness, these tech-
niques come with a considerable computational effort.
Instead,wefollowArcerietal.[3]wherebasicrelational
domains are considered for reasoning about variables of
string type, sets (of characters), or integers (lengths of
strings). Their analyses relate program variables only
according to some partial order, and also consider lower
bounds. Here, these considerations are complemented
by taking upper bounds into account as well and, even-
tually, by adding disjunctions.
A mapping σ:XÑPis a model of Ψ(relative to
P), written as σ|ùΨ, ifΨ‰K, and
–dďσ x(inP) for each constraint dĎxinΨ;
–σ xďd(inP) for each constraint xĎdinΨ; and
–σ xďσ y(inP) for each constraint xĎyinΨ.
LetDrPsdenote all finite conjunctions over Pmod-
ulo semantic equivalence where the ordering on DrPsisNon-Numerical Weakly Relational Domains 9
semantic implication. As before, normal forms of con-
junctions will be considered up to reordering of atomic
propositions. Thus, syntactic equality of conjunctions
here means equality of the respective setsof proposi-
tions. Let Ψdenote a finite conjunction where VĎP
is the set of values occurring in Ψas lower or upper
bounds. To provide a first normal form for Ψ, we pro-
ceed in two steps. First, we determine the transitive
closurepďY Ďq`on the set XYVof the constraints
provided by Ψ. In case that pa, bq P pď Y Ďq`for
a, bPVwhere aďbdoes not hold in P, then Ψ
is unsatisfiable and therefore represented by the ded-
icated element Ψ1“ K. If this is not the case, let Ψ1
denote the conjunction of all inequalities s1Ďs2where
ps1, s2qPpďY Ďq`and either s1ors2or both are in
X.
In the second step, when Ψ1‰K, we remove all re-
dundant constraints. These are constraints of the form
–xĎxforxPX,astheseconstraintsholdvacuously;
–aĎxforaPVandxPXif there is also a con-
straint bĎxwith aďb, i.e., there is a stricter lower
bound;
–xĎbforbPVandxPXifthereisalsoaconstraint
xĎawith aďb, i.e., there is a stricter upper
bound.
Additionally, we set Ψ1toKwhenever for some variable
x,
–there is no lower bound in Pfor the set of upper
bounds provided for xbyΨ; or
–there is no upper bound in Pfor the set of lower
bounds provided for xbyΨ.
Assume, e.g., that Ψis given by
pabcĎxq^pabdĎxq
where we consider the prefix order ďpon strings. Since
abc,abdcannot be prefixes of the same string, this con-
junction is considered equivalent to K.
Let us denote the resulting conjunction Ψ1bynf0rΨs
and call it the 0-normal form of Ψ. Assuming that com-
parisons of values as well as checks for common lower or
upper bounds are constant-time operations, 0-normal
forms can be computed in polynomial time.
4.1Lattice Domains
An important special case is when Pis alattice, i.e.,
a po where every two elements a, bboth have a least
upper bound a_band a greatest lower bound a^b.
Example 4 The po 2Uordered by subset inclusion is a
complete lattice and thus, in particular, a lattice. Theintegers Zwith the natural ordering is another example
of a lattice, this time without leastorgreatestelement.
Yet another example are multisets : this lattice has a
least, but nogreatestelement.
The po Σ˚of strings ordered by the prefix relation
is not a lattice. Σ˚provides a least element ϵ, as well
asgreatestlowerbounds,namely,themaximalcommon
prefix, but does not have least upper bounds to all pairs
of strings. There is, for example, no upper bound to abc
andabdinΣ˚.[ \
When Pis a lattice, we can provide a dedicated normal
form which, however, may now use constants from P
which did not occur in Ψbefore. Assume now that Ψ1
is the 0-normal form of Ψ. IfPhas a least element KP,
we add the vacuous constraint KPĎxto every variable
x. Likewise, if Phas a greatest element JP, we add the
constraint xĎJP.
IfΨ1is different from K, we subsequently simplify
Ψ1further by replacing for each variable xPX,
–thesetofupperboundconstraintsoccurringin Ψ1,if
it is non-empty and consists of pxĎb1q^. . .^pxĎ
brq, with the single constraint pxĎpŹr
i“1biqq;
–the set of lower bound constraints in Ψ1, if it is non-
empty and consists of pa1Ďxq^. . .^parĎxq,
with the single constraint ppŽr
i“1aiqĎxq.
Let us denote the resulting formula by nf1rΨsand call
it the 1-normal form of Ψ. The 1-normal form of Ψcan
be computed in polynomial time as well – given that
comparisons as well as pairwise least upper bounds and
greatest lower bounds in Pare constant time. We have:
Theorem 4 Assume that the po Pis a lattice. Then
the following holds:
1. A conjunction Ψis satisfiable over Piffnf1rΨs‰K.
2. For arbitrary conjunctions Ψ1, Ψ2over P,Ψ1ùñ
Ψ2iffnf1rΨ1s“ nf1rΨ1^Ψ2s.
Satisfiability aswell asimplicationare decidableinpoly-
nomial time. [ \
ProofIfΨ1“nf1rΨs“K, then Ψcannot be satisfiable
since any of the simplification steps preserves the set of
satisfying assignments. So, assume that Ψ1is syntacti-
cally different from K. Let σbe the variable assignment
which maps each variable xto its lower bound axPP–
if it exists, and to some fixed element awhich is less or
equal to any other lower bound mentioned in Ψ1. Then
all single variable constraints are satisfied as well as,
by transitivity, all constraints xĎyoccurring in Ψ1.
Therefore, σ|ùΨ– implying that Ψis satisfiable. From
this, statement (1) follows.10 H. Seidl et al.
Toprovestatement(2),considerconjunctions Ψ1
1, Ψ1
2
both in 1-normal form. If these syntactically coincide,
then obviously also Ψ1
1ðñ Ψ1
2holds. For the reverse
direction, we prove that if Ψ1
iare distinct, then they
cannot be equivalent. From that, the assertion follows.
If one of them equals Kand the other not, then by
statement (1), they cannot be equivalent. Therefore,
assumethatbotharesatisfiableandthus,differentfrom
K. We consider all cases how the Ψimay differ.
Lower bounds. First, assume that there are constraints
aiĎx,i“1,2, for some variable xinΨ1
iwhere
a1is different from a2. Assume w.l.o.g. that a1ęa2
holds. Let Lxdenote the set consisting of xtogether
with variables zPXwhere Ψ1
2has a constraint zĎ
x.Let σdenotesomeassignment with σ|ùΨ1
2.Then
weconstructavariableassignment σ1suchthat σ1|ù
Ψ1
2butσ1­|ùΨ1
1by
σ1z“#
σ z^a2ifzPLx
σ z otherwise
Then still σ1|ùΨ1
2. But since a1ęa2, it follows
thatσ1does not satisfy a1Ďxand thus it does not
model Ψ1
1.
If there is a constraint a1ĎxinΨ1
1, but no lower
bound constraint for xinΨ1
2, then there is some
valueKPPdifferent from a1so thatKďa1^σ x
holds. This value allows us to construct an analo-
gous distinguishing assignment σ1where we use K
instead of a2.
Upper bounds. First, assume that there are constraints
xĎbi,i“1,2, for some variable xinΨ1
iwhere b1is
different from b2. W.l.o.g., assume that b2ęb1. Let
UxĎXdenote the subset consisting of xtogether
with all unknowns zwhere Ψ1
2has a constraint xĎ
z. Let σdenote some assignment with σ|ùΨ1
2. Then
we construct a variable assignment σ1by:
σ1z“#
σ z_b2ifzPUx
σ z otherwise
Then still σ1|ùΨ1
2holds. But since b2ęb1,σ1does
not satisfy Ψ1
1.
If there is a constraint xĎb1inΨ1
1, but no upper
bound constraint for xinΨ1
2, we introduce a value
JPPwhich is different from b1withpb1_σ xqďJ,
and construct an analogous distinguishing assign-
ment σ1only that we use Jinstead of b2.
Variable Constraints. Assumethat,w.l.o.g., Ψ1
1hasacon-
straintpxĎyqforx, yPXwhich does not occur in
Ψ1
2where we assume that for every variable zPX
both lower and upper bounds are provided by Ψ1
1iff
theyareprovidedby Ψ1
2andthat,whenevertheyareprovided, they agree. Consider again the set Uxofx
together with all variables zwith constraints xĎz,
and the set Lyofytogether with all variables zwith
constraints zĎyoccurring in Ψ1
2. Since xĎydoes
not occur in Ψ1
2,UxXLy“H.
Letσdenote an assignment with σ|ùΨ1
2. First as-
sume that Ψ1
2has constraints xĎbandaĎy. From
xĎynot occurring in Ψ1
2, it follows that bęa. Now
we construct an assignment σ1by:
σ1z“$
’&
’%b_σ zifzPUxYtxu
a^σ zifzPLyYtyu
σ z otherwise
Then σ1|ùΨ1
2, while σ1x“bandσ1y“a. Asbęa,
σ1does not fulfill the constraint xĎyfrom Ψ1
1.
If no upper bound of xis provided, we choose some
value bstrictly larger than σ x_σ y, and define a
variable assignment σ1byσ1z“b_σ zforzPUx,
andσ1z“σ zotherwise. Then σ1|ùΨ1
2. In order
to additionally satisfy xĎy, we would have σ1x“
b_σ x“bďσ1y– which is impossible.
Likewise, if no lower bound of yis provided, we
choose some value astrictly less than σ x^σ y, and
define a variable assignment σ1byσ1z“a^σ zfor
zPLy, and σ1z“σ zotherwise. Then σ1|ùΨ1
2. In
order to additionally satisfy xĎy, we would have
σ1x“σ xďσ1y“a– which again is impossible.
[ \
For lattices, therefore, the construction of normal forms
allows deciding satisfiability as well as semantic impli-
cation. From our examples, sets, integers, and multisets
are lattices. Strings, ordered by the prefix relation, on
the other hand, already do not form a lattice anymore.
This po, however, is bounded-complete . Recall that a po
Pis bounded-complete if every subset AĎPwhich has
some upper bound, also has a leastupper bound. When
Pis bounded-complete, then we at least know that
–every non-empty subset BĎPhas agreatestlower
bound; and
–Phas aleastelementKP.
Thus, every formula Ψover a bounded-complete po P
which provides some upper bound to every variable xP
Xalso can be brought into 1-normal form. Let us call
such conjunctions bounded. We obtain:
Proposition 5 Given apo Pthat isbounded-complete,
the following holds:
1. A bounded conjunction Ψis satisfiable over Piff
nf1rΨs‰K.
2. For arbitrary bounded conjunctions Ψ1, Ψ2over P,
Ψ1ùñΨ2iffnf1rΨ1s“ nf1rΨ1^Ψ2s.[ \Non-Numerical Weakly Relational Domains 11
When we drop the extra assumption that conjunctions
are bounded, Proposition 5 need no longer hold.
Example 5 Forprefixesofstrings,considertheconjunc-
tion
pabĎxq^pxĎabcq^pabdĎyq^pxĎyq
This formula is semantically equivalent to
pabĎxq^pxĎabq^pabdĎyq^pxĎyq
although the formulas are syntactically different.
Evenwithoutupperbounds,notallimplicationscan
be inferred via transitive closure alone. Again for pre-
fixes of strings, consider
pabcĎy1q^pabdĎy2q^pxĎy1q^pxĎy2q^pabĎzq
The first four constraints imply that xĎab, which,
by the last constraint, implies that xĎzmust hold as
well.[ \
For a conjunction Ψand a subset YĎXof variables,
letΨ|7
YyieldKifΨequalsK, and otherwise, yield the
conjunction of all constraints in Ψthat only uses vari-
ables from Y.
For conjunctions Ψ1, Ψ2in 1-normal form and differ-
ent fromK, we define the abstract join Ψ1\7Ψ2as the
conjunction of the following constraints:
–all constraints xĎy,x, yPX, which occur both in
Ψ1andΨ2;
–allconstraints pd1^d2qĎx,d1, d2PP,xPXwhere
diĎxoccurs in Ψi;
–allconstraints xĎpd1_d2q,d1, d2PP,xPXwhere
xĎdioccurs in Ψi.
Then we have:
Theorem 5 Assume that Pis a lattice.
1. If Ψis a conjunction in 1-normal form, then for
every subset YĎX,Ψ|Yis given by Ψ|7
Ywhere the
latter conjunction is again in 1-normal form.
2. For Ψ1, Ψ2in 1-normal form, Ψ1\7Ψ2is the least
upper bound of Ψ1, Ψ2inDrPs.
3. The domain DrPsis a 2-decomposable relational do-
main.[ \
While statement (1) of Theorem 5 remains true also for
bounded conjunctions over a bounded-complete po, the
least upper bound of two bounded conjunctions need
no longer be bounded, as the least upper bounds of the
respective upper bounds need not exist. For the prefix
ordering on Σ˚, e.g., we have
pxĎabcq\pxĎabdq“J
i.e., all information about upper bounds is lost.4.2The General Case
For general (even finite) partial orders, the dedicated
constructions for lattices cannot be directly applied.
Already the problem of determining whether or not a
conjunction is satisfiable, turns out to be surprisingly
difficult. Assume that elements in Pcan be represented
and compared in polynomial time. Then we find:
Theorem 6 The problem of determining for a given
partial order Pand a conjunction Ψ, whether Ψis sat-
isfiable over P, is NP-complete.
ProofSince a satisfying assignment for a conjunction Ψ
can be guessed in polynomial time, it remains to prove
the hardness part. For that, consider the problem of 3-
colorability of an undirected finite graph G“ pV, Eq.
Letv1, . . . , v nbe an enumeration of the vertices in V.
Then, we construct a partial order Pconsisting of the
elements
txvi, cy|i“1, . . . , n, c“1,2,3u9Ytvi|i“1, . . . , nu
9Ytvi|i“1, . . . , nu
where the partial ordering ďofPis the least partial
order satisfying
xvi, cyďx vj, c1ywhenevertvi, vjuPE^iăj^c‰c1
xvi, cyďviwheneverDjąi.ti, juPE
vjďxvj, cywheneverDiăj.ti, juPE
ForP, we define a conjunction Ψin the variables xi, i“
1, . . . , n, by
Ź
tvi,vjuPE,iăjpxiĎviq^pxiĎxjq^pvjĎxjq
Both PandΨcan be constructed from Gin polynomial
time. Moreover, it holds that σ|ùΨiffσ xi“xvi, ciy
for some coloring γ:VÑ t1,2,3uwith γ vi“ci. It
follows that Ψis satisfiable iff Ghas a 3-coloring. In
summary, we obtain a polynomial time reduction from
the problem of 3-colorability of undirected finite graphs
into satisfiability of finite conjunctions over some par-
tial order. This concludes the proof. [ \.
For general partial orders P, however, we still may rely
on the 0-normal form nf0and otherwise perform the
same constructions as we did for lattices with the 1-
normal form. Thus, we define an abstract ordering by
Ψ1Ď7Ψ2iffnf0rΨ1s“nf0rΨ1^Ψ2s (12)
Let us denote the resulting abstract domain by DrPs0.
We have:
Theorem 7 For an arbitrary po P, thefollowing holds:12 H. Seidl et al.
1. Ifa conjunction Ψissatisfiable over Pthen nf0rΨs‰
K.
2. For all conjunctions Ψ1, Ψ2,nf0rΨ1s“ nf0rΨ1^Ψ2s
implies that Ψ1ùñΨ2.
[ \
For arbitrary po P, we define the abstract projection
in the same way as for conjunctions over a lattice P–
only that we now rely on formulas in 0-normal form.
For such a formula Ψthe projection Ψ|7
Yonto a subset
YĎXof variables, is again defined by removing all
constraints mentioning variables not in Y.
It is for the abstract join operation that we must
find a more general definition, since least upper bounds
or greatest lower bounds of sets of values in Pare no
longerathand.Assumethat Ψ1, Ψ2arein0-normalform
and different from K. Then, we define the abstract join
Ψ1\7Ψ2as the conjunction of the following constraints
–all constraints xĎy,x, yPX, which occur both in
Ψ1andΨ2;
–all constraints diĎx,d1, d2PP,xPXwhere
diĎxoccurs in Ψifori“1,2anddiďd3´i;
–all constraints xĎdi,d1, d2PP,xPXwhere
xĎdioccurs in Ψifori“1,2andd3´iďdi.
This definition essentially amounts to keeping those or-
dering constraints between variables in which Ψ1and
Ψ2agree and only keep a lower or upper bound if it is
more liberal than a corresponding bound of the other
formula.
Example 6 For the po Σ˚with the substring ordering,
consider the formulas
Ψ1“pabĎxq^pyĎabq^pyĎzq
Ψ2“pabcĎxq^pyĎabcq
Then, according to our definition,
Ψ1\7Ψ2“pabĎxq^pyĎabcq
[ \
With these definitions, the binary operation \7returns
the least upper bound of its arguments w.r.t. the order-
ingĎ7. Moreover, DrPs0turns into a 2-decomposable
relational domain as well.
Theorem 8 For everypo P,DrPs0isa 2-decomposable
relational domain. [ \
4.3Directed Domains with Disjunctions
Subsequently, we extend the relational domain DrPs
for lattices P(resp. DrPs0for arbitrary po’s) with dis-
junctions. This extension corresponds to the disjunctivecompletion ofDrPs(resp. DrPs0) [9]. The elements of
the resulting relational domain are disjunctions of nor-
mal form conjunctions (1-normal forms if Pis a lattice,
and 0-normal forms in general) where for YĎX, the
restriction Ψ|Yof the disjunction Ψis defined as the
disjunction of the restrictions c|Yof the normal form
conjunctions ccontained in Ψ. By definition, restric-
tions therefore are distributive. Let DrPs(resp. DrPs0)
denote the resulting relational abstract domains. If Pis
infinite, these relational domains have infinite strictly
ascending chains, and therefore must have also strictly
descending chains of unbounded length. For the lat-
ticeZ, e.g., there are even infinitestrictly descending
chains, e.g.,
p0Ďxq,p1Ďxq,p2Ďxq, . . .
Nonetheless, we have:
Proposition 6 1. For every po P,DrPs0is 2-nice.
2. For every lattice P,DrPsis 2-nice.
ProofLetDdenote an arbitrary collection xdpypPrXs2
withdpPDrPsp
0.Consideranarbitraryformula d1
pfrom
the set IDrPsrDsp. It consists of disjunctions of conjunc-
tions each of which may only mention variables from p
or constants occurring in any of the dp1, p1PrXs2. Since
the number of these formulas is finite, statement (1) fol-
lows.
The proof of the second statement is analogous –
only that the occurring constants now may also be fi-
nite meets of constants occurring in upper-bound con-
straints of the initial collection or finite joins of con-
stants occurring in lower-boudn constraints. Still, the
number of possible formulas remains finite. [ \
Due to Proposition 6, the construction from Section 3
can be applied resulting in the 2-decomposable rela-
tionaldomains D7
2rPs(incaseoflattices P)andD7
2rPs0
(for arbitrary pos).
Weexemplifytheconstructionforthelattice Zofin-
tegers, i.e., for D7
2rZs. One-variable properties express-
ibleinthislatticearedisjunctionsofintervalconstraints
such as
pxĎ3q_p 5Ďxq^pxĎ7q
Two-variable properties expressible in this lattice are,
e.g.,
pxĎ´1q^pxĎyq _
p0Ďxq^pxĎ5q^p 2Ďyq _
p6Ďxq^pyĎxq^pyĎ19q
Arbitrary elements in D7
2rZscan be understood as rep-
resentations of conjunctions of such properties.Non-Numerical Weakly Relational Domains 13
Assumethatwearegivenacollection Z“xspypPrXs2
with spPDrZsp– which is not yet stable, and we would
like to determine the corresponding stable collection by
performing a fixpoint iteration to determine the great-
est solution of Eq. (8). During that iteration, we only
need to consider upper and lower bounds for each vari-
ablexwhich have already occurred in the formulas sp.
Therefore, the length of each intermediate formula is
bounded by a polynomial in the input, and each un-
known rpis updated only polynomially often. As a
consequence, all operations abstract join, abstract meet
and abstract projection for D7
2rZsare polynomial. For
arbitrary lattice or po P, we may proceed analogously.
Efficiency of the fixpoint iteration, though, remains to
be checked separately for every P.
4.4Assignments
Let us turn to the construction of abstract transform-
ers for assignments. We only describe these for the rela-
tional domains DrPsandDrPs0, respectively. We first
consider three simple cases: assignments of unknown
values; assignments of constants; and copying one vari-
able into the other.
Jx:“?K7Ψ“Ψ|7
Xztxu
Jx:“dK7Ψ“Ψ|7
Xztxu^pdĎxq^pxĎdq
Jx:“yK7Ψ“Ψ|7
Xztxu^pxĎyq^pyĎxq(13)
fordPPandx, yPXwith xıy. Again, we real-
ize the assignment of unknown values by restriction.
For assigning constants and variables, we remark that
equality can be expressed via a pair of inequalities.
Individual partial orders, though, may support fur-
ther forms of right-hand sides in assignments. Subse-
quently, we enumerate more general forms of assign-
ments for sets and for the prefix, substring, and scat-
tered substring partial orders on strings.
Sets.For sets, we consider right-hand sides of the form
y1Xy2ory1Yy2fory1, y2PXwith xRty1, y2u.
We define
Jx:“y1Xy2K7Ψ“Ψ|7
Xztxu^pxĎy1q^pxĎy2q
Jx:“y1Yy2K7Ψ“Ψ|7
Xztxu^py1Ďxq^py2Ďxq
Thus, we obtain after the assignment as new upper
(lower) bounds of xin terms of the variables y1and
y2. An analogous construction can also be applied
to multisets. We remark that the given right-hand
sidesdonotentailthattheequalities x“y1Xy2and
x“y1Yy2, respectively, hold after the assignments.Prefixes. In this case, right-hand sides of interest are
concatenations of a constant or variable, possibly
followed by some further value, i.e., are of the form
s?forseither in Σ˚, or in Xztxu, with “?” again
denoting unknown input. We define
Jx:“s?K7Ψ“Ψ|7
Xztxu^psĎxq
i.e., we only obtain information about lower bounds
forxafter the assignment but lose all information
about upper bounds.
Substrings. Again, we consider right-hand sides which
are concatenations of constants or variables with
furthervalues.Thesenowareoftheform ?s1?. . .?sk?
(siPΣ˚YXztxu). We define
Jx:“?s1?. . .?sk?K7Ψ“Ψ|7
Xztxu^
ps1Ďxq^. . .^pskĎxq
For scattered substrings, we proceed similarly. In
both cases, no information is obtained for upper
bounds to the left-hand side variable xafter the
assignment.
So far, we have assumed that the right-hand side sdoes
not contain the variable xfrom the left-hand side. In
case that xoccurs in s, we split the assignment into the
sequence
tmp:“s;x:“tmp;
for some fresh variable tmp, i.e., first store the value of
the right-hand side sintmpwhose value only then is
assigned to the left-hand side variable x.
These abstract tranformers for the relational do-
mains DrPs(resp. DrPs0) are readily lifted to corre-
spondingtransformersfortheweaklyrelationaldomains
D7
2rPs(resp. D7
2rPs0).
4.5Guards and Negated Inequalities
Let us now turn to a treatment of guards ?cfor the
directed domain D7
2rPswhere Pis a lattice. The case
forD7
2rPs0(when Pis not a lattice) is analogous.
Acondition cwhichconsistsofaninequality s1Ďs2
forsibeing variables or constants already represents
an abstract relation. Therefore, Eq. (2) can be used to
define the abstract effect of J?cK7.
Ifthecondition cisanegatedinequality s1Ęs2,this
is not immediately possible. Assume that the variables
occurring in call occur in pP rXs2. Now consider an
arbitrary element D“xdp1yp1PrXs2. In particular, dpP
DrPsp, i.e., dp“e1_. . ._ekfor conjunctions e1, . . . , e k
all using variables from ponly. In this case, we define
J?cK7D“D[Žtej|ej­ùñ p s1Ďs2qu14 H. Seidl et al.
Thus,thenegatedinequality callowstoimprovetheab-
stract relation Dby possibly removing those conjuncts
ejfrom dpwhich contradict c.
5 Conclusion
We considered a construction of 2-decomposable rela-
tional domains from arbitrary relational domains and
exemplified this construction by deriving 2-disjunctive
constantsfromtherelationaldomainofdisjunctivecon-
stants. For 2-disjunctive constants, it turned out that
normalization is prohibitively expensive. Therefore, we
provided a second general construction of 2-decompos-
ablerelationaldomains,nowbasedongreatestsolutions
of constraint systems, which – in the case of disjunctive
constants – results in a 2-decomposable domain where
the operations join, meet, and restriction are polyno-
mial.
In the second part, we then considered directed do-
mains as conjunctions of inequalities over lattices or
general partial orders. For lattices, we provided the 1-
normal form for a syntactic characterization of seman-
tic equivalence. We showed that the resulting domain is
2-decomposable and provided precise polynomial algo-
rithms for 1-normalization, projection, join, and meet.
For arbitrary partial orders, we use a weaker form of
normalizationforconstructingaweaker2-decomposable
relational domain, for which we again provided polyno-
mial algorithms, now for 0-normalization, projection,
join, and meet. Only in the very last step, we added
disjunctions by applying the general construction of 2-
decomposable domain based on approximate normal-
izationfromtheprevioussection.Bothfor2-disjunctive
constants and for directed domains, we indicated how
transfer functions for assignments and guards can be
constructed.
Our results can be extended in several directions.
In the case of constants, one may, e.g., additionally,
track equalities as well as disequalities between vari-
ables; likewise for directed domains, an extensive study
of the impact of negated inequalities could be of inter-
est. Here, we only studied lattice operations and trans-
fer functions. Directed domains, though, may have infi-
nitestrictlyascendingchains.Therefore,tailoredwiden-
ing and narrowing operators are of interest when these
domains are employed for practical static analysis.
Acknowledgements. This work has been supported by
Shota Rustaveli National Science Foundation of Geor-
gia under the project FR-21-7973 and by Deutsche For-
schungsgemeinschaft(DFG)–378803395/2428ConVeY.References
1. Abdulla, P.A., Atig, M.F., Diep, B.P., Holík, L.,
Janku, P.: Chain-free string constraints. In: Chen,
Y., Cheng, C., Esparza, J. (eds.) Automated Tech-
nology for Verification and Analysis - 17th In-
ternational Symposium, ATVA 2019, Taipei, Tai-
wan, October 28-31, 2019, Proceedings, Lecture
Notes in Computer Science , vol. 11781, pp. 277–
293. Springer (2019). URL https://doi.org/10.
1007/978-3-030-31784-3_16
2. Albert, E., Arenas, P., Genaim, S., Puebla, G.,
Román-Díez, G.: Conditional termination of loops
over heap-allocated data. Sci. Comput. Program.
92,2–24(2014). URL https://doi.org/10.1016/
j.scico.2013.04.006
3. Arceri, V., Olliaro, M., Cortesi, A., Ferrara, P.: Re-
lational string abstract domains. In: Finkbeiner,
B., Wies, T. (eds.) Verification, Model Check-
ing, and Abstract Interpretation - 23rd Interna-
tional Conference, VMCAI 2022, Philadelphia, PA,
USA, January 16-18, 2022, Proceedings, Lecture
Notes in Computer Science , vol. 13182, pp. 20–
42. Springer (2022). URL https://doi.org/10.
1007/978-3-030-94583-1_2
4. Bagnara,R.,Hill,P.M.,Zaffanella,E.:Animproved
tight closure algorithm for integer octagonal con-
straints. In: Logozzo, F., Peled, D.A., Zuck, L.D.
(eds.) Verification, Model Checking, and Abstract
Interpretation, pp. 8–21. Springer Berlin Heidel-
berg, Berlin, Heidelberg (2008)
5. Bagnara, R., Hill, P.M., Zaffanella, E.:
Weakly-relational shapes for numeric ab-
stractions: improved algorithms and proofs
of correctness. Formal Methods Syst.
Des.35(3), 279–323 (2009). URL https:
//doi.org/10.1007/s10703-009-0073-1
6. Beckert, B., Hähnle, R., Manyà, F.: The 2-sat prob-
lem of regular signed CNF formulas. In: 30th
IEEEInternationalSymposiumonMultiple-Valued
Logic, ISMVL 2000, Portland, Oregon, USA, May
23-25, 2000, Proceedings, pp. 331–336. IEEE Com-
puter Society (2000). URL https://doi.org/10.
1109/ISMVL.2000.848640
7. Chawdhary, A., Robbins, E., King, A.: Incremen-
tally closing octagons. Formal Methods Syst. Des.
54(2), 232–277 (2019). URL https://doi.org/
10.1007/s10703-017-0314-7
8. Chen, T., Chen, Y., Hague, M., Lin, A.W., Wu,
Z.: What is decidable about string constraints with
thereplaceallfunction. Proc.ACMProgram.Lang.
2(POPL), 3:1–3:29 (2018). URL https://doi.
org/10.1145/3158091Non-Numerical Weakly Relational Domains 15
9. Cousot, P., Cousot, R.: Abstract interpretation
frameworks. Journaloflogicandcomputation 2(4),
511–547 (1992)
10. Cousot, P., Halbwachs, N.: Automatic discovery
of linear restraints among variables of a program.
In: Aho, A.V., Zilles, S.N., Szymanski, T.G. (eds.)
Conference Record of the Fifth Annual ACM Sym-
posium on Principles of Programming Languages,
Tucson, Arizona, USA, January 1978, pp. 84–96.
ACM Press (1978). URL https://doi.org/10.
1145/512760.512770
11. Day, J.D., Ganesh, V., Grewal, N., Manea, F.: On
the expressive power of string constraints. Proc.
ACM Program. Lang. 7(POPL), 278–308 (2023).
URL https://doi.org/10.1145/3571203
12. Dor, N., Rodeh, M., Sagiv, S.: Cleanness check-
ing of string manipulations in C programs via in-
teger analysis. In: Cousot, P. (ed.) Static Analy-
sis, 8th International Symposium, SAS 2001, Paris,
France, July 16-18, 2001, Proceedings, pp. 194–
212. Springer, LNCS 2126 (2001). URL https:
//doi.org/10.1007/3-540-47764-0_12
13. Ganesh, V., Minnes, M., Solar-Lezama, A., Rinard,
M.: What is decidable about strings? (2011)
14. Karr, M.: Affine relationships among variables of a
program. ActaInformatica 6,133–151(1976). URL
https://doi.org/10.1007/BF00268497
15. Miné, A.: The octagon abstract domain. In:
WCRE’ 01, p. 310. IEEE Computer Society (2001).
DOI 10.1109/WCRE.2001.957836
16. Miné, A.: Weakly relational numerical abstract
domains. (domaines numériques abstraits faible-
ment relationnels). Ph.D. thesis, École Polytech-
nique, Palaiseau, France (2004). URL https://
tel.archives-ouvertes.fr/tel-00136630
17. Miné,A.:Theoctagonabstractdomain. HigherOr-
der Symbol. Comput. 19(1), 31–100 (2006). URL
https://doi.org/10.1007/s10990-006-8609-1
18. Müller-Olm, M., Seidl, H.: Precise interprocedu-
ral analysis through linear algebra. In: Jones,
N.D., Leroy, X. (eds.) Proceedings of the 31st
ACM SIGPLAN-SIGACT Symposium on Prin-
ciples of Programming Languages, POPL 2004,
Venice, Italy, January 14-16, 2004, pp. 330–341.
ACM (2004). URL https://doi.org/10.1145/
964001.964029
19. Müller-Olm, M., Seidl, H.: Analysis of modular
arithmetic. ACM Trans. Program. Lang. Syst.
29(5), 29 (2007). URL https://doi.org/10.
1145/1275497.1275504
20. Sankaranarayanan, S., Sipma, H.B., Manna, Z.:
Scalable analysis of linear systems using mathe-
matical programming. In: Cousot, R. (ed.) Veri-fication, Model Checking, and Abstract Interpreta-
tion,LNCS, vol. 3385, pp. 25–41. Springer, Berlin,
Heidelberg (2005)
21. Schwarz, M., Saan, S., Seidl, H., Erhard, J., Voj-
dani, V.: Clustered relational thread-modular ab-
stract interpretation with local traces. In: Wies,
T. (ed.) Programming Languages and Systems
- 32nd European Symposium on Programming,
ESOP 2023, Held as Part of the European Joint
Conferences on Theory and Practice of Software,
ETAPS 2023, Paris, France, April 22-27, 2023, Pro-
ceedings, Lecture Notes in Computer Science , vol.
13990, pp. 28–58. Springer (2023). URL https:
//doi.org/10.1007/978-3-031-30044-8_2
22. Schwarz, M., Seidl, H.: Octagons revisited. In:
Hermenegildo, M.V., Morales, J.F. (eds.) Static
Analysis, pp. 485–507. Springer Nature Switzer-
land, Cham (2023)
23. Simon, A., King, A., Howe, J.M.: Two variables
per linear inequality as an abstract domain. In:
Leuschel, M. (ed.) Logic Based Program Synthe-
sis and Transformation, 12th International Work-
shop, LOPSTR 2002, Madrid, Spain, September
17-20,2002, Revised Selected Papers, LNCS, vol.
2664, pp. 71–89. Springer (2002). URL https:
//doi.org/10.1007/3-540-45013-0_7
24. Yu, F., Bultan, T., Hardekopf, B.: String ab-
stractions for string verification. In: Groce, A.,
Musuvathi, M. (eds.) Model Checking Software
- 18th International SPIN Workshop, Snowbird,
UT, USA, July 14-15, 2011. Proceedings, Lecture
Notes in Computer Science , vol. 6823, pp. 20–
37. Springer (2011). URL https://doi.org/10.
1007/978-3-642-22306-8_3
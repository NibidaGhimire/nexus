Hybrid Feedback Control Design for Non-Convex
Obstacle Avoidance
Mayur Sawant, Ilia Polushin, and Abdelhamid Tayebi
Abstract —We develop an autonomous navigation algorithm for
a robot operating in two-dimensional environments containing
obstacles, with arbitrary non-convex shapes, which can be in
close proximity with each other, as long as there exists at least
one safe path connecting the initial and the target location. An
instrumental transformation that modifies (virtually) the non-
convex obstacles, in a non-conservative manner, is introduced
to facilitate the design of the obstacle-avoidance strategy. The
proposed navigation approach relies on a hybrid feedback that
guarantees global asymptotic stabilization of a target location
while ensuring the forward invariance of the modified obstacle-
free workspace. The proposed hybrid feedback controller guar-
antees Zeno-free switching between the move-to-target mode and
the obstacle-avoidance mode based on the proximity of the
robot with respect to the modified obstacle-occupied workspace.
Finally, we provide an algorithmic procedure for the sensor-based
implementation of the proposed hybrid controller and validate
its effectiveness via some numerical simulations.
I. I NTRODUCTION
Autonomous navigation, the problem of designing control
strategies to guide a robot to its goal while avoiding obstacles,
is one of the fundamental problems in robotics. One of the
widely explored techniques in that regard is the artificial
potential fields (APF) [1] in which interplay between an
attractive field and a repulsive field allows the robot, in most of
the cases, to safely navigate towards the target. However, for
certain inter-obstacle arrangements, this approach is hampered
by the existence of undesired local minima. The navigation
function (NF) based approach [2], which is directly applicable
to sphere world environments [3], [4], mitigates this issue
by restricting the influence of the repulsive field within a
local neighbourhood of the obstacle by means of a properly
tuned parameter, and ensures almost1global convergence of
the robot towards the target location. To extend the applica-
bility of the NF approach to environments containing more
general convex and star-shaped obstacles, one can employ the
diffeomorphic mappings developed in [3] and [5]. However,
the application of these diffeomorphic mappings requires a
global knowledge of the environment.
This work was supported by the National Sciences and Engineering
Research Council of Canada (NSERC), under the grants RGPIN-2020-06270
and RGPIN-2020-0644.
M. Sawant, I. Polushin and A. Tayebi are with the Department of Electrical
and Computer Engineering, Western University, London, ON N6A 3K7,
Canada. (e-mail: msawant2, ipolushi, atayebi@uwo.ca ).
A. Tayebi is also with the Department of Electrical Engineering,
Lakehead University, Thunder Bay, ON P7B 5E1, Canada. (e-mail:
atayebi@lakeheadu.ca ).
1Almost global convergence here refers to the convergence from all initial
conditions except a set of zero Lebesgue measure.The NF-based approach was extended in [6] to environ-
ments containing curved obstacles. The authors established
sufficient conditions on the eccentricity of the obstacles to
guarantee almost global convergence to a neighborhood sur-
rounding the a priori unknown target location. This approach
is applicable to convex obstacles with smooth and sufficiently
curved boundaries. In [7], the authors presented a methodology
for the design of a harmonic potential-based NF that ensures
almost global convergence to the target location in a priori
known environments that are diffeomorphic to the point world.
This work was subsequently extended in [8] to unknown
environments using a sensor-based approach. However, similar
to the approach in [6], it is assumed that the shapes of the
obstacles become known when the robot visits their respective
neighborhoods.
In [9], the authors proposed a feedback controller based
on Nagumo’s theorem [10, Theorem 4.7], for autonomous
navigation in environments with general convex obstacles. The
forward invariance of the obstacle-free space is ensured by
projecting the ideal velocity control vector (pointing towards
the target) onto the tangent cone at the boundary of the
obstacle whenever it points towards the obstacle. In [11], a
control barrier function-based approach was used for robot
navigation in an environment with a single spherical obstacle.
It was shown that this approach does not guarantee global
convergence to the target location due to the existence of an
undesired equilibrium.
In [12], a reactive power diagram-based approach was
introduced for robots navigating in a priori unknown envi-
ronments. This approach guarantees almost global asymptotic
stabilization of the target location, provided that the obstacles
are sufficiently separated and strongly convex. This approach
was further extended in [13] to handle partially known non-
convex environments, where it is assumed that the robot
possesses geometrical information about the non-convex ob-
stacles but lacks knowledge of their precise locations within
the workspace. However, due to the topological obstruction
induced by the motion space in the presence of obstacles
for any continuous time-invariant vector fields [2], the above-
mentioned approaches provide at best almost global conver-
gence guarantees.
In [14], a time-varying vector field planner was proposed
for the navigation of a single robot in a sphere world. This
planner leverages prescribed performance control techniques
to achieve predetermined convergence to a neighborhood of
the target location from any initial position, while ensuring
obstacle avoidance. In [15], hybrid control techniques were
employed to achieve robust global regulation to a targetarXiv:2304.10598v6  [cs.RO]  15 Apr 20242
while avoiding a single spherical obstacle. This approach
was extended in [16] to the problem of steering a group
of planar robots to a neighborhood of an unknown source
(emitting a signal with measurable intensity), while avoiding
a single obstacle. In [17], the authors proposed a hybrid
control law to globally asymptotically stabilize a class of linear
systems while avoiding neighbourhoods of unsafe points. In
[18] and [19], hybrid control techniques were employed to
enable the robot to operate in the obstacle-avoidance mode
when in close proximity to an obstacle or in the move-
to-target mode when located away from obstacles. These
strategies bear resemblance to bug algorithms [20], which
are commonly used for point robot path planning. In [19,
Definition 2], the proposed hybrid controller is applicable for
known n−dimensional environments with sufficiently disjoint
elliptical obstacles. On the other hand, in [18, Assumption
10], the obstacles are assumed to be smooth and sufficiently
separated from each other. In [21], the authors proposed a
discontinuous feedback control law for autonomous robot
navigation in partially known two-dimensional environments.
When a known obstacle is encountered, the control vector
aligns with the negative gradient of the Navigation Function
(NF). However, when close to an unknown obstacle, the robot
moves along its boundary, relying on the local curvature infor-
mation of the obstacle. This method is limited to point robots
and, similar to [18], assumes smooth obstacle boundaries
without sharp edges. In our earlier work [22], we proposed
a hybrid feedback controller design to address the problem
of autonomous robot navigation in planar environments with
arbitrarily shaped convex obstacles.
In the present work, which has been initiated in our pre-
liminary conference paper [23], we consider the autonomous
robot navigation problem in a two-dimensional space with
arbitrarily-shaped non-convex obstacles which can be in close
proximity with each other. Unlike [12], [19] and [22], wherein
the robot is allowed to pass between any pair of obstacles, we
require the existence of a safe path joining the initial and the
target location, as stated in Assumptions 1 and 2. The main
contributions of the present paper are as follows:
1)Asymptotic stability: the proposed autonomous naviga-
tion solution ensures asymptotic stability of the target
location for the robot operating in planar environments
with arbitrary non-convex obstacles.
2)Arbitrarily-shaped obstacles: there are no restrictions on
the shape of the non-convex obstacles such as those
mentioned in [6], [12], [19], and their proximity with
respect to each other e.g., see [18, Assumption 10], [19,
Definition 2], except for the mild feasibility Assump-
tions 1 and 2.
3)Applicable in a priori unknown environments: the pro-
posed obstacle avoidance approach can be implemented
using only range scanners ( e.g., LiDAR) without an
a priori global knowledge of the environment which
satisfies Assumptions 1 and 2.
The remainder of the paper is organized as follows. In
Section II, we provide the notations and some preliminaries
that will be used throughout the paper. The problem is for-mulated in Section III. The design of the obstacle reshaping
operator is provided in Section IV, and the proposed hybrid
control algorithm is presented in Section V. The stability and
safety guarantees of the proposed navigation control scheme
are provided in Section VI. A sensor-based implementation
of the proposed obstacle avoidance algorithm, using 2D range
scanners (LiDAR), is given in Section VII. Simulation results
are presented in Section VIII, and some final concluding
remarks are given in Section IX.
II. N OTATIONS AND PRELIMINARIES
A. Notations
The sets of real and natural numbers are denoted by R
andN, respectively. We identify vectors using bold lowercase
letters. The Euclidean norm of a vector p∈Rnis denoted by
∥p∥, and an Euclidean ball of radius r >0centered at pis
represented by Br(p) ={q∈Rn|∥q−p∥ ≤r}.Given two
vectors p∈R2andq∈R2, we denote by ∡(p,q)the angle
fromptoq. The angle measured in counter-clockwise manner
is considered positive, and vice versa. Given two locations
p,q∈Rn, the notation path (p,q)represents a continuous
path in Rn, which joins these locations. A set A ⊂Rnis said
to be pathwise connected if for any two points p,q∈ A, there
exists a continuous path, joining pandq, that belongs to the
same set i.e., there exists a path (p,q)⊂ A [24, Definition
27.1]. For two sets A,B ⊂Rn, the relative complement of B
with respect to Ais denoted by A \ B ={a∈ A|a/∈ B} .
Given a set A ⊂Rn, the symbols ∂A,A◦,Acand¯Arepresent
the boundary, interior, complement and the closure of the set
A, respectively, where ∂A=¯A\A◦. The number of elements
in a set Ais given by card (A). LetAandBbe subsets
ofRn, then the dilation of AbyBis denoted by A ⊕ B =
{a+b|a∈ A,b∈ B},and the erosion of AbyBis denoted by
A⊖B ={x∈Rn|x+b∈ A,∀b∈ B} [25]. Additionally, the
setBis referred to as a structuring element. Given a positive
scalar r > 0, the r−dilated version of the set A ⊂ Rnis
denoted by Dr(A) =A ⊕ B r(0). The r−neighbourhood of
the set Ais denoted by Nr(A) =Dr(A)\ A◦.
B. Projection on a set
Given a closed set A ⊂ Rnand a point x∈Rn, the
Euclidean distance of xfrom the set Ais evaluated as
d(x,A) = min
q∈A∥x−q∥. (1)
The set PJ(x,A)⊂ A, which is defined as
PJ(x,A) ={q∈ A|∥ x−q∥=d(x,A)}, (2)
is the set of points in Athat are at the distance of d(x,A)
fromx. Ifcard (PJ(x,A))is one, then the element of the
setPJ(x,A)is denoted by Π(x,A).
C. Sets with positive reach
Given a closed set A ⊂ Rn, the set Unp (A), which is
defined as
Unp(A) ={x∈Rn|card (PJ(x,A)) = 1}, (3)3
denotes the set of all x∈Rnfor which there exists a unique
point in Anearest to x. Then, for any x∈ A, the reach of set
Aatx, denoted by r(A,x)[26, Pg 55], is defined as
r(A,x) := sup {r≥0|B◦
r(x)⊂Unp(A)}. (4)
The reach of set Ais then given by
reach (A) := inf
x∈Ar(A,x). (5)
If a closed set has reach greater than or equal to r >0, then
any location less than rdistance away from the set will have
a unique closest point on the set.
D. Geometric sets
1) Line: Letp∈Rnandq∈Rn\{0}, then a line passing
through the point pin the direction of the vector qis defined
as
L(p,q) :={x∈Rn|x=p+λq, λ∈R}. (6)
2) Line segment: Letp∈Rnandq∈Rn, then a line
segment joining pandqis denoted by
Ls(p,q) :={x∈Rn|x=λp+ (1−λ)q, λ∈[0,1]}.(7)
3) Hyperplane: Given p∈Rnandq∈Rn\ {0}, a
hyperplane passing through pand orthogonal to qis given
by
P(p,q) :={x∈Rn|q⊺(x−p) = 0}. (8)
The hyperplane divides the Euclidean space Rninto two
half-spaces i.e., a closed positive half-space P≥(p,q)and a
closed negative half-space P≤(p,q)which are obtained by
substituting ‘ =’ with ‘ ≥’ and ‘ ≤’ respectively, in the right-
hand side of (8). We also use the notations P>(p,q)and
P<(p,q)to denote the open positive and the open negative
half-spaces such that P>(p,q) =P≥(p,q)\P(p,q)and
P<(p,q) =P≤(p,q)\P(p,q).
4) Convex cone: Given c∈Rn,p1∈Rn\ {c}, andp2∈
Rn\ {c}, a convex cone with its vertex at cand its edges
passing through p1andp2is defined as
C(c,p1,p2) :={x∈Rn|x=c+λ1(p1−c) +λ2(p2−c),
∀λ1≥0,∀λ2≥0}.
(9)
5) Conic hull [27, Section 2.1.5]: Given a set A ⊂Rnand
a point x∈Rn, the conic hull CH(x,A)for the set A, with
its vertex at xis defined as
CH(x,A) :=[
p,q∈AC(x,p,q). (10)
The conic hull CH(x,A)is the smallest convex cone with its
vertex at xthat contains the set Ai.e.,A ⊂ CH (x,A).
E. Tangent cone and Normal cone
Given a closed set A ⊂Rn, the tangent cone to Aat a
pointx∈Rn[10, Def 4.6] is defined by
TA(x) :=
w∈Rnlim inf
τ→0+d(x+τw,A)
τ= 0
.(11)The tangent cone to the set Aatxis the set that contains
all the vectors whose directions point from xeither inside or
tangent to the set A. Given a tangent cone to a set Aat a point
x, the normal cone to the set Aat the point x, as defined in
[26, Pg 58], is given by
NA(x) :=
p∈Rnp⊺w≤0,∀w∈TA(x)	
. (12)
The next two lemmas provide some properties of the sets
with positive reach, which will be used in the paper.
Lemma 1. Given a closed set A ⊂Rn, we define the set
G= (A ⊕ B◦
α(0))c.Ifreach (A)≥α, then reach (G)≥α.
Proof. See Appendix B.
Lemma 2. Consider a closed set A ⊂Rnand scalars α≥
β≥0. Ifreach (A)≥α,thenreach (Dβ(A))≥α−β.
Proof. See Appendix C.
F . Hybrid system framework
A hybrid dynamical system [28] is represented using dif-
ferential and difference inclusions for the state ξ∈Rnas
follows:(˙ξ∈F(ξ), ξ∈ F,
ξ+∈J(ξ), ξ∈ J,(13)
where the flow map F:Rn⇒Rnis the differential inclusion
which governs the continuous evolution when ξbelongs to
theflow set F ⊆Rn, where the symbol ‘ ⇒’ represents set-
valued mapping. The jump map J:Rn⇒Rnis the difference
inclusion that governs the discrete evolution when ξbelongs
to the jump set J ⊆Rn. The hybrid system (13) is defined
by its data and denoted as H= (F,F,J,J).
A subset T⊂R≥0×Nis a hybrid time domain if it is a
union of a finite or infinite sequence of intervals [tj, tj+1]×
{j},where the last interval (if existent) is possibly of the form
[tj, T)withTfinite or T= +∞. The ordering of points on
each hybrid time domain is such that (t, j)⪯(t′, j′)ift < t′,
ort=t′andj≤j′. Ahybrid solution ϕis maximal if it
cannot be extended, and complete if its domain dom ϕ(which
is a hybrid time domain) is unbounded.
III. P ROBLEM FORMULATION
We consider a disk-shaped robot operating in a two di-
mensional, compact, arbitrarily-shaped (possibly non-convex)
subset of the Euclidean space W ⊂ R2. The workspace
Wis cluttered with a finite number of compact, pairwise
disjoint obstacles Oi⊂ W , i∈ {1, . . . , b }, b∈N. We define
obstacle O0:= (W◦)cas the complement of the interior of
the workspace. The robot is governed by single integrator
dynamics
˙ x=u, (14)
where xis the location of the center of the robot and u∈R2
is the control input. The task is to reach a predefined obstacle-
free target location from any obstacle-free region while avoid-
ing collisions. Without loss of generality, consider the origin
0as the target location.4
𝒪0 
𝒪1 
2𝑟𝑎 
𝒪0 
2𝑟𝑎 
2𝑟𝑎 
𝒲𝓇𝒶 
𝒲𝓇𝒶 
𝒲 
𝒲 
Fig. 1: Two examples of workspaces that do not satisfy
Assumption 1.
We define the obstacle-occupied workspace as OW:=S
i∈IOi,where the set I:={0,1, ..., b}, contains indices
corresponding to the disjoint obstacles. The obstacle-free
workspace is denoted by W0, where, given y≥0, the
y−eroded version of the obstacle-free workspace i.e.,Wyis
defined as
Wy:=R2\ Dy(O◦
W)⊂ W 0. (15)
Letr >0be the radius of the robot and rs>0be the
minimum distance that the robot should maintain with respect
to any obstacle for safe navigation. Hence, Wra, with ra=
r+rs, is a free workspace with respect to the center of the
robot i.e.,x∈ W ra⇐⇒ B ra(x)⊂ W 0. Since the obstacles
can be non-convex and can be in close proximity with each
other, to maintain the feasibility of the robot navigation, we
make the following assumption:
Assumption 1. The interior of the obstacle-free workspace
w.r.t. the center of the robot i.e.,W◦
rais pathwise connected,
and0∈ W◦
ra.
According to Assumption 1, from any location in the set
Wra, there exists at least one feasible path to the target
location. We require the origin to be in the interior of the
setWrato ensure its stability, as discussed later in Theorem
1. Since we require the interior of the set Wrato be pathwise
connected, the environments, such as the ones showed in Fig.
1, which do not satisfy Assumption 1, are invalid.
The obstacle-avoidance strategy, which will be detailed
later in Section V, requires a unique closest point on the
obstacle-occupied workspace from the robot’s center. This
condition is not always satisfied in the case of non-convex
and closely positioned obstacles. Constructing convex hulls
around the non-convex obstacles is conservative solution since
it makes much of the obstacle-free workspace non-available
for navigation. Therefore, in Section IV, we will introduce
an obstacle reshaping technique that generates a modified
obstacle-occupied workspace OM
W, in a less conservative man-
ner (without necessarily convexifying the obstacles), in a way
that ensures uniqueness of the closest point on OM
Wfrom the
robot’s center.
Similar to Wyin (15), the y−eroded modified obstacle-free
workspace, which is denoted by Vy, is defined as
Vy:=R2\ Dy(OM
W)◦, (16)where y≥0. Hence, the set Vradenotes the modified obstacle-
free workspace with respect to the center of the robot. We
construct OM
Wsuch that the modified obstacle-free workspace
Vrais a subset of the original obstacle-free workspace Wra,
as stated with more details later in Remark 6.
Given a target location in the interior of the obstacle-free
workspace, i.e.,0∈(Wra)◦, as stated in Assumption 1, we
aim to design a hybrid feedback control law such that:
1) the set Vrais forward invariant.
2) the target location x= 0 is globally asymptotically
stable.
As it is going to be shown later, the obstacle reshaping
procedure guarantees that if the target location belongs to
(Wra)◦then it also belongs to Vra.
We use hybrid feedback control techniques [28] to develop a
navigation scheme for the robot operating in environments that
satisfy Assumption 1. The design process can be summarized
as follows:
1) the proposed hybrid navigation scheme involves two
modes of operation for the robot: move-to-target and
obstacle-avoidance . The design of the obstacle avoid-
ance strategy requires a unique projection onto the un-
safe region within its close proximity. However, ensuring
this uniqueness can be challenging in cases where ob-
stacles have arbitrary shapes and are in close proximity
to one another. Hence, before implementing the hybrid
navigation scheme, we first transform the obstacles using
an obstacle-reshaping operator, as discussed later in
Section IV, to obtain the modified obstacles. This op-
erator transforms the obstacle-occupied workspace and
guarantees the uniqueness of the projection of the robot’s
center onto the modified obstacle-occupied workspace in
itsα-neighbourhood, where the parameter αis chosen
as per Lemma 5.
2) when the center of the robot is outside the α-
neighbourhood of the modified obstacles or the nearest
disjoint modified obstacle does not intersect with its
straight path to the target location, the robot moves
straight towards the target in the move-to-target mode.
3) when the center of the robot enters the
α−neighbourhood of the modified obstacle that is
obstructing its straight path towards the target location,
the robot switches to the obstacle-avoidance mode.
4) in the obstacle-avoidance mode, to avoid collision, the
robot moves parallel to the boundary of the nearest
modified obstacle until it reaches the location at which
the following two conditions are satisfied: 1) the robot
is closer to the target location than the location where it
entered in the obstacle-avoidance mode; 2) the straight
path towards the target from that location does not
intersect with the nearest disjoint modified obstacle. At
this location, the robot switches back to the move-to-
target mode.
5) later in Lemma 6, we show that the target location
belongs to the modified obstacle-free workspace, and
from any location away from the interior of the modified
obstacles, there exists a feasible path towards the target5
𝒪𝒾 
𝐌 𝒪𝒾,𝛼  
𝒪𝒾⊕ℬ𝛼∘ 𝟎  
(a) 
(b) 
(c) 
Fig. 2: (a) The original obstacle Oi⊂R2. (b) Dilation of obstacle Oiby a structuring element B◦
α(0), α > 0. (c) Erosion of
the dilated obstacle Oi⊕ B◦
α(0)by the same structuring element B◦
α(0).
location. Hence, with a consecutive implementation of
steps 2−4for the environment with modified obstacles,
we guarantee asymptotic convergence of the center of
the robot to the target location.
In the next section, we provide the transformation that
modifies the obstacle-occupied workspace OWwhich satisfies
Assumption 1, such that the robot always has a unique closest
point on the modified obstacle-occupied workspace inside its
α−neighbourhood.
IV. O BSTACLE RESHAPING
Given OWthat satisfies Assumption 1, the objective of
the obstacle-reshaping task is to obtain a modified obstacle-
occupied workspace OM
Wsuch that every location less than
α−distance away from the set OM
Whas a unique closest point
on the set. The choice of the parameter αis crucial for the
successful implementation of the proposed navigation scheme,
as stated later in Lemma 5. For now, we assume that α >0
such that the α−eroded obstacle-free workspace Wαis not an
empty set. The obstacle-reshaping operator Mis defined as
M(OW, α) = (OW⊕ B◦
α(0))⊖ B◦
α(0) =:OM
W. (17)
The operator Mfirst dilates the set OWusing the open
Euclidean ball of radius αcentered at the origin as the
structuring element, and then erodes the dilated set using the
same structuring element, resulting in the modified set OM
W.
This process is similar to the closing operator commonly used
in the field of mathematical morphology [25]. Note that the
proposed modification scheme is applicable to n−dimensional
environments. Next, we discuss some of the features of the
obstacle-reshaping operator M.
Remark 1. Consider the modified set OM
Wobtained after
applying the operator Mon the set OWwithα >0.Some of
the features of the obstacle-reshaping operator M, as stated in
[29, Table 1], are as follows:
Idempotent: the application of the transformation Mto a
modified set OM
Wwith the same structuring element (the open
Euclidean ball B◦
α(0)), does not change the set OM
Wi.e.,
M(M(OW, α), α) =M(OW, α) =OM
W. (18)Extensive: the modified set always contains the original set
i.e.,OW⊂ OM
W.
Increasing: for any subset A ⊂ O W, the modified set AM
always belongs to the modified set OM
Wi.e.,AM⊂ OM
W.
Notice that, by duality of dilation and erosion [25, Theorem
25], the dilation of a set, with an open Euclidean ball centered
at the origin as the structuring element, is equivalent to the
erosion of the complement of that set with the same structuring
element. This allows us to provide alternative representations
of the proposed obstacle-reshaping operator, as stated in the
next remark.
Remark 2. Theα−eroded obstacle-free workspace Wα, de-
fined according to (15), is equivalent to the complement of
the set obtained after dilating OWwith the open Euclidean
ball of radius αcentered at the origin B◦
α(0)i.e.,Wα=
(OW⊕B◦
α(0))c. Therefore, by duality of dilation and erosion
[25, Theorem 25], the modified obstacle-occupied workspace
is equivalent to the complement of the set obtained after
dilating Wαby the open Euclidean ball of radius αcentered
at the origin B◦
α(0). In other words,
M(OW, α) = (Wα⊕ B◦
α(0))c=Wc
α⊖ B◦
α(0). (19)
The operator Mdoes not guarantee a unique projec-
tion onto the modified obstacle from every point in its
α−neighbourhood. To illustrate this fact, we consider an
environment with two obstacles OW=Oi∪ O jsuch that
d(Oi,Oj)<2α,as shown in Fig. 3. In Fig. 3b, one can see
that the operation M(OW, α)has fused these obstacles into
a single set, represented in blue. However, depending on the
arrangement of the obstacles, it may happen that even though
d(Oi,Oj)<2α, the modified obstacle-occupied workspace
OM
Wcontains two disjoint modified obstacles which are less
than2αdistance apart from each other, as shown in Fig. 3a. In
this case, it is possible to find a location xless than αdistance
away from the set OM
Wwhich has multiple closest points on
the set OM
W, as shown in Fig. 3a.
Observe that in Fig. 3a, the open Euclidean balls of radius
αcentered at the locations c1andc2intersect each other.6
𝒪𝒾 
𝒪𝑗 
𝒪𝒾 
𝒪𝑗 
 𝑎  
 𝑏  
𝛼 
𝒪𝒾 
𝒪𝑗 
𝒪𝒲𝑀 
𝒪𝒲𝑀 
𝐱 
𝐱 
𝐜𝟏 
𝐜𝟐 
𝐜𝟏 
𝐜𝟐 
𝛼 
𝛼 
𝛼 
𝜕𝒲𝛼 
𝜕𝒲𝛼 
Fig. 3: Workspace with two obstacles OW=Oi∪ Ojsuch
thatd(Oi,Oj)<2α. Left figure shows that the set OM
Wis
not a connected set. Right figure shows that the set OM
Wis a
connected set.
Hence, when the set OW⊕ B◦
α(0)is eroded to obtain the
modified set (17), two disjoint modified obstacles are obtained,
even though d(Oi,Oj)<2α. As a result, at the location x
inside the α−dilated modified obstacle, one can get multiple
projections, as shown in Fig. 3a.
To guarantee a unique projection onto the modified obstacle
from all locations inside its α−neighbourhood, we require the
following assumption on the obstacle-occupied workspace:
Assumption 2. For all x∈∂Wαand for every n∈NWα(x)
with∥n∥= 1, the intersection B◦
α(x+αn)∩W αis an empty
set, where α >0such that Wα̸=∅.
According to Assumption 2, for all xon the boundary of
theα−eroded obstacle-free workspace Wαand for every unit
normal vector ntoWαatx, the open Euclidean ball Bα(x+
αn)does not intersect with the set Wα.Figure 4a shows a
two-dimensional workspace that does not satisfy Assumption
2, whereas the inter-obstacle arrangement shown in Fig. 4b
satisfies Assumption 2.
Unlike [12, Assumprtion 1], [4, Assumprtion 2], and [19,
Section V-C3], Assumption 2 does not impose restrictions on
the minimum separation between any pair of obstacles and
allows obstacles to be non-convex. If fact, if one assumes (as in
the above mentioned references) that the obstacles are convex
and the minimum separation between any pair of obstacles is
greater than 2ra, then Assumption 2 along with Assumption
1 are satisfied, as stated later in Proposition 1.
Next, we show that if OWsatisfies Assumption 2 for some
α >0, then from any location in the α−neighbourhood of the
modified obstacles OM
W, obtained using (17), the projection
ontoOM
Wis always unique.
Lemma 3. Let Assumption 2 hold, then, for all locations x
less than αdistance away from the modified obstacle-occupied
workspace, there is a unique closest point from xto the set
OM
Wi.e.,∀x∈ Dα((OM
W)◦),card (PJ(x,OM
W)) = 1 .
Proof. See Appendix D.
𝛼 
𝒪𝒾 
𝒪𝑗 
𝒪𝒾 
𝒪𝑗 
𝛼 
𝜕𝒲𝛼 
𝒲𝛼 
𝒲𝛼 
𝐱 
𝐱 
𝐍𝒲𝛼 𝐱  
𝐍𝒲𝛼 𝐱  
 𝑎  
 𝑏  
𝜕𝒲𝛼 
𝛼 
𝛼 
𝐧 
𝐧 
𝐱+𝛼𝐧 
𝐱+𝛼𝐧 Fig. 4: Workspace with two obstacle OW=Oi∪Ojsuch that
d(Oi,Oj)<2α. (a)OWdoes not satisfy Assumption 2. (b)
OWsatisfies Assumption 2.
Notice that in Fig. 3b, even though initially obstacles were
disjoint, the obstacle-reshaping operator combined them into
one pathwise connected modified obstacle set. In fact, for the
obstacle-occupied workspace that satisfies Assumption 2, if
two obstacles are less than 2αdistance apart, then the modified
obstacle set obtained for the union of these two obstacles is
a connected set. Next, we elaborate on this feature of the
proposed obstacle-reshaping operator.
For each obstacle Oi, i∈I,we define the following set:
Oi,α=[
k∈Ii,α[
j∈Ik,αOj, (20)
where, for k∈I,the set Ik,α, which is defined as
Ik,α={j∈I|d(Ok,Oj)<2α}, (21)
contains the indices corresponding to obstacles that are at
distances less than 2αfrom obstacle Ok.According to (20)
and (21), the distance between any proper subset of the
obstacle set Oi,αand its relative complement with respect
to the same set, is always less than 2α.In other words,
ifOC⊂ O i,αandOD=Oi,α\ OC,then the distance
d(OC,OD)<2α.IfOj⊂ O i,α, j∈I\{i}, thenOi,α=Oj,α.
Next, we show that the modified obstacle-occupied set OM
i,α,
for any i∈I, is a connected set.
Lemma 4. Let Assumption 2 hold, then the modified obstacle-
occupied set OM
i,α, for any i∈I,is a connected set.
Proof. See Appendix E
According to Lemma 4, if the modified obstacle-occupied
workspace contains two disjoint modified obstacles, then the
distance between these two modified obstacles will always be
greater than or equal to 2α.
Remark 3. When the obstacle is non-convex, the modified
obstacle obtained using the operator M, defined in (17),
always occupies less workspace as opposed to the convex
hull [27, Section 2.1.4] of the same obstacle. Although, one
obtains a unique projection onto the convex hull of a given
obstacle within its α−neighbourhood, the use of the convex
hull renders most of the obstacle-free workspace unavailable
for the robot’s navigation, as shown in Fig. 5. Moreover, if a
given obstacle Oiis convex, then the modified obstacle OM
i7
obtained using (17) for any α > 0is equal to the original
obstacle Oii.e.,OM
i=Oi.
Since, as per Lemma 3, from any location less than α
distance away from the modified obstacles OM
W, the projection
on the set OM
Wis unique, one can roll up an Euclidean ball
of radius at most αon the boundary ∂OM
W, as stated in
[30, Definition 11]. This motivates an alternative procedure
to obtain the boundary of the set OM
Wwhen the set OWis
two-dimensional, by having a virtual ring of radius αrolling
on the boundary of the set OW, as stated in the next remark.
 
𝑐𝑜𝑛𝑣 𝒪𝒾  
𝒪i 
𝒪𝒾M
 
𝛼 
𝒪i 
Fig. 5: Left figure shows the original obstacle Oi⊂R2.
Middle figure shows the modified obstacle OM
i=M(Oi, α)
obtained using (17). Right figure shows the convex hull
conv(Oi)for the obstacle Oi.
Remark 4. Given an obstacle-occupied workspace OW⊂R2,
satisfying Assumptions 1 and 2, one can construct the modified
obstacle OM
i,α=M(Oi,α, α), where i∈I,by rotating a
virtual ring, of radius αand center c, around the set Oi,α,
just touching the set Oi,α, while ensuring that the ring does
not intersect with the interior of that set, as shown in Fig. 7.
Then, based on the number of projections of the location con
the obstacle set Oi,αi.e.,card (PJ(c,Oi,α)), we construct
the boundary of the modified obstacle set ∂OM
i,αas follows:
•if the ring ∂Bα(c)is touching the set Oi,αat a single
location, then include that location in the set ∂OM
i,α. That
is, ifcard (PJ(c,Oi,α)) = 1 , then Π(c,Oi,α)∈∂OM
i,α.
•if the ring ∂Bα(c)is simultaneously touching the set Oi,α
at more than one location, then include in the set ∂OM
i,α
the part of the ring ∂Bα(c)which intersects the conic
hull of the set PJ(c,Oi,α)with its vertex at c. That is,
ifcard (PJ(c,Oi,α))>1, then Y(c)⊂∂OM
i,α, where
the set Y(c)is given by
Y(c) =CH(c,PJ(c,Oi,α))∩∂Bα(c). (22)
We consider the modified obstacle-occupied workspace
OM
W⊂ W to be the region that the robot should avoid. The
setVra, defined in (16), represents the modified obstacle-free
workspace for the center of the robot.
We require the set Vrato be a pathwise connected set.
However, the pathwise connectedness of the set Vramainly
depends on the value of the parameter α.For example, see
Fig. 6 in which the set Vrais not connected due to improper
selection of the parameter α. To that end, we require the
following lemma:
Lemma 5. Under Assumption 1, there exists ¯α > r asuch
that for all α∈(ra,¯α]the following conditions are satisfied:
𝒪0M 
𝒪0 
𝒲0 
𝒱0 
𝑟𝑎 
𝑟𝑎 
𝟎 
𝟎 
𝐱 
𝐱 
𝛼 Fig. 6: The left figure shows an original workspace where a
feasible path exists from location xto the origin. The right
figure shows the modified workspace obtained using (17) with
some α > r a, where there is no feasible path from the location
xto the origin.
1) the α−eroded obstacle-free workspace Wαis a pathwise
connected set,
2) the distance between the origin and the set Wαis less
thanα−ra.
Proof. See Appendix F.
Next, we show that if we choose the parameter α, which is
used in (17) and (16) to obtain the set Vra, as per Lemma 5,
then the set Vrais pathwise connected and the origin belongs
to its interior.
Lemma 6. If the parameter α, which is used in (17), is chosen
as per Lemma 5, then the modified obstacle-free workspace
w.r.t. the center of the robot Vrais pathwise connected and
0∈ V◦
ra.
Proof. See Appendix G
This concludes the discussion on the formulation and fea-
tures of the obstacle-reshaping operator M(17), which is
applicable to n−dimensional Euclidean subsets of Rn. Next,
we provide the hybrid control design for the robot operating
in a two-dimensional workspace i.e.,W ⊂R2.
V. H YBRID CONTROL FOR OBSTACLE AVOIDANCE
In the proposed scheme, similar to [19], depending upon
the value of the mode indicator m∈ {− 1,0,1}=:M,the
robot operates in two different modes, namely the move-to-
target mode (m= 0) when it is away from the modified
obstacles and the obstacle-avoidance mode (m∈ {− 1,1})
when it is in the vicinity of an modified obstacle. In the move-
to-target mode, the robot moves straight towards the target,
whereas during the obstacle-avoidance mode the robot moves
around the nearest modified obstacle, either in the clockwise
direction (m= 1) or in the counter-clockwise direction (m=
−1). We utilize a vector joining the center of the robot and
its projection on the modified obstacle-occupied workspace to
select between the modes and assign the direction of motion
while operating in the obstacle-avoidance mode.8
𝜕ℬ𝛼 𝐜  
Fig. 7: An obstacle-occupied workspace OWwith three ob-
stacles Oi,OjandOk, and the boundary of the modified
obstacle OM
i,αobtained using a virtual ring with radius α,
where Oi,α=Oi∪ Oj∪ Ok, see (20). A video can be seen
here https://youtu.be/mylrTOtYOSY.
A. Hybrid control Design
The proposed hybrid control u(x,h, m)is given by
u(ξ) =−κs(1−m2)x+κrm2v(x, m), (23a)
˙h
˙m=0
= 0
|{z}
ξ∈F,
h+
m+
∈L(ξ)
|{z}
ξ∈J, (23b)
where κs>0,κr>0andξ= (x,h, m)∈ Vra×Vra×M=:
K,is the composite state vector. In (23a), x∈ V rais the
location of the center of the robot. The state h∈ Vra, referred
to as a hit point , is the location of the center of the robot when
it enters in the obstacle-avoidance mode. The discrete variable
m∈Mis the mode indicator. The update law L(ξ), used in
(23b), which allows the robot to switch between the modes, is
discussed in Section V-C. The symbols FandJdenote the
flow and jump sets related to different modes of operations,
respectively, whose constructions are provided in Section V-B.
Next, we provide the design of the vector v(x, m)∈R2, used
in (23a).
The vector v(x, m)is defined as
v(x, m) =0m
−m0x−Π(x,OM
W)
∥x−Π(x,OM
W)∥, (24)
where Π(x,OM
W)is the point on the modified obstacle-
occupied workspace OM
Wwhich is closest to the center of
the robot x, as defined in Section II-B. As per Lemma 3,
if the center of the robot xis inside the α−neighbourhood
of the set OM
W, then Π(x,OM
W)is unique. When the robot
operates in the obstacle-avoidance mode, the vector v(x, m)
allows it to move around the nearest obstacle either in the
clockwise direction (m= 1) or in the counter-clockwise
direction (m=−1). Next, we discuss the design of the flow
setFand the jump set J, used in (23).
ℛℓ,3 
𝒪𝒾,𝛼 
𝜕𝒪𝒾,𝛼M 
𝟎 
ℛℓ,1 
ℛℓ,2 
ℛe,1 
ℛe,2 
ℛe,3 
𝜕𝒟𝓇𝒶+𝛾 𝒪𝒾,𝛼M  
𝜕𝒟𝓇𝒶 𝒪𝒾,𝛼M  
𝜕𝒟𝓇𝒶 𝒪𝒾,𝛼M  
𝟎 
ℛℓ,3 
ℛℓ,1 
ℛℓ,2 
ℛ−1 
ℛ1 
𝒪𝒾,𝛼 
ℛ𝒶 Fig. 8: The left figure shows the partitioning of the region
Nγ(Dra(OM
i))into the landing region Rl=Rl,1∪Rl,2∪Rl,3,
and the exitregion Re=Re,1∪ Re,2∪ Re,3,using (25) and
(27). The right figure shows the partitioning of the exitregion
into three sub-regions namely the always exit region Ra, the
clockwise exit region R1, and the counter-clockwise exit region
R−1,using (28), (30) and (31), respectively.
B. Geometric construction of the flow and jump sets
When the robot operates in the move-to-target mode, in the
modified free workspace, its velocity is directed towards the
target location. If any connected modified obstacle OM
i,α, i∈I,
is on the line segment Ls(x,0)connecting the robot’s location
with the target location, then the robot, operating in the
move-to-target mode, will enter the α−neighbourhood of that
modified obstacle ( i.e.,d(x,OM
i,α)≤α) from the landing
region Rl, as depicted in Fig. 8. The parameter αis chosen
as per Lemma 5. The landing region is defined as
Rl:=[
i∈IRi
l, (25)
where, for each i∈I, the set Ri
lis given by
Ri
l:={x∈ N γ(Dra(OM
i,α))|x⊺(x−Π(x,OM
i,α))≥0,
Ls(x,0)∩ 
Dra(OM
i,α)◦̸=∅},(26)
where γ∈(0, α−ra). Given a set A ⊂Rnand a scalar r >0,
ther−neighbourhood of the set Ais denoted by Nr(A) =
Dr(A)\(A)◦.
Notice that for a connected modified obstacle OM
i,α, i∈I,
thelanding region Ri
l, defined in (26), is the intersection of
the following two regions:
1) the region where the line segment Ls(x,0), which joins
the center of the robot and the target location, intersects
with the interior of the ra−dilated connected modified
obstacle D◦
ra(OM
i,α). Hence, if the robot moves straight
towards the target in this region, it will eventually collide
with the modified obstacle OM
i,α.
2) the region where the inner product between the vectors
xandx−Π(x,OM
i,α)is non-negative, as shown in
Fig. 9. Notice that, when the robot moves straight
towards the target in this region, its distance from
the modified obstacle OM
i,αi.e.,d(x,OM
i,α)does not
increase. To understand this fact, observe that if for any
x∈ N γ(Dra(OM
i,α)),x⊺(x−Π(x,OM
i,α))≥0, then
−x∈TDd(x,OM
i,α)(OM
i,α)(x) =P≤(0,x−Π(x,OM
i,α))
i.e., the robot, moving straight towards the target in this9
𝒟𝒹 𝐱,𝒪𝒾,α𝑀  𝒪𝒾,α𝑀  
𝒪𝒾,α 
𝒪𝒾,α 
𝐱 
𝐱 
𝐓𝒟𝒹 𝐱,𝒪𝒾,α𝑀  𝒪𝒾,α𝑀  𝐱  
𝟎 
𝟎 
Π 𝐱,𝒪𝒾,𝛼M  
Π 𝐱,𝒪𝒾,𝛼M  
(a) 
(b) 
𝜕𝒪𝒾,𝛼𝑀
 
𝜕𝒪𝒾,𝛼𝑀
 
Fig. 9: Partitions of the neighbourhood of the modified obsta-
cleOM
i,αbased on the value of the inner product between the
two vectors −xandx−Π(x,OM
i,α)and the tangent cone to
the set Dd(x,OM
i,α)(OM
i,α)atx. (a) The vector −xis pointing
inside the tangent cone. (b) The vector −xis pointing outside
the tangent cone.
region, does not leave the region Dd(x,OM
i,α)(OM
i,α). The
notation TDd(x,OM
i,α)(OM
i,α)(x)denotes the tangent cone
to the set Dd(x,OM
i,α)(OM
i,α)atx.
According to (26), due to the intersection of the above-
mentioned two regions, the landing region Ri
lexcludes a set
of locations from the region Nγ(Dra(OM
i,α)), for which the
inner product between the vectors xandx−Π(x,OM
W)is
negative and the line segment Ls(x,0)intersects with the
interior of the set Dra(OM
i,α), for example see the regions
Re,1andRe,2in Fig. 8. Even though the robot does not
have a line-of-sight towards the target location, as long as
it moves straight towards the target in these regions, its
distance from the modified obstacle OM
i,αi.e.,d(x,OM
i,α)
increases. To understand this fact, observe that if for any
x∈ N γ(Dra(OM
i,α)),x⊺(x−Π(x,OM
i,α))is negative, then
−x/∈TDd(x,OM
i,α)(OM
i,α)(x) =P≤(0,x−Π(x,OM
i,α))i.e., the
robot, moving straight towards the target in this region, does
not enter the region Dd(x,OM
i,α)(OM
i,α).Due to this property,
we include these locations in the region called an exitregion,
wherein the robot can operate in the move-to-target mode, as
discussed next.
When the robot operates in the obstacle-avoidance mode
in the γ−neighbourhood of the modified obstacles, it will
switch to the move-to-target mode from the exitregion, which
is defined as follows:
Re:=Nγ(Dra(OM
W))\ Rl. (27)
According to (25), (26) and (27), the exitregion is a combi-
nation of following two regions:
1) the region where the inner product x⊺(x−Π(x,OM
W))is
non-positive. As discussed earlier, when the robot moves
straight towards the target in this region, its distance
from the unsafe region does not decrease.
2) the region where the inner product x⊺(x−Π(x,OM
W))is
positive and the line segment Ls(x,0), which joins the
robot’s location and the target location, does not intersect
with the nearest modified obstacle. Hence, the robot can
move straight towards the target and safely leave theα−neighbourhood of this connected modified obstacle.
As shown in Fig. 8 (left), for a modified non-convex
obstacle OM
i,α, i∈I, the exit region is not a connected set.
Consider a situation, wherein the robot is moving in the
clockwise direction with respect to the set OM
i,αin the landing
region Rl,1. If the robot were to start moving straight towards
the target after entering the exitregion Re,1, it will re-enter
the region Rl,1, resulting in multiple simultaneous switching
instances. Similar situation can occur for the robot moving in
thecounter-clockwise direction with respect to the set OM
i,α
in the landing region Rl,2, if it moves straight towards the
target after entering the exitregion Re,2.On the other hand,
if the robot enters in the region Re,3, then, irrespective of the
direction of motion around the obstacle, it can safely move
straight towards the target and leave the γ−neighbourhood of
the modified obstacle OM
i,α.
Hence, as shown in Fig. 8 (right), based on the angle
between the vectors xandx−Π(x,OM
W), and the presence of
a line-of-sight to the target location with respect to the nearest
disjoint modified obstacle, we divide the exitregion Reinto
three sub-regions Ra,R1andR−1, referred to as the always
exitregion, the clockwise exit region and the counter-clockwise
exitregion, respectively, as follows:
The always exit region Rais defined as
Ra:=[
i∈IRi
a, (28)
where, for each i∈I, the set Ri
a, which is given by
Ri
a:={x∈ R e|Ls(x,0)∩ 
Dra(OM
i,α)◦=∅}, (29)
contains the locations from the exit region Resuch that the
line segments joining them to the origin do not intersect with
the interior of the ra−dilated modified obstacle Dra(OM
i,α).
The clockwise exit region R1is defined as
R1:=
x∈ R e\ Ra|∡ 
x,x−Π(x,OM
W)
∈[π,2π]	
,
(30)
and the counter-clockwise exit region R−1is defined as
R−1:=
x∈ R e\ Ra|∡ 
x,x−Π(x,OM
W)
∈[0, π]	
(31)
where, given two vectors p,q∈R2,the notation ∡(p,q)
indicates the angle measured from ptoq. The angle measured
in the counter-clockwise direction is considered positive, and
vice versa.
While moving in the clockwise direction around the mod-
ified obstacle, the robot is allowed to move straight towards
the target only if its center is in the region R1∪Ra. Whereas,
the robot moving in the counter-clockwise direction around
the modified obstacle should move straight towards the target
only if its center is in the region R−1∪Ra. Next, we provide
the geometric constructions of the flow set Fand the jump
setJ, used in (23).
1) Flow and jump sets (move-to-target mode): As discussed
earlier, if the robot, which is moving straight towards the
target, is on a collision path towards a connected modi-
fied obstacle OM
i,α, for some i∈I, then it will enter the
γ−neighbourhood of this modified obstacle through the land-10
ingregion. Hence, the jump set of the move-to-target mode
for the state xis defined as
JW
0:=Nγs(Dra(OM
W))∩ Rl, (32)
where γs∈[0, γ). For robustness purposes (with respect
to noise), we introduce a hysteresis region by allowing
the robot, operating in the move-to-target mode inside the
γ−neighbourhood of the set OM
W, to move closer to the set
OM
Wbefore switching to the obstacle-avoidance mode.
The flow set of the move-to-target mode for the state xis
then defined as
FW
0:=
W \ 
Dra+γs(OM
W)◦
∪ Re. (33)
Notice that the union of the jump set (32) and the flow set
(33) exactly covers the modified robot-centred obstacle-free
workspace Vra(16). Refer to Fig. 11 for the representation
of the flow and jump sets related to the modified obstacle-
occupied workspace OM
W. Next, we provide the construction
of the flow and jump sets for the obstacle-avoidance mode.
2) Flow and jump sets (obstacle-avoidance mode): The
robot operates in the obstacle-avoidance mode only in the
γ−neighbourhood of the modified obstacles OM
W.The mode
indicator variable m= 1 andm=−1prompts the robot
to move either in the clockwise direction or in the counter-
clockwise direction with respect to the nearest boundary of
the set OM
W, respectively. As discussed earlier, for some
m∈ {− 1,1},the robot should exit the obstacle-avoidance
mode and switch to the move-to-target mode only if its center
belongs to the exit region Rm∪ Ra.
To that end, we make use of the hit point h(i.e., the location
of the center of the robot when it switched from the move-to-
target mode to the current obstacle-avoidance mode) to define
the jump set of the obstacle-avoidance modeJW
mfor the state
xas follows:
JW
m:= 
W \(Dra+γ(OM
W))◦
∪ ERh
m∪ Bδ(0), (34)
where m∈ {− 1,1}and the parameter δ∈(0, d(0,OM
W)−ra).
Note that, according to Lemma 6, the target location 0∈ V◦
ra.
As a result, the distance d(0,OM
W)> ra,which guarantees
the existence of the parameter δ.In (34), the inclusion of the
setBδ(0)in the set JW
mallows us to ensure the stability of
the origin, as stated later in Theorem 1.
For some m∈ {− 1,1}and the hit point h∈ Vra, the set
ERh
mis given by
ERh
m:={x∈Rm∪ Ra∥h∥ − ∥x∥ ≥ϵ}, (35)
where ϵ∈(0,¯ϵ], with ¯ϵ >0. This set contains the locations
from the exit region Rm∪Rawhich are at least ϵunits closer
to the target location than the current hit point .
Since, according to Lemma 6, the target location belongs
to the interior of the modified obstacle-free workspace w.r.t.
the center of the robot i.e.,0∈(Vra)◦, the existence of a
positive scalar ¯ϵcan be guaranteed. However, if one selects
a very high value for ϵ, then for some connected modified
obstacles OM
i,α, i∈I, the set ERh
m∩ N γ(Dra(OM
i,α))will
become empty, as shown in Fig. 10, and the robot might
 
𝐡 
 
𝒪𝒾,𝛼M 
𝒪𝒾,α𝑀 
𝜖1 
𝜖2 
ℰℛmh 
ℛℓ 
ℛ1 
ℛ−1 
𝐡 
𝟎 
ℛa 
ℛℓ 
ℛ1 
ℛ−1 
ℛa Fig. 10: Effects of ϵ, used in (35), on the construction of the
setsERh
m, form∈ {− 1,1}and a hit point h∈ JW
0.The left
figure shows that when ϵ=ϵ1, the sets ERh
m, m∈ {− 1,1},
are non-empty. The right figure shows that when ϵ=ϵ2, the
setsERh
m, m∈ {− 1,1},are empty.
get stuck (indefinitely) in the obstacle-avoidance mode in the
vicinity of those modified obstacles. Therefore, in the next
lemma, we provide an upper bound on the value of ¯ϵ.
Lemma 7. Under Assumptions 1 and 2, we consider a
connected modified obstacle OM
i,α, i∈I. If¯ϵ∈(0, ϵh], where
ϵh=q 
d(0,OM
W)2−r2a
− 
d(0,OM
W)−ra
, (36)
then, for every h∈ JW
0with d(h,OM
i,α) =β∈[ra, ra+
γ], and any location p∈ PJ (0, ∂Dβ(OM
i,α)), the set Hp:=
Bδ(p)∩ Nγ(Dra(OM
i,α))⊂ ERh
m,for some m∈ {− 1,1}and
δ= min {β−ra, d(0,OM
W)−ra}, where the set ERh
mis
defined in (35).
Proof. See Appendix H.
According to Lemma 7, if the hit point belongs to the jump
set of the move-to-target mode associated with a connected
modified obstacle OM
i,αandϵ∈(0,¯ϵ], where ¯ϵis chosen as
per Lemma 7, then the set ERh
m∩ N γ(Dra(OM
i,α))is non-
empty. Hence, we initialize the robot in the move-to-target
mode so that the hit point will always belong to the jump set
of the move-to-target mode, as stated later in Theorem 1.
According to (34) and (35), while operating in the obstacle-
avoidance mode with some m∈ {− 1,1}, the robot can switch
to the move-to-target mode only when its center belongs to
theexitregion Rm∪ Raand is at least ϵunits closer to the
target than the current hit point h.This creates a hysteresis
region and ensures Zeno-free switching between the modes.
This switching strategy is inspired by [31], which allows us
to establish convergence properties of the target location, as
discussed later in Theorem 1.
We then define the flow set of the obstacle-avoidance mode
FW
mfor the state xas follows:
FW
m:=Rl∪R−m∪Rm∪ Ra\ ERh
m, (37)
where m∈ {− 1,1}. Notice that the union of the jump set (34)
and the flow set (37) exactly covers the modified robot-centred
free workspace Vra(16). Refer to Fig. 11 for the representation
of the flow and jump sets related to the modified obstacle-
occupied workspace OM
W.11
𝟎 
𝟎 
𝟎 
𝜖 
𝜖 
𝒪𝒾,𝛼M 
𝒪𝒾,𝛼M 
𝒪𝒾,𝛼M 
𝐡 
𝐡 
𝐡 
 
ℱ0𝒲 
𝒥0𝒲 
ℱ1𝒲 
𝒥1𝒲 
ℱ-1𝒲 
𝒥-1𝒲 
𝒲 
𝒲 
𝒲 
𝜕𝒟𝓇𝒶+𝛾𝓈 𝒪𝑖,𝛼𝑀  
𝜕𝒟𝓇𝒶+𝛾 𝒪𝒾,𝛼M  
∂𝒟α 𝒪𝒾,αM  
∂𝒟𝓇𝒶 𝒪𝒾,αM  
Fig. 11: Flow and jump sets FW
m,JW
m, related to the set Oi,α, shown in Fig. 8. The left figure (m= 0) illustrates the case
where the robot operates in the move-to-target mode and moves straight toward the target location. The middle figure (m= 1)
illustrates the case where the robot, operating in the obstacle-avoidance mode, moves in the clockwise direction with respect
to∂OM
i,α.The right figure (m=−1)illustrates the case where the robot, operating in the obstacle-avoidance mode, moves in
the counter-clockwise direction with respect to ∂OM
i,α.
𝐡𝟏 
𝐥𝟏 
∂𝒟𝓇𝒶+γ𝓈 𝒪i,αM  
∂𝒟𝓇𝒶+γ 𝒪𝒾,αM  
∂𝒟𝓇𝒶 𝒪𝒾,αM  
∂𝒪𝒾,αM 
𝒪𝒾,α 
𝒪𝒾,α 
 
𝐱𝟎 
𝐡𝟐 
𝐱 
𝟎 
𝐱𝟎 
𝟎 
𝐡𝟏 
𝐥𝟏 
𝐡𝟐 
𝐱 
𝐥𝟐 
Fig. 12: The figures show two possible paths that the robot,
initialized at x0, takes before converging to the origin. The
left figure illustrates a case in which the robot, operating in
theobstacle-avoidance mode, moves initially in the clockwise
direction from h1tol1, and then in the counter-clockwise
direction from h2tol2with respect to the nearest point on
the modified obstacle OM
i,α. The right figure illustrates a case
in which the robot, operating in the obstacle-avoidance mode,
moves in the clockwise direction with respect to the nearest
point on the modified obstacle OM
i,α.
Finally, the flow set Fand the jump set J, used in (23),
are defined as
F:=[
m∈MFm,J:=[
m∈MJm, (38)
where for m∈M,the sets FmandJmare given by
Fm:=FW
m×Vra×{m},Jm:=JW
m×Vra×{m},(39)
withFW
m,JW
mdefined in (33), (32) for m= 0 and in (37),
(34) for m∈ {− 1,1}.
Remark 5. Let us look at the case where the robot is
moving in the γ−neighbourhood of a connected modified
obstacle OM
i,α, for some i∈I. If the robot needs to switch
between the modes of operation multiple times before leaving
theγ−neighbourhood of the modified obstacle OM
i,α, then it
should move in the same direction in the obstacle-avoidance
mode i.e., either in the clockwise direction or in the counter-
clockwise direction, to avoid retracing the previously trav-elled path, as shown in Fig. 12b. In fact, if the robot does
not maintain the same direction of motion in the obstacle-
avoidance mode, while operating in the γ−neighbourhood of
the connected modified obstacle OM
i,α, then it will retraces the
previously travelled path, as shown in Fig. 12a.
Next, we provide the update law L(x,h, m), used in (23b).
C. Update law L(x,h, m)
The update law L(ξ), used in (23b), updates the value of the
hit point hand the mode indicator mwhen the state (x,h, m)
belongs to the jump set J, which is defined in Section V-B.
When the robot, operating in the move-to-target mode, enters
in the jump set J0, defined in (32) and (39), the update law
L(x,h,0)is given as
L(x,h,0) =x
zz∈ {− 1,1}
. (40)
Notice that, when the robot switches from the move-to-target
mode to the obstacle-avoidance mode, the coordinates of the
hit point gets updated to the current value of x.
On the other hand, when the robot operating in the obstacle-
avoidance mode, enters in the jump set Jm, m∈ {− 1,1},
defined in (34) and (39), the update law L(x,h, m), m∈
{−1,1}, is given by
L(x,h, m) =h
0
. (41)
When the robot switches from the obstacle-avoidance mode
to the move-to-target mode , the value of the hit point remains
unchanged.
Control design summary : The proposed hybrid feedback
control law can be summarized as follows:
•Parameters selection : the target location is set at the
origin with 0∈ W◦
ra. The parameter αis set such that
α > r aand it satisfies the conditions in Lemma 5. The
gain parameters κsandκrare set to positive values. The
parameter ¯ϵ, used in (35), is chosen as per Lemma 7.
The scalar parameter γ, used in the construction of the12
flow set Fand the jump set J, is selected such that
γ∈(0, α−ra), and the parameter γsis set to satisfy
0< γs< γ.
•Obstacle modification : the obstacle reshaping operator
(17) is used to obtain the modified obstacle-occupied
workspace OM
W. The state vector is initialized in the set
Ki.e.,ξ(0,0)∈ K.
•Move-to-target mode m= 0 : this mode is activated
when ξ∈ F 0. As per (23a), the control input is given
byu(ξ) =−κsx, causing xto evolve along the line
segment Ls(0,x)towards the origin. If, at some instance
of time, ξenters in the jump set J0of the move-to-target
mode, the state variables (h, m)are updated using (40),
and the control input switches to the obstacle-avoidance
mode.
•Obstacle-avoidance mode m∈ {− 1,1}: this mode is
activated when ξ∈ Fmfor some m∈ {− 1,1}. As per
(23a), the control input is given by u(ξ) =κrv(x, m),
causing xto evolve in the γ−neighborhood of the nearest
modified obstacle until the state ξenters in the jump
setJm,m∈ {− 1,1}. When ξ∈ J m,m∈ {− 1,1},
the control input switches to the move-to-target mode by
setting m= 0, as per (41).
This concludes the design of the proposed hybrid feedback
controller (23).
VI. S TABILITY ANALYSIS
The hybrid closed-loop system resulting from the hybrid
control law (23) is given by
˙ x
˙h
˙m=u(ξ)
=0
= 0
|{z}
˙ξ=F(ξ), ξ∈ F,x+h+
m+=x
∈L(ξ)
|{z}
ξ+∈J(ξ), ξ∈ J, (42)
where u(ξ)is defined in (23a), and the update law L(ξ)is
provided in (40), (41). The definitions of the flow set Fand
the jump set Jare provided in (38), (39). Next, we analyze
the hybrid closed-loop system (42) in terms of the forward
invariance of the obstacle-free state space K:=Vra×Vra×M
along with the stability properties of the target set A, which
is defined as
A:={0} × V ra×M. (43)
First, we analyze the forward invariance of the modified
obstacle-free workspace, which then will be followed by the
convergence analysis.
For safe autonomous navigation, the state xmust always
evolve within the set Vra(16). This is equivalent to having
the set K:=Vra× Vra×Mforward invariant for the hybrid
closed-loop system (42). This is stated in the next Lemma.
Lemma 8. Under Assumptions 1 and 2, for the hybrid closed-
loop system (42), the obstacle-free set K:=Vra× Vra×M
is forward invariant.
Proof. See Appendix I.
Next, we show that if the robot is initialized in the move-to-
target mode, at any location in Vraand the parameter ¯ϵ, usedin (35), is chosen as per Lemma 7, then it will safely and
asymptotically converge to the target location at the origin.
Theorem 1. Consider the hybrid closed-loop system (42) and
let Assumption 1 holds true. Also, let Assumption 2 hold true
for the parameter αchosen as per Lemma 5. If the parameter
¯ϵ, used in (35), is chosen as per Lemma 7, then
i) the obstacle-free set Kis forward invariant,
ii) the set Ais stable and attractive from all initial conditions
ξ(0,0)∈ Vra× Vra× {0},
iii) the number of jumps is finite.
Proof. See Appendix J.
According to Theorem 1, we initialize the robot in the move-
to-target mode to ensure that when it switches to the obstacle-
avoidance mode, the hit point hbelongs to the set JW
0.This
allows us to establish an upper bound on the value of the
parameter ¯ϵas given in Lemma 7, which is crucial to ensure
that the robot, when operating in the obstacle-avoidance mode,
will certainly enter in the move-to-target mode.
Remark 6. Theorem 1 guarantees global asymptotic stability
of the target location in the modified set Vraand not in the
original set Wra. Since the obstacle reshaping operator M
isextensive [29, Table 1] i.e.,OW⊆ OM
W, the set Vrais
a subset of the set Wrai.e.,Vra⊆ W ra.Interestingly, if
one chooses the value of the parameter αclose to ra, then
the region occupied by the set Vraapproaches the original
setWra. In other words, if V1
raandV2
raare two modified
obstacle-free workspaces obtained for two different values of
the parameter α1andα2, respectively, using (17) and (16),
where α1, α2∈(ra,¯α],α1> α 2and¯αdefined as per
Lemma 5, then the set V1
ra⊆ V2
ra⊆ W ra. Hence, by selecting
a smaller value of the parameter αone can implement the
proposed hybrid feedback controller (23) in a larger area.
Unlike [12, Assumprtion 1], [4, Assumprtion 2], and [19,
Section V-C3], Assumptions 1 and 2 do not impose restrictions
on the minimum separation between any pair of obstacles and
allow obstacles to be non-convex. In particular, Assumptions
1 and 2 are satisfied in the case of environments with convex
obstacles where the minimum separation between any pair of
obstacles is greater than 2ra, as discussed next.
Proposition 1. Let the workspace Wbe a compact, convex
subset of R2. Let the obstacles Oi, i∈I\ {0}, be compact
and convex, such that d(Oi,Oj)>2ra,∀i, j∈I, i̸=j, and
0∈ W◦
ra. Then Assumptions 1 and 2 hold true for all α∈
(ra,¯α], where the parameter ¯αis defined as
¯α= min
i,j∈I,i̸=jd(Oi,Oj)/2. (44)
Proof. See Appendix L.
The workspace that satisfies the conditions (commonly used
in the literature) in Proposition 1, also satisfies Assumptions
1 and 2. Notice that, since the internal obstacles are convex,
if one chooses α∈(0,¯α], which is used in (17), where ¯α
is defined in (44), then the shapes of the internal convex ob-
stacles remains unchanged in the modified obstacle-occupied13
workspace. Hence, for any α∈(ra,¯α], the set of locations that
do not belong to the modified set Vraalways belongs inside
theα−neighbourhood of the workspace obstacle O0i.e., the
setWra\ Vra⊂ D α(O0).
However, as the workspace is convex, if the robot is
initialized in the move-to-target mode, in the set Wra\ Vra,
it will initially move straight towards the target and enter the
setVra. Then, according to Lemma 8, the robot will continue
to move inside the set Vraand according to Theorem 1, will
asymptotically converge to the target location.
Next, we provide procedural steps to implement the pro-
posed hybrid feedback controller (23) for safe autonomous
navigation in a priori known and a priori unknown environ-
ments.
VII. S ENSOR -BASED IMPLEMENTATION PROCEDURE
We choose the origin as the target location. We initialize the
center of the robot in the interior of the set Wraand assume
that the value of parameter α, defined in Lemma 5, is a priori
known. The robot is initialized in the move-to-target mode
i.e.,m(0,0) = 0 , as stated in Theorem 1, and the hit point
is initialized at the initial location of the robot. We choose
ϵ∈(0,¯ϵ],where ¯ϵis selected as per Lemma 7. The obstacles
can have arbitrary shapes and can be in close proximity with
each other as long as Assumptions 1 and 2 are satisfied.
Notice that the robot can have multiple closest points in the
proximity of non-convex obstacles, in which case, the obstacle
avoidance term v(x, m), defined in (24), is not viable, since it
requires a unique closest point. Moreover, in an unknown en-
vironment, the modified obstacle-occupied workspace cannot
be obtained in advance. Therefore, motivated by the method
described in Remark 4, a virtual ring ∂Bvr(c)is constructed
whenever the robot enters the obstacle-avoidance mode, as
described in Section VII-A. One should ensure that the robot’s
body is always enclosed by the ring, that the ring does not
intersect with the interior of the obstacle-occupied workspace
OW, and that the ring moves along with the robot in the
obstacle-avoidance mode. Using this ring, the robot can then
anticipate the possibility of multiple projections of its center
onto the nearest obstacle and locally modify it to ensure that
the projection of its center onto the modified obstacle is always
unique, as discussed later in Section VII-B.
Note that if the robot is initialized on the boundary of the
setOWsuch that its center has multiple closest points on OW,
then one cannot construct a virtual ring with a radius greater
thanrathat not only encloses the robot’s body but also does
not intersect with the interior of the set OW. Consequently,
one should initialize the robot in the interior of the obstacle-
free workspace.
For safe navigation in a priori unknown environments,
we assume that the robot is equipped with a range-bearing
sensor with angular scanning range of 360◦and sensing radius
Rs>2α.Similar to [22] and [9], the range-bearing sensor
is modeled using a polar curve rg(x, θ) :Wra×[−π, π]→[0, Rs],which is defined as
rg(x, θ) = min

Rs, min
y∈∂OW
atan2v (y−x) =θ∥x−y∥

.(45)
where atan2v (q) = atan2 (q2, q1),q= [q1, q2]⊺. The notation
rg(x, θ)represents the distance between the center of the robot
xand the boundary of the unsafe region ∂OW, measured
by the sensor, in the direction defined by the angle θ.Given
the location x,along with the bearing angle θ, the mapping
λ(x, θ) :Wra×[−π, π]→ W 0,which is given by
λ(x, θ) =x+rg(x, θ)[cos( θ),sin(θ)]⊺, (46)
evaluates the Cartesian coordinates of the detected point.
Using (45) and (46), the distance between the center of the
robot x∈ W raand the unsafe region OWi.e.,d(x,OW)is
calculated as follows:
d(x,OW) =rg(x, θ), (47)
where θ∈Θ. The set Θ, which is defined as
Θ =(
θp∈[−π, π]θp=arg min
θ∈[−π,π]rg(x, θ))
, (48)
contains bearing angles such that the range measurement (45)
in the directions defined by these bearing angles gives the
smallest value when compared to the values obtained in any
other directions. Then, the set of projections of the location x
onto the unsafe regions i.e.,PJ(x,OW)is given by
PJ(x,OW) ={λ(x, θ)|∀θ∈Θ}. (49)
For a given location of the robot x, the set ∂O, which is
defined as
∂O={λ(x, θ), θ∈[−π, π]|rg(x, θ)< R s}, (50)
contains the locations in the sensing region that belong to the
boundary of the unsafe region. The robot moving straight to-
wards the target will collide with the obstacles if the following
condition holds true:
∂O ∩□(x,0)̸=∅, (51)
where the notation □(x,0)represents a rectangle, as shown
in Fig. 13, with its vertices located at x1,x−1,01and0−1,
which are evaluated asxz
0z
=x
0
+zraI
Icosθd
sinθd
, z∈ {− 1,1}, (52)
where Iis a2×2identity matrix, and θd=π/2 +atan2v (x)
The robot moving in the move-to-target mode can infer the
possibility of a collision with the unsafe region by verifying
the condition in (51). Next, we provide a procedure, summa-
rized in Algorithm 2, which allows robot to identify whether
the state (x,h, m)belongs to the jump set or not.14
𝟎 
Rs 
𝐱−𝟏 
𝐱𝟏 
𝒪𝒾 
𝜃𝑑 
∂𝒪 
 𝐱,𝟎  
𝐱 
𝑟𝑎 
𝟎−𝟏 
𝟎 
Fig. 13: Construction of the rectangle □(x,0)based on the
location of the robot and the target location at the origin.
A. Switching to the obstacle-avoidance mode
Since the robot is initialized in the move-to-target mode,
it will initially move towards the target, under the influence
of the stabilizing control vector −κsx, κs>0.Suppose,
there exists an obstacle such that the line segment Ls(x,0)
intersects with the landing region i.e. ,Ls(x,0)∩ R l̸=∅.
This can be identified by evaluating the inner product between
the vectors xandx−Π(x,OW), according to (26) and
(49), and by verifying the condition given in (51). Eventually,
the robot moving straight towards the target will enter the
β−neighbourhood of the obstacle-occupied workspace, where
β∈(ra, α),i.e.,d(x,OW) =βsuch that one of the following
two cases holds:
Case A: there is a unique projection of the robot’s
center onto the obstacle-occupied workspace i.e.,
card (PJ(x,OW)) =1.
Case B: there are more than one projections of the
robot’s center onto the obstacle-occupied workspace i.e.,
card (PJ(x,OW))>1, and−x∈ CH (x,PJ(x,OW)).
First, we consider case A. Since Ls(x,0)∩ R l̸=∅, the
robot has to switch to the obstacle-avoidance mode. However,
before that, it needs to construct a virtual ring ∂Bvr(c)to
locally modify the set OWto ensure the uniqueness of the
projection of its center onto the unsafe region. We locate the
center of the virtual ring ∂Bvr(c)i.e.,cusing the following
formula:
c= Π(x,OW) + (ra+γ)x−Π(x,OW)
∥x−Π(x,OW)∥, (53)
where γ∈(β−ra, α−ra)such that card (PJ(c,OW)) = 1
andΠ(c,OW) = Π( x,OW). Then, the radius vrof the virtual
ring∂Bvr(c)is set to ra+γ. The robot then sets γs=β−ra,
and enters in the obstacle-avoidance mode i.e., switches mto
+1or−1. At this instance, we assign the current location as
thehit point h, as per (40). Case A is illustrated in Fig. 14a.
Now, we consider case B. We set cto be the current
location of the robot’s center i.e.,c=x, and vr=β.
Since the robot has multiple projections on the set OW,
it indicates the presence of a non-convex obstacle in its
immediate neighbourhood, as shown in Fig. 14b. Hence, to
ensure the uniqueness of the projection of the center of the
robot onto the unsafe region, we augment the boundary of the
obstacle-occupied workspace with a curve Y, which is defined
as
Y=∂Bvr(c)∩ CH (c,PJ(c,OW)). (54)
𝑟𝑎 
𝛽 
𝐱 
𝑟𝑎 
𝛽=𝑣𝑟 
𝐱=𝐜 
𝟎 
(a) 
(b) 
𝟎 
𝒪j 
𝒪𝒾 
𝒞ℋ 𝐜,𝒫𝒥 𝐜,𝒪𝒲   
𝒴 
𝑣𝑟 
𝛼 
𝐜 
𝜕ℬ𝑣𝑟 𝐜  
𝜕ℬ𝑣𝑟 𝐜  Fig. 14: Illustration of two possible situations that can occur
when the robot, operating in the move-to-target mode, enters in
theβ−neighborhood of the obstacle-occupied workspace OW,
where β∈(ra, α). (a) Situation when card (PJ(x,OW)) =
1. (b) Situation when card (PJ(x,OW))>1.
The curve Yis the section of the virtual ring ∂Bvr(c)that
belongs to the conic hull CH(c,PJ(c,OW)).Notice that the
curve Ybelongs to the boundary of the modified obstacle
M(OW, vr), as per Remark 4. We treat this curve as a part
of the boundary of the unsafe region i.e.,∂OW←∂OW∪Y.
The robot has not yet switched to the obstacle-avoidance
mode, and is moving straight towards the target inside the
previously constructed virtual ring ∂Bvr(c), along the line seg-
mentLs(c,0). Since Bra(x)⊂ Bvr(c),after moving straight
towards the target, the robot will have unique projection on
the curve Yand hence on the unsafe region OW. Then the
robot will switch to the obstacle-avoidance mode, according
to case A.
B. Moving in the obstacle-avoidance mode
We use a virtual ring ∂Bvr(c)to ensure a unique projection
in the obstacle-avoidance mode. This ring anticipates multiple
projections and enables local modification of the obstacle-
occupied workspace to maintain uniqueness of the projection
of the robot’s center.
Note that when the robot switches from the move-to-target
mode to the obstacle-avoidance mode, it is enclosed by the
virtual ring i.e.,Bra(x)⊂ B vr(c).Hence, if the virtual ring
∂Bvr(c)touches the obstacle-occupied workspace OWat only
one location i.e.,card (PJ(c,OW)) = 1 , then Π(x,OW) =
Π(c,OW).Then, the robot can successfully implement the
rotational control vector v(x, m). To ensure that the robot’s
body is always enclosed by the virtual ring, we update the
location of the center cas follows:
c= Π(x,OW) +vrx−Π(x,OW)
∥x−Π(x,OW)∥, (55)
where vris defined when the robot switches from the move-
to-target mode to the current obstacle-avoidance mode, as
discussed in Section VII-A.
When the virtual ring touches obstacles at multiple loca-
tions, it indicates the presence of a non-convex obstacle in
the immediate neighbourhood of the robot, as shown in Fig.15
15. In this case, the robot should use the projection of its
center onto the part of the ring that intersects with the conic
hullCH(c,PJ(c,OW))i.e.,onto the set Y, defined in (54),
as the closest point. Note that since Bra(x)⊂ B vr(c),the
projection Π(x,Y), which is used to implement the rotational
control vector v(x, m), is unique.
𝐱 
𝐜 
𝑟𝑎 
𝛾𝑠 
𝒴 
𝒪𝒾 
𝑣𝑟 
𝒞ℋ 𝐜,𝒫𝒥 𝐜,𝒪𝒲   
𝜕ℬ𝑣𝑟 𝐜  
Fig. 15: A scenario in which, for the robot operating in the
obstacle-avoidance mode, the virtual ring ∂Bvr(c)encounters
more than one intersection point with the obstacle-occupied
workspace OWi.e.,card (PJ(c,OW))>1.
C. Switching to the move-to-target mode
When the robot, operating in the obstacle-avoidance mode,
with some m∈ {− 1,1}, reaches the location x, which is ϵ
units closer to the target location than the current hit point h,
and belongs to the exitregion Rm∪Ra, defined in (28), (30)
and (31), it switches to the move-to-target mode by setting
m= 0.
VIII. S IMULATION RESULTS
In this section, we present simulation results for a robot
navigating in a priori unknown environments. In simulations
discussed below, the robot is assumed to be equipped with a
range-bearing sensor ( e.g.LiDAR) with an angular scanning
range of 360◦and sensing radius Rs= 3m. The angular
resolution of the sensor is chosen to be 1◦. The simulations
are performed in MATLAB 2020a.
In the first simulation scenario, we consider an unbounded
workspace i.e.,O0=∅, with 3non-convex obstacles, as shown
in Fig. 16. The robot with radius r= 0.3mis initialized at
[−16,4]⊺. The target is located at the origin. The minimum
safety distance rs= 0.1m. The parameter α= 0.8mis known
a priori , as per Lemma 5. We set the gain values κsandκr,
used in (23), to be 0.5and2, respectively. The parameter
ϵ, which is essential for the design of the jump set of the
obstacle-avoidance mode as given in (34) and (35), is set to
be0.1m.
The robot’s motion in the move-to-target mode is repre-
sented by the blue-coloured curves, whereas the red-coloured
curves depict its motion in the obstacle-avoidance mode. The
locations h1toh6are the hit points where the robot switches
from the move-to-target mode to the obstacle-avoidance mode.
Notice that the location of each hit point is closer to the
target location than the previous one, which ensures globalAlgorithm 1 General implementation of the proposed hybrid
control law (23).
1:Settarget location at the origin 0.
2:Initialize x(0,0)∈ W ra,h(0,0) =x(0,0)andm(0,0) =
0. Choose ¯ϵaccording to Lemma 7, and initialize ϵ∈
(0,¯ϵ].Select α > 0according to Lemma 5, and choose
β∈(ra, α).
3:Measure x.
4:ifm= 0,then
5: Implement Algorithm 2.
6: ifξ∈ J0,then
7: Update (h, m)←L(x,h, m)using (40).
8: end if
9:end if
10:ifm∈ {− 1,1},then
11: Implement Algorithm 2.
12: ifξ∈ Jm,then
13: Update (h, m)←L(x,h, m)using (41).
14: end if
15:end if
16:ifm∈ {− 1,1},then
17: Measure Π(x,OW)using (49).
18: Locate cusing (55).
19: ifcard (PJ(c,OW))>1,then
20: Construct Yusing (54).
21: Assign ∂OW←∂OW∪ Y.
22: end if
23:end if
24:Execute u(x,h, m)(23), used in (42).
25:Go to step 3.
convergence of the robot to the target location, as stated in
Theorem 1. Since the robot moves parallel to the bound-
ary of the unsafe region in the obstacle-avoidance mode, it
maintains a safe distance from the unsafe region, as shown
in Fig. 17. To avoid multiple projections onto the unsafe
region, while operating in the obstacle-avoidance mode, the
robot constructs a virtual ring, as explained in Section VII,
and moves along its boundaries around the obstacles O1
andO2. The complete simulation video can be found at
https://youtu.be/tRRUQNjLtGU.
Fig. 16: Trajectory of a robot, initialized at x0, safely con-
verging to the target location at the origin.
In the next simulation scenario, as shown in Fig. 18, we
consider an environment consisting of arbitrarily-shaped ob-
stacles (possibly non-convex), and apply the proposed hybrid16
Algorithm 2 Sensor-based identification of the jump set.
1:Measure d(x,OW)(47), and PJ(x,OW)(49).
2:ifm= 0,then
3: ifd(x,OW)≤βthen
4: ifcard (PJ(x,OW)) = 1 ,then
5: ifx⊺(x−Π(x,OW))≥0,then
6: Identify ∂Ousing (51).
7: Construct □(x,0)using (52).
8: if∂O ∩□(x,0)̸=∅then
9: ξ∈ J0.
10: Setγs=β−ra.
11: Choose γ∈(γs, α−ra).
12: Setvr=ra+γ.
13: Locate cusing (53).
14: end if
15: end if
16: else
17: if−x∈ CH (x,PJ(x,OW)),then
18: Setc=xandvr=β.
19: Construct Yusing (54).
20: Assign ∂OW←∂OW∪ Y.
21: end if
22: end if
23: end if
24:end if
25:ifm∈ {− 1,1}then
26: ifd(x,OW)< ra+α,then
27: ifx∈ R m∪Ra, defined in (28), (30) and (31), then
28: if∥x∥ ≤ ∥h∥ −ϵ,then
29: ξ∈ Jm.
30: end if
31: end if
32: else
33: ξ∈ Jm.
34: end if
35:end if
controller (23) for a point robot navigation initialized at 10
different locations in the obstacle-free workspace. The target is
located at the origin. The minimum safety distance rs= 0.1m
and the parameter α= 0.5m. We set the gains κsandκr, used
in (23a), to be 0.25 and 2, respectively. The parameter ϵis set
to be 0.05m.
Since the environment is a priori unknown and contains
non-convex obstacles, the robot maintains the same direction
of motion when it moves in the obstacle-avoidance mode
to avoid retracing the previously travelled path, as discussed
in remark 5. This does not necessarily result in the robot
trajectories with the shortest lengths. The complete simulation
video can be found at https://youtu.be/OtHt-oQPg68.
Next, we consider an environment with unsafe region OW,
consisting of 2non-convex obstacles O1andO2, that does
not satisfy Assumption 2, as shown in Fig. 19. The robot with
radius r= 0.3mis initialized at [−6,3]⊺. The target is located
at the origin. The minimum safety distance rs= 0.1m. The
parameter α= 1mis known a priori , as per Lemma 5. We
set the gain values κsandκr, used in (23), to be 0.5 and 2,
Fig. 17: Distance of the robot’s center from the boundary of the
obstacle-occupied workspace for the simulation results shown
in Fig. 16.
Fig. 18: Robot trajectories starting from different locations.
respectively. The parameter ϵ, used in (35), is set to be 0.1m.
Notice that even though the distance between the obstacles
O1andO2is less than 2α, the modified set OM
W, obtained
using (17), is not connected. However, using the virtual ring
construction mentioned in Section VII-B, the robot maintains
the uniqueness of its projection and moves safely across the
gap in the obstacle-avoidance mode, as shown in Fig. 19. The
complete simulation video can be found at https://youtu.be/
T4xzo01 mkc.
Fig. 19: Robot safely navigating towards the target (red dot)
in an environment that does not satisfy Assumption 2.17
A. Gazebo simulation
The next simulation is performed using the Turtlebot3
Burger model in Gazebo. The simulation runs on a com-
puter, equipped with 4 GB RAM, running Ubuntu 20.04 with
the ROS Noetic distribution installed, which we refer to as
Computer 1 . The proposed hybrid controller is run in Matlab
R2020a on another computer running Windows 10, equipped
with an Intel(R) i5-5200U CPU with a clock speed of 2.20
GHz and 12 GB RAM, referred to as Computer 2 .
The Turtlebot is equipped with a two-dimensional LiDAR
scanner with a sensing range of 1m. The angular scanning
range and angular resolution are set to 360 degrees and 1
degree, respectively. The sensor measurements are assumed to
be affected by Gaussian noise with zero mean and a standard
deviation of 0.01 m. The maximum bounds on the linear
velocity and angular velocity, denoted as νmax andωmax
respectively, are set to 0.15 m/s and 2.84 rad/s. The LiDAR
scanning rate is set to 5 Hz.
At each iteration, the LiDAR measurements and pose infor-
mation are sent from Computer 1 toComputer 2 . The control
commands are then sent from Computer 2 toComputer 1 . The
execution time of the proposed hybrid controller is approxi-
mately 5 ms. The sensor-based implementation of the proposed
hybrid navigation algorithm only requires the measurements
acquired via a range-bearing sensor. Since the size of the
acquired sensor data is independent of the surrounding envi-
ronment, the code execution time will remain approximately
the same regardless of changes in the environment.
The Turtlebot can be represented with the following non-
holonomic model:
˙x1=νcosθ,
˙x2=νsinθ,
˙θ=ω,(56)
where x= [x1, x2]⊺is the location of the center of the robot
andθ∈[−π, π)is the heading direction. The scalar control
variables νandωrepresent the linear and angular velocities,
respectively.
In practical applications, due to the discrete implemen-
tation of the control law designed for a point-mass robot,
the nonholonomic Turtlebot (when operating in the obstacle-
avoidance mode) may get very close to the obstacle or exit
theα-neighborhood of the obstacle before getting closer to the
target location than the current hit point . To avoid this situa-
tion, we introduce some minor modifications to the proposed
hybrid control law to ensure that the Turtlebot stays inside
theα-neighborhood of the nearest obstacle when operating in
theobstacle-avoidance mode. We replace the vector v(x, m),
used in (23a), with a modified vector vmod(x, m),which is
defined as
vd(x, m) =λ(ϱ(x)) m(1−λ(ϱ(x))2)
−m(1−λ(ϱ(x))2) λ(ϱ(x))
f(x, m),
(57)
where the vector-valued function f(x, m)is given by
f(x, m) =x−Π(x,OM
W)
∥x−Π(x,OM
W)∥. (58)The scalar-valued function λ(ϱ(x))is evaluated as
λ(ϱ(x)) =

0.25η−ϱ(x)
0.25η,0≤ϱ(x)≤0.25η,
0, 0.25η≤ϱ(x)≤0.75η,
0.75η−ϱ(x)
0.25η,0.75η≤ϱ(x)≤η,(59)
where η=α−raandϱ(x) =d(x,OM
W)−ra. The continuous
scalar-valued function λ(ϱ(x))∈[−1,1], for all ϱ(x)∈[0, η].
Notice that when λ(ϱ(x)) = 0 , the vector vd(x, m)equals
to the vector v(x, m), used in (23a). When the Turtlebot, while
operating in the obstacle-avoidance mode, moves closer to the
boundary of the modified obstacle-occupied workspace i.e.,
ϱ(x)→0,λ(ϱ(x))→1. As a result, the vector vd(x, m)→
f(x, m)and the Turtlebot is steered away from the unsafe
region. On the other hand, if the center of the Turtlebot
moves closer to the boundary of the α−neighbourhood of the
modified obstacles i.e.,ϱ(x)→η, λ(ϱ(x))→ −1. Due to this,
the vector vd(x, m)→ −f(x, m)and the Turtlebot is steered
back inside the α−neighbourhood of the modified obstacles.
Finally, given the modified hybrid control law umod, ob-
tained by replacing v(x, m)byvmod(x, m)in (23a), the linear
velocity νand the angular velocity ωto be applied to the
Turtlebot are obtained as follows:
ν=κνmin
∥umod∥cos2nθ−θd
2
, νmax
, (60)
ω=−κωωmaxsin(θ−θd), (61)
where n >1,κν>0andκω>0. The angle θrepresents the
heading direction of the robot. The desired heading direction
is denoted by θd, which is evaluated as θd=atan2v (umod).
The expression1+cos( θ−θd)
2in (60) reduces the linear velocity
of the Turtlebot based on the disparity between its current
heading direction θand the desired heading direction θd.
We set the gains κs,κr, used in (23a), and κν,κω, used in
(60) and (61), to 1. The minimum safety distance rs= 0.03
m and the parameter α= 0.3m. Additionally, the parameter
ϵ, used in (35), is set to 0.15 m. The target location is set
to the origin, represented by the light green dot, as shown
in Fig. 20. In Fig. 20a, the left figure shows the workspace
setup in Gazebo with the initial location of the Turtlebot,
and the right figure shows the LiDAR sensor measurements.
The desired heading direction is denoted by the blue arrow,
while the red arrow represents the current heading direction
of the Turtlebot. The Turtlebot and the target location are
connected via a dotted red line. When the Turtlebot moves
straight towards the target location, it eventually enters the
α−neighbourhood of the unsafe region and switches to the
obstacle-avoidance mode. In the obstacle-avoidance mode, it
constructs a virtual ring represented using the red dotted circle,
as shown in Fig. 20b. When the nearby obstacle workspace is
convex in nature, the projection of the center of the Turtlebot
onto this workspace matches the intersection point between the
virtual ring and the nearby obstacle, which is represented by
the magenta-coloured dot. In Fig. 20b, the blue-dotted curve
is a partial boundary of the circle with its center at the origin
and a radius of ∥h∥−ϵ, where his the current location of the
hit point . According to (34), (35) and (39), the Turtlebot can
switch back to the move-to-target mode only if it is inside this18
t = 0 sec
t = 30 sec
t = 64 sec
t = 192 sec(a)
(b)
(c)
(d)
Fig. 20: Autonomous navigation of the Turtlebot in non-
convex environment.
circle. When the nearby unsafe region is non-convex in nature,
the virtual ring, which is larger in size compared to the robot’s
body, will have multiple intersections with the obstacles, as
shown in Fig. 20c. This prompts the Turtlebot to project on the
boundary of the virtual ring instead of the obstacle-occupied
workspace to maintain the uniqueness of the projection. In
other words, boundary of the virtual ring acts as the boundary
of the modified obstacle, as discussed in Remark 4. Finally,
in Fig. 20d we can see the Turtlebot approaching towards the
target location at the origin. The complete simulation video
can be found at https://youtu.be/ZNeiS5qE00k.IX. C ONCLUSION
We proposed a hybrid feedback controller for safe au-
tonomous navigation in two-dimensional environments with
arbitrary-shaped obstacles (possibly non-convex). The obsta-
cles can have non-smooth boundaries and large sizes and can
be placed arbitrarily close to each other provided the feasibility
requirements stated in Assumptions 1 and 2 are satisfied. The
proposed hybrid controller, endowed with global asymptotic
stability guarantees, relies on an instrumental transformation
that virtually modifies the obstacles’ shapes such that the
uniqueness of the projection of the robot’s center onto the
closest obstacle is guaranteed - a feature that helps in the
design of our obstacle-avoidance strategy. The obstacle avoid-
ance component of the control law (24) utilizes the projection
of the robot’s center onto the nearest obstacle. Hence, it is
possible to apply the proposed hybrid control scheme in a
priori unknown environments, as discussed in Section VII.
It should be noted that the trajectories generated by our
algorithm may not necessarily correspond to the shortest paths
between the initial and final configurations, as shown in Fig.
18. Moreover, when the robot switches between the modes,
the control input vector (23a) changes value discontinuously.
Designing a smooth feedback control law that generates robot
trajectories with the shortest lengths would be an interesting
extension of the present work. Other interesting extensions
consist in considering robots with second-order dynamics and
three-dimensional environments with non-convex obstacles.
APPENDIX
A. Hybrid basic conditions
Lemma 9. The hybrid closed-loop system (42) with the data
(F,F,J,J)satisfies the hybrid basic conditions stated in [28,
Assumption 6.5].
Proof. The flow set Fand the jump set J, defined in (38)
and (39) are closed subsets of R2×R2×R. The flow
mapF, given in (42), is continuous on F0. For each x∈
Nβ(Dra(OM
W)), β∈[ra, α),according to Lemma 3, the set
PJ(x,OM
W)is a singleton. Then, for x∈ N β(Dra(OM
W)), β∈
[ra, α),Π(x,OM
W)is continuous with respect to x.As a
result, Fis continuous on Fm, m∈ {− 1,1}. Hence Fis
continuous on F.The jump map J, defined in (42), is single-
valued on Jm, m∈ {− 1,1}(41). Also, Jhas a closed graph
relative to J0(39), as it is allowed to be set-valued whenever
x∈ J 0.Hence, according to [28, Lemma 5.10], Jis outer
semi-continuous and locally bounded relative to J.
B. Proof of Lemma 1
This proof is by contradiction. Let us assume that there
exists x∈Rn\ A such that d(x,A) =β, where β∈(0, α).
We further assume that d(x,G) =ηand the set PJ(x,G)is
not a singleton, where the closed set G= (A ⊕ B◦
α(0))c.
Since we have reach (A)≥α, the set PJ(x,A)is a
singleton. As a result, according to [26, Lemma 4.5], it fol-
lows thatx−Π(x,A)
∥x−Π(x,A)∥∈NA(Π(x,A)), where NA(Π(x,A))
denotes the normal cone to the set Aat the point Π(x,A).Fur-
thermore, according to [26, Lemma 4.5], for q= Π(x,A) +19
αx−Π(x,A)
∥x−Π(x,A)∥, the open Euclidean ball B◦
α(q)does not inter-
sect with the set Ai.e.,B◦
α(q)∩A=∅.Hence, as the set ∂G
contains all points in Rnthat are exactly at αdistance away
from the set A, one can conclude that q∈∂G∩L(x,Π(x,A)).
Now, we consider two cases depending on the location of the
pointqon the line L(x,Π(x,A))as follows:
Case 1: when d(q,Π(x,A)) = α≥β+η. Since α≥
β+η, one has Bη(x)⊂ Bα(Π(x,A))⊂ D α(A). Additionally,
ascard (PJ(x, ∂G))>1, there exist p1∈ G andp2∈ G
such that {p1,p2} ⊂∂Bη(x)∩∂G. Hence, there should be
at least two points of contact between the sets ∂Bη(x)and
∂Bα(Π(x,A)). Since α≥β+η, the Euclidean ball Bη(x)can
only touch the boundary of the Euclidean ball Bα(Π(x,A))
at no more that one point, resulting in a contradiction.
Case 2: when d(q,Π(x,A)) =α∈(β, β+η). Since q∈
∂G ∩ L (x,Π(x,A))andα∈(β, β+η), one has q∈ B◦
η(x).
This implies that d(x,G)< η, which is a contradiction.
C. Proof of Lemma 2
The cases where β= 0 andβ=αare trivial. We analyze
the case where β∈(0, α). This proof is by contradiction. Let
us assume that there exists xsuch that d(x,A) =η, where
η∈(β, α), and the set PJ(x,Dβ(A))is not a singleton.
Therefore, there exist at least two distinct points p1andp2
such that p1,p2⊂∂Dβ(A)∩ PJ (x,Dβ(A)).
Since reach (A)≥α, the points p1andp2, which belong
to the set ∂Dβ(A), have unique projection on the set Aand
d(p1,Π(p1,A)) = d(p2,Π(p2,A)) = β. Moreover, as x∈
∂Dη(A), one has d(x,p1) =d(x,p2) =η−β, and d(x,A) =
η. Therefore, one has d(x,Π(p1,A)) = d(x,Π(p2,A)) =
η.As a result, Π(p1,A)andΠ(p2,A)belong to the set
PJ(x,A).Since η∈(0, α)andreach (A)≥α, it is clear
thatcard (PJ(x,A)) = 1 . Hence, Π(p1,A) = Π( p2,A) =
Π(x,A).This, by the application of triangular inequality,
implies that p1=p2, which is a contradiction.
D. Proof of Lemma 3
Note that the following statement: “for all locations xwith
d(x,OM
W)< α, where α≥0, the set PJ(x,OM
W)is single-
ton”, is equivalent to having reach (OM
W)≥α,as defined in
Section II-C. According to Remark 2, OM
W=M(OW, α) =
(Wα⊕ B◦
α(0))c, where the closed set Wαis defined as per
(15) for some α≥0. If one proves that reach (Wα)≥α,
then, according to Lemma 1, one has reach (OM
W)≥α. To
that end, we make use of [26, Proposition 4.14] to show that
Assumption 2 implies that reach (Wα)≥α.
We know that for x∈ W◦
α,TWα(x) =R2, where TWα(x)
denotes the tangent cone to the set Wαatx. Therefore, for
allp∈ W α, one has p−x∈TWα(x). This implies that for
allx∈ W◦
αand for all p∈ W α,d(p−x,TWα(x)) = 0 .
Next, we consider the case where x∈∂Wαandp∈ W α.
Ifp−x∈TWα(x), then d(p−x,TWα(x)) = 0 .On the
other hand, when p−x/∈TWα(x), we define T(x,p) :=
{t∈TWα(x)|t= arg min
q∈TWα(x)\{0}|ψ(p−x,q)|}as the set
of all non-zero tangent vectors t∈TWα(x)such that the
absolute value of the angle measured from p−xtotis thesmallest. Since Wα=W \ D α(O◦
W), for all x∈∂Wα, the
setNWα(x)\ {0}is not empty, where NWα(x)represents
the normal cone to the set Wαatx. Therefore, there exists
n∈NWα(x)such that ∥n∥= 1 andn⊤t= 0 for some
t∈ T(x,p).
Now, one can construct the ball Bβ(x+βn)for some β >0
such that p∈∂Bβ(x+βn), as shown in Fig. 21. It is clear that
β≥α, otherwise, it will imply that p∈ B◦
α(x+αn), which
does not satisfy Assumption 2. Therefore, it can be shown that
d(p−x,TWα(x)) =∥p−x∥2/2β≤ ∥p−x∥2/2αfor any
x,p∈ W α. Hence, according to [26, Proposition 4.14], one
can conclude that reach (Wα)≥α.
𝐍𝒲α 𝐱  
𝐓𝒲α 𝐱  
𝐱 
𝐱+𝛽𝐧 
𝐩 
𝛽 
𝐧 
𝒲𝛼 
𝐭 
Fig. 21: Illustration of the case where x∈∂Wαandp∈ W α
such that p−x/∈TWα(x).
E. Proof of Lemma 4
Let us assume that the modified obstacle OM
i,αis not a con-
nected set, then it implies that there exists two disjoint subsets
M1⊂ OM
i,αandM2⊂ OM
i,αsuch that M1∪M 2=OM
i,αand
M1∩M 2=∅,[24, Definition 16.1]. By construction in (17),
there exists two non-empty set OC⊂ O i,αandOD⊂ O i,α
such that OC⊂ M 1,OD⊂ M 2andOC∪ OD=Oi,α. Note
that, the distance d(M1,M2)can not be greater than or equal
to2α.Otherwise, as the operator Mis extensive, see Remark
1, it implies that d(OC,OD)≥2α.However, according to
(20), one has d(OC,OD)<2α. Hence, one can conclude that
0< d(M1,M2)<2α.Therefore, there exists q1∈ M 1and
q2∈ M 2such that 0< d(q1,q2) =d(M2,M2)<2α.
This implies that for q= 0.5q1+ 0.5q2∈ D α(OM
i,α), one
hascard (PJ(q,OM
i,α))>1, which cannot be the case as per
Lemma 3. Hence, the modified obstacle OM
i,αis a connected
set.
F . Proof of Lemma 5
According to Assumption 1, the set W◦
rais a pathwise
connected set. Hence, it is evident that there exist a scalar
¯δ1> rasuch that for all δ∈(ra,¯δ1]theδeroded obstacle-free
workspace Wδis pathwise connected. Assumption 1, which
assumes that the target location at the origin is in the set W◦
ra,
implies that d(0,Wra)>0. Therefore, it is straight forward to
notice that there exists ¯δ2> rasuch that for any δ∈(ra,¯δ2]
the distance d(0,Wδ)< δ−ra.As a result, one can choose
¯α= min {¯δ1,¯δ2}to satisfy Lemma 5.
G. Proof of Lemma 6
Since the obstacle reshaping operator Misidempotent , we
haveM(OW, α) =M(OM
W, α). Therefore, according to (17),20
OW⊕ B◦
α(0) =OM
W⊕ B◦
α(0). As a result, according to
(15) and (16), the α−eroded obstacle-free workspace Wαis
equivalent to the α−eroded modified obstacle-free workspace
Vα. Hence, if one chooses αas per Lemma 5, then the set
Vαis pathwise connected. As a result, the modified obstacle-
free workspace Vrais also pathwise connected. Moreover,
according to Lemma 5, the distance between the origin and the
setVαis less than α−ra. Since the distance between the sets
∂Vαand∂Vraisα−ra, it is evident that the origin belongs
to the interior of the modified obstacle-free workspace Vra.
H. Proof of Lemma 7
We consider a connected modified obstacle OM
i,α, i∈I, as
stated in Lemma 4, and proceed by proving the following two
claims:
Claim 1: For every h∈ JW
0∩∂Dβ(OM
i,α), β∈[ra, ra+γs]
and any p∈ PJ (0, ∂Dβ(OM
i,α)), one has d(h,B2δ(p))≥ϵh,
where
ϵh=q 
d(0,OM
W)2−r2a
−d(0,Dra(OM
W)),
andδ= min {d(0,OM
W)−ra, β−ra}.
Claim 2: Form∈ {− 1,1}, the set Hp:=Bδ(p)∩
Nγ(Dra(OM
i,α))⊂ R a,where the location pand the scalar
parameter δare defined in claim 1 above.
Claim 1 states that for any connected modified obstacle
OM
i,α, the distance between any point h, which is located in
the jump set of the move-to-target mode associated with this
modified obstacle at some distance β∈[ra, ra+γs]from it
i.e.,h∈ JW
0∩∂Dβ(OM
i,α), β∈[ra, ra+γs], and the Euclidean
balls of radius 2δcentered at the set of projections of the target
onto the set ∂Dβ(OM
i,α)is always greater than or equal to ϵh
i.e.,d(h,B2δ(p))≥ϵh,where p∈ PJ (0,Dβ(OM
i,α))and
δ= min {β−ra, d(0,OM
i,α)−ra}.
Claim 2 states that the set Hp, which represents the in-
tersection between the δ-neighbourhood of the set of projec-
tions of the target onto the set ∂Dβ(OM
i,α)i.e.,Bδ(p),p∈
PJ(0,Dβ(OM
i,α))and the γ−neighbourhood of the dilated
modified obstacle i.e.,Nγ(Dra(OM
i,α))is subset of the always
exit region Ra(28). This implies that if ¯ϵ∈(0, ϵh], then
Hp⊂ ERh
m, where the set ERh
mis defined in (35).
1) Proof of claim 1: We aim to obtain an expression for
∥hβ∥ − ∥pβ∥, forβ∈[ra, ra+γs], where
hβ= argmin
h∈JW
0∩∂Dβ(OM
i,α)∥h∥, (62)
and the location pβ∈ PJ (0, ∂Dβ(OM
i,α)).
Now, depending on the shape of the obstacle there can be
two possibilities as follows:
Case A: When hβ∈∂Dβ(OM
i,α)∩ CH (0,OM
i,α),as shown
in Fig. 22. Notice that the line segment joining the location
hβand the origin passes through the modified obstacle OM
i,α
i.e.,Ls(hβ,0)∩ OM
i,α̸=∅. Hence, a part of this line segment
belongs to the modified obstacle OM
i,α. In other words, there
exist locations bande, where b,e∈∂OM
i,α, such that
Ls(b,e)⊂ Ls(hβ,0)∩OM
i,α, as shown in Fig. 22. We further
consider two more sub-cases based on the distance betweenthe target 0and the modified obstacle OM
i,α. Note that, as per
Assumption 1, d(0,OM
i,α)> ra.
Case A1: When d(0,OM
i,α)≥β,as shown in Fig. 22a, one
has∥hβ∥ − ∥pβ∥ ≥ ∥hβ∥ − ∥e∥+∥b∥ − ∥pβ∥.
Since hβ∈∂Dβ(OM
i,α),{b,e} ⊂∂OM
i,αandd(0,OM
i,α)≥
β, one has ∥hβ∥ − ∥e∥ ≥βand∥b∥ ≥β+∥pβ∥.Hence,
∥hβ∥ − ∥pβ∥ ≥2β= 2(β−ra) + 2ra,
d(hβ,B2(β−ra)(pβ))≥2ra. (63)
Case A2: When ra< d(0,OM
i,α)< β, as shown in Fig.
22b, one has ∥hβ∥ − ∥pβ∥ ≥ ∥hβ∥ − ∥e∥+∥b∥ − ∥pβ∥.
Since hβ∈∂Dβ(OM
i,α),{b,e} ⊂ ∂OM
i,α,ra<
d(0,OM
i,α)< β and by construction, as shown in Fig. 22b,
one has ∥hβ∥−∥e∥ ≥βand∥b∥ ≥β−∥pβ∥=ra+∥pra∥.
Hence, as ∥pra∥=d(0,Dra(OM
i,α)), one has
∥hβ∥ − ∥pβ∥ ≥2β−2∥pβ∥= 2∥pra∥+ 2ra,
d(hβ,B2d(0,Dra(OM
i,α))(pβ))>2ra. (64)
Case B: When hβ∈ G , where the set G:= 
∂Dβ(OM
i,α)∩ CH (0,Dra(OM
i,α))
\ CH (0,OM
i,α). In other
words, when the line segment joining the locations hβand the
target at the origin does not intersect with the interior of the
modified obstacle OM
i,αi.e.,Ls(hβ,0)∩(OM
i,α)◦=∅,as shown
in Fig. 22. To proceed with the proof, we use the following fact
which states that the projection of the target location onto the
setGalways belongs to the intersection between the boundary
of the conic hull CH(0,Dra(Dra(OM
i,α)))and the set G.
Fact 2: The set PJ(0,G)⊂ G ∩ ∂CH(0,Dra(OM
i,α)).
Sketch of the proof : The proof is by contradiction. We
assume that there exists a location xin the set PJ(0,G)
that does not belong to the intersection between the set G
and the boundary of the conic hull to the set Dra(OM
i,α)i.e.,
x∈ PJ (0,G)andx/∈ G ∩ ∂CH(0,Dra(OM
i,α)). We know
that the curve Gbelongs to the boundary of the β−dilated
modified obstacle i.e.,G ⊂ ∂Dβ(OM
i,α). As a result, there
exists a partial section of the boundary of the modified obstacle
OM
i,α, let say M ⊂ ∂OM
i,αwithx∈ D β(M)such that this
curveMbelongs to the relative complement of the conic hull
CH(0,OM
i,α)with respect to the conic hull CH(0,Dra(OM
i,α))
i.e.,M ∈ CH (0,Dra(OM
i,α))\ CH (0,OM
i,α). However, by
construction of the set G, the intersection between the modified
obstacle OM
i,αand the region CH(0,Dra(OM
i,α))\CH(0,OM
i,α)
must be an empty set. Therefore, we arrive at a contradiction.
According to Fact 2, hβ∈ G ∩ ∂CH(0,Dra(Dra(OM
i,α))),
as shown in Fig. 23. Similar to case A, we consider two more
sub-cases based on the distance between the target 0and the
modified obstacle OM
i,α.
Case B1: When d(0,OM
i,α)≥β,as shown in Fig 23a, one
has
∥hβ∥ − ∥pβ∥=∥hβ∥ − ∥hra∥+∥hra∥ − ∥pβ∥. (65)
Since hβ∈∂Dβ(OM
i,α)andhra∈∂Dra(OM
i,α), one has
∥hβ∥ − ∥hra∥ ≥β−ra. Leta∈∂OM
i,αbe the location such
that the lines L(a,hra)andL(hra,0)are perpendicular, as
shown in Fig. 22a. Note that, as the line L(hra,0)is tangent21
to the set Dra(OM
i,α)athra, one has d(hra,a) =ra.Hence,
∥hra∥=p
∥a∥2−d(hra,a)2≥q
d(0,OM
i,α)2−r2a.(66)
After substituting (66) in (65), one gets
∥hβ∥ − ∥pβ∥ ≥β−ra+q
d(0,OM
i,α)2−r2a− ∥pβ∥.
Since d(0,OM
i,α)≥β,∥pra∥ − ∥pβ∥=β−ra.Hence, one
has
∥hβ∥ − ∥pβ∥ ≥2(β−ra) +q
d(0,OM
i,α)2−r2a− ∥pra∥,
d(hβ,B2(β−ra)(pβ))≥q
d(0,OM
i,α)2−r2a− ∥pra∥.(67)
Case B2: When ra< d(0,OM
i,α)< β, as shown in Fig.
23b. According to (65), (66) and the fact that ∥hβ∥−∥hra∥ ≥
β−ra, one has
∥hβ∥ − ∥pβ∥ ≥β−ra+q
d(0,OM
i,α)2−r2a− ∥pβ∥,
Since ra< d(0,OM
i,α)< β,∥pβ∥+∥pra∥=β−ra.Hence,
one has
∥hβ∥ − ∥pβ∥ ≥2∥pra∥+q
d(0,OM
i,α)2−r2a− ∥pra∥,
d(hβ,B2∥pra∥(pβ))≥q
d(0,OM
i,α)2−r2a− ∥pra∥.(68)
Now, considering all the obstacles i.e., for all i∈I,
according to (63), (64), (67) and (68), one has
d(hβ,B2δ(pβ))≥ϵh, (69)
where δ= min
β−ra,min
i∈I{d(0,OM
i,α)−ra}
= min {β−
ra, d(0,OM
W)−ra}andϵhis evaluated as
ϵh= min
2ra,q
d(0,OM
W)2−r2a−d(0,Dra(OM
W))
.
It is clear that for n >0, the function f(k) =√
k2−n2−(k−
n), d∈[n,∞),is monotonically increasing and lim
k→∞f(k) =
n. Hence, according to Assumption 1, as d(0,OM
W)> ra>0,
one hasq 
d(0,OM
W)2−r2a
−d(0,Dra(OM
W))< ra,
irrespective of the locations of obstacles relative to the target
location. As a result,
ϵh= min {2ra,q
d(0,OM
W)2−r2a−d(0,Dra(OM
W))}
=q 
d(0,OM
W)2−r2a
−d(0,Dra(OM
W)).
2) Proof of claim 2: In this proof, our goal is to show
that the set Hp=Bδ(p)∩ N γ(Dra(OM
i,α))belongs to the
always exit region Ra, for any p∈ PJ (0, ∂Dβ(OM
i,α))and
the parameter δ= min {d(0,OM
W)−ra, β−ra}, where β∈
[ra, ra+γs]. Based on the distance of the target location from
the modified obstacle OM
i,α, we consider two cases as follows:
Case 1: When d(0,OM
i,α)≥β, as shown in Fig.
22a and Fig. 23a. Since d(0,OM
i,α)≥β, for any p∈
PJ(0,Dβ(OM
i,α)), one has B∥p∥+δ(0)⊂ Bd(0,Dra(OM
i,α))(0),
where δ= min {β−ra, d(0,OM
i,α)−ra}=β−ra.Hence, for
𝟎  
𝐩𝛽 
𝐩𝑟𝑎 
𝐡𝛽 
𝟎  
𝐩𝛽 
𝐩𝑟𝑎 
𝐡𝛽 
𝑟𝑎 
𝛽  
𝑟𝑎 
𝛽  
𝐞  
𝐞  
𝐛  
𝐛  
 a  
 b  
𝒪𝒾,α𝑀 
𝒪𝒾,α𝑀 Fig. 22: The diagrammatic representation for the Case A in the
proof of Lemma 7. (a) d(0,OM
i,α)≥β, (b)ra< d(0,OM
i,α)<
β.
p∈ PJ (0,Dβ(OM
i,α)), one has Bδ(p)⊂ Bd(0,Dra(OM
i,α))(0).
Moreover, Bd(0,Dra(OM
i,α))(0)∩ 
Dra(OM
i,α)◦=∅. Therefore,
according to (28), one can conclude that Hp⊂ R a.
Case 2: When ra< d(0,OM
i,α)< β , as shown in
Fig. 22b and Fig. 23b. According to Lemmas 2 and 3,
card (PJ(0,Dra(OM
i,α))) = 1 ,i.e.,Π(0,Dra(OM
i,α))is
unique. Since, as per Lemma 2, reach (Dra(OM
i,α))≥α−
ra, according to [26, Lemma 4.5], one has (Bα−ra(q))◦∩
Dra(OM
i,α) = ∅,where q= Π( 0,Dra(OM
i,α)) + ( α−
ra)0−Π(0,Dra(OM
i,α))
∥0−Π(0,Dra(OM
i,α))∥.Now, notice that, for p∈∂Dβ(OM
i,α)∩
Ls(q,Π(0,Dra(OM
i,α))), one has Bδ(p)⊂ B α−ra(q), where
δ= min {β−ra, d(0,OM
i,α)−ra}=d(0,OM
i,α)−ra<
α−ra. Hence, if one shows that p∈ PJ (0, ∂Dβ(OM
i,α))
andcard (PJ(0, ∂Dβ(OM
i,α))) = 1 , then, according to (28),
it is straightforward to notice that Hp⊂ R a, where the set
Hpis defined in claims 1 and 2.
To this end, let us assume that d(0,Dra(OM
i,α)) =η, where
ra< η < β < α. Notice that, 0∈ L(Π(0,Dra(OM
i,α)),q).
Since, p∈ L s(q,Π(0,Dra(OM
i,α)))∩∂Dβ(OM
i,α), one has
d(p,Π(0,Dra(OM
i,α))) = β−ra.Therefore, it is clear that
d(0,p) =β−η.Moreover, according to Lemmas 1 and 3, the
setM:= (OM
i,α⊕Bα(0))chas the reach greater than or equal
toα,i.e.,reach (M)≥α.Now, notice that, for β∈[ra, ra+
γs], ∂Dβ(OM
i,α) = ∂Dα−β(M). Hence, 0∈∂Dα−η(M)
andp∈∂Dα−β(M). Then, according to Lemma 2,
card (PJ(0, ∂Dα−β(M))) = card (PJ(0, ∂Dβ(OM
i,α))) =
1. Moreover, as d(0,p) = β−η,one can conclude that
p∈ PJ (0, ∂Dβ(OM
i,α)).
I. Proof of Lemma 8
First we prove that the union of the flow and jump sets
covers exactly the obstacle-free state space K. For m= 0,
according to (33) and (32), by construction we have FW
0∪
JW
0=Vra.Similarly, for m∈ {− 1,1}, according to (37) and
(34), by construction we have FW
m∪ JW
m=Vra. Inspired by
[32, Appendix 11], the satisfaction of the following equation:
FW
m∪ JW
m=Vra, m∈M, (70)
along with (38) and (39) implies F ∪ J =K.22
𝟎  
𝐩𝛽 
𝐩𝑟𝑎 
𝐡𝛽 
𝑟𝑎 
𝛽  
𝐚  
𝐡𝑟𝑎 
𝐩𝑟𝑎 
𝐩𝛽 
𝟎  
𝐚  
𝐡𝑟𝑎 
𝐡𝛽 
𝒪𝒾,α𝑀 
𝒪𝒾,α𝑀 
𝑟𝑎 
𝛽  
Fig. 23: The diagrammatic representation for the Case B in the
proof of Lemma 7. (a) d(0,OM
i,α)≥β, (b)ra< d(0,OM
i,α)<
β.
Now, inspired by [32, Appendix 1], for the hybrid closed-
loop system (42), with data H= (F,F,J,J),define SH(K)
as the set of all maximal solutions ξtoHwithξ(0,0)∈ K.
SinceF ∪J =K, each ξ∈SH(K)has range rge ξ⊂ K.Ad-
ditionally, if every maximal solution ξ∈SH(K)is complete,
then the set Kwill be forward invariant [33, Definition 3.13].
Since the hybrid closed-loop system (42) satisfies hybrid basic
conditions, as stated in Lemma 9, one can use [28, Proposition
6.10], to verify the following viability condition:
F(x,h, m)∩TF(x,h, m)̸=∅,∀(x,h, m)∈ F \ J ,(71)
which will allow us to establish the completeness of the
solution ξto the hybrid closed-loop system (42). In (71),
TF(x,h, m)represents the tangent cone to the set Fat
(x,h, m), as defined in Section II-E.
Let(x,h, m)∈ F \ J , which implies by (38) and (39)
that(x,h)∈(FW
m\ JW
m)× Vrafor some m∈M. Forx∈
(FW
m)◦\ JW
m, m∈M,TF(ξ) =R2× HP × { 0},where the
setHP is given by
HP=(
R2, ifh∈(Vra)◦,
P≥(0,(h−Π(h,OM
W))),ifh∈∂Vra,(72)
where, according to Lemma 3, for h∈∂Vra, the projection
Π(h,OM
W)is unique. Since, according to (42), ˙h=0,˙h∈
HP and (71) holds,
Form= 0, according to (32) and (33), one has
∂FW
0\ JW
0⊂∂Dra(OM
W)∩ Re, (73)
and according to Lemma 3, for x∈∂FW
0\ JW
0, the set
PJ(x,OM
W)is a singleton i.e., the projection Π(x,OM
W)is
unique. Hence, ∀x∈∂FW
0\ JW
0,
TF(x,h,0) =P≥(0,(x−Π(x,OM
W)))× HP × { 0},(74)
where HP is defined in (72). Also, according to (23a), for
m= 0 ,u(x,h,0) = −κsx, κs>0. According to (27),
u(x,h,0)∈ P≥(0,(x−Π(x,OM
W)))and, according to (42),
˙h=0∈ HP . As a result, viability condition (71) holds for
m= 0.
Form∈ {− 1,1}, according to (37) and (34) one has
∂FW
m\ JW
m⊂∂Dra(OM
W), (75)
and according to Lemma 3, for x∈∂FW
m\ JW
m, m∈{−1,1}, the set PJ(x,OM
W)is a singleton i.e., the projec-
tionΠ(x,OM
W)is unique and the circle B∥x−Π(x,OM
W)∥(x)
intersect with ∂OM
Wonly at the location Π(x,OM
W).Hence,
∀x∈∂FW
m\ JW
m, m∈ {− 1,1},
TF(x,h,0) =P≥(0,(x−Π(x,OM
W)))× HP × { 0},(76)
where HP is defined in (72). Also for m∈ {− 1,1}, according
to (23a), u(x,h, m) =κrv(x, m), κr>0.Since, according
to (24), u(x,h, m)⊺(x−Π(x,OM
W)) = 0 and, according to
(42), ˙h=0∈ HP ,the viability condition in (71) holds true
form∈ {− 1,1}.
Hence, according to [28, Proposition 6.10], since (71) holds
for all ξ∈ F \ J , there exists a nontrivial solution to H
for each initial condition in K. Finite escape time can only
occur through flow. They can neither occur for xin the set
FW
−1∪ FW
1, as this set is bounded as per definition (37), nor
forxin the set FW
0as this would make x⊺xgrow unbounded,
and would contradict the fact thatd
dt(x⊺x)≤0in view of the
definition of u(x,h,0). Therefore, all maximal solutions do
not have finite escape times. Furthermore, according to (42),
x+=x,and from the definition of the update law in (40)
and (41), it follows immediately that J(J)⊂ K . Hence, the
solutions to the hybrid closed-loop system (42) cannot leave K
through jump and, as per [28, Proposition 6.10], all maximal
solutions are complete.
J. Proof of Theorem 1
Forward invariance and stability: The forward invariance
of the obstacle-free set K, for the hybrid closed-loop system
(42), is immediate from Lemma 8. We next prove stability of
Ausing [28, Definition 7.1].
According to Lemma 6, the target location 0∈(Vra)◦. As a
result, there exists µ1>0such that Bµ1(0)∩(Dra(OM
W))◦=
∅.According to (32), there exists µ2>0such that Bµ2(0)∩
JW
0=∅. Additionally, as per (34), there exists µ3>0such
thatBµ3(0)⊂ JW
mform∈ {− 1,1}.We define a set Sµ:=
Bµ(0)×Vra×M,where µ∈(0,min{µ1, µ2, µ3}).As a result,
for all initial conditions ξ(0,0)∈ Sµ, the control input, after
at most one jump corresponds to the move-to-target mode and
the algorithm steers the state xtowards the origin according
to the control input vector u(ξ) =−κsx, κs>0. Hence, for
eachµ∈(0,min{µ1, µ2, µ3}),the set Sµ=Bµ(0)×Vra×M
is forward invariant for the hybrid closed-loop system (42).
Consequently, for every ρ > 0, one can choose σ∈
(0,min{µ1, µ2, µ3, ρ})such that for all initial conditions
ξ(0,0)with d(ξ(0,0),A)≤σ, one has d(ξ(t, j),A)≤ρ
for all (t, j)∈domξ,where d(ξ,A)2= inf
(0,¯h,¯m)∈A(∥x∥2+
∥h−¯h∥2+∥m−¯m∥2) =∥x∥2.Additionally, the target set
A, as defined in (43), is compact. Hence, according to [28,
Definition 7.1], the target set Ais stable for the hybrid closed-
loop system (42)
Attractivity: Since the target set Ais obtained by only
restricting the xcomponent of the state space Kto0, one can
prove claim 2 in Theorem 1 by showing that for all solutions ξ
to the hybrid closed-loop system (42) initialized in the move-
to-target mode (m(0,0) = 0) , thexcomponent of the solution
ξconverges to the origin 0.For the closed-loop system (42),23
letξ(t0, j0)∈ F 0, for some (t0, j0)∈domξ. Ifξ(t, j)/∈
J0,∀(t, j)⪰(t0, j0),then due to the stabilizing control of the
formu(x,h,0) =−κsx, κs>0,the state xwill converge to
the origin. Now, assume that there exists (t1, j1)⪰(t0, j0)
such that ξ(t1, j1)∈ J0, then the control law switches to the
obstacle-avoidance mode. According to (40), h(t1, j1+ 1) =
x(t1, j1)andm(t1, j1+ 1)∈ {− 1,1}i.e., the state xwill
evolve either in the clockwise direction (m= 1) or in the
counter-clockwise direction (m=−1). To that end, we use
the following lemma to show that if the solution ξto the
hybrid closed-loop system (42), which has been initialized in
themove-to-target mode, evolves in the obstacle-avoidance
mode, then it will always enter in the jump set of that mode
only through the set ERh
m×Vra×{− 1,1}, where, according
to (35), the location xis closer to the target location than the
current hit point .
Lemma 10. Let Assumptions 1 and 2 hold, and the parameter
¯ϵ, used in (35), is chosen as per Lemma 7, then for all solutions
ξ= (x,h, m)to the hybrid closed-loop system (42) with
ξ(t, j−1)∈ J 0,ξ(t, j)∈ F l, for some l∈ {− 1,1}and
(t, j)∈domξ,there exists (p, j)∈domξ,(p, j)≻(t, j)
such that following conditions hold true:
1)ξ(p, j)∈ ERh(t,j)
l× Vra× {l} ⊂ J l,
2)ξ(v, j)∈ Fl,∀(v, j)∈([t, p)×j).
Proof. See Appendix K.
According to Lemma 10, ∃(t2, j1+ 1) ⪰(t1, j1+
1)such that ξ(t2, j1+ 1) ∈ ERh(t1,j1+1)
m(t1,j1+1)× V ra×
{−1,1} ⊂ J m(t1,j1+1).Notice that, according to (34) and
(35),∥x(t2, j1+ 1)∥<∥h(t1, j1+ 1)∥, where, according to
(40),h(t1, j1+ 1) = x(t1, j1). In other words, according to
Lemma 10, the proposed navigation algorithm ensures that, at
the instance where the the control switches from the obstacle-
avoidance mode to the move-to-target mode, the state xis
closer to the origin than from the last point where the control
switched to the obstacle-avoidance mode. Furthermore, when
the control input corresponds to the move-to-target mode, the
algorithm steers the state xtowards the origin under the influ-
ence of the stabilizing control vector u(ξ) =−κsx, κs>0.
Consequently, given that the workspace Wand the obstacles
Oi, i∈I\ {0}, are compact, it can be concluded that the
solution ξwill contain finite number of jumps and the state x
will converge to the origin.
K. Proof of Lemma 10
We consider a connected modified obstacle OM
i,α⊂ OM
W,
for some i∈I, as stated in Lemma 4, where αis selected
according to Lemma 5. Let ξ(t, j)∈ FW
l∩Nγ(Dra(OM
i,α))×
Vra× {l}, for some l∈ {− 1,1}. Since m(t, j−1) = 0
andm(t, j)∈ {− 1,1}, according to (32), x(t, j) =h(t, j)∈
∂Dβ(OM
i,α)∩ JW
0,where β∈[ra, ra+γs]. To proceed with
the proof, we need the following fact:
Fact 3: Under Assumptions 1 and 2, consider the following
flow-only system:
˙ x=κrv(x, m),x∈ N γ(Dra(OM
i,α)), (77)for some m∈ {− 1,1},where κr>0andv(x, m)is given
by (24). If x(t0)∈∂Dβ1(OM
i,α), β1∈[ra, ra+γ], for some
t0≥0, then x(t)∈∂Dβ1(OM
i,α)for all t≥t0.
Proof. According to Lemma 3, for x∈∂Dβ1(OM
i,α), β1∈
[ra, ra+γ],card (PJ(x,OM
i,α)) = 1 . Hence, according to
[26, Lemma 4.5], the vector x−Π(x,OM
i,α)is normal to the
set∂Dβ(OM
i,α)atx.As a result, the tangent cone to the set
∂Dβ1(OM
i,α)atx∈∂Dβ1(OM
i,α)is given by
T∂Dβ1(OM
i,α)(x) =P(0,x−Π(x,OM
i,α)). (78)
Since v(x, m)⊺(x−Π(x,OM
i,α)) = 0 ,v(x(t), m)∈
T∂Dβ1(OM
i,α)(x(t)),for all t≥t0,which implies that the
solution x(t)to the flow-only system (77) belongs to the set
∂Dβ1(OM
i,α)for all t≥t0.
According to Fact 3, if xbelongs to the set Nγ(Dra(OM
i,α))
at some time t0≥0, and is solely influenced by the obstacle-
avoidance control vector κrv(x, m),κr>0, for some
m∈ {− 1,1}, then x(t)will continue to evolve within the set
Nγ(Dra(OM
i,α))for all t≥t0, without changing its distance
from the set OM
i,α.
According to (23a), for l∈ {− 1,1},u(x,h, l) =
κrv(x, l), κr>0. Since ξ(t, j)∈ Fl,for some l∈ {− 1,1},
withx(t, j)∈∂Dβ(OM
i,α), β∈[ra, ra+γs],according to Fact
3, the state xwill evolve along the curve ∂Dβ(OM
i,α). Since
the workspace Wand the obstacles Oi, i∈I\ {0},∃(p, j)∈
domξ,(p, j)≻(t, j)such that at (p, j), thexcomponent of
the solution ξwill enter the set Hp=Bδ(p)∩Nγ(Dra(OM
i,α)),
where δ= min {β−ra, d(0,OM
W)−ra}. Since the parameter
¯ϵ∈(0, ϵh], where ϵhis defined in (36), according to Lemma
7,x(p, j)∈ ERh(t,j)
l. Hence, according to (34) and (38),
ξ(p, t)∈ ERh
l× Vra× {l} ⊂ J l,and condition 1 in Lemma
10 holds true.
Since ξ(t, j)∈ F l, for some l∈ {− 1,1},withx(t, j)∈
∂Dβ(OM
i,α), β∈[ra, ra+γs],according to Fact 3, the state
xevolves in the region Nγ(Dra(OM
i,α)), along the curve
∂Dra+β(OM
i,α),until it enters the set ERh
l, which guarantees
that condition 2 in Lemma 10 holds true.
L. Proof of Proposition 1
Since the obstacles Oi, i∈I\{0}, are convex and compact,
andd(Oi,Oj)>2ra,∀i, j∈I, i̸=j, the ra−dilated
versions of the obstacles do not intersect with each other
i.e.,d(Dra(Oi),Dra(Oj))>0,∀i, j∈I, i̸=j. This ensures
the pathwise connectedness of the interior of the obstacle-free
workspace W◦
ra. In addition, since 0∈ W◦
ra,Assumption 1 is
satisfied.
Define ¯α= min
i,j∈I,i̸=jd(Oi,Oj)/2. Since the pairwise dis-
tance between any two obstacles is greater than 2ra, it follows
that ¯α > r a, and for any α∈(ra,¯α], the α−dilated
versions of the obstacles do not intersect with each other
i.e.,d(Dα(Oi),Dα(Oj))>0. Therefore, Wα, defined using
(15), is not an empty set. Then, it is straightforward to see
that for every x∈ D α(OW)\ O◦
W,there is a unique closest
point on the boundary of the set Dα(OW)fromx. Hence,24
reach (Wα)≥α, where α∈(ra,¯α]. Finally, by virtue of
[26, Lemma 4.5], Assumption 2 is satisfied.
REFERENCES
[1] O. Khatib, “Real-time obstacle avoidance for manipulators and mobile
robots,” The International Journal of Robotics Research , pp. 90–98,
1986.
[2] D. E. Koditschek and E. Rimon, “Robot navigation functions on
manifolds with boundary,” Advances in applied mathematics , vol. 11,
no. 4, pp. 412–442, 1990.
[3] D. Koditschek and E. Rimon, “Exact robot navigation using artificial
potential functions,” IEEE Trans. Robot. Automat , vol. 8, pp. 501–518,
1992.
[4] C. K. Verginis and D. V . Dimarogonas, “Adaptive robot navigation
with collision avoidance subject to 2nd-order uncertain dynamics,”
Automatica , vol. 123, p. 109303, 2021.
[5] C. Li and H. G. Tanner, “Navigation functions with time-varying
destination manifolds in star worlds,” IEEE Transactions on Robotics ,
vol. 35, no. 1, pp. 35–48, 2018.
[6] S. Paternain, D. E. Koditschek, and A. Ribeiro, “Navigation functions for
convex potentials in a space with convex obstacles,” IEEE Transactions
on Automatic Control , vol. 63, no. 9, pp. 2944–2959, 2017.
[7] S. G. Loizou, “The navigation transformation: Point worlds, time ab-
stractions and towards tuning-free navigation,” in 19th Mediterranean
Conference on Control & Automation (MED) , 2011, pp. 303–308.
[8] S. G. Loizou and E. D. Rimon, “Correct-by-construction navigation
functions with application to sensor based robot navigation,” arXiv
preprint arXiv:2103.04445 , 2021.
[9] S. Berkane, “Navigation in unknown environments using safety velocity
cones,” in American Control Conference , 2021, pp. 2336–2341.
[10] F. Blanchini, S. Miani et al. ,Set-theoretic methods in control . Springer,
2008, vol. 78.
[11] M. F. Reis, A. P. Aguiar, and P. Tabuada, “Control barrier function-
based quadratic programs introduce undesirable asymptotically stable
equilibria,” IEEE Control Systems Letters , vol. 5, no. 2, pp. 731–736,
2020.
[12] O. Arslan and D. E. Koditschek, “Sensor-based reactive navigation in
unknown convex sphere worlds,” The International Journal of Robotics
Research , vol. 38, no. 2-3, pp. 196–223, 2019.
[13] V . Vasilopoulos and D. E. Koditschek, “Reactive navigation in partially
known non-convex environments,” in International Workshop on the
Algorithmic Foundations of Robotics , 2018, pp. 406–421.
[14] C. Vrohidis, P. Vlantis, C. P. Bechlioulis, and K. J. Kyriakopoulos,
“Prescribed time scale robot navigation,” IEEE Robotics and Automation
Letters , vol. 3, no. 2, pp. 1191–1198, 2018.
[15] R. G. Sanfelice, M. J. Messina, S. E. Tuna, and A. R. Teel, “Robust
hybrid controllers for continuous-time systems with applications to
obstacle avoidance and regulation to disconnected set of points,” in
American Control Conference , 2006, pp. 3352–3357.
[16] J. I. Poveda, M. Benosman, A. R. Teel, and R. G. Sanfelice, “Robust
coordinated hybrid source seeking with obstacle avoidance in multive-
hicle autonomous systems,” IEEE Transactions on Automatic Control ,
vol. 67, no. 2, pp. 706–721, 2022.
[17] P. Braun, C. M. Kellett, and L. Zaccarian, “Explicit construction of
stabilizing robust avoidance controllers for linear systems with drift,”
IEEE Transactions on Automatic Control , vol. 66, no. 2, pp. 595–610,
2020.
[18] A. S. Matveev, H. Teimoori, and A. V . Savkin, “A method for guidance
and control of an autonomous vehicle in problems of border patrolling
and obstacle avoidance,” Automatica , vol. 47, no. 3, pp. 515–524, 2011.
[19] S. Berkane, A. Bisoffi, and D. V . Dimarogonas, “Obstacle avoidance
via hybrid feedback,” IEEE Transactions on Automatic Control , vol. 67,
no. 1, pp. 512–519, 2021.
[20] V . Lumelsky and A. Stepanov, “Dynamic path planning for a mobile
automaton with limited information on the environment,” IEEE trans-
actions on Automatic control , vol. 31, no. 11, pp. 1058–1063, 1986.
[21] S. G. Loizou, H. G. Tanner, V . Kumar, and K. J. Kyriakopoulos,
“Closed loop motion planning and control for mobile robots in uncertain
environments,” in IEEE Conference on Decision and Control , vol. 3,
2003, pp. 2926–2931.
[22] M. Sawant, S. Berkane, I. Polusin, and A. Tayebi, “Hybrid feedback for
autonomous navigation in planar environments with convex obstacles,”
IEEE Transaction on Automatic Control , vol. 68, no. 12, pp. 7342–7357,
2023.[23] M. Sawant, A. Tayebi, and I. Polushin, “Autonomous navigation in
environments with arbitrary non-convex obstacles,” in IEEE Conference
on Decision and Control , 2022, pp. 7208–7213.
[24] S. Willard, General topology . Courier Corporation, 2012.
[25] R. M. Haralick, S. R. Sternberg, and X. Zhuang, “Image analysis using
mathematical morphology,” IEEE transactions on pattern analysis and
machine intelligence , no. 4, pp. 532–550, 1987.
[26] J. Rataj and M. Z ¨ahle, Curvature measures of singular sets . Springer,
2019.
[27] S. Boyd, S. P. Boyd, and L. Vandenberghe, Convex optimization .
Cambridge university press, 2004.
[28] R. Goebel, R. G. Sanfelice, and A. R. Teel, Hybrid dynamical systems .
Princeton University Press, 2012.
[29] J. Serra, “Introduction to mathematical morphology,” Computer vision,
graphics, and image processing , vol. 35, no. 3, pp. 283–305, 1986.
[30] C. Th ¨ale, “50 years sets with positive reach–a survey.” Surveys in
Mathematics and its Applications , vol. 3, pp. 123–165, 2008.
[31] I. Kamon, E. Rimon, and E. Rivlin, “Tangentbug: A range-sensor-based
navigation algorithm,” The International Journal of Robotics Research ,
vol. 17, no. 9, pp. 934–953, 1998.
[32] S. Berkane, A. Bisoffi, and D. V . Dimarogonas, “Obstacle avoidance via
hybrid feedback,” arXiv preprint arXiv:2102.02883 , 2021.
[33] R. G. Sanfelice, Hybrid feedback control . Princeton University Press,
2021.
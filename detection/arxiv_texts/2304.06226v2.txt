Prompt: Probability-Conserved Cross Section Biasing
Monte Carlo Particle Transport System
Zi-Yi Pana,b, Ni Yanga,b,c, Ming Tanga,b, Peixun Shena,b, Xiao-Xiao Caia,b,∗
aInstitute of High Energy Physics, Chinese Academy of Sciences, China
bSpallation Neutron Source Science Center, China
cUniversity of Chinese Academy of Sciences, China
Abstract
An open source software package for simulating thermal neutron propagation in
geometry is presented. In this system, neutron propagation can be treated by
either the particle transport method or the ray-tracing method. Supported by an
accurate backend scattering physics engine, this system is capable of reproducing
neutron scattering experiments in complex geometries and is expected to be used
in the areas of instrument characterisation, optimisation and data analysis.
In this paper, the relevant theories are briefly introduced. The simulation
flow and the user input syntax to control it are provided in detail. Five bench-
marking simulations, focusing on different aspects of simulation and scattering
techniques, are given to demonstrate the applications of this simulation sys-
tem. They include an idealised total scattering instrument, a monochromatic
powder diffractometer, a neutron guide, a chopper and an imaging setup for
complex geometries. Simulated results are benchmarked against experimental
data or well-established software packages when appropriate. Good agreements
are observed.
PROGRAM SUMMARY
Program Title: Prompt
Developer’s respository link: https://gitlab.com/cinema-developers/prompt
Programming language: C++,Cand Python
∗Corresponding author: caixx@ihep.ac.cn
Preprint submitted to Elsevier December 5, 2023arXiv:2304.06226v2  [physics.comp-ph]  4 Dec 2023External routines/libraries: NCrystal ,VecGeom ,MCPL,PyVista
Licensing provisions: Apache License, 2.0 (Apache-2.0)
Nature ofproblem:
It is challenging for traditional neutron ray-tracing simulation methods to consider
multiple scatterings in complex geometries, hence the accuracy and precision of the
simulated neutron scattering experiments are limited.
Solution method: A hybrid system of Monte Carlo particle transport method and
ray-tracing method is proposed.
21. Introduction
Along with the instrument design activities at the powerful neutron spalla-
tion sources over the last decades [Tay06, MAA+06, KYN+19, LBC+11, WCC+09],
Monte Carlo ray-tracing codes emerged as the de facto standard for neutron in-
strument characterisation and optimisation. There are many packages currently
available, such as McStas [LN99], VITESS [ZLM02], and RESTRAX/SIM-
RES [ ˇSK97, SK04]. Most of them employ the linear chain method, in which
an instrument is decomposed into a series of components and the neutron
beam is only allowed to transmit from an upstream component, to the ad-
joining downstream component. This method is computationally efficient and
proven to be highly valuable in estimating neutron instrument flux on the sam-
ple [LNA+06, CKL+18, SDJE06, OMR+04] and resolution functions [ASL+12,
KNI+11, EPN+11]. A recent review on the state-of-the-art of these packages
can be found in [WL20].
There are cases when a neutron stream is split and goes into multiple down-
stream components. To address these cases, McStas offers a flexible “GROUP”
keyword for users to specify the paths. On the other hand, VITESS implements
similar approach in several special components, such as the Fermi choppers, su-
permirrors and crystal analysers [ZLM+04]. However, the linear chain method
becomes more cumbersome for complex geometries, where the internal struc-
tures cannot be arranged in an upstream-downstream manner. For instance, in
an assembly of a sample environment vessel containing a sample, the unwanted
scatterings from the vessel can occur before or after neutrons passing by the sam-
ple. To address this problem, McStas introduced the Union component [Ber17]
to allow the definition of complex internal structures. The neutron path within
this component depends only on the geometry and scattering physics.
It is worth noting that the linear chain method is not enforced in NISP [DSTH99,
SD04], a package developed in the 1990s. This package inherits a part of the
Monte Carlo engine from an early version of a particle transport code [WL20].
Due to the absence of the linear assumption, neutrons in this package are not
3travelled in a pre-defined chain, hence the simulation is more realistic.
Despite fewer assumptions being made, NISP is not currently among the
most popular packages. Apart from the computational efficiency, license and
manpower shortage problems outlined in [WL20], a limited number of scattering
models in bulk materials could also be a major disadvantage. The departure
between the model and actual physics introduces errors in the cross section and
leads to inaccurate results. Since 2015, NCrystal [CK20a], a general purpose
open-source engine for neutron scattering has been under active development.
In this package, microscopic cross sections are calculated based on material
basic properties [CKKM19, KC21, KC23]. Thanks to the implemented robust
numerical methods, neutron scattering can be modelled in a wide energy range,
from ultracold to tens of electronvolts.
The presented software package, probability-conserved cross section bias-
ing Monte Carlo particle transport system ( Prompt ), is our first attempt to
tackle the cross section challenge. Available neutron scattering models and the
probability-conserved cross section biasing technique are briefly introduced in
Section 2. Section 3 explains the concepts of the system along with code ex-
amples and shows a minimal but complete simulation input script. Section 4
demonstrates overall system performance by studying a few problems, includ-
ing an idealised total scattering instrument, a monochromatic powder diffrac-
tometer, a neutron guide, an imaging setup for complex geometries and a disk
chopper. This work is discussed and concluded in section 5.
2. Theories
The objective of the system is outlined in section 2.1. Section 2.2 and 2.3
introduce the neutron scattering length and scattering types, respectively. As
the theory of neutron scattering is given elsewhere in more detail, e.g. [Lov84,
Squ12, Sch14], these sections are dedicated to introducing the physical meanings
of the relevant parameters and the underneath cross section models. Section 2.4
introduces the implemented probability-conserved cross section biasing method
4Figure 1: A simplified sketch of particle detection after a volume of material
that is able to effectively control the interaction number of neutrons in a finite
volume. Section 2.5 introduces the mirror and chopper models.
2.1. The scope of the system
Fig. 1 illustrates that particles that are originated from the source interact
with a volume of material. A part of the particles is detected by a detector at the
end. The problem of interest here is the probability of detection, fdet(r,p, t, s).
From the viewpoint of particle transport, it can be expressed as
fdet(r,p, t, s) =Z
d3r0Z
d3p0Z
dt0Z
ds0G(r,p, t, s;r0,p0, t0, s0)fsrc(r0,p0, t0, s0)
(1)
where ris the position, pis the momentum, tis the time, sis the spin, and G
function is the propagator.
This high-dimensional integral is typically evaluated using Monte Carlo par-
ticle transport systems, in which the propagator is decomposed into geometry
and physics modules in general. In such systems, the physics module predicts
the particle states by sampling the physical distributions for given prior states,
materials and any applied external fields; while the geometry model traces in-
dividual particles in volumes along their trajectories.
On the other hand, the ray-tracing method simplifies the integration by a
scaling function ϵ, which represents the weight adjustment of the particles. In
addition, when the linear chain approximation is applied, the ϵfunction is set
5to zero if the leaving particles do not intersect with the detector.
fdet(r,p, t, s) =ϵ(r,p, t, s;r0,p0, t0, s0)fsrc(r0,p0, t0, s0) (2)
This method describes neutron transmission behaviour reasonably well in many
optical components. One of the simplest examples is the rotating neutron disk
chopper. The ϵfunction is either unity or zero, representing respectively the
event of neutron transmission or absorption.
The objective of Prompt is to solve Eq. 1 in bulk materials and Eq. 2 to model
moving optical components, i.e. choppers. The linear chain approximation is
relaxed in the system. Only thermal neutrons are supported in this version of
code. Notice that the gravitational field that may be important when simulating
cold neutrons in a long beam guide. By limiting the particle step size, it is
possible to simulate the gravitational effects. However, such implementation is
computational demanding and outside the scope of current version of the code.
It is not yet supported.
2.2. Neutron scattering length
The introduction starts with a limiting case, where neutrons scatter with a
stationary nucleus that is fixed at a position throughout the scattering process.
If the target nucleus remains in the ground electronic state, and the neutron
wavelengths are much longer than the range of neutron-nucleus interaction, the
scatterings are contributed only by the s-wave components in terms of partial
waves [Sch14]. The scatterings in that case are essentially elastic isotropic and
can be characterized by a single parameter b, the so-called bound scattering
length [Lov84]. The cross section for this hypothetical1case is simply 4 π|b|2.
In the opposite limiting case, where the motion of a nucleus is not hindered
at all, the process can be viewed as elastic scattering in the centre of mass
frame of reference. The so-called freescattering length for this case can be
derived [Squ12] to be bf=bM/(m+M), where mandMare the mass of the
1Fixing a stationary nucleus is only sound classically, but violates the uncertainty principle.
6neutron and target nucleus, respectively. When the incident neutrons are far
more energetic than the chemical bonds in the system, say above a few elec-
tronvolts, the scattering cross section is approaching the limiting value 4 π|bf|2,
for instance, see ref. [DGM14].
The angular distributions in the laboratory and centre-of-mass frames can
be correlated as Eq. 3 [Sch14]. From the viewpoint of this equation, the angular
distribution of the bound situation is a special case for the freesituation when γ
is approaching zero, i.e. the mass of the target nucleus is infinity in comparison
with a neutron.
P(θlab) =(1 +γ2+ 2γcosθc.m.)3/2
|1 +γcosθc.m.|P(θc.m.)
with γ=m
M(3)
However, neither the bound nor the freecases can describe the neutron
scattering process adequately accurately in a finite and correlated system, es-
pecially when incident neutron wavelengths are comparable with the shortest
inter-atomic distances.
Notice that the scattering length bis complex in general. The amplitude
of absorption is the imaginary part of b. For thermal neutrons, it is generally
adequately accurate to decouple the absorption and scattering processes, see
more discussions in section 2.2 of [CKKM19]. As a result, the scattering lengths
are typically real-valued for cross section calculations. The absorption cross
sections, without considering nuclear resonances, are often taken to be inversely
proportional to the neutron velocity, and insensitive to atomic structure and
dynamics.
72.3. Neutron scattering cross section
Neutral particles exhibit step-like behaviours in materials. In the Lambert-
Beer law, the probability of observing a free particle at length xin a homoge-
neous material can be described as
P(x) = exp( −ρσx) (4)
where ρis the scatter number density and σis the cross section. The cross
section can be calculated from the double differential cross section.
σ=Z Zd2σ
dΩdE′dΩdE′(5)
Under the Born approximation and Fermi’s golden rule, the thermal neutron
scattering cross section is the double integral of the scattering function scaled
by the ratio of the scattered and incident wavenumbers [CK20b],
σ(⃗ki) =Z Z|⃗kf|
|⃗ki|S(⃗Q, ω)dΩd E′(6)
with ⃗Q=⃗ki−⃗kfand ¯hω= ¯h2(k2
i−k2
f)/2m, to obey the conservation law of
momentum and energy. Here ⃗Qandωare the reduced momentum and energy
transfers, respectively.
The evaluation and implementation of Eq. 6 depend on the orientation distri-
butions of the statistically equivalent subsystems with respect to the laboratory
frame of the simulation system [CK20a, KC21]. For oriented materials, i.e. sin-
gle and layered crystals, the relevant crystal axes should be aligned with the
simulated laboratory frame of reference. So that the moment transfer in the
predefined scattering function is identical with that in the simulation world.
See more discussions in section 3.5 on how to configure the alignment.
The neutron scattering function can be decomposed into a series of Sj,j′(⃗Q, ω),
the partial scattering function, contributed by the jthandj′
thnuclei pairs [VH54].
S(⃗Q, ω) =NX
j,j′=1bjbj′Sj,j′(⃗Q, ω) (7)
8Here Nis the number of nuclei, bjbj′emphasizes the averaging is performed
over the isotopes and spins of all the subsystems.
For a more realistic treatment of the scattering, in the case that the value b
for the jthnucleus has no correlation with the isotope and spin, the averaging
is
bjbj′=

bj·bj′,forj̸=j′
b2
j, forj=j′(8)
Therefore,
S(⃗Q, ω) =NX
j,j′=1
j̸=j′bjbj′Sj,j′(⃗Q, ω) +NX
jb2
jSj,j(⃗Q, ω) (9)
=Sdistinct (⃗Q, ω) +Sself(⃗Q, ω) (10)
In Eq. 10, the first term is originated from the pairs that are built by different
nuclei and is known as the distinct scattering. The second term is contributed
from a single nucleus solely, hence called the selfscattering.
Inserting b2=(b−b)2+ (b)2into Eq. 9, one can obtain
S(⃗Q, ω) =NX
j,j′=1bjbj′Sj,j′(⃗Q, ω) +NX
j[b2
j−(bj)2]Sj,j(⃗Q, ω) (11)
=Scoh(⃗Q, ω) +Sinc(⃗Q, ω) (12)
where ScohandSincare the coherent and incoherent scatterings, respectively.
Coherent scattering can be physically interpreted as the scattering that would
arise if all the scattering lengths equal to their mean value. While the incoherent
scattering, proportional to the self scattering, represents the deviations of the
scattering lengths from their mean value. It is worth emphasising that the
coherent scattering is contributed by distinct scattering as well as a part of the
self scattering.
Scoh(⃗Q, ω) =Sdistinct (⃗Q, ω) +NX
jbj2Sj,j(⃗Q, ω) (13)
9Coherent and incoherent scatterings can be further categorised by whether
the neutron exchanges energy with the system, i.e. elastic and inelastic with
respect to the laboratory frame of reference.
S(⃗Q, ω) =Sel
coh(⃗Q, ω) +Sinel
coh(⃗Q, ω) +Sel
inc(⃗Q, ω) +Sinel
inc(⃗Q, ω) (14)
2.3.1. Elastic scattering
Homogeneous liquids and gases do not exhibit elastic scattering [Squ12,
Cre13]2. In the backend scattering engine, elastic scatterings are originated
explicitly from solid type materials.
The scattering functions of the incoherent and coherent elastic scattering are
shown in Eq. 15 and 16, respectively.
Sel
inc(⃗Q, ω) =NNX
j[b2
j−(bj)2] exp(−2Wj) (15)
Sel
coh(⃗Q, ω) =N(2π)3
v0X
⃗ τδ(⃗Q−⃗ τ)NX
jbjexp(i⃗Q·⃗Rj) exp(−Wj))2
(16)
Wis the Debye-Waller factor, v0is the unit cell volume, ⃗ τis the lattice point
in the reciprocal space, and ⃗Ris the equilibrium position.
For idealised materials, the orientations of crystal unit cells are described
by distribution functions. Numerical procedures are implemented to compute
the effective scattering functions averaged over the given distribution. The
averaging is rather sophisticated and outside the scope of this paper, refer to
Ref. [KC21] for the detailed methods. The backend scattering engine supports
the elastic scatterings in isotropic powders, mosaic single crystals and mosaic
layer crystals.
2Indeed, measuring these materials in an elastic type neutron instrument does produce
event data. However, this type of instrument generally guarantees that the event data are
analysed without considering energy exchange in scatterings, but not what the actual physical
processes are taking places.
102.3.2. Inelastic scattering
Limited by the memory footprint and initialisation time of typical Monte
Carlo simulations, inelastic scattering is only supported in isotropic materials,
e.g. powder and liquid.
It has been shown that the incoherent part of the inelastic scattering for
ideal crystal powders in the harmonic approximation [Sj¨ o58] and liquids in the
Gaussian approximation under the fluctuation-dissipation theorem [RSS62] can
arrive independently to the identical form,
Sinel
inc(Q, ω) =1
2πZ
e−iωtexp
−Q2
2Γ(t)
dt (17)
Here the scattering function depends on the modulus of ⃗Qdue to the isotropic
nature of the material, and Γ( t) is width function.
Γ(t) =¯h
MZ∞
0dωρ(ω)
ω
coth¯hω
2kBT
(1−cosωt)−isinωt
(18)
where ρ(ω) is the density of states, kBis the Boltzmann constant and Tis
the temperature. The expressions indicate that it is adequate to calculate the
incoherent cross section in isotropic materials using only the density of states.
The numerical evaluation of Eq. 17 for crystals is computationally efficient
when applying the phonon expansion method [Sj¨ o58], therefore it is suitable
to evaluate on-the-fly. On the other hand, for liquids, Γ becomes divergent
when ωapproaches zero, because of the diffusive motions. The scattering func-
tion, in that case, is typically pre-computed based on model-assisted evaluation
methods [DGM14] or more expansive direct convolutions [DC22].
The coherent inelastic scattering function may also be included in the pre-
computed input cross section. In the case of liquid, the Sk¨ old approxima-
tion [Sk¨ o67], i.e. Eq. 19, is often applied.
Sinel
coh(Q, ω) =NX
jj′=1bjbj′Sjj′(Q)Sjj 
Qp
Sjj′(Q), ω!
(19)
Sjj′(Q) is the partial static structure factor and equals toR
Sjj′(Q, ω)dω. As
11suggested by the zeroth order sum rule of the scattering functions, it is unity
when j=j′, i.e. the case of self scattering function.
For numerical simplification, the isotropic incoherent approximation, or oth-
erwise known as the Gaussian approximation [RSS62], is often employed to skip
the computation of the coherent inelastic scattering function. In that case, the
distinct scattering functions are vanished, hence the overall inelastic scattering
is approximated entirely by the inelastic part of the self scattering function (see
Eq. 10). The absence of distinct scattering results in a smoothened inelastic
scattering function with respect to Q. Consequently, the calculated angular dis-
tributions are not expected to be directly comparable with those from measure-
ments in every detail. Nonetheless, in practice, the incoherent approximation
is known to be highly useful when the angular distribution is less of concern,
in the sense that the final results of interest are the averaged values in a large
angular range, such as when measuring phonon density of states (see section
9.16 of [Sch14]), characterising neutron moderation processes [DGM14] and es-
timating the intensities of multi-phonon scattering background (see the section
3.10 of [Squ12]).
In additional to the incoherent approximation, a Debye model can be used for
crystals, when only the structural information is mainly concerned, e.g. powder
diffraction of a strong coherent sample. The density of states in that case is
proportional to the power of phonon energy and the upper cut-off is defined by
the Debye temperature [SSP95].
In the situations where the correlations of the systems are relatively insignif-
icant, e.g. in strong absorbing or gaseous materials, the short-collision-time ap-
proximation [MK10, CKKM19], can be used to describe the scattering processes,
see section 3.5 for more discussions.
122.4. The cross section biasing mechanism
According to the probability expressed in Eq. 4, the step length of a free
particle can be sampled according to
l=−loge(ξ)
ρσ(20)
where ξis a number generated in a uniform distribution [0 ,1).
If an arbitrary positive scaling factor gis applied to the cross section to form
an artificial cross section σg=gσ(E), the sampled step length becomes
lg=−loge(ξ)
gρσ(21)
In comparison with l,lgis increased or decreased, when the factor is smaller
or greater than unity, respectively. That may effectively control the particle
interaction number in a finite volume.
However, altering such an important parameter distorts the step length dis-
tribution in Eq. 4 and produces wrong statistical results.
It can be seen that by differentiating Eq. 4, and then dividing the result by
P(x), one can obtain
dP(x)
P(x)=−ρ(x)σdx (22)
When applying an artificial cross section, this equation becomes
dPg(x)
Pg(x)=−ρ(x)σgdx (23)
By the quotient rule of derivative, the impact of applying a biasing factor to
the probability along the path can be quantified as
dPg(x)/P(x)
dPg(x)/P(x)=−(g−1)ρ(x)σdx (24)
It has been shown [MW12] that the distribution distortion can be eliminated
when the particle weight is corrected by a compensation factor at the end of
each interaction as
Wn=W0nY
l=11
gm,lnY
m=1NpY
i=1exp[( gm,i−1)xmρσi] (25)
13Here, Wois the original weight of the particle; nis the number of interactions,
the step length of the mthstep is xm,Npis the number of reaction processes,
the biasing factor for the ithprocess at the mthstep is gm,i, the lthprocess
occurs at the end of the mthstep, and the corresponding biasing factor is bm,l.
The initial aim of the implementation is to facilitate the study of scatterings
between an incident neutron beam and a small sample of a scattering instru-
ment. In such a scenario, multiple scatterings are often considered to be a type
of weak but important noise. Applying a biasing factor greater than unity, not
only the statistics of the single scattering signal can be improved, but also the
variances of the multiple scattering noises can be significantly reduced. Detailed
validation and performance of this method are discussed in section 4.1 and 4.4.
2.5. Neutron mirror and disk chopper
The empirical reflectivity model in McStas [WFK+22] is used for neutron
mirrors. The reflection probability is a piecewise function,
R(Q) =

R0, ifQ≤Qc
1
2R0[1−α(Q−Qc)]h
1−tanh
Q−mQc
Wi
,ifQ > Q c(26)
where R0is the low-angle reflectivity, Qcis the critical scattering wavenumber,
αis the reflectivity slope, mis the m-value of the mirror, and Wis the cut-off
width. The default values retaken from McStas are given in Table 1.
When a neutron is reflected, its energy remains unchanged, so Qonly de-
pends on the reflection angle. The reflected direction, ⃗ nf, can be calculated
using the neutron direction ⃗ ni, and the normal of the contact point ⃗ nras
⃗ nf=⃗ ni−2⃗ nr(⃗ ni·⃗ nr) (27)
The neutron disk chopper is a neutron optics component that is modelled in
ray-tracing method. The neutron weight is modified by the ray-tracing process
instead of detailed scattering and propagation in the transport mode.
14Table 1: The parameters of the neutron mirror model and their values retaken from
Mcstas Guide component. The m-value of mirror is required, while the others are
fixed.
Parameter Value Description Unit
m Mirror m-value 1
R0 0.99 Low-angle reflectivity 1
Qc 0.0219 Critical scattering wavenumber ˚A−1
α 6.07 Slope of reflectivity ˚A
W 0.003 Width of cut-off ˚A−1
Table 2: Options of the Prompt launcher. Parameters without default values are
required, the others are optional.
Option Default Description
-g [ file ] SetGDML input file.
-s [ seed ] 4096 Set the seed for the random generator.
-n [ number ] 100 Set the number of primary events.
-v The flag to activate the visualisation of geome-
tries and trajectories.
When a neutron arrives at the disk chopper, the ray-tracing method is used.
The corresponding ϵfunction in Eq. 2 is a mask of position and time. It is unity if
a neutron hits a opening window, and is zero otherwise. In the implementation,
the disk chopper is considered to be infinitely thin.
3. The program
The executable, prompt , reads user input files in the Geometry Description
Markup Language ( GDML) format [CMPS06] and launches the simulation. The
language schema is introduced in the manual of the standard in detail [gdm22].
The available options are summarized in Table 2.
In a typical simulation, statistical distributions of particle histories are iter-
atively accumulated in a Monte Carlo loop of events. Each event begins with
the generation of the particle, and ends with the absorption of the particle in
materials or escape of the particle from all the volume boundaries. The accu-
mulators are referred to as scorers in this system and are realised by histograms
15that are attached to volumes. The accumulation processes are triggered by the
concept of particle tracing states (PTS) on the volume.
The simulation flow is illustrated in section 3.1. Available particle genera-
tors, i.e. particle guns, are presented in section 3.2. The volume and scorers
are introduced in section 3.3 and 3.4, respectively. The syntax for initialising
physics models is described in section 3.5. Finally, a short example of input
script is listed and explained in section 3.6.
3.1. Simulation flow
The flow of the simulation is divided into two phases, the tracing phase and
the interaction phase, as illustrated in Fig. 2.
The system first looks for the volume that contains the last particle in the
particle stack. The successful determination of a valid volume indicates that
the particle is inside the world, i.e. the largest volume that contains all the
child volumes in the simulation. Otherwise the simulation for this particle is
terminated. The program then asserts the particle alive status before picking the
simulation mode for the interaction phase. If the particle is not just generated
at a random position by a particle gun, it must arrive at the boundary of a
volume at this stage. In that case, the system checks whether a ray-tracing
model is defined for the volume, before branching out into the ray-tracing mode
or the transport mode.
In the transport mode, the particle is first treated by the mirror, if it is
specified. Next, the macroscopic total cross section is evaluated, and the step
length is sampled using Eq. 21. If the sampled step is longer than the maximum
distance that allowed by the volume, the particle is moved to the geometry
intersection point and enters the relocation subprocess. Otherwise, the particle
is moved forward to the location where an interaction takes place. In this case,
the particle enters the propagation subprocess or the absorption subprocess,
depending on the sampling on the cross sections. In any case, whenever the
particle is moved, the weight is adjusted according to Eq. 25, if the cross section
is biased.
16In the ray-tracing mode, the particle is simulated in Eq. 2. The main differ-
ence between this mode and the transport mode are that the particle states in
the volume is completely manipulated by the implemented model. The system
views the ray-tracing volume as a black box and has no knowledge about the
particle states, until the model decides to eliminate the particle or sends the
particle to the boundary of the volume. Notice that, a volume containing child
volumes is not supported by the ray-tracing mode, as the internal structure of
the volume can not be modelled systematically.
The sub-routines of the interaction phase are presented in Fig. 3. They can
modify particle parameters such as location, energy and direction of motion, as
well as changing the particle tracing states that can trigger available scorers.
More details of the scorers are introduced in section 3.4.
In the relocation sub-routine shown in Fig. 3a, the particle is moved to
the boundary of the next volume, with the momentum unchanged. In the
propagation sub-routine shown in Fig. 3b, the scattering angle and energy of
the particle are sampled. In the absorption sub-routine shown in Fig. 3c, the
alive status of the particle is set to false.
3.2. Particle gun
The initial neutron position, momentum direction, energy and time are gen-
erated by particle guns. A few types of guns are initially provided in this version
ofPrompt to facilitate the modelling of point sources, surface sources and par-
ticle histories in the standard Monte Carlo Particle Lists ( MCPL) format from
other software packages.
Two basic particle guns, which can create neutron point sources, are pro-
vided, namely, SimpleThermalGun andIsotropicGun . There are three ways to
specify neutron energies in these two guns, using a single value, sampling from
uniform distribution or a Maxwell–Boltzmann distribution of coefficient kT.
The SimpleThermalGun can produce neutrons aiming in a single direction, as
shown in Listing 1. While the IsotropicGun can produce isotropic neutrons, in
which the momentum direction is equiprobable in all solid angles, see Listing 2.
17Particle(s) being generated with 
particle gun and stored in stackStart of a primary event
Stack empty? End of event(s)
RelocationCalculation of 
macroscopic total cross section
Sampling of step length
Traverse boundary?Placement of the last particle
 into the corresponding volume  
Particle alive?
Particle scattered?
PropagationNo
AbsorptionNo
No
No YesYes
Yes
Yes
Movement of particleYes
Tracing
No
InteractionValid volume?
Transport mode?
Mirror reflection?
Ray-tracing
YesNo
NoYesFigure 2: The main simulation flow of a primary event adopted in Prompt
18Start of relocation
Move particle to the boundary
Update PTS: SURFACE
Update PTS: ENTRY
End of relocationUpdate PTS: EXIT (a) Relocation of particle
between volumes
Start of propagation
End of propagationSample scattering angle
Update particle parameters
ekin(kinetic energy) and  dir(direction)and energy
Update PTS: PROPAGATION(b)Propagation of particle
within a volume
Start of absorption
End of absorptionUpdate PTS: ABSORBAbsorb particle
Add new particle(s) to stackCreation of 
secondary particle(s)?
NoYes(c) Absorption of particle
within a volume
Figure 3: Three types of sub-routines: relocation, propagation and absorption
<userinfo>
<auxiliary auxtype="PrimaryGun" auxvalue="gun=SimpleThermalGun; energy=0.0253;
position=0,0,0; direction=1,0,0" />
</userinfo>
Listing 1: SimpleThermalGun that produces neutrons with energy of 0 .0253 eV,
position of (0 ,0,0) and direction along x axis.
<userinfo>
<auxiliary auxtype="PrimaryGun" auxvalue="gun=IsotropicGun; energy=0.0253;
position=0,0,0" />
</userinfo>
Listing 2: IsotropicGun that produces radial neutron beams with energy of
0.0253 eV, position of (0 ,0,0).
Inspired by McStas, Prompt also provides UniModeratorGun andMaxwellianGun
to generate neutrons from a moderator surface. The particle positions are sam-
pled randomly from a rectangular surface representing a moderator surface. The
direction of each is determined by sampling another point in another opening
representing a slit as the entrance of neutrons to a beam channel.
TheUniModeratorGun samples randomly the kinetic energy of neutrons from
the uniform distribution formed by the wavelength and the range of wavelength
taken as inputs, as shown in Listing 3.
The MaxwellianGun takes a temperature as input, and samples randomly
the kinetic energy of neutrons from a corresponding Maxwell–Boltzmann distri-
19bution, as presented in Listing 4.
<userinfo>
<auxiliary auxtype="PrimaryGun" auxvalue="gun=UniModeratorGun; mean_wl=3.39;
range_wl=0.3; src_w=100; src_h=50; src_z=-400; slit_w=5; slit_h=10;
slit_z=1" />
</userinfo>
Listing 3: AUniModeratorGun , producing neutrons with energy randomly selected
between 3 .09˚A and 3 .69˚A, with position randomly selected in an opening of
100 mm ×50 mm located at (0 ,0,−400) (in mm), with directions determined by
connecting two points of two openings
<userinfo>
<auxiliary auxtype="PrimaryGun" auxvalue="gun=MaxwellianGun; src_w=100;
src_h=50; src_z=-400; slit_w=5; slit_h=10; slit_z=1; temperature=293.15;
" />
</userinfo>
Listing 4: AMaxwellianGun , producing neutrons with energy randomly selected
(T= 293 .15K), with position randomly selected in an opening of 100 mm ×50 mm
located at (0 ,0,−400) (in mm), with directions determined by connecting two points
of two openings
An example of using an MCPLGun is shown in Listing 5. The input files are
typically generated by Monte Carlo packages, e.g. McStas, Geant4, MCNP and
PHITS. Notice that when preparing the input files, particles other than neutrons
have to be filtered out. That can be easily done by using mcpltool in the MCPL
toolkit as mcpltool --extract -p2112 example.mcpl justneutrons.mcpl
<userinfo>
<auxiliary auxtype="PrimaryGun" auxvalue="gun=MCPLGun;
mcplfile=justneutrons.mcpl" />
</userinfo>
Listing 5: AMCPLGun reads neutron histories from the specified MCPL files
3.3. Geometry
Prompt uses VecGeom [A+05] v1.2.0 as the geometry engine and GDML [CMPS06]
as the language to define the geometry of a simulation. A geometry is a hier-
archy of volumes, each of which a shape and a composition should be assigned
to. There are three essential parts to describe a volume, namely solids for
the shape description, structure for the hierarchy relationship and material
for the composition. In this section, the methods to define the solids and
structure are given, and leaving the materials part in section 3.5.
The solids currently supported in Prompt are retaken from the GDML user’s
guide [gdm22] and presented in Appendix A. A solid defines solid type and the
20corresponding parameters. As an example, the lines presented in Listing 6 define
a box of the identical length each side. The length unit, lunit , is millimeter
by default. It can be otherwise chosen to be nanometer ( nm), micrometer ( um),
centimeter ( cm), meter ( m) or kilometer ( km). The default unit for angle, aunit ,
is degree ( deg), and radian ( rad) can also be used, alternatively.
<solids>
<box lunit="mm" name="Cube" x="10.0" y="10.0" z="10.0" />
</solids>
Listing 6: A box named Cube of 10 mm for each side length
The structure is a hierarchy of volumes. A volume is called logical when it
refers to a solid and a material . A logical volume becomes physical when it is
positioned into a mother logical volume. Notice that any boundary of a daughter
volume should be contained within its mother volume and boundary overlap test
is not implemented in this version of the system. All volumes in a simulation are
physical because they have to be positioned, except for the world , the largest
volume on the top of the hierarchy. An example is presented in Listing 7, where
a hierarchy of two levels is defined. The first level corresponds to the world of
this simulation, while the second is a volume named phy2ndLevel placed in
the center of the world .
<solids>
<box lunit="mm" name="solWorld" x="10" y="10" z="10" />
<orb lunit="mm" name="solSphere" r="5" />
</solids>
<structure>
<volume name="2ndLevel">
<solidref ref="solSphere" />
<materialref ... />
</volume>
<volume name="World">
<solidref ref="solWorld"/>
<materialref ... />
<physvol name="phy_2ndLevel">
<volumeref ref="2ndLevel" />
<position name="Position" unit="mm" x="0" y="0" z="0" />
</physvol>
</volume>
</structure>
Listing 7: A hierarchy of two levels
21Table 3: Particle scorers in a volume. The statistical information is presented in form
of one-dimensional histogram, if not otherwise noted.
Scorer Statistical Information
ESpectrum Energy Spectrum
WlSpectrum Wavelength spectrum
TOF Time-of-flight spectrum of particles.
PSD Two-dimensional spatial spectrum on the projection of a
volume
MultiScat Scattering number spectrum of scattered in a volume
DeltaMomentum Momentum transfer spectrum
Angular Angular spectrum
VolFluence Particle flux spectrum in a volume
3.4. Scorer
Eight scorers that are designed to accumulate particle statistical information
in histograms are listed in Table 3. The variables of interest are generally fixed
to one of the attributes of the particles, such as energy, position, and time. For
aDeltaMomentum scorer, the method used to calculate the variable should be
chosen from elastic or inelastic scatterings. In the elastic case, the momentum
transfer Qis calculated as
Q= 2kisinθ (28)
While in the inelastic case, the momentum transfer is
Q2=ki2+kf2−2kikfcos 2θ (29)
To set up, a scorer is attached to a volume from which the statistical infor-
mation is expected to be extracted. For instance, in Listing 8, a PSDscorer is
attached to the volume named Detector. The parameters of scorers are listed
in Appendix C.
<volume name="Detector">
<materialref ref="Vacuum"/>
<solidref ref="DetectorSolid"/>
<auxiliary auxtype="Scorer" auxvalue= "Scorer=PSD; name=NeutronHistMap;
xmin=-250; xmax=250; numBins_x=100; ymin=-250; ymax=250; numBins_y=100;
ptstate=SURFACE; type=XY"/>
</volume>
Listing 8: APSDscorer attached to the volume named Detector
22The ptstate in Listing 8 denotes the particle tracing state. The particle
tracing states reflect the relationships between the particles and volumes, and
also act as triggers allowing scorers to accumulate particle weights. Each scorer
should be assigned to a particle tracing state to listen to. In Prompt five particle
tracing states are defined, as follows:
•SURFACE : A particle reaches the geometry boundary of a volume,
•ENTRY : A particle entries a volume,
•ABSORB : A particle is absorbed in a volume,
•PROPAGATE : A particle propagates in a volume,
•EXIT: A particle exits a volume.
All of them are available for all scorers, except that MultiScat is immutably
set to PROPAGATE .
To illustrate the triggering mechanism of scorers, the transport process of a
particle in the geometry of Listing 7 is shown in Fig. 4. The particle transports
four steps in this simple geometry. In step 1, when the particle reaches point
Aat the boundary of volume Sphere, it simultaneously exits volume World and
entries volume Sphere. Therefore, it can trigger the scorer that is listening to
theEXIT PTS of the volume World and the SURFACE and ENTRY PTS of the
volume Sphere. In step 2, when the particle arrives at point B, it is possible to
trigger the PROPAGATE orABSORB PTS of the volume Sphere. In this example, it
is chosen to be PROPAGATE so that the simulation continues. Similar to step 1,
when the particle reaches point C at the end of step 3, it can trigger the scorer
on volume Sphere set to EXIT and the scorer on volume World set to ENTRY .
When the particle reaches point D at the end of step 4, it is at the boundary
of volume World and will be out of volume World. Hence, it is killed and can
trigger the scorer on volume World set to EXIT.
It is worth noting that the SURFACE andENTRY can be used interchangeably
for scorers. These two PTS are used in the core of the system to indicate whether
the interaction is treated using the surface or bulk material models.
23Figure 4: Transport process of a particle in a simple geometry
24A scorer creates one or several histograms showing the statistical results.
They are encoded in the Numpy array format [HMvdWea20] which are then
stored in the header of output MCPL [KKK+17] files. In addition, a Python
script is generated along with each MCPL file to show the basic read and plot
functions for post-analysis.
3.5. Simulation physics
Prompt defines three types of physics, namely, bulk material physics, mirror
physics and ray-tracing physics.
All bulk material cross sections are computed by the backend engine NCrystal
v3.0.0 . The syntax for defining an ideal isotropic Al polycrystal is shown in
Listing 9. The physics configuration string that is passed to NCrystal for the
calculation of averaged cross section per atom is enclosed in single quotation
marks. The configuration string syntax and basic crystal parameters in the
.ncmat file are explained in the reference paper [CKKM19] and the official
Wikipedia [KC23] of NCrystal in detail. In this example, the cross section bi-
asing factors for both the scattering and absorption models are doubled. Notice
that in the special case, where a factor is set to zero, the corresponding model
is removed from the simulation.
<material name="Al_biased">
<atom value="physics=ncrystal;nccfg= 'Al_sg225.ncmat ';
scatter_bias=2.0;abs_bias=2.0"/>
</material>
Listing 9: Example of defining an ideal Al polycrystal material with user specified
cross section biasing factors
The biasing factors are unity by default. Indicated by Eq. 25, which effec-
tively disables the cross section biasing mechanism. Equivalently, the material
definition can be simplified by only passing the NCrystal physics configuration
string, as Listing 10.
<material name="Al">
<atom value="Al_sg225.ncmat"/>
</material>
Listing 10: Defining the same material as Listing 9 but with unity cross section
biasing factors
25For oriented isotropic Gaussian mosaic single crystals, in order to unambigu-
ously define the unit cell orientations, two non-parallel vectors in the Miller in-
dices and their corresponding laboratory directions should be specified [CK20a].
For example, the definition of Ge-511 monochromator is followed.
<material name="Ge">
<atom value="Ge_sg227.ncmat;mos=0.3deg;
dir1=@crys_hkl:5,1,1@lab:0,0,1;
dir2=@crys_hkl:0,1,-1@lab:1,0,0"/>
</material>
Listing 11: Ge-511 single crystal with 0 .3◦isotropic Gaussian mosaicity
For layered crystals, i.e. crystals consisting of parallel layers, additional
lcaxis , the averaged normal of the layers should be specified [KC21] as showing
in the Listing 12. Notice that, repetition of the lcaxis in the configuration
string is not required, if it is already embedded in the .ncmat input file.
<material name="Graphite">
<atom value="C_sg194_pyrolytic_graphite.ncmat;mos=2deg;
dir1=@crys_hkl:0,0,2@lab:0,0,1;
dir2=@crys_hkl:1,0,0@lab:1,0,0;
lcaxis=0,0,1"/>
</material>
Listing 12: Pyrolytic graphite-002 layered crystal with 2◦mosaicity
The backend engine also supports the so-called “unstructured materials” [KC23],
freegas:: andsolid:: . They are well-suited to describe gaseous or strong absorb-
ing materials in which atomic scale configurations contribute insignificantly to
the total cross section. The freegas:: type materials use the classical two-body
collision model to treat the scattering, while the solid:: type material models
apply the phonon expansion method using the Debye density of states to pre-
pare the inelastic scattering function. For the later material type, additional
incoherent elastic scatterings are also included.
<material name="Air">
<atom value="freegas::N78O22/1.225kgm3"/>
</material>
<material name="enriched_B4C">
<atom value="solid::B4C/2.5gcm3/B_is_0.95_B10_0.05_B11"/>
</material>
Listing 13: Examples of defining dry air with 78% N and 22% O and enriched B 4C
solid with 95%10B and 5%11B
The mirror model is implemented as a surface process. It should be attached
to a given volume to describe the specular reflection. A mirror can be specified
26phase
Rrtheta0Figure 5: An illustration of the DiskChopper withn= 4 opening windows in Prompt ,
with phase the angle deviated from the origin (position at time zero), theta0 the
opening angle of each window, rthe inner radius, Rthe outer radius (which is the
radius of the tube to which the DiskChopper is attached).
by associate a SurfaceProcess to a volume. An example is given in Listing 14.
See more discussions on surface type physics at the end of section 3.4.
<volume name="lv_Mirror">
<solidref ref="solid_mirror"/>
<materialref ref="Si"/>
<auxiliary auxtype="BoundaryPhysics" auxvalue="physics=MirrorPhyiscs;m=2.0"/>
</volume>
Listing 14: Examples of defining a mirror with m=2, see Eq. 26
ADiskChopper ofPrompt is a ray-tracing physics similar to the DiskChopper
component of McStas. An example is provided in Listing 15, which adds a
DiskChopper to the simulation. The parameters are listed in Table. 4. The
geometry of the disk is illustrated in Fig. 5. The central circular area of radius
ris completely black to neutrons. There are n= 4 periodic opening windows
that are evenly distributed in 2 π. The angle of a window is defined by θ0. The
positive rotational frequency indicates the rotational direction that follows the
right-hand rule.
<solids>
<tube lunit="mm" name="solid_DiskChopper" rmin="0.0" rmax="250.0" z="0.001"
deltaphi="360.0" startphi="0.0"/>
</solids>
<structure>
<volume name="lv_DiskChopper">
<solidref ref="solid_DiskChopper" />
27Table 4: The parameters of DiskChopper . All of the parameters are required.
Parameter Description Unit
r Inner radius of the disk chopper mm
n Number of window. If multiple windows are defined,
they are evenly arranged in 2 π.1
rotFreq Rotation frequency. Hz
theta0 Opening angle of each window.◦
phase Angle deviated from the position at time zero.◦
<materialref ref="Vacuum" />
<auxiliary auxtype="SurfaceProcess" auxvalue="physics=DiskChopper;
rotFreq=100; r=130; theta0=20; n=4; phase=0"/>
</volume>
</structure>
Listing 15: Examples of defining a disc chopper like Fig. 5
3.6. A minimal example
An example, minimized but involving most of the introduced elements is pre-
sented. As a first step, an input is prepared in GDML format, named example.gdml ,
as shown in Listing 16. In this example, the Debye-Scherrer cones of 2 .2˚A inci-
dent neutrons from an Al powder sample are measured by a position sensitive
detector.
Fig. 6a is the visualisation of one thousand neutron trajectories. It can be
reproduced by the command
#!/bin/bash
prompt -g example.gdml -v -n 1000
A production run can be executed without the visualiser as
#!/bin/bash
prompt -g example.gdml -n 5e6
After the simulation, the heatmap of the detector and the corresponding
python script template is generated. The heatmap, as shown in Fig. 6b, of the
position sensitive score in logarithmic scale can be visualised by running
#!/bin/bash
python ScorerPSD_NeutronHistMap_view.py -l
28It should be noted that the file name of the Python script created depends on
the configuration of the scorer.
<gdml>
<userinfo>
<!-- Defining gun -->
<auxiliary auxtype="PrimaryGun" auxvalue="gun=SimpleThermalGun;
energy=0.0169; position=-80.,0.,0.; direction=1,0,0" />
</userinfo>
<materials>
<!-- Defining material -->
<material name="Universe">
<atom value="freegas::H1/1e-26kgm3"/>
</material>
<material name="Al">
<atom value="Al_sg225.ncmat"/>
</material>
</materials>
<solids>
<!-- Defining solid -->
<box lunit="mm" name="WorldSolid" x="400.0" y="1000.0" z="1000.0" />
<box lunit="mm" name="SampleSolid" x="10.0" y="10.0" z="10.0" />
</solids>
<structure>
<!-- Defining geometry tree and hierarchy of volumes -->
<volume name="VolSample">
<solidref ref="SampleSolid" />
<materialref ref="Al" />
</volume>
<volume name="VolWorld">
<solidref ref="WorldSolid" />
<materialref ref="Universe" />
<!-- Defining PSD scorer and attaching it to World -->
<auxiliary auxtype="Scorer" auxvalue="Scorer=PSD;
name=NeutronHistMap; xmin=-500; xmax=500; numBins_x=1000;
ymin=-500; ymax=500; numBins_y=1000; ptstate=EXIT; type=YZ"/>
<physvol name="PhysVol_Sample">
<volumeref ref="VolSample" />
</physvol>
</volume>
</structure>
<setup name="Default" version="1.0">
<world ref="VolWorld" />
</setup>
</gdml>
Listing 16: A minimum example of input script in Prompt ,example.gdml
29(a) Visualization of debye-scherrer
cone reproduced by using Prompt ,
with Al powder
(b)Neutrons captured by PSDscorer, Debye-Scherrer
cones manifested with four circles
Figure 6: Visualization and scoring results of the simulation mission
4. Application and Benchmark
In section 4.1, the total scattering technique is applied to a heavy water
sample to investigate the effectiveness of the cross section biasing technique for
multiple scatterings. A minimal static source powder diffractometer, including
a single crystal monochromator, pattern is simulated in section 4.2. Section 4.3
introduces the simulation of a squared neutron guide as a function of incident
wavelength. A complex geometry is in section 4.4 to discuss the impact of the
geometry on the overall computational speed. A moving optical component,
disk chopper, is presented in section 4.5, showing the capability in ray-tracing
process simulation.
4.1. Total scattering
A heavy water sample that is surrounded in a perfect spherical detector
is simulated. Fig. 7 shows the visualisation of the geometry and 100 neutron
trajectories. In the simulation, a SimpleThermalGun is used to emit neutrons
in the positive z-axis direction at 3 .635 eV. At 10 m downstream of the gun, a
12 mm radius spherical sample is located in the center of the detector, of which
the inner radius is 2000 mm and the thickness is 1 mm. A MultiScat scorer is
30Figure 7: Geometry visualisation of the total scattering simulation
31attached to the sample and used in cooperation with the detector to analyse
the scattering number of a detected event.
A few DeltaMomentum scorers triggered by the ENTRY PTS are attached to
the detector to obtain momentum transfer distribution of neutrons which are
scattered at different times in the sample. Due to the special geometry of the
detector, the accumulated single scattering P(Q) is proportional to the static
structure factor S(Q). On the other hand, the employed CAB [DGM14] cross
section for heavy water is generated in the Sk¨ old approximation using Eq. 19.
Hence the simulated structure factor is related to Sj,j′(Q), the partial static
structure factor, used in the cross section generation.
In Fig. 8, the single scattering momentum transfer distribution of the non-
biased sample is compared with the interference differential scattering cross
section (DCS) for heavy water measured by Soper [Sop13]. The structures of
the simulated result are broadly similar to those in measurement. However, the
widths of the peaks are slightly different. Also, the raising of the curve towards
the lowest Qis not reproduced by the simulation. The observed discrepancies
can be explained by the discrepancies between the static structure factor used
in the cross section calculated and that from measurement.
As indicated by Eq. 19, the partial static structure factors should be used
for polyatomic systems. To obtain that, the measured data need to be fitted to
a microscopic model to determine the atomic structure candidate. Therefore,
the peak width discrepancies are likely introduced by the fitting procedure.
Secondly, the raising of the experimental data at low Qis caused by the liquid
density fluctuation, which may not be included in the fitting model, hence not
included in the cross section.
Fig. 9 shows the comparison of momentum transfer distribution P(Q) of
neutrons with different scattering numbers obtained from non-biased and biased
runs. When Qis less than 3 ˚A−1,P(Q) for all scatterings and single scattering
are almost not distinguishable. However, the discrepancies between them grow
with a greater Qvalue, suggesting that multiple scattering becomes more and
more significant.
320 5 10 15 20 25 30 35
Q, Å1
0.020.040.060.08Interference DCS, arb.unitMeasured
SimulatedFigure 8: Comparisons between normalisation of the simulation result of Prompt and
the measurements from Soper [Sop13]
330 10 20 30 40 50
Q, Å1
012345P(Q), Å/neutron1e4
All scatterings×2
Single scattering
T wo scatterings
Four scatteringsFigure 9: Comparisons between P(Q) for different scattering numbers obtained from
non-biased and biased runs. The solid, dashed, dash-dotted and dotted lines are
respectively the results of all scatterings, single scattering, two scatterings and four
scatterings from the non-biased run, while the squares, circles, diamonds, and triangles
right are results of the biased run.
34The results of two runs for the same scattering number are overlapped,
hence the probability is conserved when the cross section biasing technique
is applied. Although the number of incident neutrons of the biased run is
only 10% of that of the non-biased run, their results are almost statistically
equivalent. Therefore, the cross section biasing technique is able to improve the
computational efficiency significantly.
4.2. Powder diffraction
A powder neutron diffraction example is simulated in Prompt , using the ex-
periment configurations from PUS at the JEEP II Reactor in Norway [HFS+00].
Fig. 10 shows the visualisation of the geometry and 100 neutron trajectories.
In this example, a UniModerator particle gun is used for the moderator,
with the widths and heights of 40 mm for both moderator and slit, the modera-
tor is 1 .9 m away from the downstream slit. Neutrons are uniformly distributed
in a 0 .05˚A interval and the mean wavelength is 1 .54˚A. A 15′α1Soller col-
limator system is located downstream of the moderator, and composed of 22
pieces of B 4C blades. A single bent monochromator that contains nine Ge-511
single crystals is modelled as a single slab geometry. Such simplification ne-
glects the focusing effects offered by the monochromator. It may have a large
impact on the flux on sample and slightly change the instrument resolution
function. In the simulation, a 54 mm ×116 mm ×8 mm single crystal germanium
with 16′mosaicity is placed at the origin. Its front surface is parallel with the
511 reflection planes. The nominal glancing angle of the incident neutron is
45◦. In the experiment, the mean wavelength of the monochromatic neutron is
1.5449 ˚A [HFS+00]. To match that, the lattice length of the original NCrystal
Gesg227.ncmat file is adjusted accordingly to be 5 .7131 ˚A. Downstream of the
monochromator, a 1015 mm long trapezoid beam channel is embedded in the
shielding wall and acts as the α2collimator of the instrument. Its effective di-
vergent is 1 .41◦. The sample is placed 2 .75 m away from the monochromator
along the negative y axis. To skip the detector calibration procedures as those
in typical experiments, a spherical 4 πdetector is used to cover all solid angles
35Figure 10: Visualisation of the simulated PUS instrument
in between 20◦and 160◦take-off angles. To eliminate any anisotropic effects,
the sample is also made spherical with a 2 .5 mm radius.
Fig. 11 shows the simulated powder diffraction pattern for the Al 2O3sam-
ple. The simulated and measured data are normalised by aligning the 143 peak
at 124 .1◦. The intensity and resolution behaviours of the pattern are well cap-
tured by the simulation, and the observed agreements are very good. However,
the experimental data is rising towards zero degrees. Similar behaviour is not
observed in the simulation. In the experiments, the scattering environment be-
tween the sample and the detector is filled with helium; while in the simplified
simulation, the environment is effectively vacuum. Likely, this discrepancy is
introduced by the fact that the scattering in the gas is not modelled.
4.3. Neutron guide
The Test Guides.instr setup in the McStas optical examples is reproduced
inPrompt . The simulation world contains two position sensitive detectors and
a guide. Fig. 12 shows the visualisation of the geometry and 100 neutron tra-
jectories.
A front position sensitive detector, i.e. vacuum box attached by a PSD ENTRY
type scorer, is placed 1 m away from the 50 mm ×50 mm moderator surface that
3620 40 60 80 100 120 140 160
scattering angle, deg0.00.51.01.52.0Count rate, arb. unit
Simulated
PUS measured@1.5549Å Figure 11: Simulated Al 2O3powder diffraction pattern at PUS
Figure 12: Geometry visualisation of the guide simulation
3720
 0 20
x, mm30
20
10
0102030y, mm
30000400005000060000Figure 13: Rear position sensitive detector pattern
is emitting 3 .39˚A neutrons. Four boxes are used to form an m= 1 straight guide
of which the inner opening is a 50 mm ×50 mm ×1000 mm box. The entrance of
the guide is 100 mm after the front detector. In addition, a rear position sensitive
detector is placed 3 .2 m away from the source along the line.
In the benchmark, 108neutrons are simulated in about 140 s using a mid-
2021 mainstream laptop. As the mvalue is too low to perfectly reflect such a
divergent monochromatic beam, only about 19.34% of the neutrons reach the
rear detector. The pattern on the detector is shown in Fig. 13. The square
shape of the guide is visible and the four corners are highly distinguishable.
The pattern from the McStas simulation of the same detector appears to be
identical to that from Prompt , hence is not shown.
The integral intensity of the rear detector, normalised by the front detector
count, is compared with that from McStas. Not surprisingly, as the reflectiv-
ity models are identical, the curves from these two packages are overlapped.
380.02
 0.00 0.02
y, m1.82.02.22.42.62.83.03.2Intensity f(x,y)dx, n1 m1
Prompt
McStasFigure 14: Comparison between the integral weight simulated by Prompt and that
from McStas
39Figure 15: Visualization of simulation mission concerning the neutron imaging of
Stanford bunny. 100 neutrons are shown for clarity
However, it is notable that McStas takes about half of the time to complete
the simulation. Likely, the geometry module, i.e. VecGeom, in Prompt is not
as effective as the ray-tracing algorithm used in McStas. On the other hand,
Prompt is capable of modeling complex geometries as discussed in section 4.4.
4.4. Stanford bunny
A Stanford bunny [TL94] is simulated using Prompt in an imaging setup.
The geometry visualisation is shown in Fig. 15. The bunny is in a surface
mesh format originally, and the TetGen [Han15] code is used to generate a
tetrahedral mesh of 2441 solids in total. In the simulation, the bunny is made
of vanadium and approximately 15 cm in height. The bunny is irradiated in
a parallel monochromatic 2 ˚A neutrons beam. The beam size is 0 .2 m×0.2 m.
Behind the bunny, an ENTRY type position detector is set up to measure the
transmission pattern.
Two simulations are performed with two different absorption biases, 1 and
0.1. The images recorded by the detector are shown in Fig. 16. In both Fig. 16a
and Fig. 16c, the shape of the object can be clearly observed. The biased
simulation produces visibly identical results as the unbiased case.
40100
 50
 0 50 100
x, mm100
75
50
25
0255075100y, mmbias=1
(b)
050100150200(a)PSDimage, absorption bias set to 1 .0, 1×
107neutrons
20
 10
 0 10
x, mm50
45
40
35
30
25
y, mmbias=1
05101520(b)Zoom-in PSDimage, absorption bias set to
1.0, 1×107neutrons
100
 50
 0 50 100
x, mm100
75
50
25
0255075100y, mmbias=0.1
(d)
50100150200
(c)PSDimage, absorption bias set to 0 .1, 1×
107neutrons
20
 10
 0 10
x, mm50
45
40
35
30
25
y, mmbias=0.1
05101520(d)Zoom-in PSDimage, absorption bias set to
0.1, 1×107neutrons
Figure 16: Images recorded from the PSD scorer and their zoom-in images. The
absorption biases are set to 1 and 0.1, respectively. The images with 0.1 absorption
bias looks ’smoother’
To compare the statistical uncertainties in these two simulations, the areas
included in the rectangle of Fig. 16a and Fig. 16c are then zoomed-in to Fig. 16b
and Fig. 16d, respectively. Evidently, there are much less fluctuation for the
simulation where the absorption bias is set to 0 .1 (Fig. 16c and Fig. 16d) than
that with bias 1 (Fig. 16a and Fig. 16b), indicating that the cross section biasing
mechanism shows its capability in variance reduction in this example.
41Figure 17: Visualization of DiskChopper simulation in Prompt , with 100 neutrons
4.5. Chopper
A simulation example of disk chopper is presented where the results are
benchmarked with McStas, to demonstrate the ability of Prompt in neutron
optical component simulation.
The simulation is visualised in Fig. 17. A disc-shaped (tube of negligible
thickness) chopper with 4 axisymetrically arranged 20◦windows, of which the
outer radius and inner radius are respectively 0 .25 m and 0 .13 m and the rotation
frequency is 100 Hz, is located at 10 m away from a MaxwellianGun , which
produces 293 K Maxwellian distributed neutrons from a 1 mm ×1 mm opening
to another 10 m away 45 mm ×45 mm opening. The identical setup is reproduced
in McStas as well to benchmark the implementation in Prompt . A time-of-flight
scorer is positioned just behind and after the chopper to measure the impact of
the chopper on the beam.
The time-of-flight spectra are compared in Fig. 18. Prompt produced the
identical pattern as that from McStas. Eight peaks are evenly distributed in
the time axis with 25 ms spacing. That is consistent with the 400 Hz frequency
that the neutron beam sees the opening window.
420.000 0.005 0.010 0.015 0.020
Time-of-flight(s)101
100101102Normalized IntersityPrompt
McStasFigure 18: Benchmarking DiskChopper ofPrompt with Diskchopper ofMcStas
435. Outlook
A thermal neutron simulation system is presented. As a standalone system,
it is expected to be applicable in the areas of neutron instrument characterisa-
tion, optimisation as well as data analysis.
This system is the Monte Carlo module of the China Spallation Neutron
Source Simulation System ( Cinema ). Two associated cross section calculation
modules, Trajectory Analysis Toolkit(Tak) [DC22] and PiXiu, are currently
under active development. They are essentially the post-analysis modules for
molecular dynamics and density functional theory calculations, respectively. It
is expected that the overall system should provide a full tool-chain to predict
data that are directly comparable with instrument detector raw data from sam-
ple atomic structures and potentials. In parallel with Cinema , a machine learn-
ing framework is currently in the conceptual design phase. As the simulation
tool-chain can describe the instruments and samples as parameters, the initial
aim of this framework is for the optimisation of these parameters. To cope with
this framework, Prompt is expected to become purely pythonic at the very top
level shortly. It could be implemented as a python GDML manipulator or a di-
rect interface to the VecGeom code. In any case, the system will be backward
compatibility with the GDML user input introduced in this paper.
As an open source software project, it is straightforward to expand the sys-
tem to cover more applications. Therefore, the future development of Prompt
depends highly on community interest. For instance, a boundary overlap testing
logic may be required for simulations with more complex geometries; supporting
more particle types and physics models can enable the designs of moderators
and shielding. The release of this system opens up many possibilities, feedback
and inputs are welcome.
44Acknowledgements
This research is supported by the National Natural Science Foundation of
China (Grant No. 12075266) and the National Key Research and Development
Program of China (Grant No. 2022YFA1604100). The authors are grateful for
valuable discussions and substantial support.
References
[A+05] G Amadio et al. GeantV: results from the prototype of concur-
rent vector particle transport simulation in HEP (2020), 2005.
[ASL+12] D. L. Abernathy, M. B. Stone, M. J. Loguillo, M. S. Lucas,
O. Delaire, X. Tang, J. Y. Y. Lin, and B. Fultz. Design and op-
eration of the wide angular-range chopper spectrometer ARCS at
the Spallation Neutron Source. Review ofScientific Instruments,
83(1):015114, 2012.
[Ber17] Mads Bertelsen. Software forsimulation anddesign ofneutron
scattering instrumentation. PhD thesis, University of Copen-
hagen, Faculty of Science, Niels Bohr Institute, Nano . . . , 2017.
[CK20a] X.-X. Cai and T. Kittelmann. NCrystal: A library for ther-
mal neutron transport. Computer Physics Communications,
246:106851, 2020.
[CK20b] X.-X. Cai and T. Kittelmann. Ncrystal: A library for ther-
mal neutron transport. Computer Physics Communications,
246:106851, 2020.
[CKKM19] X.-X. Cai, T. Kittelmann, E. Klinkby, and J.I. M´ arquez Dami´ an.
Rejection-based sampling of inelastic neutron scattering. Journal
ofComputational Physics, 380:400–407, 2019.
45[CKL+18] Jie Chen, Le Kang, Huaile Lu, Ping Luo, Fangwei Wang, and
Lunhua He. The general purpose powder diffractometer at
CSNS. Physica B:Condensed Matter, 551:370–372, 2018. The
11th International Conference on Neutron Scattering (ICNS
2017).
[CMPS06] Radovan Chytracek, Jeremy McCormick, Witold Pokorski, and
Giovanni Santin. Geometry description markup language for
physics simulation and analysis applications. IEEE Transactions
onNuclear Science, 53(5):2892–2896, 2006.
[Cre13] Jay Theodore Cremer. Small Angle Scatter with Correlation,
Scatter and Intermediate Functions. In Advances inImaging
andElectron Physics, volume 175, pages 1–111. Elsevier, 2013.
[DC22] Rong Du and X.-X. Cai. Convolutional discrete Fourier trans-
form method for calculating thermal neutron cross section in
liquids. Journal ofComputational Physics, 466:111382, 2022.
[DGM14] J.I. M´ arquez Dami´ an, J.R. Granada, and D.C. Malaspina. CAB
models for water: A new evaluation of the thermal neutron scat-
tering laws for light and heavy water in ENDF-6 format. Annals
ofNuclear Energy, 65:280–289, 2014.
[DSTH99] L. L. Daemen, P. A. Seeger, T. G. Thelliez, and R. P. Hjelm.
A Monte Carlo tool for simulations of neutron scattering instru-
ments. AIPConference Proceedings, 479(1):41–46, 1999.
[EPN+11] G. Ehlers, A. A. Podlesnyak, J. L. Niedziela, E. B. Iverson, and
P. E. Sokol. The new cold neutron chopper spectrometer at the
Spallation Neutron Source: Design and performance. Review of
Scientific Instruments, 82(8):085108, 2011.
[gdm22] GDML USER’S GUIDE. https://gdml.web.cern.ch/GDML/
doc/GDMLmanual.pdf , 2022. [Last modified 06/10/2022].
46[Han15] Si Hang. TetGen, a Delaunay-based quality tetrahedral mesh
generator. ACM Trans. Math. Softw, 41(2):11, 2015.
[HFS+00] Bjørn C. Hauback, Helmer Fjellv˚ ag, Olav Steinsvoll, Kjell Jo-
hansson, Ole Tore Buset, and Johny Jørgensen. The high resolu-
tion Powder Neutron Diffractometer PUS at the JEEP II reactor
at Kjeller in Norway. Journal ofNeutron Research, 8(3):215–232,
2000.
[HMvdWea20] C.R. Harris, K.J. Millman, S.J. van der Walt, and et al. Array
programming with NumPy. Nature, 585:357–362, 2020.
[KC21] T. Kittelmann and X.-X. Cai. Elastic neutron scattering models
for NCrystal. Computer Physics Communications, 267:108082,
2021.
[KC23] Thomas Kittelmann and Xiao-Xiao Cai. NCrystal wikipedia.
https://github.com/mctools/ncrystal/wiki , 2023. Last ac-
cessed 1 Feb 2023.
[KKK+17] T. Kittelmann, E. Klinkby, E.B. Knudsen, P. Willendrup,
X.X. Cai, and K. Kanaki. Monte carlo particle lists: MCPL.
Computer Physics Communications, 218:17–42, 2017.
[KNI+11] Ryoichi Kajimoto, Mitsutaka Nakamura, Yasuhiro Inamura, Fu-
mio Mizuno, Kenji Nakajima, Seiko Ohira-Kawamura, Tetsuya
Yokoo, Takeshi Nakatani, Ryuji Maruyama, Kazuhiko Soyama,
Kaoru Shibata, Kentaro Suzuya, Setsuo Sato, Kazuya Aizawa,
Masatoshi Arai, Shuichi Wakimoto, Motoyuki Ishikado, Shin-
ichi Shamoto, Masaki Fujita, Haruhiro Hiraka, Kenji Ohoyama,
Kazuyoshi Yamada, and Chul-Ho Lee. The Fermi Chopper Spec-
trometer 4SEASONS at J-PARC. Journal ofthePhysical Society
ofJapan, 80(Suppl.B):SB025, 2011.
47[KYN+19] Ryoichi Kajimoto, Tetsuya Yokoo, Mitsutaka Nakamura, Yuki-
nobu Kawakita, Masato Matsuura, Hitoshi Endo, Hideki Seto,
Shinichi Itoh, Kenji Nakajima, and Seiko Ohira-Kawamura. Sta-
tus of neutron spectrometers at J-PARC. Physica B:Condensed
Matter, 562:148–154, 2019.
[LBC+11] Mats Lindroos, S Bousson, R Calaga, H˚ akan Danared, G De-
vanz, R Duperrier, J Eguia, Mohammad Eshraqi, S Gam-
mino, H˚ akan Hahn, et al. The European spallation source.
Nuclear Instruments andMethods inPhysics Research Section
B:Beam Interactions with Materials andAtoms, 269(24):3258–
3260, 2011.
[LN99] Kim Lefmann and Kristian Nielsen. McStas, a general soft-
ware package for neutron ray-tracing simulations. Neutron news,
10(3):20–23, 1999.
[LNA+06] K. Lefmann, Ch. Niedermayer, A.B. Abrahamsen, C.R.H. Bahl,
N.B. Christensen, H.S. Jacobsen, T.L. Larsen, P. H¨ afliger,
U. Filges, and H.M. Rønnow. Realizing the full potential of
a RITA spectrometer. Physica B:Condensed Matter, 385-
386:1083–1085, 2006.
[Lov84] S W Lovesey. Theory ofneutron scattering from condensed
matter. Vol.1.Nuclear scattering. Oxford Science Publications,
Jan 1984.
[MAA+06] T.E. Mason, D. Abernathy, I. Anderson, J. Ankner, T. Egami,
G. Ehlers, A. Ekkebus, G. Granroth, M. Hagen, K. Her-
wig, J. Hodges, C. Hoffmann, C. Horak, L. Horton, F. Klose,
J. Larese, A. Mesecar, D. Myles, J. Neuefeind, M. Ohl, C. Tulk,
X-L. Wang, and J. Zhao. The Spallation Neutron Source in
Oak Ridge: A powerful tool for materials research. Physica B:
Condensed Matter, 385-386:955–960, 2006.
48[MK10] R. MacFarlane and A. Kahler. Methods for processing ENDF/B-
VII with NJOY. Nucl. Data Sheets, 111(12):2739–2890, 2010.
[MW12] Marcus H. Mendenhall and Robert A. Weller. A probability-
conserving cross-section biasing mechanism for variance re-
duction in Monte Carlo particle transport calculations.
Nuclear Instruments andMethods inPhysics Research Section
A:Accelerators, Spectrometers, Detectors and Associated
Equipment, 667:38–43, 2012.
[OMR+04] M Ohl, M Monkenbusch, D Richter, C Pappas, K Lieutenant,
Th Krist, G Zsigmond, and F Mezei. The high-resolution neu-
tron spin-echo spectrometer for the SNS with τ≥1µs.Physica
B:Condensed Matter, 350(1-3):147–150, 2004.
[RSS62] A. Rahman, K. S. Singwi, and A. Sj¨ olander. Theory of Slow
Neutron Scattering by Liquids. I. Phys. Rev., 126:986–996, May
1962.
[Sch14] Helmut Schober. An Introduction to the Theory of Nuclear
Neutron Scattering in Condensed Matter. Journal ofNeutron
Research, 17(3-4):109 – 357, 2014.
[SD04] Philip A Seeger and Luke L Daemen. The neutron instru-
ment simulation package, NISP. In Advances inComputational
Methods forX-Ray andNeutron Optics, volume 5536, pages
109–123. SPIE, 2004.
[SDJE06] J. R. Santisteban, M. R. Daymond, J. A. James, and L. Edwards.
ENGIN-X: a third-generation neutron strain scanner. Journal of
Applied Crystallography, 39(6):812–825, Dec 2006.
[Sj¨ o58] Alf Sj¨ olander. Multi-phonon processes in slow neutron scattering
by crystals. Arkiv F¨ orfysik, 14(21):315–371, 1958.
49[ˇSK97] J ˇSaroun and J Kulda. RESTRAX—a program for TAS res-
olution calculation and scan profile simulation. Physica B:
Condensed Matter, 234:1102–1104, 1997.
[SK04] Jan Saroun and Jiri Kulda. Neutron ray-tracing simulations and
data analysis with RESTRAX. In Advances inComputational
Methods forX-Ray andNeutron Optics, volume 5536, pages
124–133. SPIE, 2004.
[Sk¨ o67] Kurt Sk¨ old. Small Energy Transfer Scattering of Cold Neutrons
from Liquid Argon. Phys. Rev. Lett., 19:1023–1025, Oct 1967.
[Sop13] Alan K Soper. The radial distribution functions of water as de-
rived from radiation total scattering experiments: Is there any-
thing we can say for sure? International Scholarly Research
Notices, 2013, 2013.
[Squ12] G. L. Squires. Introduction totheTheory ofThermal Neutron
Scattering. Cambridge University Press, 3 ed. edition, 2012.
[SSP95] Varley F. Sears, Eric C. Svensson, and Brian M. Powell. Phonon
density of states in vanadium. Canadian Journal ofPhysics,
73:726–734, 1995.
[Tay06] Andrew Taylor. PROGRESS at the ISIS Facility. Physica B:
Condensed Matter, 385-386:728–731, 2006.
[TL94] Greg Turk and Marc Levoy. Zippered polygon meshes from
range images. In Proceedings ofthe21st annual conference on
Computer graphics andinteractive techniques, pages 311–318,
1994.
[VH54] L´ eon Van Hove. Correlations in Space and Time and Born Ap-
proximation Scattering in Systems of Interacting Particles. Phys.
Rev., 95:249–262, Jul 1954.
50[WCC+09] Jie Wei, Hesheng Chen, Yanwei Chen, Yuanbo Chen, Yun-
long Chi, Changdong Deng, Haiyi Dong, Lan Dong, Shouxian
Fang, Ji Feng, et al. China spallation neutron source: design,
R&D, and outlook. Nuclear Instruments andMethods inPhysics
Research Section A:Accelerators, Spectrometers, Detectors and
Associated Equipment, 600(1):10–13, 2009.
[WFK+22] P. Willendrup, E. Farhi, E. Knudsen, U. Filges, and K. Lefmann.
Component Manual for the Neutron Ray-Tracing Package Mc-
Stas, version 2.7.2. https://www.mcstas.org/download/
components/2.7.2/doc/manuals/mcstas-components.pdf ,
December 2022.
[WL20] Peter Kjær Willendrup and Kim Lefmann. McStas (i): Intro-
duction, use, and basic principles for ray-tracing simulations.
Journal ofNeutron Research, 22:1–16, 2020.
[ZLM02] G Zsigmond, K Lieutenant, and F Mezei. Monte Carlo simu-
lations of neutron scattering instruments by VITESS: Virtual
instrumentation tool for ESS. Neutron News, 13(4):11–14, 2002.
[ZLM+04] G Zsigmond, K Lieutenant, S Manoshin, HN Bordallo, JDM
Champion, J Peters, JM Carpenter, and F Mezei. A sur-
vey of simulations of complex neutronic systems by VITESS.
Nuclear Instruments andMethods inPhysics Research Section
A:Accelerators, Spectrometers, Detectors and Associated
Equipment, 529(1-3):218–222, 2004.
51Appendix A. Supported solids
Appendix A.1. Arbitrary trapezoid
Listing A.1: An example: definition of an arbitrary trapezoid
<arb8 lunit="mm" name="Arb8Solid" v1x="-30" v1y="-60" v2x="30"
,→v2y="-60" v3x="50" v3y="60" v4x="-50" v4y="60" v5x="-30" v5y="-
,→60" v6x="30" v6y="-60" v7x="50" v7y="60" v8x="-50" v8y="60" dz=
,→"70"/>
X YZ
Figure A.1: Visualization of an arbitrary trapezoid
Table A.1: Parameters for defining an arbitrary trapezoid. If not specified, default
length unit is mm
52Parameter Description
v1x vertex 1 x position
v1y vertex 1 y position
v2x vertex 2 x position
v2y vertex 2 y position
v3x vertex 3 x position
v3y vertex 3 y position
v4x vertex 4 x position
v4y vertex 4 y position
v5x vertex 5 x position
v5y vertex 5 y position
v6x vertex 6 x position
v6y vertex 6 y position
v7x vertex 7 x position
v7y vertex 7 y position
v8x vertex 8 x position
v8y vertex 8 y position
dz half z length
Appendix A.2. Box
Listing A.2: An example: definition of a box. If not specified, default length
unit is mm
<box lunit="mm" name="BoxSolid" x="100.0" y="100.0" z="100.0"/>
Table A.2: Parameters for defining a box. If not specified, default length unit is mm
Parameter Description
x half length in x direction
y half length in y direction
z half length in z direction
53X YZFigure A.2: Visualization of a box
Appendix A.3. Cone
Listing A.3: An example: definition of a cone
<cone aunit="deg" lunit="mm" name="ConeSolid" rmin1="0.0" rmax1=
,→"50.0" rmin2="0.0" rmax2="10.0" z="120.0" deltaphi="360.0"
,→startphi="0.0" />
X YZ
Figure A.3: Visualization of a cone
Table A.3: Parameters for defining a cone. If not specified, default length unit is
mm, default angle unit is deg
54Parameter Description
rmin1 inner radius at base of cone
rmax1 outer radius at base of cone
rmin2 inner radius at top of cone
rmax2 outer radius at top of cone
z height of cone segment
startphi start angle of the segment
deltaphi angle of the segment
Appendix A.4. CutTube
Listing A.4: An example: definition of a cutTube
<cutTube aunit="deg" lunit="mm" name="CutTubeSolid" rmin="10.0"
,→rmax="25.0" z="50.0" deltaphi="360.0" startphi="0.0" lowX="-5"
,→lowY="-5" lowZ="-5" highX="5" highY="5" highZ="5"/>
XYZ
Figure A.4: Visualization of a cutTube
Table A.4: Parameters for defining a cutTube. If not specified, default length unit
ismm, default angle unit is deg
55Parameter Default Description
z length along z axis
rmin 0.0 inner radius
rmax outer radius
startphi 0.0 starting phi angle of segment
deltaphi delta phi of angle
lowX normal at lower z plane
lowY normal at lower z plane
lowZ normal at lower z plane
highX normal at upper z plane
highY normal at upper z plane
highZ normal at upper z plane
Appendix A.5. General trapezoid
Listing A.5: An example: definition of a general trapezoid
<trap lunit="mm" name="TrapSolid" z="130" thata="45" phi="45" y1=
,→"60" x1="40" x2="40" alpha1="45" y2="60" x3="40" x4="40"
,→alpha2="45"/>
XYZ
Figure A.5: Visualization of a general trapezoid
Table A.5: Parameters for defining a general trapezoid. If not specified, default
length unit is mm
56Parameter Description
z length along z axis
theta polar angle to faces joining at -/+z
phi azimuthal angle of line joining centre of –z face to centre of
+z face
y1 length along y at the face -z
x1 length along x at side y = -y1 of the face at -z
x2 length along x at side y = +y1 of the face at -z
alpha1 angle with respect to the y axis from the centre of side at y
= -y1 to centre of y = +y1 of the face at -z
y2 length along y at the face +z
x3 length along x at side y = -y1 of the face at +z
x4 length along x at side y = +y1 of the face at +z
alpha2 angle with respect to the y axis from the centre of side at y
= -y2 to centre of y = +y2 of the face at +z
Appendix A.6. Hyperbolic tube
Listing A.6: An example: definition of a hyperbolic tube
<hype lunit="mm" name="HypeSolid" rmin="10" rmax="20" z="100"
,→inst="0.785" outst="0.785"/>
X YZ
Figure A.6: Visualization of a hyperbolic tube
57Table A.6: Parameters for defining a hyperbolic tube. If not specified, default length
unit is mm. Stereo angle unit can only be rad
Parameter Description
rmin inside radius of tube
rmax outside radius of tube
inst inner stereo
outst outer stereo
z z length
Appendix A.7. Orb
Listing A.7: An example: definition of an orb
<orb lunit="mm" name="OrbSolid" r="50"/>
X YZ
Figure A.7: Visualization of an orb
Table A.7: Parameters for defining an orb. If not specified, default length unit is
mm
Parameter Description
r radius
58Appendix A.8. Paraboloid
Listing A.8: An example: definition of a paraboloid
<paraboloid lunit="mm" name="ParaboloidSolid" rlo="60.0" rhi="10.
,→0" dz="60.0"/>
X YZ
Figure A.8: Visualization of a paraboloid
Table A.8: Parameters for defining a paraboloid. If not specified, default length unit
ismm
Parameter Description
rlo radius at -z
rhi radius at +z
dz z length
Appendix A.9. Polycone
Listing A.9: An example: definition of a polycone
<polycone aunit="deg" lunit="mm" name="PolyconeSolid" deltaphi=
,→"360.0" startphi="0.0">
<zplane rmin="10.0" rmax="20.0" z="60.0"/>
<zplane rmin="30.0" rmax="50.0" z="-50.0" />
</polycone>
Table A.9: Parameters for defining a polycone. If not specified, default length unit
ismm, default angle unit is deg
59X YZFigure A.9: Visualization of a polycone
Parameter Default Sub-parameter and description
startphi 0.0 start angle of the segment
deltaphi angle of the segment
zplane 0.0 rmin inner radius of cone at this point
rmax outer radius of cone at this point
z z coordinate of the plane
Appendix A.10. Polyhedra
Listing A.10: An example: definition of a polyhedra
<polyhedra aunit="deg" lunit="mm" name="PolyhedraSolid" deltaphi=
,→"360.0" startphi="0.0" numsides="6">
<zplane rmin="20.0" rmax="50.0" z="-50.0"/>
<zplane rmin="5.0" rmax="10.0" z="0.0"" />
<zplane rmin="10.0" rmax="30.0" z="60.0" />
</polyhedra>
Table A.10: Parameters for defining a polyhedra. If not specified, default length
unit is mm, default angle unit is deg
60X YZFigure A.10: Visualization of a polyhedra
Parameter Default Sub-parameter and description
startphi start angle of the segment
deltaphi angle of the segment
numsides number of sides
zplane 0.0 rmin inner radius of cone at this point
rmax outer radius of cone at this point
z z coordinate of the plane
Appendix A.11. Sphere
Listing A.11: An example: definition of a sphere
<sphere aunit="deg" lunit="mm" name="SphereSolid" rmin="0.0"
,→rmax="60.0" deltaphi="180.0" startphi="0.0" deltatheta="90.0"
,→starttheta="0.0"/>
Table A.11: Parameters for defining a sphere. If not specified, default length unit is
mm, default angle unit is deg
61X YZFigure A.11: Visualization of a sphere
Parameter Default Description
rmin 0.0 inner radius
rmax outer radius
startphi 0.0 starting angle of the segment
deltaphi delta angle of the segment
starttheta 0.0 starting angle of the segment
deltatheta delta angle of the segment
Appendix A.12. Tetrahedron
Listing A.12: An example: definition of a tetrahedron
<define>
<position name="v1" x="-70" y="-70" z="-60"/>
<position name="v2" x="70" y="-40" z="-60"/>
<position name="v3" x="0" y="60" z="-60"/>
<position name="v4" x="0" y="0" z="60"/>
</define>
<tet name="TetrahedronSolid" vertex1="v1" vertex2="v2" vertex3=
,→"v3" vertex4="v4"/>
Table A.12: Parameters for defining a tetrahedron. If not specified, default length
unit is mm
62X YZFigure A.12: Visualization of a tetrahedron
Parameter Description
vertex1 vertex 1 position
vertex2 vertex 2 position
vertex3 vertex 3 position
vertex4 vertex 4 position
Appendix A.13. Trapezoid
Listing A.13: An example: definition of a trapezoid
<trd lunit="mm" name="TrdSolid" x1="50" x2="100" y1="60" y2="80
,→" z="130"/>
X YZ
Figure A.13: Visualization of a trapezoid
63Table A.13: Parameters for defining a trapezoid. If not specified, default length unit
ismm
Parameter Description
x1 x length at -z
x2 x length at +z
y1 y length at -z
y2 y length at +z
z z length
Appendix A.14. Tube
Listing A.14: An example: definition of a tube
<tube aunit="deg" lunit="mm" name="TubeSolid" rmin="10.0" rmax=
,→"50.0" z="120.0" deltaphi="360.0" startphi="0.0"/>
X YZ
Figure A.14: Visualization of a tube
Table A.14: Parameters for defining a tube. If not specified, default length unit is
mm, default angle unit is deg
64Parameter Default Description
rmin 0.0 inside radius of segment
rmax outside radius of segment
z z length of tube segment
startphi 0.0 starting phi position angle of segment
deltaphi delta angle of segment
Appendix B. Particle guns
Appendix B.1. SimpleThermalGun
Table B.1: Parameters available in SimpleThermalGun configuration strings. Param-
eters without default values are required, the others are optional.
Parameter Default Description Unit
energy 0 Energy of particles. The value can be
positive1or zero2.eV
position Position of primary particles. mm
direction 0,0,1 Direction vector of primary particles. mm
1Single energy of input value.
2Maxwell’s distribution with temperature of 293 K.
Appendix B.2. IsotropicGun
Table B.2: Parameters available in IsotropicGun configuration strings. Parameters
without default values are required, the others are optional.
Parameter Default Description Unit
energy 0 Energy of particles. The value can be
positive1or zero2.eV
position Position of primary particles. mm
1Single energy of input value.
2Maxwell’s distribution with temperature of 293 K.
65Appendix B.3. UniModeratorGun
Table B.3: Parameters available in UniModeratorGun configuration strings. Param-
eters without default values are required, the others are optional.
Parameter Default Description Unit
srcw X-dimension (width) of particle source
surface.mm
srch Y-dimension (height) of particle source
surface.mm
srcz Z-coordinate of particle source center in
global reference system.mm
slit w X-dimension (width) of slit surface. mm
slit h Y-dimension (height) of slit surface. mm
slit z Z-coordinate of slit center in global ref-
erence system.mm
mean wl 1 Mean wavelength of primary particles. ˚A
range wl 0.0001 The width of the uniform wavelength
distribution.˚A
Appendix B.4. MaxwellianGun
Table B.4: Parameters available in MaxwellianGun configuration strings. Parameters
without default values are required, the others are optional.
Parameter Default Description Unit
srcw X-dimension (width) of particle source
surface.mm
srch Y-dimension (height) of particle source
surface.mm
srcz Z-coordinate of particle source center in
global reference system.mm
slit w X-dimension (width) of slit surface. mm
slit h Y-dimension (height) of slit surface. mm
slit z Z-coordinate of slit center in global ref-
erence system.mm
temperature 293.15 Temperature of Maxwellian energy dis-
tribution.K
66Appendix B.5. MCPLGun
Table B.5: Parameters available in MCPLGun configuration strings. Parameters with-
out default values are required, the others are optional.
Parameter Default Description Unit
mcplfile Input MCPL file. str
Appendix C. Scorers
Appendix C.1. ESpectrum
Table C.1: Parameters available in ESpectrum configuration strings. Parameters
without default values are required, the others are optional.
Parameter Default Description Unit
name Name of the histogram. str
min Minimum energy of the histogram. eV
max Maximum energy of the histogram. eV
numbin 100 Bin number of the histogram. 1
ptstate ENTRY Particle tracing state, available op-
tions are: SURFACE ,ENTRY ,ABSORB ,
PROPAGATE ,EXIT.str
Appendix C.2. WlSpectrum
Table C.2: Parameters available in WlSpectrum configuration strings. Parameters
without default values are required, the others are optional.
Parameter Default Description Unit
name Name of the histogram. str
min Minimum wavelength of the histogram. ˚A
max Maximum wavelength of the histogram. ˚A
numbin 100 Bin number of the histogram. 1
ptstate ENTRY Particle tracing state, available op-
tions are: SURFACE ,ENTRY ,ABSORB ,
PROPAGATE ,EXIT.str
67Appendix C.3. TOF
Table C.3: Parameters available in TOFconfiguration strings. Parameters without
default values are required, the others are optional.
Parameter Default Description Unit
name Name of the histogram. str
min Minimum time of the histogram. s
max Maximum time of the histogram. s
numbin 100 Bin number of the histogram. 1
ptstate ENTRY Particle tracing state, available op-
tions are: SURFACE ,ENTRY ,ABSORB ,
PROPAGATE ,EXIT.str
Appendix C.4. PSD
Table C.4: Parameters available in PSDconfiguration strings. Parameters without
default values are required, the others are optional.
Parameter Default Description Unit
name Name of the histogram. str
xmin Minimum x of the histogram. mm
xmax Maximum x of the histogram. mm
numbin x 100 Bin number of X-axis. 1
ymin Minimum y of the histogram. mm
ymax Maximum y of the histogram. mm
numbin y 100 Bin number of Y-axis. 1
type XY Projection plane of the volume, can be
set to: XY1,XZorYZ.str
ptstate ENTRY Particle tracing state, available op-
tions are: SURFACE ,ENTRY ,ABSORB ,
PROPAGATE ,EXIT.str
1For instance, XYimplies the projection of the volume on XY-plane.
68Appendix C.5. MultiScat
Table C.5: Parameters available in MultiScat configuration strings. Parameters
without default values are required, the others are optional.
Parameter Default Description Unit
name Name of the histogram. str
min 0 Minimum scattering number of the his-
togram.1
max 5 Maximum scattering number of the his-
togram.1
linear yes Linear option for X-axis of the
histogram1.str
1The default, yes, implies the linear X-axis, while nochanges the X-axis to
log scale.
69Appendix C.6. DeltaMomentum
Table C.6: Parameters available in DeltaMomentum configuration strings. Parameters
without default values are required, the others are optional.
Parameter Default Description Unit
name Name of the histogram. str
sample pos Position vector of sample in global
reference.mm
beam dir Direction vector of beam. mm
dist Distance between neutron source and
sample.mm
min Minimum Qof the histogram. ˚A−1
max Maximum Qof the histogram. ˚A−1
numbin 100 Bin number of the histogram. 1
method 0 Method for calculating momentum
transfer Q1.str
ptstate ENTRY Particle tracing state, available
options are: SURFACE ,ENTRY ,ABSORB ,
PROPAGATE ,EXIT.str
linear yes Linear option for X-axis of the
histogram2.str
scatnum -1 Scattering number to be counted3. 1
1The default value 0 implies momentum transfer of inelastic scattering, while
a value of 1 means momentum transfer of elastic scattering.
2The default, yes, implies the linear X-axis, while nochanges the X-axis to
log scale.
3Should be an integer greater than or equal to -1. The default value implies
the histogram accumulates event regardless of the scattering number. Other
values enables the accumulation on the specified scattering number. The
scattering number is counted by a MultiScat scorer, hence such a scorer
should be attached to the volume of interest if scatnum is other than -1.
70Appendix C.7. Angular
Table C.7: Parameters available in Angular configuration strings. Parameters without
default values are required, the others are optional.
Parameter Default Description Unit
name Name of the histogram. str
sample pos Position vector of sample in global
reference.mm
beam dir Direction vector of beam. mm
dist Distance between particle source and
sample.mm
min Minimum scattering angle of the
histogram, range of which should be
[0,180]◦.◦
max Maximum scattering angle of the
histogram, range of which should be
[0,180]◦.◦
numbin 100 Bin number of the histogram. 1
ptstate ENTRY Particle tracing state, available
options are: SURFACE ,ENTRY ,ABSORB ,
PROPAGATE ,EXIT.str
linear yes Linear option for X-axis of the
histogram1.str
1The default, yes, implies the linear X-axis, while nochanges the X-axis to
log scale.
71Appendix C.8. VolFluence
Table C.8: Parameters available in VolFluence configuration strings. Parameters
without default values are required, the others are optional.
Parameter Default Description Unit
name Name of the histogram. str
min Minimum energy of the histogram. eV
max Maximum energy of the histogram. eV
numbin 100 Bin number of the histogram. 1
ptstate PROPAGATE Particle tracing state, available op-
tions are: SURFACE ,ENTRY ,ABSORB ,
PROPAGATE ,EXIT.str
linear yes Linear option for X-axis of the
histogram1.str
1The default, yes, implies the linear X-axis, while nochanges the X-axis to
log scale.
72
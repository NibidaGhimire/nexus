FINITELY ACCESSIBLE ARBOREAL ADJUNCTIONS AND
HINTIKKA FORMULAE
LUCA REGGIO AND COLIN RIBA
Abstract. Arboreal categories provide an axiomatic framework in which abstract no-
tions of bisimilarity and back-and-forth games can be defined. They act on extensional
categories, typically consisting of relational structures, via arboreal adjunctions. In
many cases, equivalence of structures in fragments of infinitary first-order logic can be
captured by transferring the bisimilarity relation along the adjunction.
In most applications, the categories involved are locally finitely presentable and the
adjunctions are finitely accessible. Our main result identifies the expressive power of this
class of adjunctions. We show that the ranks of back-and-forth games in the arboreal
category are definable by formulae ` a laHintikka, and thus the relation between exten-
sional objects induced by bisimilarity is always coarser than equivalence in infinitary
first-order logic.
Our approach leverages Gabriel-Ulmer duality for locally finitely presentable categor-
ies, and Hodges’ word-constructions.
Contents
1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1
2 Preliminaries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
3 Back-and-forth equivalence . . . . . . . . . . . . . . . . . . . . . . . . . 10
4 Arboreal categories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
5 Gabriel-Ulmer duality . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27
6 Functorial semantics for cartesian theories . . . . . . . . . . . . . . . 30
7 Hintikka formulae for back-and-forth games . . . . . . . . . . . . . . 37
8 Formulae for embeddings . . . . . . . . . . . . . . . . . . . . . . . . . . 45
9 Proof of the main result . . . . . . . . . . . . . . . . . . . . . . . . . . . 52
10 The factorisation property . . . . . . . . . . . . . . . . . . . . . . . . 63
11 Conclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71
Appendix A Lfp categories as categories of structures . . . . . . . . . 74
Appendix B Additional material for §2 (Preliminaries) . . . . . . . . 75
1.Introduction
Model comparison games, such as Ehrenfeucht-Fra¨ ıss´ e and pebble games, are an im-
portant tool in model theory, as they provide semantic characterisations of equivalence of
models in given logic fragments, see e.g. [31, 47]. They are one of the few model-theoretic
methods that restrict to finite structures and are thus central to finite model theory; see
e.g. [23, 43]. The present work is concerned with a class of categories (which extends the
class of arboreal categories of [5, 6]) in which abstract games can be defined, generalising
the games mentioned above and many others.
We start with a slight reformulation of a well-known example. Let ⟨⃗ x|φ⟩be a
finite structure consisting of generators ⃗ x=x1, . . . , x nsubject to a condition φ=φ(⃗ x)
1arXiv:2304.12709v2  [cs.LO]  4 Feb 2025expressed as a conjunction of equality constraints xi˙ =xjand order constraints xi˙< x j.
Consider ordered structures MandN, and homomorphisms m, n as shown below.
⟨⃗ x|φ⟩
M Nm n
The arrows ↣denote order embeddings. This situation can be regarded as a position
in the Ehrenfeucht-Fra¨ ıss´ e game played by Spoiler andDuplicator onMandN. In the
next round, Spoiler moves by choosing one of the embeddings mandn(saym), and by
extending it as shown by the solid arrows below.
⟨⃗ x|φ⟩
M ⟨⃗ x, x′|φ∧φ′⟩ Nm n
(Spoiler) (Duplicator)
Duplicator has to respond by extending the other embedding (in this case n) as indicated
by the dotted arrow above. The game then continues from the new position, and Duplic-
ator wins if they can respond to all of Spoiler’s moves. For instance, Duplicator wins if M
andNare dense linear orders without endpoints (such as QandR), see e.g. [55, §14.2].
A well-known result of Karp [39] then implies that MandNsatisfy the same formulae
of infinitary first-order logic L∞=L∞,ωwhere infinite conjunctions and disjunctions (of
any arity) are allowed.
An advantage of the game perspective is that parameters such as the number of rounds
in Ehrenfeucht-Fra¨ ıss´ e games, or the number of pebbles in pebble games, naturally cor-
respond to complexity measures of formulae such as the quantifier rank, or the number
of variables. Stratifying formulae in terms of the number of logical resources they use is
pervasive in finite model theory and is at the heart of descriptive complexity, cf e.g. [32].
An insight of the comonadic approach to model comparison games, put forward in [2]
and developed in [8, 9] by Abramsky, Dawar and their collaborators, is that the set of all
plays of a game in a given relational structure forms itself a structure of the same type.
Furthermore, this assignment yields an endofunctor on the category of structures and their
homomorphisms, which is in fact a comonad, called a game comonad . This applies to
various games, such as Ehrenfeucht-Fra¨ ıss´ e, pebble, and modal bisimulation games. Game
comonads, and their axiomatic extension in the form of arboreal categories andarboreal
adjunctions [5, 6], provide a purely categorical view on many model comparison games, as
well as on the corresponding logical resources and combinatorial parameters of structures.
In particular, arboreal categories allow abstract notions of games to be defined, and
equivalence of objects in these games can be captured by a notion of bisimilarity closely
related to Joyal, Nielsen and Winskel’s open-map bisimilarity [37, 38]. For a recent survey
on game comonads and arboreal categories, see [7].
An arboreal category Acomes equipped with a factorisation system (consisting of
quotients andembeddings ) which induces a notion of back-and-forth game, and thus of
back-and-forth equivalence, between objects of A. The arboreal category Atypically acts
on a category E, called the extensional category (e.g. a category of relational structures),
via an arboreal adjunction , i.e. an adjunction of the form
A E.L
⊥
R
2In particular we can transfer the back-and-forth equivalence relation along the adjunction
to the category E: two objects M, N ∈Eare equivalent in the transferred relation if,
and only if, RM andRNare back-and-forth equivalent in A. In this way, we recover
equivalence of structures in a number of logic fragments.
In many concrete examples, the logics involved are fragments of L∞, and the arboreal
adjunctions satisfy the following additional properties:
(i) the categories EandAare locally finitely presentable (in the sense of, e.g., [13]),
(ii) the right adjoint Ris finitary, i.e. it preserves filtered colimits.
An adjunction between locally finitely presentable categories where the right adjoint
preserves filtered colimits is customarily called a finitely accessible adjunction, hence we
refer to arboreal adjunctions L:A⇄E:Rsatisfying the two conditions above as finitely
accessible arboreal adjunctions . For example, the arboreal adjunction associated with
the Ehrenfeucht-Fra¨ ıss´ e comonad is finitely accessible, and the induced back-and-forth
equivalence relation captures equivalence of structures in the full logic L∞.
Our main result yields a converse to this for finitely accessible arboreal adjunctions.
Under mild additional assumptions, we show that if M, N∈EareL∞-equivalent, then
RM andRNare back-and-forth equivalent in A. Hence, the arboreal back-and-forth
equivalence relations cannot distinguish between L∞-equivalent models. This identifies
a tight upper bound for the expressive power of finitely accessible arboreal adjunctions.
Our results apply to what we will call wooded categories , obtained by weakening the no-
tion of arboreal category. The axioms for an arboreal category imply that back-and-forth
equivalence in an arboreal category Acoincides with bisimilarity via (a suitable notion
of) open maps. Moreover, there is a functor P:A→Tree , into the category Tree of
trees and height-preserving monotone maps, which allows us to regard many construc-
tions in Aas “concrete over trees”. While these properties support the arboreal notion of
back-and-forth equivalence, they are not needed for our main results. Thus, among the
axioms for arboreal categories, we adopt only those that are needed to define back-and-
forth equivalence. This essentially amounts to requiring a good a factorisation system;
we call the resulting categories wooded as they may be much less densely populated with
trees than arboreal categories.
Technical overview of our main result. We give a high-level overview of the proof structure
of our main results and the tools used.
An important assumption in our main result is based on the observation that, in
most examples, the class of embeddings in the arboreal (or, more generally, wooded)
category Ais determined by the class of substructure embeddings in E. To make this
precise we rely on Gabriel-Ulmer duality [27] (cf. also [13, 12]), which can be viewed as
a syntax-semantics duality between locally finitely presentable categories and cartesian
theories . The latter, as introduced by Coste in [20], consist of implications between
formulae which are constructed using only (finite) conjunctions and provably unique
existential quantifiers (cf. also [36, §§D1–2]). Locally finitely presentable categories can
then be identified, up to equivalence, with the categories of models of cartesian theories
(where morphisms are all homomorphisms).
Consider now a finitely accessible wooded adjunction L:C⇄E:R, i.e. a finitely
accessible adjunction between locally finitely presentable categories such that Cis wooded.
Assume that Σis a (possibly many-sorted and infinite) signature such that Eis (equivalent
to) the category of models of a cartesian theory in Σ. We say that L:C⇄E:Rdetects
embeddings in Σwhen the following holds:1
1Our main result actually assumes a weaker condition of “detection of path embeddings”.
3•a morphism of Cis an embedding if, and only if, its image under the left adjoint
Lis an embedding of Σ-structures in E.
Our main result states that
M, N∈Eequivalent in L∞(Σ) =⇒RM, RN back-and-forth equivalent in C.
The proof strategy is as follows. The back-and-forth games in Care closed in the usual
sense and are equipped with a customary notion of ordinal rank of positions; cf. e.g. [31,
§3.4] or [41, §20B]. Assuming some definability of embeddings in C, and working with
Coste’s syntactic categories, for each a∈Cwe devise “Hintikka formulae” that define the
ordinal ranks of the games played in a. Under Gabriel-Ulmer duality, the right adjoint
Rinduces an interpretation of theories in the reverse direction, so the Hintikka formulae
forRM inC(which are written in a signature Γsuch that Cis the category of models of
a cartesian theory in Γ) can be translated to formulae for MinE.
To obtain the desired result, we show that our assumption about the definability of
embeddings in Cis satisfied if L:C⇄E:Rdetects embeddings in Σ. For this purpose,
we use some definability of substructure embeddings in E, so that Hintikka formulae for
RM inCdepend on formulae over LRM inE. This time there is no interpretation
induced by Gabriel-Ulmer duality (since we consider the left adjoint, instead of the right
one), so to translate the infinitary theory of LRM into the infinitary theory of RM we
use a version of Hodges’ word-constructions [29, 30] (cf. also [31, §9.3]).
Note, however, that the notion of substructure embedding in a locally finitely present-
able category Eis somewhat problematic. As mentioned above, any such Eis equivalent
to the category of models of a cartesian theory in some signature Σ. But there are several
possible choices of Σfor a given E, and the notion of substructure embedding in Ede-
pends on such a choice. Even when Σcan be chosen to be mono-sorted, finite and purely
relational, Hintikka formulae relative to Ecan be much more complicated than Hintikka
formulae relative to the category of Σ-structures. The situation is considerably simplified
if the finitely accessible adjunction L:C⇄E:Rhas the factorisation property , i.e. it
factors through the usual reflection of Einto the category of Σ-structures. We show that
the factorisation property holds in some natural examples, but that it fails in general
(even if we assume that the wooded category Cis arboreal).
Organization of the paper. After some preliminaries in §2, in §3 we present back-and-
forth equivalence for wooded catategories and for finitely accessible wooded adjunctions.
This leads to the statement of our main result, namely Theorem 3.29, in §3.4. We
provide some background on arboreal categories in §4, as many of our examples of wooded
categories fall into this class. Much of the remainder of the paper is then devoted to the
proof of Theorem 3.29. In §§5–6 we recall some material on locally finitely presentable
categories and functorial semantics. In §7, assuming some definability of embeddings in
a locally finitely presentable wooded category C, we devise Hintikka formulae for ordinal
ranks, and obtain a weaker version of Theorem 3.29. In §8, we discuss the definability of
substructure embeddings in a locally finitely presentable category E. We then complete
the proof of Theorem 3.29 in §9: using word-constructions, we transfer the formulae
defining substructure embeddings in Eto the wooded category C. Finally, we discuss the
factorisation property in §10.
2.Preliminaries
We assume familiarity with the basic notions of category theory; standard references
include [44, 10]. Throughout, Setdenotes the category of (small) sets and functions. If C
andDare categories, then [ C,D] is the category of functors from CtoD, with morphisms
4the natural transformations. The functor category [ Cop,Set] is denoted by bCand referred
to as the category of presheaves over C. A lex-morphism is a functor between finitely
complete categories that preserves finite limits. If CandDare finitely complete, then
lex [C,D] is the full subcategory of [ C,D] consisting of the lex-morphisms. A functor is
finitary if it preserves filtered colimits.
2.1.Structures and infinitary first-order logic. We consider many-sorted , possibly
infinite, first-order signatures. Such a signature Σconsists of a set Sort( Σ) ofsorts, to-
gether with collections Fun( Σ) and Rel( Σ) offunction andrelation symbols , respectively.
We reserve the symbol σfor mono-sorted purely relational signatures.
AΣ-structure Mis a family of sets ( M(τ)|τ∈Sort(Σ)) together with, for each
function symbol f∈Fun(Σ), a function fMinterpreting f, and for each relation symbol
R∈Rel(Σ), a relation RMinterpreting R. Ahomomorphism ofΣ-structures h:M→N
is a family of functions ( hτ:M(τ)→N(τ)|τ∈Sort(Σ)) preserving the interpretations
of function and relation symbols. We denote by Str(Σ) the category of Σ-structures and
their homomorphisms.
The atomic formulae inΣare the (sorted) equalities ( t˙ =τu) and the formulae of
the form R(t1, . . . , t n), where R∈Rel(Σ) and t, u, t 1, . . . , t nare terms in Σ. We write
L∞(Σ), or simply L∞when the signature is clear from the context, for the (large) set of
formulae built from atomic formulae in Σusing arbitrary (set-indexed) conjunctions and
disjunctions, along with ¬,∃,∀. For a cardinal κ, we write Lκfor the set of formulae whose
conjunctions and disjunctions have cardinality < κ. Hence, Lωconsists of the ordinary
finite first-order formulae. In any case, we only consider formulae whose subformulae
have finitely many free variables (thus, with the notation of [31, 23], L∞=L∞,ω). There
is a rich literature on the (non-trivial) expressiveness of L∞. See e.g. [31].
Aformula-in-context is a pair ( φ,Γ), always denoted by Γ ::=φ, consisting of a for-
mula φand a context
Γ =x1:τ1, . . . , x n:τn,
where the xi’s are pairwise distinct. We require Γ to declare all the free variables of φ
with the appropriate sort. Given a structure M∈Str(Σ), a formula-in-context Γ ::=φ
induces a set
JΓ|φKM:={(a1, . . . , a n)∈M(τ1)× ··· × M(τn)|M|=φ(a1, . . . , a n)}.
We say that Γ ::=φisvalid inMif
JΓ|φKM=M(τ1)× ··· × M(τn).
When sorts are notationally irrelevant, we simply write ⃗ xfor Γ = x1:τ1, . . . , x n:τn, and
similarly for homomorphisms and carriers of structures.
We write ∅for the empty context. Note that if φis a sentence, then J∅ |φKMis a
subset of the singleton set 1. In this case, we have M|=φprecisely when J∅ |φKM=1.
2.2.Cartesian theories. Cartesian theories consist of implications between ∧∃-formulae
in which only provably unique existential quantifications are allowed. They have been
introduced by Coste [20] as a purely logical characterisation of locally finitely present-
able categories. We briefly review the latter in §2.3; further explanations and details are
provided in §§5–6. We mostly follow the presentation in [36, §D1].
LetΣbe a signature. A sequent in Σis a triple of the form
ψ⊢Γφ
where Γ ::=ψand Γ ::=φare formulae-in-context of Σ. A theory TinΣis a set of
sequents in Σ.
5Definition 2.1 (Cartesian theory) .LetTbe a theory in a signature Σ.
(1) The set of formulae-in-context that are cartesian over Tis inductively defined as
follows:
•atomic formulae-in-context are cartesian over T;
•cartesian formulae are closed under finite conjunctions;
•given a cartesian formula-in-context Γ , x:τ::=φ, the formula Γ ::= (∃x:τ)φ
is cartesian over TifTproves the sequent φ∧φ[y/x]⊢Γ,x:τ,y:τx˙ =τy.
(2) A sequent ψ⊢Γφiscartesian over Tif both ψ, φare.
(3) We say that Tis acartesian theory when its axioms can be well-ordered so that
each axiom is cartesian over the set of its predecessors.
LetM∈Str(Σ). A sequent ψ⊢Γφisvalid inMifJΓ|ψKM⊆JΓ|φKM, and Mis a
model of a theory Tif all sequents in Tare valid in M. We denote by
Mod (T)
the full subcategory of Str(Σ) defined by the models of T.
Remark 2.2. Cartesian theories consist of (sequents of) ∧∃-formulae, hence they are
special cases of regular theories. Further, they admit a completeness theorem stating
that any cartesian theory has enough models in Setto determine intuitionistic provability
(see e.g. [36, Proposition D1.5.1]). In particular, classical and intuitionistic provability
coincide for cartesian theories.2
Example 2.3 (Cartesian theories of functors) .Given a small category C, consider the
signature Σ(C) with sorts the objects of C, function symbols the morphisms of C, and no
predicate symbols. Let T(C) be the equational theory with axioms
⊤ ⊢ x:aida(x) ˙ =ax ⊤ ⊢ x:a(g◦f)(x) ˙ =cg(f(x))
where f∈C[a, b] and g∈C[b, c]. Then Mod (T(C)) is equivalent to the functor category
[C,Set]. Further, if Chas finite limits, then T(C) can be extended to a cartesian theory T
such that Mod (T)∼=lex [C,Set]. See e.g. [36, Example D1.4.8].
Example 2.4. Horn theories form an important class of cartesian theories. For instance,
the category Posof posets and monotone maps is the category of models of the following
Horn theory in σ={˙≤}:
⊤ ⊢ xx˙≤x x ˙≤y∧y˙≤z⊢x,y,z x˙≤z x ˙≤y∧y˙≤x⊢x,yx˙ =y
Remark 2.5. The class of cartesian theories strictly extends that of Horn theories. For
instance, the category Cat of small categories is the category of models of a cartesian
theory, see [36, Example D1.1.7(e)], but there is no signature Σsuch that Cat is the
category of models of a Horn theory in Σ, see [36, Example D2.4.7].
2.3.Locally finitely presentable categories. We briefly discuss some aspects of loc-
ally finitely presentable (lfp) categories needed to present our main examples and results.
Recall that an object Xof a locally small category Eisfinitely presentable if the functor
E[X,−] :E→Setpreserves all filtered colimits that exist in E.
Definition 2.6. A locally small category Eislocally finitely presentable (lfp) provided
it satisfies the following conditions:
(i)Eadmits a (small) set Cof finitely presentable objects such that every object of E
is a filtered colimit of objects from C;
(ii)Eis cocomplete (and thus complete, see [13, Remark 1.56]).
2This is a particular case of Barr’s theorem . See e.g. [49, §5] (and also [45, §X]).
6Amorphism of lfp categories is a limit-preserving finitary functor between lfp categories.
Example 2.7. Each category Str(Σ) is lfp. The finitely presentable objects of Str(Σ),
denoted by ⟨⃗ x|φ⟩, are given by finitely many generators ⃗ x=x1, . . . , x nsubject to a
condition φ=φ(⃗ x) expressed by a finite conjunction of atomic formulae from Σ(so that
⃗ x::=φis a formula-in-context).
Fact 2.8. Consider M∈Str(Σ)and⟨⃗ x|φ⟩as in Example 2.7. Given ⃗ a∈J⃗ x|φKM,
there is a unique homomorphism h:⟨⃗ x|φ⟩ →Mthat takes each generator xitoai. This
results in a bijection
Str(Σ) [⟨⃗ x|φ⟩, M]∼= J⃗ x|φKM.
References on Example 2.7 and Fact 2.8 include [13, Remarks 5.1 and 5.5] and [36,
Lemma D2.4.1 and Lemma D1.4.4(ii)]. We give some details in §6 below.
Remark 2.9. Generalising Example 2.7, if Tis a cartesian theory in Σ, then Mod (T)
is lfp, and moreover it is reflective and closed under filtered colimits in Str(Σ). In fact,
a category Eis lfp if, and only if, there is a cartesian theory Tin a (possibly infinite,
many-sorted) signature Σsuch that Eis equivalent to Mod (T). See Corollary 6.5 and
Lemma 6.6 below and also [13, Theorem 5.9].
Finally, we state a well-known sufficient criterion to establish that a category is lfp
(see e.g. [13, Theorem 1.11 and Remark 1.23]). To this end, recall that a subcategory
I:K,→Eisdense if each X∈Eis the canonical colimit of the diagram ( I/X)→K,→E,
i.e. the cocone γwith γ(k,g:Ik→X):=gis colimiting.
Lemma 2.10. LetEbe a cocomplete locally small category. If Eadmits an (essentially)
small full dense subcategory Kconsisting of finitely presentable objects, then Eis lfp.
Example 2.11. For any small category C, the presheaf category bCis lfp. This follows
from Lemma 2.10, since the representable functors form a full dense subcategory of bC
consisting of finitely presentable objects.
Example 2.12. Recall that a poset ( F,≤) is a forest if, for all x∈F, the set
↓x:={y∈F|y≤x}
is a finite chain. The roots of a forest ( F,≤) are the minimal elements. The covering
relation ≺associated with the partial order ≤is defined by x≺yif, and only if, x < y
and there is no zsuch that x < z < y . Atreeis a forest with at most one root.
Aforest morphism is a function between forests that preserves roots and the covering
relation. The category of forests and forest morphisms is denoted by Forest , and the full
subcategory of non-empty trees by Tree .
The categories Forest andTree are equivalent (via the functor Forest →Tree that
adds a least element, whose quasi-inverse Tree→Forest removes the root), and they are
equivalent to the presheaf category bN. In particular, Forest andTree are lfp categories.
2.4.Factorisation systems. Given arrows eandmin a category C, we say that ehas
theleft lifting property with respect to m, or that mhas the right lifting property with
respect to e, and write e⋔m, if every commutative square as on the left-hand side below
• •
• •e m• •
• •e m d
admits a diagonal filler , i.e. an arrow dmaking the rightmost diagram commute.
7Definition 2.13. A pair of classes of morphisms ( Q,M) in a category Cis aweak fac-
torisation system provided it satisfies the following conditions:
(i) Every morphism finCcan be decomposed as f=m◦ewith e∈Qandm∈M.
(ii)Q={e| ∀m∈M, e⋔m}andM={m| ∀e∈Q, e⋔m}.
If, in addition, all arrows in Qare epimorphisms and all arrows in Mare monomorphisms,
then (Q,M) is a proper factorisation system .
Remark 2.14. Note that a weak factorisation system ( Q,M) is completely determined
by either of the two classes QorM.
Recall that a monomorphism is strong if it has the right lifting property with respect
to all epimorphisms; strong epimorphisms are defined dually. If ( Q,M) is a proper fac-
torisation system, it follows at once that every strong monomorphism belongs to Mand
every strong epimorphism belongs to Q.
Remark 2.15. In any category, a necessary and sufficient condition for (epimorphisms,
strong monomorphisms) to form a proper factorisation system is that every morphism
can be decomposed into an epimorphism followed by a strong monomorphism. Dually,
for the (strong epimorphisms, monomorphisms) factorisation system.
Proof. LetQconsist of the epimorphisms and let Mconsist of the strong monos of C. It
is clear that M={m| ∀e∈Q, e⋔m}. We show that Q={e| ∀m∈M, e⋔m}. We of
course have Q⊆ {e| ∀m∈M, e⋔m}.
Letfsuch that f⋔mfor every strong mono m. Factor fasf=m◦ewith e∈Q
andm∈M. We thus have a diagonal filler das in
• •
• •fe
m
idd
But then mis an iso since it is a both a mono and split epi. Hence dis an iso and f
is an epi. □
Example 2.16. Each lfp category has two proper factorisation systems, one given by
taking as Mthe class of strong monomorphisms, the other one given by taking as Qthe
class of strong epimorphisms (combine [13, Proposition 1.61, §1D] with Remark 2.15).
Example 2.17. In the case of a presheaf category, the two factorisation systems in Ex-
ample 2.16 coincide with the (epimorphism, monomorphism) factorisation system; cf.
e.g. [16, 4.3.10.g].3In particular, for the remaining of this paper, we consider the cat-
egories Tree andForest with the (epimorphism, monomorphism) factorisation systems.
Example 2.18. InStr(Σ), the proper factorisation systems in Example 2.16 can be
described concretely as follows. The monomorphisms (respectively, epimorphisms) are
the morphisms that are sortwise injective (respectively, surjective). The strong mono-
morphisms are the embeddings of structures, i.e. the monomorphisms that reflect (as
well as preserve) the interpretations of the relation symbols. Just recall that embeddings
coincide with regular monos in Str(Σ), while regular monos coincide with strong monos
in the presence of (epi, regular mono) factorisations; cf. e.g. [13, 0.5 and Remark 5.1].
In general, the factorisation systems (strong epi, mono) and (epi, strong mono) on
Str(Σ) are distinct. For example, if σis a mono-sorted purely relational signature and
3In fact, any elementary topos has exactly one proper factorisation system, namely the (epimorphism,
monomorphism) factorisation system.
8h:M→Nis a morphism in Str(σ), consider the usual factorisation of hthrough its
set-theoretic image h[M]:
M→h[M]→N.
Then the (strong epi, mono) factorisation of his obtained by defining the interpretation
inh[M] of an arbitrary relation symbol R∈Rel(σ) asRh[M]:=h[RM], whereas to obtain
the (epi, strong mono) factorisation of hwe let Rh[M]be the restriction of RNto (the
appropriate power of) h[M].
The following are well-known properties of weak factorisation systems, cf. [26] or [54].
Lemma 2.19. Let(Q,M)be a weak factorisation system on C.
(1)QandMare closed under composition.
(2)Q∩M={isomorphisms }.
(3) The pullback of an M-morphism along any morphism, if it exists, is again in M.
Moreover, if (Q,M)is proper, the following hold for all composable morphisms f, gofC.
(4)g◦f∈Qimplies g∈Q.
(5)g◦f∈Mimplies f∈M.
LetCbe a category equipped with a proper factorisation system ( Q,M). We shall refer
toM-morphisms as embeddings and denote them by ↣.Q-morphisms will be referred to
asquotients and denoted by ↠.
In the same way that one usually defines the poset of subobjects of a given object
X∈C, we can define the poset SXofM-subobjects of X. Given embeddings m:S↣X
andn:T↣X, let us say that m⊴nprovided there is a morphism i:S→Tsuch that
m=n◦i, as displayed below.
S X
Tm
in
(Note that, if it exists, iis necessarily an embedding by Lemma 2.19.(5).) This yields
a preorder on the class of all embeddings with codomain X. The symmetrization ∼of
⊴can be characterised as follows: m∼nif, and only if, there exists an isomorphism
i:S→Tsuch that m=n◦i. LetSXbe the class of ∼-equivalence classes of embeddings
with codomain X, equipped with the natural partial order ≤induced by ⊴, and observe
that the poset SXis small whenever Cis well-powered. We systematically represent a
∼-equivalence class of embeddings by any of its representatives.
Example 2.20. Consider Str(Σ) with the (epis, strong monos) factorisation system.
For all M∈Str(Σ),SMis isomorphic to the poset of substructures ofM(i.e., subsets
ofMequipped with the induced relations) ordered by set-theoretic inclusion.
For any morphism f:X→YinCand embedding m:S↣X, we can consider the
(Q,M) factorisation S↠∃fS↣Yoff◦m. This yields a monotone map ∃f:SX→SY
sending mto the embedding ∃fS↣Y. (Note that the map ∃fis well-defined because
factorisations are unique up to isomorphism.) In particular, if fis an embedding, we
have∃f(m) =f◦mfor all m∈SX.
For the following observation, see e.g. [6, Lemma 2.7(a)].
Lemma 2.21. Let(Q,M)be a proper factorisation system on C. Given an embedding
f:X↣YinC, the function ∃f:SX→SYis an order-embedding.
In this paper, we mostly deal with factorisation systems satisfying an additional sta-
bility condition:
9Definition 2.22 (Stable factorisation system) .A proper factorisation system ( Q,M) is
stable if for every e∈Qandm∈Mwith common codomain, the pullback of ealong m
exists and is a quotient.4
Example 2.23. In a presheaf category, (epimorphisms, monomorphisms) form a stable
factorisation system. Just observe that the corresponding property holds in Set, and
limits and colimits in presheaf categories are computed pointwise. In particular, the
(epimorphism, monomorphism) factorisation systems on Tree andForest are stable.
Example 2.24. The factorisation system (epimorphisms, strong monomorphisms) on
Str(Σ) is stable. Akin to Example 2.23, this follows from the fact that limits and
epimorphisms in Str(Σ) are computed in Set, cf. e.g. [13, Remark 5.1].
If (Q,M) is a stable factorisation system, then each quotient f:X↠Yinduces a
monotone function f∗:SY→SXthat takes n:S↣Yto its pullback along f. The
mapf∗is right adjoint to ∃f:SX→SY(see e.g. [6, Lemma 2.6] for a proof). Moreover,
we have the following observation (see e.g. [6, Lemma 2.7(b)]):
Lemma 2.25. Let(Q,M)be a stable factorisation system on C. For any quotient
f:X↠YinC, the map f∗:SY→SXis an order-embedding.
We note in passing that Lemma 2.25 depends on both classes of the factorisation system
(Q,M), whereas Lemma 2.21 only requires a class of monomorphisms Mthat is closed
under compositions and satisfies the condition in Lemma 2.19.(5).
3.Back-and-forth equivalence
In this section, we recall from [5, 6] the general notion of back-and-forth game which is
the main subject of this paper. These games abstract usual notions of model comparison
games, such as the classical Ehrenfeucht-Fra¨ ıss´ e game. Their definition is possible in all
categories equipped with a stable factorisation system and satisfying some mild additional
assumptions, embodied in the concept of wooded categories .
We begin in §3.1 by revisiting the classical Ehrenfeucht-Fra¨ ıss´ e game from a point of
view well suited to our axiomatic categorical treatment.
Then, in §3.2 we introduce wooded categories and discuss the notion of back-and-
forth equivalence in a wooded category C. In many situations of interest, equivalence
of structures in various logic fragments can be captured by transferring this equivalence
relation on Cto another category E, typically of the form Str(σ), via a right adjoint
functor R:E→C(cf. e.g. [2, 9]). The ensuing relation on E, referred to as R(-back-and-
forth)-equivalence , is introduced in §3.3 and will play a central role throughout.
Finally, in §3.4 we state our main result (Theorem 3.29) which identifies the expressive
power of R-equivalence in the case of finitely accessible wooded adjunctions .
3.1.From concrete to abstract model comparison games. Letσbe a (mono-
sorted) purely relational signature. We recall the classical Ehrenfeucht-Fra¨ ıss´ e game
EFω(M, N ) played on σ-structures MandN[24]. The game is played by two players,
Spoiler andDuplicator . Positions in the game have the form ( ⃗ a;⃗b) where ⃗ a=a1, . . . , a n
and⃗b=b1, . . . , b nare finite sequences of elements from MandN, respectively. Such a
position is winning (for Duplicator) if the assignment
ai7→bi, i = 1, . . . , n (1)
4Our terminology follows [6], but differs from the usual one, which requires the pullback of e∈Q
along anymorphism to exist and to be in Q.
10is apartial isomorphism , that is, if this assignment is an isomorphism between the induced
substructures of MandNwith universes {a1, . . . , a n}and{b1, . . . , b n}, respectively.
Note that (1) defines a partial isomorphism precisely when for every atomic formula
x1, . . . , x n::=αinσ, we have
⃗ a∈J⃗ x|αKM⇐⇒ ⃗b∈J⃗ x|αKN.
From a winning position ( ⃗ a;⃗b), a round of the game proceeds as follows:
•Spoiler chooses an element from one of the two structures, say a′∈M;
•Duplicator responds by choosing an element from the other structure, say b′∈N.
If the new position ( ⃗ a, a′;⃗b, b′) is not winning, then the game ends and is won by Spoiler.
Otherwise, the round is won by Duplicator and the game continues from the new position
(⃗ a, a′;⃗b, b′). Duplicator wins the game EF ω(M, N ) with initial position ( ⃗ a;⃗b) if Duplicator
has a strategy from ( ⃗ a;⃗b) that is winning after trounds for all integers t≥0.
For any integer k≥0, the k-round Ehrenfeucht-Fra¨ ıss´ e game EF k(M, N ) is the restric-
tion of EF ω(M, N ) to plays of length ≤k.5
Example 3.1. Assume that σconsists only of the binary relation ˙<. Let M= (M, < M)
andN= (N, < N) be dense linear orders without endpoints (e.g. ( Q, <) and (R, <)). Then
from any winning position ( ⃗ a;⃗b) in EF ω(M, N ), Duplicator can respond to Spoiler’s move
so that the new position ( ⃗ a, a′;⃗b, b′) is again winning. Hence, Duplicator wins the game
EFω(M, N ) with initial position given by the empty sequences (see e.g. [55, §14.2]).
Our axiomatic categorical approach to back-and-forth equivalence relies on the fol-
lowing two observations. First, provided σis finite, partial isomorphisms can be seen
as pairs of embeddings whose common domain is a finitely presentable σ-structure. A
further insight, put forward in [2] and expounded in [8, 9], is that collections of plays in
a game form themselves σ-structures. We now elaborate on these two ideas.
3.1.1. Positions as pairs of embeddings. Assume that σis finite and let ⃗ x::=φbe a
(finite) conjunction of atomic formulae. By Fact 2.8, the tuples ⃗ a∈J⃗ x|φKMcorrespond
bijectively to homomorphisms
h⃗ a:⟨⃗ x|φ⟩ −→ M
Further, h⃗ ais an embedding of σ-structures exactly when ⃗ x::=φis the conjunction of
all atomic formulae ⃗ x::=αsuch that ⃗ a∈J⃗ x|αKM. Hence, since σis finite, tuples ⃗ a∈M
are in bijection with substructures ⟨⃗ x|φ⟩ ∈SM(i.e. isomorphism classes of embeddings
m:⟨⃗ x|φ⟩↣M, in the sense of §2.4), where φranges over (finite) conjunctions of
atomic formulae.
Remark 3.2. When σis infinite, given ⃗ a∈Mthere may be no embedding ⟨⃗ x|φ⟩↣M,
with φfinite, taking ⃗ xto⃗ a. For instance, suppose that σcontains a unary relation symbol
Rifor each positive integer i, and let Mbe any σ-structure containing an element asuch
thata∈RM
ifor all i. Then there is no embedding ⟨x|φ⟩↣Mtaking xtoa, as such a
φcan only account for finitely many of the relations satisfied by a.
5An equivalent way to describe (winning strategies in) Ehrenfeucht-Fra¨ ıss´ e games is in terms of back-
and-forth systems of partial isomorphisms, see e.g. [25], [23, §2.3] or [31, pp. 98–99].
11We shall represent a position ( ⃗ a,⃗b) in the game EF ω(M, N ) by the corresponding pair
of embeddings ( m⃗ a, n⃗b), as displayed below.
⟨⃗ x|φ⟩ ⟨⃗ x|ψ⟩
M Nm⃗ an⃗b
Note that ( ⃗ a,⃗b) is winning exactly when the domains of the embeddings m⃗ aandn⃗ aare
isomorphic as objects of Str(σ).
This results in a reformulation of the game EF ω(M, N ) in which positions are pairs of
embeddings ( m, n), as depicted on the left-hand side below.
⟨⃗ x|φ⟩⟨⃗ x|ψ⟩
M Nm n⟨⃗ x|φ⟩ ⟨⃗ x|ψ⟩
M ⟨⃗ x, x|φ′⟩ ⟨⃗ x, x|ψ′⟩ Nm∼=
n
m′n′
Such a position ( m, n) is winning when dom( m)∼=dom( n). If ( m, n) is not winning,
then the game stops and is won by Spoiler. Otherwise, either Spoiler chooses some
m′:⟨⃗ x, x′|φ′⟩↣Mthrough which mfactors, and Duplicator responds by choosing some
n′:⟨⃗ x, x′|ψ′⟩↣Nthrough which nfactors (see the right-hand diagram above), or the
other way around. The game then proceeds from the new position ( m′, n′).
3.1.2. Plays as structures. Consider now the first projection of a finite play in the game
EFω(M, N ), say
⟨x1|φ1⟩ ⟨x1, x2|φ2⟩ ··· ⟨x1, x2, . . . , x k|φk⟩
M
The set M+of non-empty finite sequences over Mcan be seen as a σ-structure (see
Example 3.19 for more details) and is equipped with a natural forest order, namely the
prefix order. The sequence of embeddings in the top row above can be identified with
a substructure of M+, whose underlying set consists of the images in Mof the finite
sequences x1, x1x2, . . . , x 1x2···xk; this substructure forms a path, i.e. a linear order, in
the forest order of M+.
The idea of viewing collections of plays in a game as σ-structures is a key insight
from [2], which led, via [8, 9], to the arboreal setting of [5, 6]. Arboreal categories provide a
description of back-and-forth games based on an axiomatic notion of path, which abstracts
the idea of linearly ordered finite σ-structures. As we shall recall in §3.2.1, paths can be
defined in any (well-powered) category equipped with a proper factorisation system.
Before proceeding, let us mention that the arboreal notion of path allows one to capture
games with more complex or constrained plays than in Ehrenfeucht-Fra¨ ıss´ e games, such
as pebble games and modal bisimulation games.6See [7] for further examples.
3.2.Wooded categories and back-and-forth equivalence.
6Actually, the above reformulation of Ehrenfeucht-Fra¨ ıss´ e games hides some subtleties on equality
that will be addressed in Example 3.19 below.
123.2.1. Paths and wooded categories. Let us fix an arbitrary well-powered category Cen-
dowed with a proper factorisation system ( Q,M).
Definition 3.3 (Path and path embedding) .An object PofCis apath ifSPis a finite
chain. Paths will be denoted by P, Q and variations thereof.
Apath embedding inCis an embedding P↣Xwhose domain is a path. We let PX
denote the sub-poset of SXconsisting of the path embeddings.
Example 3.4. The paths in the category Tree are the (non-empty) finite chains. Hence,
for each X∈Tree , the poset PXis a tree isomorphic to X.
Generalising Example 3.4, the next lemma shows that PXis always a forest, and in
fact a non-empty tree under mild additional assumptions.
Lemma 3.5 ([6, Lemmas 3.5 and 3.12]) .The following statements hold for all objects X
and paths PofC.
(1) If f:X↣Pis an embedding then Xis a path.
(2)PXis a forest.
Assume that (Q,M)is stable.
(3) If f:P↠Xis a quotient then Xis a path.
Assume further that Chas an initial object 0.
(4)0is a path.
(5)PXis a non-empty tree, whose root 0X↣Xis obtained by taking a (Q,M)
factorisation 0↠0X↣Xof the unique morphism 0→X.
Remark 3.6. Items (1) and (3) of Lemma 3.5 are direct consequences of Lemma 2.21
and Lemma 2.25, respectively. Items (2), (4) and (5) are the content of [6, Lemma 3.12].
Note that if the factorisation system ( Q,M) is not stable, then the poset PXis still a
tree, but possibly an empty one.
Motivated by Lemma 3.5, we shall now introduce the notion of wooded category, which
provides a weakening of the concept of arboreal category from [5, 6].
Definition 3.7. A category Cequipped with a factorisation system ( Q,M) is a wooded
category when the following conditions hold:
(i)Cis locally small and well powered.
(ii)Chas an initial object 0.
(iii) The factorisation system ( Q,M) is stable (and thus proper).
The following lemma follows from a straightforward adaptation of [6, Proposition 3.13]
combined with [6, Lemma 3.15(c)], whose proof applies unchanged (in fact, stability of
the proper factorisation system is not required).
Lemma 3.8. The following statements hold in any wooded category C:
(1) For any two paths P, Q inC, there is at most one embedding P↣Q.
(2) The subcategory CpofCdefined by paths and embeddings between them is equival-
ent to a small forest.
Proof. We claim that for any pathwise embedding f:X→YinC, the map
Pf:PX→PY,[m]7→[f◦m]
is a forest morphism. Since Pfis monotone, it suffices to prove that it preserves the
height of elements. In turn, this is equivalent to saying that, for any path embedding
m:P↣X, the induced map Pf:↓m→ ↓Pf(m) is a bijection.
13We start by establishing surjectivity, i.e. ↓Pf(m)⊆Pf(↓m). If n:Q↣Yis a path
embedding such that n≤Pf(m) =f◦minPY, there exists an embedding k:Q↣P
such that the following diagram commutes:
Q Y
Pn
kf◦m
Then m◦k:Q↣Xis a path embedding that is below minPX, andPf(m◦k) =n.
For injectivity, let m1:P1↣Xandm2:P2↣Xbe path embeddings in ↓m. Since
Pis a path, m1andm2are comparable in the order of PX. Assume without loss of
generality that m1≤m2, i.e. there is an embedding k:P1↣P2such that m1=m2◦k. If
Pf(m1) =Pf(m2), there exists an isomorphism k′:P1→P2such that f◦m1=f◦m2◦k′.
We get
f◦m2◦k=f◦m1=f◦m2◦k′
and so, since f◦m2is an embedding (hence a monomorphism), k=k′. This shows that
kis an isomorphism and thus m1=m2◦kentails that m1=m2as elements of PX.
This yields a functor P:Cp→Tree . Now, suppose that m, n:P↣Qare embeddings
between paths. Since there is at most one forest morphism between any two finite chains,
we get Pm=Pn. In particular, [ m] =Pm(idP) =Pn(idP) = [ n] and so there is an
isomorphism i:P→Psuch that m=n◦i. Since iis an epimorphism, m=n.
This proves item 1. Item 2 follows from item 1 combined with the definition of path
and the assumption that Cis well-powered. □
Example 3.9. Tree is a wooded category. The initial objects are the trees having exactly
one node (their root).
Example 3.10. The category Setwith the (epi, mono) factorisation system is a wooded
category. Another example is provided by the category Posof Example 2.4 with the (epi,
strong mono) factorisation system. Recall from Remark 2.9 that Pos is lfp, hence it is
(co)complete and the aforementioned factorisation system is proper (cf. Example 2.16).
We show that this factorisation system is stable.
Note that epimorphisms in Poscoincide with the surjective morphisms. Just observe
that, if f:X→Yis a morphism in Posandb∈Y, the characteristic functions of the
sets↑b={y|b≤Yy}and↑b\ {b}yield distinct morphisms Y⇒2 ={0≤1}. But
ifb /∈Img(f), then the two compositions with fyield equal morphisms X→Y⇒2.
Hence, epimorphisms are surjective; the converse is trivial. Now, the forgetful functor
U:Pos→Sethas a left adjoint sending a set Sto the poset ( S,=); in particular, U
preserves limits. Using the fact that Upreserves pullbacks, and it preserves and reflects
epimorphisms, the stability of epimorphisms under pullbacks in Setentails at once the
same property for Pos.
Further, note that the strong monos in Posare exactly the order embeddings (an easy
diagrammatic reasoning shows that order embeddings are strong monos; the converse is
provided by Remark 8.6 below).
Both in SetandPos, the paths are the initial objects along with the terminal ones.
Remark 3.11. Generalising the argument in Example 3.10, the stable factorisation sys-
tem on Setcan be “lifted” to other categories under appropriate assumptions. Consider
for example an lfp category C, an object X∈C, and the functor C(X,−):C→Set.
IfXis a projective separator in C, then the (epi, strong mono) factorisation system on
Cis stable, and so Cis a wooded category. In the case of Pos, we can take as Xthe
terminal object. Similarly, Str(Σ) is also a wooded category with respect to the (epi,
14strong mono) factorisation system, as can be seen by taking as Xthe sub-terminal object
having exactly one element for each sort, with empty relations and the unique possible
interpretations of the function symbols. (Note, however, that the most important ex-
amples of wooded categories in this paper arise from categories of coalgebras for game
comonads, and Str(Σ) is not one of these.)
We now turn to examples of wooded categories arising from game comonads. Most of
them were introduced in [8, 9] and shown to be arboreal, hence wooded, in [5, 6].
Example 3.12 (The categories Rk(σ)).Letσbe a (mono-sorted) relational signature. A
forest-ordered σ-structure is a pair ( M,≤) where Mis aσ-structure and ≤is a forest order
onM. A morphism of forest-ordered σ-structures is a homomorphism of σ-structures
that is also a forest morphism. This yields a category Rω(σ). Given 0 < k < ω ,Rk(σ) is
the full subcategory of Rω(σ) on those forest-ordered σ-structures Msuch that for each
a∈M, the finite chain ↓ahas cardinality at most k(cf. Example 2.12).
Let 0 < k≤ω. We equip Rk(σ) with the factorisation system ( Q,M) where Qconsists
of the surjective morphisms and Mof the morphisms that are embeddings of σ-structures
(in the sense of Example 2.18). Note that ( Q,M) is stable; this follows from Example 2.23
and the fact that pullbacks in Str(σ) are computed in Set[13, Remark 5.1(2)].
As illustrated in the following examples, the categories of coalgebras for various game
comonads can be represented, up to isomorphism, as subcategories of some Rk(σ), or
minor variants thereof. Recall that the Gaifman graph of aσ-structure Mhas the
elements of Mas vertices, and as edges those pairs of distinct vertices that both occur
in some tuple ⃗ a∈RMfor some relation symbol R∈σ.
Example 3.13. Given 0 < k≤ω, we let RE
k(σ) be the full subcategory of Rk(σ)
determined by those objects ( M,≤) satisfying the following condition:
(E) If a, b∈Mare adjacent in the Gaifman graph of the σ-structure M, then they
are comparable in the forest order.
We equip RE
k(σ) with the restriction of the factorisation system on Rk(σ). The paths of
RE
k(σ) are those objects in which the order is a finite chain.
Assume k < ω . The paths of RE
k(σ) are the finite chains of cardinality ≤k. When σis
finite, it follows from [9, Theorem 9.1] that RE
k(σ) is isomorphic to the category of coal-
gebras for the Ehrenfeucht-Fra¨ ıss´ e comonad EkonStr(σ). The objects ( M,≤) ofRE
k(σ)
are forest covers of Mwitnessing that its tree-depth is at most k[50]. The categories
RE
k(σ) were introduced in [8, 9] and shown to be arboreal, hence wooded, in [5, 6].
Example 3.14. In the same vein as Example 3.13, one can consider the categories of
coalgebras for other game comonads such as the the pebble andmodal comonads [2, 8]
(encoding, respectively, pebble and bisimulation games) and the hybrid comonad [4]
(encoding bisimulation games for hybrid logic).
(1) For the pebbling comonad, for each integer k >0 this is the category RP
k(σ) whose
objects have the form ( M,≤, p), where ( M,≤)∈Rω(σ) and p:M→ {1, . . . , k }
is a “pebbling” function. In addition to condition (E), these structures have to
satisfy the condition (P): if ais adjacent to bin the Gaifman graph of M, and
a < b in the forest order, then for all xsuch that a < x ≤b,p(a)̸=p(x).
When σis finite, it is shown in [9] that these structures are equivalent to the
more familiar form of tree decomposition used to define tree-width [42]. Morph-
isms have to preserve the pebbling function.
(2) Suppose σis a modal vocabulary, i.e. it consists only of unary and binary relation
symbols. For the modal comonad, the category RM
k(σ) has as objects the non-
empty tree-ordered Kripke structures M∈Rk(σ) satisfying the condition (M):
15forx, y∈M,x≺yif and only if for some unique binary relation αinσ(the
“transition relation”), we have αM(x, y).
(3) For the hybrid comonad, one considers again a modal vocabulary σ, and the cat-
egoryRH
k(σ) consisting of non-empty tree-ordered Kripke structures M∈Rk(σ),
but with condition (M) weakened to condition (E) of the Ehrenfeucht-Fra¨ ıss´ e case.
These categories were shown to be arboreal in [5, 6] and [4]. The paths in each of them
are those structures in which the order is a finite chain. Note that in the modal case,
ignoring the interpretations of the propositional variables (i.e., the unary relations), these
correspond to synchronization trees consisting of a single branch, i.e. traces.
For further examples based on game comonads, see e.g. the surveys [1, 7].
3.2.2. Back-and-forth games in wooded categories. LetCbe a category equipped with a
proper factorisation system ( Q,M), and let a, bbe objects of C. We define the following
back-and-forth game G(a, b) played on aandb.
Definition 3.15 (Game G(a, b)).Positions in the game are pairs ( m, n)∈Pa×Pb; the
initial position is denoted by ( m0, n0). The winning relation W(a, b) consists of the pairs
(m, n) such that dom( m)∼=dom( n).
•If (m0, n0)/∈W(a, b), Duplicator loses the game. Otherwise, the game proceeds
as follows:
•At the start of each round, the position is specified by a pair ( m, n)∈Pa×Pb
and the round proceeds as follows. Either Spoiler chooses some m′≻mand
Duplicator must respond with some n′≻n, or Spoiler chooses some n′′≻nand
Duplicator must respond with m′′≻m.
•Duplicator wins the round if they are able to respond and the new position is in
W(a, b). Duplicator wins the game with initial position ( m0, n0) if they have a
strategy that is winning after trounds, for all integer t≥0.
Remark 3.16. The game G(a, b) need not have finite length; however, by the definition
of path, its length is at most ω. Also, G(a, b) has a setof positions (as opposed to a
proper class) when Cis well-powered (which is in particular the case if Cis wooded).
When Cis a wooded category, we write ⊥a:0a↣afor the root of the tree Pa, and
similarly for b.
Definition 3.17 (Back-and-forth equivalence) .Letaandbbe objects of a wooded cat-
egory. We say that aandbareback-and-forth equivalent , and denote it by a↔b, when
Duplicator wins the game G(a, b) with initial position ( ⊥a,⊥b).
For instance, as we shall see in §4, two objects a, b∈Tree are back-and-forth equivalent
if, and only if, they are bisimilar (when regarded as Kripke frames). More generally, we
will see that if Cis an arboreal category, back-and-forth equivalence induced by games
inCcoincides with open map bisimilarity in the sense of [37]. Moreover, in this case, if
a, b∈Care back-and-forth equivalent then the trees PaandPbare bisimilar.
3.3.Wooded adjunctions and R-equivalence. We now consider the relation obtained
by transferring back-and-forth equivalence in a wooded category Calong a right adjoint
functor R.
Definition 3.18. Awooded adjunction is an adjoint pair
C EL
R⊥
16where Cis wooded category. Since the left adjoint is unique up to natural isomorphism,
we denote a wooded adjunction simply by R:E→C.
We think of Eas an “extensional” category; this is typically a category of relational
structures but need not be in general, see Examples 3.28 and 4.11 below. A wooded
adjunction R:E→Callows us to transfer the back-and-forth equivalence relation ↔on
CtoE. This yields the relation of R(-back-and-forth)-equivalence onE, denoted by ↔R
and defined, for all d, e∈E, as
d↔Re⇐⇒ Rd↔Re.
Choosing the wooded adjunction R:E→Cin a suitable way, we can capture equival-
ence of structures in various fragments of first-order logic by means of R-equivalence, as
illustrated in the following examples.
Example 3.19. Letσbe a (mono-sorted) relational signature. For each 0 < k≤ω, con-
sider the wooded category RE
k(σ) from Example 3.13. The forgetful functor Lk:RE
k(σ)→
Str(σ) has a right adjoint Rk, hence it yields a wooded adjunction
RE
k(σ) Str(σ).Lk
Rk⊥ (2)
(In fact, this adjunction is comonadic.) The functor Rksends M∈Str(σ) to the set
of all finite non-empty sequences a0, . . . , a i(i < k ) of elements of M, equipped with the
prefix order and an appropriate lifting of the relations of M(cf. [9, §3.1]). E.g., if Sis a
binary relation symbol in σ, its interpretation in RkMconsists of the pairs of sequences
(s, t) = (( a0, . . . , a i),(b0, . . . , b j))∈RkM×RkM
such that (i) either sis a prefix of t, ortis a prefix of s, and (ii) ( ai, bj)∈SM, i.e. the
last elements of sandtareS-related in M.
The induced relations of Rk-equivalence on Str(σ) only capture equivalence with re-
spect to equality-free fragments of logic, see [9, Remark 10.6] and [18]. To capture the
equality symbol, we adopt the approach from [21, 6] and consider a fresh binary rela-
tion symbol I, and the expanded signature σI:=σ∪ {I}. The fully faithful functor
J:Str(σ)→Str(σI) that interprets Ias the identity relation has a left adjoint H,
which sends M∈Str(σI) to the quotient of (the σ-reduct of) Mby the equivalence
relation generated by IM[21, Lemma 25]. The composite adjunction
RE
k(σI) Str(σI) Str(σ),Lk
RkH
J⊥ ⊥ (3)
is wooded (although not comonadic). In eq. (3) above, Lk⊣Rkstands for the adjunction
defined in eq. (2), but this time for the signature σI.
LetRI
k:=RkJand let σbe finite. If k < ω , it follows from [9, Theorem 10.4] that
for any two σ-structures M, N , the back-and-forth game G(RI
k(M), RI
k(N)) corresponds
precisely to the k-round Ehrenfeucht-Fra¨ ıss´ e game EF k(M, N ). Thus, by the classical
Ehrenfeucht-Fra¨ ıss´ e theorem [24, 25], the induced relation of RI
k-equivalence coincides
with equivalence of σ-structures in the fragment of Lωwith quantifier rank at most k.
When k=ω,Rω(M) consists of allfinite sequences of elements from M. The game
G(RI
ω(M), RI
ω(N)) then corresponds to the infinite Ehrenfeucht-Fra¨ ıss´ e game EF ω(M, N ).
By Karp’s Theorem (see e.g. [31, Corollary 3.5.3]), the relation of RI
ω-equivalence coincides
with equivalence of σ-structures in L∞.
17Combining Examples 3.1 and 3.19 yields the following well-known consequence of
Karp’s Theorem.
Example 3.20. In the signature σconsisting only of the binary relation ˙<, any two
dense linear orderings without endpoints are RI
ω-equivalent and thus L∞-equivalent. This
applies for instance to ( Q, <) and (R, <), see e.g. [55, Theorem 14.20].
Example 3.21. The wooded categories of Example 3.14 lead to wooded adjunctions
that capture equivalence in finite-variable fragments of L∞[2], modal logic with bounded
modal-depth [8] and hybrid logic with bounded hybrid modal-depth [4], respectively. (In
fact, these are arboreal adjunctions, cf. §4.1.)
(1) For the k-pebble comonad, there is a wooded adjunction RP
k:Str(σ)→RP
k(σ)
that sends a σ-structure Mto a structure whose universe is the set of all finite
sequences of pairs of the form ( p, a), where p∈ {1, . . . , k }is the pebble index and
a∈M. See [9, §3.2] for more details. To recover equivalence in the k-variable
fragment of L∞, equality is handled as in Example 3.19. In fact, when σis finite,
[9, Theorem 10.9] shows that the usual k-pebble game played on σ-structures M
andNcorresponds to the back-and-forth game played on RP
kJMandRP
kJN.
(2) For the modal comonad, equivalence in modal logic with modal-depth at most kis
captured by RM
k-equivalence for a suitable right adjoint RM
k:Str•(σ)→RM
k(σ),
where σis a modal vocabulary and Str•(σ) is the category of pointed σ-structures
and homomorphisms preserving the distinguished elements; see [9, §3.3] for a
detailed account. (Note that there is no equality involved here.)
(3) To capture logical equivalence in hybrid logic with bounded hybrid modal-depth,
via the wooded adjunction induced by the hybrid comonad, requires handling the
equality symbol as in the case of the Ehrenfeucht-Fra¨ ıss´ e and pebble comonads;
cf. [4] for more details.
The wooded adjunctions corresponding to finite Ehrenfeucht-Fra¨ ıss´ e games, and to
finite games for modal and hybrid logics, can be restricted by taking finite structures on
both sides. However, this is not always possible: for instance, in the case of pebble games
one is forced to consider infinite structures as well [2, Corollary 8].
Let us also note that, in addition to back-and-forth equivalence, wooded adjunctions
can be used to transfer other relations to the extensional category, such as the isomorph-
ism relation or the homomorphism preorder. These also result in characterisations of
equivalence in important logic fragments; cf. [6, §7] for the case of arboreal adjunctions .
3.3.1. Finitely accessible wooded adjunctions. Infinite Ehrenfeucht-Fra¨ ıss´ e games provide
an example of wooded adjunction whose back-and-forth relation corresponds exactly to
equivalence in infinitary first-order logic L∞(cf. Example 3.19). Our main result yields
a partial converse to this: we show that, for a wide class of wooded adjunctions
C E,L
R⊥
the induced relation of R-equivalence is always coarser than equivalence in infinitary
first-order logic (see §3.4 for precise statement). The class of wooded adjunctions that
we shall be interested in consists of the finitely accessible ones:
Definition 3.22. A wooded adjunction R:E→Cisfinitely accessible when
(i) the categories EandCare lfp, and
(ii)R:E→Cis a morphism of lfp categories.
18Recall from Definition 2.6 that morphisms of lfp categories are limit-preserving finitary
functors. In fact, a functor between lfp categories is a morphism of lfp categories exactly
when it is a finitary right adjoint (see Remark 5.8 below).
We already noted in Example 2.7 that categories of the form Str(Σ) (and, in particular,
of the form Str(σ)) are always lfp. Hence the “extensional” category Eis lfp in all the
examples of §3.3. To establish that the wooded categories of interest are also lfp, we shall
rely on the following criterion, which is a direct consequence of Lemma 2.10.
Lemma 3.23. A wooded category Cis lfp provided the following conditions are satisfied:
(i)Cis cocomplete,
(ii) every path in Cis finitely presentable, and
(iii)Cadmits a small dense full subcategory consisting of paths.
Example 3.24. Letσbe a finite (mono-sorted, relational) signature. For all 0 < k≤ω,
the (comonadic) wooded adjunction Lk:RE
k(σ)⇄Str(σ) :Rkin Example 3.19 is finitely
accessible. To see this, note that the comonad LkRkis finitary (this can be deduced e.g.
using the criterion in [11, Theorem 3.4]). It follows that Rkis finitary and Lkpreserves
and reflects finitely presentable objects, cf. e.g. [22, p. 45] or [53, Lemma B.2]. Since
the underlying σ-structure of any path in RE
k(σ) is finite, hence finitely presentable in
Str(σ), we see that paths in RE
k(σ) are finitely presentable. By Lemma 3.23, the latter
category is lfp; just observe that RE
k(σ) is cocomplete because Str(σ) has this property
and comonadic functors create colimits.
The adjunction in eq. (3) obtained by composing with the adjunction H⊣Jbetween
σ-structures and σI-structures is also a finitely accessible wooded adjunction, since J
(which interprets Ias the identity relation) is easily seen to be finitary.
Remark 3.25. In the previous example, the assumption that σis finite is necessary for
Lemma 3.23 to apply; e.g., if σis the infinite signature in Remark 3.2, there are paths P
that are not finitely presentable in RE
k(σ) since LkPis not finitely presentable in Str(σ).
On the other hand, if the signature σis infinite, we can still prove that the category
RE
k(σ) is lfp by invoking a result of Diers which provides sufficient conditions for the
category of coalgebras for a comonad to be lfp (see [22, Proposition 1.12.1] and also [53,
Theorem B.5]).
By a reasoning completely analogous to that in Example 3.24, one can see that the
right adjoints in Example 3.21 (for finite σ) are morphisms of lfp categories and yield
finitely accessible wooded adjunctions.
3.3.2. Detection of path embeddings. Consider a finitely accessible wooded adjunction
C E.L
R⊥
In the examples of §3.3.1, Lemma 3.23 was instrumental in proving that the wooded cat-
egoryCis lfp. In particular, in Example 3.24, the paths in the wooded categories RE
k(σ)
are finitely presentable objects (this is also the case with Example 3.21, for finite σ).
Moreover, the adjunctions in the aforementioned examples are such that a morphism f
of the wooded category Cis an embedding (i.e. f∈M) exactly when Lf, the image of f
under the left adjoint L:C→E, is an embedding of structures in E. This motivates the
following definition:
Definition 3.26 (Detection of path embeddings) .LetΣbe a signature. A finitely
accessible wooded adjunction L:C⇄E:Rdetects path embeddings in Σwhen the
following conditions hold:
19(i) there is a cartesian theory TinΣsuch that E=Mod (T),
(ii) all paths in Care finitely presentable, and
(iii) a morphism f:P→ainC, with Pa path, is an embedding exactly when Lfis
an embedding of Σ-structures in E.
Remark 3.27. Definition 3.26 requires a few comments.
(1) Note that condition (i) of Definition 3.26 ensures that Eis lfp, and also a reflective
subcategory of Str(Σ) closed under filtered colimits (cf. Remark 2.9).
Conversely, a full subcategory EofStr(Σ) that is reflective and closed under
filtered colimits is lfp [13, Corollary 1.47], and so there is a cartesian theory T
such that Eis equivalent to Mod (T) (cf. again Remark 2.9). However, we cannot
assume that Tis a theory in the signature Σ; this follows from a slight adapt-
ation of an example given in [51] and used in [57].7This is the reason why in
Definition 3.26 we had to explicitly require the existence of a cartesian theory T
inΣsuch that E=Mod (T).
(2) Given an lfp category E, there are several signatures Σsuch that Eis equivalent
toMod (T) for a cartesian theory TinΣ; see [36, Lemma D1.4.9].
For a given Σ, it follows from completeness (in the sense of Remark 2.2) that
the choice of a cartesian theory Tsuch that E∼=Mod (T) is irrelevant.
On the other hand, the signature Σis an important parameter in Defini-
tion 3.26. For instance, there is always a cartesian theory Tin a signature Σ
with no relation symbols and such that E∼=Mod (T) (see loc. cit.). It then
follows from Example 2.18 that the embeddings of structures are exactly the
monomorphisms in Str(Σ), and thus also in E, since the reflection E,→Str(Σ)
preserves and reflects monos.
(3) As we will see in Remark 8.6, given a category E,→Str(Σ) as in Definition 3.26,
every strong monomorphism in Eis an embedding of structures.
We have seen in Example 2.18 that the converse holds in the case of E=Str(Σ),
i.e. that the strong monos of Str(Σ) are exactly the embeddings of structures.
This is also true in the case of Pos,→Str(σ) (with σ={˙≤}), see Example 3.10.
However, there are cartesian theories Tin a signature Σsuch that embeddings
ofΣ-structures need not be strong monos in Mod (T), even when their domains
are finitely presentable. E.g., in the signature of monoids, the monoid inclusion
ι: (N,+,0)↣(Z,+,0) is an embedding of structures whose domain is finitely
presentable, but ιis not a strong monomorphism in the category of monoids.
Proof. We note the following.
(a) The monoid ( N,+,0) is finitely presentable in Mod (M), since it is the free
monoid on one generator.
(b)ιis an embedding of structures in Mod (M), since Mis an algebraic theory
while ιreflects equality.
(c)ιis epimorphic. Indeed, consider monoid morphisms h, k: (Z,+,0)→(M,·,1)
such that h(n) =k(n) for all n∈N. Then given n∈Nwe have k(n)·h(−n) =
h(n)·h(−n) =h(0) = 1, so that k(−n) =h(−n) since in a monoid inverses
are unique whenever they exist.
7See also [28], which makes explicit the failure of [13, Theorem 1.39] in the case of locally finitely
presentable categories. Appendix A provides some details.
20(d)ιis not strong since there is no diagonal filler das in
N N
Z ZidN
ι ι
idZd
□
(4) Let Cbe a wooded category with a stable factorisation system ( Q,M). Suppose
there exists a comonadic adjunction L:C⇄E:R, with E=Str(Σ) for some Σ,
such that for anymorphism finC, we have f∈Mif, and only if, Lfis an
embedding of structures in E. Then L⊣Rof course detects path embeddings
inΣ. Moreover, it is not difficult to see that Q={epis}andM={strong monos }.
Proof. By (the dual of) [10, Proposition 20.12], if the adjunction L⊣Ris comon-
adic, then the functor Lis conservative (i.e. reflects isomorphisms). Also, note
that Lpreserves epimorphisms since it is a left adjoint.
Consider an epimorphism e:a→binC, and take a ( Q,M) factorisation of e,
saye=m◦q. Since Lmis a strong mono and Leis epi in E, we have diagonal
filler d, as in
La •
Lb LbLeLq
Lm
idd
It follows that the mono Lmis also a split epi, and thus an iso. But then mis an
iso since Lis conservative, so that e∈Qby Lemma 2.19. In particular, e∈Qiff
eis an epimorphism of C.
Then that Mconsists exactly of the strong monomorphisms follows from the
fact that M={m| ∀e∈Q, e⋔m}(Definition 2.13). □
In all the examples of wooded adjunctions we have given so far, the “extensional”
category Eis merely a category of structures, while Definition 3.26 only requires that E
be a category of models of a cartesian theory. Example 3.28 below is a (trivial) instance of
Definition 3.26 in which the extensional category is the category of models of a non-empty
Horn theory.
Example 3.28. Consider the self-adjunction
Pos Pos.Id
Id⊥
We have seen in Example 3.10 that the lfp category Posis wooded when equipped with
the factorisation system ( Q,M), where Qis the class of surjective morphisms and Mthe
class of order embeddings. Hence, Id: Pos⇄Pos :Id is a finitely accessible wooded
adjunction which detects path embeddings.
We return to Example 3.28 in §10 below, where we discuss whether a (finitely accessible)
wooded adjunction of the form C⇄Mod (T) factors through the reflection Mod (T),→
Str(Σ), where Σis the signature of T(see Remark 2.9).
213.4.Main result. With Definition 3.26 at hand, we can state our main result:
Theorem 3.29. LetΣbe a signature and assume that L:C⇄E:Ris a finitely access-
ible wooded adjunction that detects path embeddings in Σ. For all M, N∈E,
M, N equivalent in L∞(Σ) =⇒M↔RN.
We now comment on the previous result and some of its applications. First of all, let
us indicate how Ehrenfeucht-Fra¨ ıss´ e games fit into the picture of Theorem 3.29.
Example 3.30. Letk≤ωand consider the adjunctions of Example 3.19:
RE
k(σI) Str(σI) Str(σ)Lk
RkH
J⊥ ⊥
The composite adjunction does notdetect path embeddings in σ, but the comonadic
adjunction Lk⊣Rkdetects path embeddings in σI.
So, given σ-structures MandN, Theorem 3.29 implies that JM↔RkJNwhenever
JMandJNareL∞(σI)-equivalent. Since J:Str(σ)→Str(σI) interprets the relation I
as the identity, it follows that MandNareRI
k-equivalent whenever they are L∞(σ)-
equivalent. (In fact, as we saw in Example 3.19, RI
k-equivalence coincides with equivalence
in the fragment of Lω(σ) with quantifier rank at most k.)
Under the assumptions of Theorem 3.29, the relation of R-equivalence cannot distin-
guish between objects of Ethat satisfy the same sentences in L∞. In general, this prevents
the relation ↔Rfrom collapsing to the isomorphism relation.
Example 3.31. Recall from Example 3.20 that the linear orders ( Q, <) and (R, <) are
L∞-equivalent in the signature σ={˙<}. It follows from Theorem 3.29 that ( Q, <)↔R
(R, <) for any L:C⇄Str(σ) :Rthat detects path embeddings in σ={˙<}.
Note that while the isomorphism type of a finite structure is definable in finitary first-
order logic Lω, this is no longer the case for the finite-variable fragments (see e.g. [23,
3.3.6(a)]). Besides, Corollary 8 in [2] (on pebble games for finite-variable logics) forces E
to contain infinite objects in general, on which L∞is strictly more expressive than Lω.8
Example 3.31 has the following consequence concerning game comonads for Monadic
Second-Order Logic ( MSO ).
Example 3.32. Recall that MSO in a given signature σis the extension of first-order
logic in σwith monadic (i.e. one-place) set variables, and quantification over them. In
particular, every M∈Str(σ) can be extended to a model of MSO (σ) in which set
variables are allowed to range over all subsets of M(such models are called standard ).
A comonadic approach to Ehrenfeucht-Fra¨ ıss´ e games for MSO was proposed in [33],
by viewing MSO in a signature σas a two-sorted first-order logic in an extension Σ
ofσwith one sort for (monadic) set variables, and a membership relation between the
two sorts. In particular, the MSO (σ)-theory of a standard model is contained in its
L∞(Σ)-theory, and so L∞(Σ)-equivalent standard models are also MSO (σ)-equivalent.
8Also, in contrast with L∞, not every isomorphism-class of finite structures is definable in finite-
variable logic with infinitary propositional connectives, see e.g [23, Example 3.3.13].
22On the other hand, Theorem 3.29 captures known differences between equivalence in
L∞(σ) and in MSO (σ): it implies that for σ={˙<}, there is no adjunction
C Str(σ)L
R⊥
that detects path embeddings in σand such that given M, N ∈Str(σ), the standard
models over MandNareMSO (σ)-equivalent exactly when MandNareR-equivalent.
Indeed, consider the linear orders ( Q, <) and (R, <). We know from Example 3.31 that
(Q, <)↔R(R, <). On the other hand, it is well known (and easy to see from [55, §2.4])
thatMSO (σ) can express Dedekind cuts and thus order-completeness. Hence ( Q, <)
and (R, <) are not MSO (σ)-equivalent.9
3.4.1. Outline of the following sections. The proof of Theorem 3.29 will occupy us for
much of the remainder of the paper. In the next section we provide some background on
arboreal categories, since many of our examples of wooded categories fall into this class.
In§§5–6 we recall some technical material on lfp categories and functorial semantics.
In§7 we obtain a weaker version of Theorem 3.29, where the assumption of detection
of path embeddings is replaced with an assumption of “definability of path embeddings”
in a wooded lfp category C. Then in §8 we devise formulae for substructure embeddings
in an lfp category E. We complete the proof of Theorem 3.29 in §9 by showing that
these formulae can be translated back along left adjoints , so that path embeddings are
definable in Cwhenever they are detected by L:C⇄E:R. This last step relies on
Hodges’ word-constructions [29, 30].
4.Arboreal categories
In this section we recall the notion of arboreal categories, a special class of wooded
categories in which the back-and-forth equivalence relation can be described in terms of
open map bisimilarity. We then give an example of a class of arboreal categories that does
not arise from game comonads, namely the categories of presheaves over forest orders.
4.1.The axioms of arboreal categories. We recall from [5, 6] the main definitions
and facts pertaining to the theory of arboreal categories.
Definition 4.1. LetCbe a well-powered category equipped with a proper factorisation
system ( Q,M), and let abe an object of C.
(1) We say that aisconnected if, for all non-empty sets of paths {Pi|i∈I}admitting
a coproduct binC, any arrow a→bfactors through some coproduct map Pi→b.10
(2) Consider the diagram with vertex aconsisting of all path embeddings into a. The
morphisms between paths are those making the obvious triangles commute:
a
P Q
9Moreover, the MSO (σ)-theory of ( Q, <) is decidable [52, proof of Theorem 2.1], while the MSO (σ)-
theory of ( R, <) is undecidable [56, Theorem 7].
10This differs from the usual notion, which asks C[a,−] to preserve all existing coproducts. Note that
initial objects are in general not connected in that sense, while they are always connected in our sense.
23Choosing representatives in a suitable way, this yields a cocone with vertex aover
the small diagram Pa. We say that aispath-generated provided this is a colimit
cocone in C.
Definition 4.2. Anarboreal category is a locally small and well powered category A,
equipped with a stable factorisation system, satisfying the following conditions:
(i) For any paths P, Q, Q′inA, if a composite P→Q→Q′is a quotient then so is
P→Q(“2-out-of-3 condition”).
(ii)Ahas all coproducts of sets of paths.
(iii) Every path in Ais connected.
(iv) Every object of Ais path-generated.
The full subcategory of Adefined by the paths is denoted by Ap.
Throughout, we assume that for any arboreal category A, its subcategory Apises-
sentially small (i.e., equivalent to a small category). Note, in particular, that every
arboreal category is wooded, since item (ii) in Definition 4.2 implies the existence of an
initial object 0. Similarly to the case of wooded adjunctions, an arboreal adjunction is
an adjunction L:A⇄E:Rwhere Ais an arboreal category. An arboreal adjunction is
finitely accessible if it is finitely accessible as a wooded adjunction.
Example 4.3. The category Tree (and thus also Forest ) is arboreal when equipped
with the (epimorphisms, monomorphisms) factorisation system. This was shown in [6,
Example 5.4] and is a special case of Theorem 4.9 below; see Remark 4.10.
All the examples of wooded categories that arise from game comonads given in §3 are
arboreal (cf. Examples 3.12, 3.13 and 3.14). An example of a wooded category that is
not arboreal is Pos, since the latter is not path-generated, cf. Examples 2.4 and 3.10.
An important property of arboreal categories is that, for any such category A, the
assignment a7→Paextends to a functor P:A→Tree [6, Theorem 3.11]. The action of
Pon morphisms is defined as follows: for all arrows f:a→binA,Pf:Pa→Pbis the
forest morphism sending a path embedding m:P↣ato the path embedding ∃fP↣b
obtained by taking the (quotient, embedding) factorisation of f◦m:P↠∃fP↣b.
This assignment is well-defined because factorisations are unique up to isomorphism, and
a quotient of a path is again a path (Lemma 3.5).
When Ais one of the categories of forest-ordered σ-structures introduced in §3, such as
Rk(σ),RE
k(σ) orRP
k(σ), the functor Pis naturally isomorphic to the composition of the
obvious forgetful functor A→Forest with the equivalence Forest →Tree that adds
a root, corresponding to the embedding of the empty substructure. If Ais the category
Tree , thenPis naturally isomorphic to the identity functor Tree→Tree .
Remark 4.4. Assuming conditions (i)–(iii) of Definition 4.2, condition (iv) is equivalent
to the fact that the inclusion functor I:Ap,→Ais dense [6, Lemma 5.1]. In particular,
condition (iii) of Lemma 3.23 always holds for arboreal categories, and so a cocomplete
arboreal category is lfp whenever its paths are finitely presentable.
4.2.Bisimilarity and open maps. A key property of arboreal categories, compared
to wooded categories, is that under mild assumptions the relation of back-and-forth equi-
valence coincides with the notion of bisimilarity via open maps introduced in [38].
24Definition 4.5. An arrow f:a→bin an arboreal category Aisopen if it satisfies the
following path-lifting property: given any commutative square
P a
Q bf
with P, Q paths, there is a diagonal filler Q→a.11Two objects c, d∈Aarearboreal-
bisimilar if there exists a span of open morphisms c← · → dconnecting them.
Example 4.6. By [6, Proposition 4.2], open morphisms in Tree coincide with bounded
ones. Moreover, it is well known that, for any two trees aandb, there exists a span of
bounded morphisms a← · → bprecisely when aandbare bisimilar in the usual sense
(i.e. as Kripke frames, where the accessibility relation is given by the covering relation).
Thus, arboreal-bisimilarity in Tree coincides with the usual notion of bisimilarity.
Theorem 4.7 ([6, Theorem 6.12]) .Leta, bbe objects of an arboreal category admitting
a product. Then aandbare back-and-forth equivalent (in the sense of Definition 3.17)
if, and only if, they are arboreal-bisimilar.
Recall from Example 4.3 that the category Tree is arboreal, and it is complete because
it is equivalent to the presheaf category bN. It follows from Example 4.6 and Theorem 4.7
that two trees are back-and-forth equivalent if, and only if, they are bisimilar in the usual
sense. In general, since the functor P:A→Tree sends open morphisms to bounded ones
by [6, Proposition 4.2], if a, b∈Aare back-and-forth equivalent objects of an arboreal
category with binary products, then the trees PaandPbare bisimilar—but the converse
need not hold.
Remark 4.8. The notion of arboreal bisimilarity in Definition 4.5 makes sense, more gen-
erally, in wooded categories. In fact, a straightforward adaptation of [6, Proposition 6.6]
shows that any two arboreal-bisimilar objects of a wooded category Care back-and-forth
equivalent. However, the reverse implication need not hold unless Cis arboreal.
4.3.Presheaves over a forest. Recall that a presheaf category admits a unique proper
factorisation system, namely the (epimorphisms, monomorphisms) factorisation system,
and the latter is stable (see Example 2.23 and Footnote 3). This section is devoted to
the following result:
Theorem 4.9. LetFbe a forest, seen as a (posetal) category. The presheaf category bF
is arboreal, and the paths in bFare precisely the representable functors along with the
initial object.
Remark 4.10. Letting Fin Theorem 4.9 be the countable chain N, we see that the
categories Tree andForest are arboreal.
Theorem 4.9 provides us with examples of (finitely accessible) arboreal adjunctions
of a different nature than those discussed in §3. For instance, the following example is
inspired by the Diaconescu cover of a topos, as described in [45, §IX.9].
Example 4.11. Given a small category D, letF(D) be the forest whose nodes are finite
sequences sof composable arrows
a0 a1 an−1 ank1 kn
11This definition of open morphism differs from, but is equivalent to, the one used in [6]; see Lemma 4.1
inop. cit.
25inD, and where s≤texactly when sis a prefix of t, say
a0 an an+1 an+m−1 an+m.s kn+1 kn+m
Letπbe the functor F(D)→Dsuch that, for s≤tas above, π(s≤t):an→an+mis
the composition kn+m◦···◦ kn+1. The functor π∗:bD→\F(D), defined by precomposing
with π, has adjoints on both sides (cf. e.g. [36, Example A4.1.4]). In view of Example 2.11
and Theorem 4.9, this yields a finitely accessible arboreal adjunction between bDand the
arboreal category \F(D).
We elaborate on Example 4.11 in Example 7.18 ( §7.3) and Example 10.3 ( §10) below.
In the remainder of this section, we offer a proof of Theorem 4.9. To this end, fix an
arbitrary forest F(regarded as a posetal category) and consider the presheaf category bF.
Recall that an object of bFisrepresentable if it is naturally isomorphic to one of the form
yafor some a∈F, where
y:F−→bF
is the Yoneda embedding.
We start by characterising the paths in bF:
Lemma 4.12. An object of bFis a path if, and only if, it is either initial or representable.
Proof. Clearly, the initial object 0ofbF(i.e. the empty presheaf) is a path. To see that
representable functors are paths, it suffices to show that yais a path whenever a∈F.
Let
a1≺ ··· ≺ an=a
be the finite chain of predecessors of ainF. Direct inspection shows that the poset of
subobjects of yacan be identified with the finite chain
0≺ya1≺ ··· ≺ ya.
(Recall that, in a topos, the unique arrow from the initial object 0is monic.) Therefore,
yais a path.
Conversely, suppose that Pis a path in bFthat is not initial. As the Yoneda embedding
y:F→bFis dense, Pis the colimit of the canonical diagram
D:y/Pπ−→Fy−→bF.
This diagram is non-empty because Pis not initial. Suppose for a moment that every
morphism ya→P, with a∈F, is monic. Then, since Pis a path, there is an object iof
y/Psuch that, for any other jiny/P, the colimit map D(j)→Pfactors through the
colimit map D(i)→P. It follows that P∼=yawhere a:=π(i), and so Pis representable.
It remains to show that each morphism ya→Pis monic. In turn, this follows at once
from the fact that Fis a posetal category: any component of a natural transformation
f:ya→Pis injective because its domain has at most one element, and so fis monic. □
To complete the proof of Theorem 4.9, it remains to prove that bFsatisfies condi-
tions (i)–(iv) in Definition 4.2.
Lemma 4.13 (Condition (i)) .bFsatisfies the 2-out-of-3 condition.
Proof. Consider paths P, Q, Q′inbFand assume that the composition
Pα−→ Qβ−→ Q′
is an epimorphism. It suffices to show that, for any a∈F, the component αa:P(a)→
Q(a) is surjective. By Lemma 4.12, the sets P(a) and Q(a) have at most one element.
26Hence, we must show that, for any a∈F,Q(a)̸=∅entails P(a)̸=∅. We prove the
contrapositive. If P(a) =∅then, since ( β◦α)ais an epimorphism, also Q′(a) =∅. Since
there is no function from a non-empty set to the empty set, it must be Q(a) =∅.□
Condition (ii) of Definition 4.2 (stating that bFhas coproducts of sets of paths) trivially
follows from the cocompleteness of bF.
Lemma 4.14 (Condition (iii)) .Every path in bFis connected.
Proof. The initial object of bFis trivially connected. If Pis a non-initial path in bF,
by Lemma 4.12 we can assume that Pis of the form yafor some a∈F. For every
non-empty set of paths {Pi|i∈I}, we have:
bFh
ya,a
i∈IPii
∼= a
i∈IPi
(a) (Yoneda Lemma)
∼=a
i∈IPi(a) (colimits computed in Set)
∼=a
i∈IbF[ya, P i]. (Yoneda Lemma)
Direct inspection shows that the ensuing bijection
a
i∈IbF[ya, P i]−→bFh
ya,a
i∈IPii
is the canonical map that, on a summand bF[ya, P j], sends an arrow ya→Pjto its
composition with the coproduct map Pj→`
i∈IPi. Therefore, yais connected. □
Lemma 4.15 (Condition (iv)) .Every object of bFis path-generated.
Proof. By Remark 4.4, it suffices to show that the full subcategory bFpofbFdefined by
the paths is dense. Representables in bFform a dense subcategory; as bFpcan be identified
by Lemma 4.12 with the subcategory of representables, along with the initial object, it
is also dense. □
5.Gabriel-Ulmer duality
In the present work, we rely crucially on Gabriel-Ulmer duality for locally finitely
presentable (lfp) categories, which has two possible readings: an algebraic one and a
logical one. In its algebraic reading, Gabriel-Ulmer duality is a dual biequivalence between
lfp categories and finitely complete small categories . Applying the duality twice turns an
lfp category into an equivalent category consisting of all finite-limit-preserving functors
C−→Set,
where Cis small and finitely complete. In its logical reading, Gabriel-Ulmer duality is a
syntax-semantics duality, with finitely complete small categories representing certain first-
order theories, namely the cartesian theories of §2.2, and lfp categories being categories
of models of cartesian theories. In this section we focus on the algebraic view, leaving
the discussion of the logical view to §6.
We begin in §5.1 by recalling the posetal restriction of Gabriel-Ulmer duality, namely
the duality between (meet-)semilattices and algebraic lattices [48]. The full duality
between lfp categories and small finitely complete categories is presented in §5.2.12
12In its original form [27], this duality involves small κ-complete categories and locally κ-presentable
categories, for κa regular cardinal. We shall focus on the case κ=ℵ0.
275.1.Semilattices and algebraic lattices. A(meet-)semilattice is a poset in which
every finite subset has an infimum, and a morphism of semilattices is a map that preserves
finite infima. We denote the ensuing category by SL.
In the same way that Boolean algebras correspond to classical propositional theories via
the Lindenbaum-Tarski construction, semilattices correspond to theories in the {⊤,∧}-
fragment of propositional logic. From this viewpoint, a model of a semilattice Lis a
morphism of semilattices h:L→2 into the two-element semilattice. The set SL[L,2] of
all models of Lis a poset with respect to the pointwise order, and is order-isomorphic to
the poset FLof filters on L(ordered by set-theoretic inclusion) via the map h7→h−1(1),
where 1 denotes the infimum of the empty set (i.e. the largest element of the semilattice).
Remark 5.1. Regarding a semilattice Las a category, the functor category [ L,2] can be
identified with the poset ULof upwards closed subsets of L. The (contravariant) Yoneda
embedding Lop→[L,Set] factors through the embedding Lop→ULthat sends ato↑a.
In turn, the latter factors through the inclusion FL ,→UL. In fact, the image of the
Yoneda embedding consists of the principal filters on L.
The intersection of a set of filters is again a filter, hence the poset FLis a complete
lattice. Further, directed suprema in FLare given by set-theoretic unions. It follows
that, for all morphisms of semilattices k:L→M, the map Fk:FM→FLdefined by
F7→k−1(F) preserves arbitrary infima and directed suprema.
In order to characterise the lattices of the form FL, recall that an element xof a
poset Xiscompact if, for all directed subsets S⊆Xadmitting a supremum, x≤WS
implies x≤yfor some y∈S. Regarding the poset Xas a category, an element x∈X
is compact precisely when it is finitely presentable. Principal filters are (exactly the)
compact elements of FL, thus each element of FLis a directed supremum of compact
ones. That is, FLis an algebraic lattice :
Definition 5.2. A poset Xis an algebraic lattice if it satisfies the following conditions:
(i)Xis a complete lattice.
(ii) Every element of Xis the supremum of a directed set of compact elements.
We write AlgL for the category of algebraic lattices and maps that preserve directed
suprema and all infima.
Remark 5.3. A poset (regarded as a small category) is lfp if, and only if, it is an algebraic
lattice [13, Example 1.10(5)]. Moreover, the morphisms of AlgL correspond precisely to
the morphisms of lfp categories. In fact, since a cocomplete small category is a preorder
with all suprema [44, Proposition V.2.3], and is thus equivalent (as a category) to a
complete lattice, every small lfp category is equivalent to an algebraic lattice.
Given an algebraic lattice X, let KX be the set of compact elements of Xwith the
induced order. Note that KXadmits finite suprema (computed in X), hence ( KX)opis a
(meet-)semilattice. Now, consider a morphism f:X→YinAlgL . Since fpreserves all
infima, it has a left adjoint f∗. In turn, f∗preserves compact elements because fpreserves
directed suprema. If Kf:KY→KX denotes the restriction of f∗to the compact
elements, its order-dual ( Kf)op: (KY)op→(KX)opis a morphism of semilattices. We
thus obtain a pair of functors
F(−):SLop⇆AlgL :K(−)op.
These functors are quasi-inverse each other, yielding a dual equivalence between SL
andAlgL , see [48]. In particular, for every semilattice Land algebraic lattice Xthere
are natural isomorphisms L∼=(K(FL))opandX∼=F(K(X)op).
28Remark 5.4. For any algebraic lattice X, the set AlgL [X,2] equipped with the pointwise
order is isomorphic to ( KX)op. In fact, K(−)op:AlgL →SLopis naturally isomorphic
to (the appropriate co-restriction of) the functor AlgL [−,2]. In other words, the duality
between semilattices and algebraic lattices is induced by the dualising object 2, regarded
as either a semilattice or an algebraic lattice.
5.2.Finitely complete and locally finitely presentable categories. LetDbe a
finitely complete small category. Recall that we denote by lex [ D,Set] the full subcategory
of the functor category [ D,Set] consisting of the lex-morphisms, i.e. of those functors
D→Setwhich preserve finite limits.
Remark 5.5. A poset, regarded as a (small) category, is finitely complete if and only if
it is a semilattice. A map between semilattices is a morphism of semilattices precisely
when it is a lex-morphism.
Generalising Remark 5.1, since representable functors preserve limits, the contravariant
Yoneda embedding factors as
Doplex [D,Set] [D,Set].y ι
Limits and colimits in [ D,Set] exist and are computed pointwise; since limits commute
with (finite) limits, lex [ D,Set] is closed in [ D,Set] under limits. Similarly, as filtered
colimits in Setcommute with finite limits, if f∈[D,Set] is a filtered colimit of finite-
limit-preserving functors, then fitself preserves finite limits. Since ι: lex [D,Set],→
[D,Set] is a full inclusion, we get that filtered colimits in lex [ D,Set] exist and are
preserved by ι. In other words, lex [ D,Set] is closed in [ D,Set] under filtered colimits.
Further, lex [ D,Set] admits also finite colimits, although they are not computed pointwise
(see e.g. [35, Theorem VI.1.6], where it is also proved that y:Dop→lex [D,Set] preserves
finite colimits). Hence, lex [ D,Set] is a cocomplete category.
Recall that the categorical analogue of compact elements are finitely presentable ob-
jects. By the Yoneda lemma, all representable functors are finitely presentable in [ D,Set],
hence in lex [ D,Set] because the inclusion ιpreserves filtered colimits.13Since every ob-
jectFof [D,Set] is the colimit of the canonical diagram of representable functors
(y/F) Doplex [D,Set] [D,Set],π y ι
and the latter is filtered whenever Fis a lex-morphism (cf. e.g. [35, Proposition VI.1.3]),
every object of lex [ D,Set] is a filtered colimit of representable (hence finitely presentable)
ones. Thus, lex [ D,Set] is a locally finitely presentable category.
Conversely, given an lfp category E, its full subcategory Efpdefined by the finitely
presentable objects is essentially small and closed under finite colimits, see e.g. [13, Pro-
position 1.3 and Remark 1.9]. Replacing Efpwith a small skeleton if necessary, Eop
fpis a
small finitely complete category, and there is an equivalence of categories
E≃lex
Eop
fp,Set
,
see e.g. [13, Theorem 1.46]. In particular, a category is lfp if, and only if, it is equivalent
to one of the form lex [ D,Set] for some finitely complete small category D. As a result,
each lfp category is complete and well-powered.
We now turn to morphisms of lfp categories. Recall from Definition 2.6 that they
are the limit-preserving finitary functors between lfp categories. Every lex-morphism
13In fact, since idempotents split in D, the finitely presentable objects of lex [ D,Set] are exactly the
representable ones, see [16, Proposition 6.5.4 and Lemma 6.5.6].
29f:D→D′induces a functor
f∗: lex [D′,Set]→lex [D,Set], f∗G:=G◦f. (4)
The functor − ◦f: [D′,Set]→[D,Set] preserves all limits and colimits because it is
both right and left adjoint (cf. e.g. [36, Example A4.1.4]). Hence, f∗preserves limits and
filtered colimits since lex [ D,Set] and lex [ D′,Set] are closed under limits and filtered
colimits in the respective functor categories. That is, f∗is a morphism of lfp categories.
We shall now see that every morphism of lfp categories F:E→Farises from one of
the form f∗for a lex-morphism f:Fop
fp→Eop
fp. To this end, we recall the following known
characterisation of morphisms of lfp categories:
Proposition 5.6. A functor between lfp categories is a morphism of lfp categories if, and
only if, it has a left adjoint that preserves finitely presentable objects.
Proof. By the Adjoint Functor Theorem for lfp categories (cf. [13, 1.66]), any limit-
preserving finitary functor between lfp categories is right adjoint. Further, a right adjoint
between lfp categories is finitary precisely when its left adjoint preserves finitely present-
able objects (cf. the proof in loc. cit. ). □
Remark 5.7. Letf∈lex [D,D′]. As lex [ D′,Set] is cocomplete, the restriction of the
functor − ◦fto lex [ D′,Set]→[D,Set] has a left adjoint f!that sends Fto the left
Kan extension Lan y(yf)(F) = Lan fF[45, Theorem I.5.2]. The left adjoint of f∗is then
given by the restriction of f!to lex [ D,Set].
IfF:E→Fis a morphism of lfp categories then, by Proposition 5.6, it has a left
adjoint that restricts to a lex-morphism f:Fop
fp→Eop
fp. Then Fcorresponds to f∗via the
equivalences E∼=lex
Eop
fp,Set
andF∼=lex
Fop
fp,Set
. In particular, every morphism of
lfp categories lex [ D′,Set]→lex [D,Set] is naturally isomorphic to one of the form f∗
for a lex-morphism f:D→D′.
Remark 5.8. In Definition 3.22, we called an adjunction L⊣Rbetween lfp categories
finitely accessible when Ris finitary. By Proposition 5.6, the morphisms of lfp categories
can be characterised as the (right adjoints in) finitely accessible adjunctions.
Write LFP for the 2-category whose 0-cells (objects) are locally finitely presentable
categories, whose 1-cells (morphisms) are morphisms of lfp categories, and whose 2-cells
are natural transformations. Moreover, write Lex for the 2-category of small finitely
complete categories, lex-morphisms and natural transformations. In view of the above,
there is a 2-functor from Lexop(reverse the 1-cells) to LFP sending Dto lex [ D,Set].
Gabriel-Ulmer duality states that the latter is a biequivalence Lexop→LFP (with left
biadjoint E7→Eop
fp). This was established at the level of objects by Gabriel and Ulmer
in [27] and later extended to a fully fledged duality, cf. [46, 12].
6.Functorial semantics for cartesian theories
Building on the idea of functorial semantics, logical characterisations of lfp categories
have been proposed, see e.g. [13]. We recall the approach of Coste [20], according to
which lfp categories correspond exactly to categories of models of cartesian theories (in
the sense of §2.2). We mostly follow the presentation in [36, §D1].
6.1.Syntactic categories and functorial semantics. A basic idea of categorical logic
is that a theory Tshould be seen as a category, its syntactic category , and models of T
as certain functors defined on the latter category. Theorem 6.3 and Corollary 6.5 below
establish these equivalences for cartesian theories and their Set-based models.
30Definition 6.1 (Syntactic category) .Thesyntactic category Tof a cartesian theory T
is defined as follows.
Objects: are formulae-in-context Γ ::=φup to renaming of variables (i.e., α-equivalence),
denoted by {Γ|φ}.
Morphisms: from{⃗ x|φ}to{⃗ y|ψ}areT-provable equivalence classes of T-provable
functional relations from {⃗ x|φ}to{⃗ y|ψ}, i.e.T-provable equivalence classes of
formulae-in-context ⃗ x, ⃗ y::=θthat are cartesian over Tand such that Tproves
the sequents:
θ⊢⃗ x,⃗ y φ∧ψ
θ∧θ[⃗ z/⃗ y]⊢⃗ x,⃗ y,⃗ z ⃗ z˙ =⃗ y
φ⊢⃗ x (∃⃗ y)θ
We denote by [ ⃗ x, ⃗ y|θ] the equivalence class of ⃗ x, ⃗ y::=θ.
Note that the last sequent above is cartesian over the penultimate one. It is clear that T
is a category. Moreover:
Lemma 6.2. The syntactic category of a cartesian theory is finitely complete.
Sketch of proof. The terminal object is given by the formula ⊤in the empty context,
and binary products by binary conjunctions. Equalisers are obtained by means of binary
conjunctions and (provably unique) existential quantifiers. See [36, Lemma D1.4.2]. □
LetTbe a cartesian theory. Given a model M∈Mod (T), we can associate with
each object {⃗ x|φ}of the syntactic category Tthe set J⃗ x|φKM∈Set. Further, each
morphism [ ⃗ x, ⃗ y|θ]:{⃗ x|φ} → { ⃗ y|ψ}induces a functional relation
J⃗ x, ⃗ y|θKM J⃗ x|φKM×J⃗ y|ψKM (5)
and is thus the graph of a function J⃗ x|φKM→J⃗ y|ψKM. These assignments determine
a functor FM:T→Setdefined on the syntactic category of T. It is not difficult to see
that FMis a lex-morphism. In fact,
Theorem 6.3 ([36, Theorem D1.4.7]) .For each cartesian theory T, the assignment
Mod (T)→lex [T,Set], M7→FM
is (part of) an equivalence of categories.
In the above discussion of Theorem 6.3, we said nothing about morphisms. In the
following lemma, we collect some basic facts relating homomorphisms in Mod (T) to
natural transformations in lex [ T,Set].
Lemma 6.4. Letℓ:N→Mbe a morphism in Mod (T)and let λ:FN→FMbe the
corresponding natural transformation, under the equivalence in Theorem 6.3. Then
(1)M(τ) = Jy:τ| ⊤KM=FM{y:τ| ⊤} andℓτ=λ{y:τ|⊤}for each sort τ∈Sort(Σ).
Furthermore, given ⃗ y=y1:τ1, . . . , y n:τn,
(2)FM{⃗ y| ⊤} =Qn
i=1FM{yi:τi| ⊤},
(3)λ{⃗ y|⊤}=Qn
i=1λ{yi:τi|⊤}.
In particular, assuming ⃗ a∈J⃗ y| ⊤KN, we have
(ℓτ1(a1), . . . , ℓτn(an)) = λ{⃗ y|⊤}(⃗ a)∈J⃗ y| ⊤KM.
Proof. Item (1) follows from the definitions of FMandλfrom Mandℓ.
31(2) By Lemma 6.2, in Twe have
{⃗ y| ⊤} ∼={y1:τ1| ⊤} × ··· × { yn:τn| ⊤}
Hence
FN{⃗ y| ⊤} ∼=FN{y1:τ1| ⊤} × ··· × FN{yn:τn| ⊤}
since FNpreserves finite limits.
(3) By naturality of λ:FN→FM, fori= 1, . . . , n we have
FN{⃗ y| ⊤} FN{yi:τi| ⊤}
FM{⃗ y| ⊤} FM{yi:τi| ⊤}FN(πi)
λ{⃗ y|⊤} λ{yi:τi|⊤}
FM(πi)
where πi:{⃗ y| ⊤} → { yi:τi| ⊤} is the i-th projection in T. But since FNand
FMpreserve finite limits, the arrows FN(πi) and FM(πi) are also projections, and
the result follows. □
Theorem 6.3, combined with Example 2.3 and Gabriel-Ulmer duality ( §5.2), entails the
following result, which amounts to a logical reading of Gabriel-Ulmer duality.
Corollary 6.5. The following statements hold:
(1) A small category is finitely complete if, and only if, it is equivalent to the syntactic
category of a cartesian theory.
(2) A category is lfp if, and only if, it is equivalent to Mod (T)for some cartesian
theory T.
Proof. (1) One direction follows from Lemma 6.2. Conversely, if Cis small and finitely
complete, by Example 2.3 there is a theory Tsuch that lex [ C,Set]∼=Mod (T). An
application of Theorem 6.3 yields lex [ C,Set]∼=lex [T,Set] and so, by Gabriel-Ulmer
duality, C∼=T. (Alternatively, observe that the equivalence lex [ C,Set]∼=lex [T,Set] re-
stricts to an equivalence between the full subcategories on the finitely presentable objects,
which in turn gives C∼=T.)
(2) This follows from Example 2.3 and Theorem 6.3, combined with the fact that, by
Gabriel-Ulmer duality, a category is lfp if and only if it is equivalent to one of the form
lex [C,Set] for some small finitely complete category C. □
In particular, for any signature Σ, Theorem 6.3 entails that Str(Σ) is lfp as
Str(Σ)∼=lex [T(Σ),Set], (6)
where T(Σ) is the syntactic category of the cartesian theory T(Σ) inΣwith no axioms.
Limits and filtered colimits in Str(Σ) are simple: they are computed in Set; see e.g. [13,
Remark 5.1]. The same is true for categories of models of cartesian theories: if Tis any
cartesian theory in the signature Σ, then the identity-on-objects functor t:T(Σ)→Tis
a lex-morphism, and the corresponding morphism of lfp categories
t∗: lex [T,Set]→lex [T(Σ),Set]
coincides (via Theorem 6.3) to the inclusion functor Mod (T),→Str(Σ). Thus,
Lemma 6.6. For any cartesian theory T, the inclusion functor Mod (T),→Str(Σ)is a
morphism of lfp categories. In particular, Mod (T)is closed in Str(Σ)under limits and
filtered colimits.14
14In fact, for any first-order theory T,Mod (T) is closed in Str(Σ) under filtered colimits, and if it is
closed in Str(Σ) under finite limits then it is closed under arbitrary limits. However, the proof of these
facts is considerably more difficult than in the case of cartesian theories; cf. [13, Theorems 5.20 and 5.23].
326.2.Finitely presentable models. Syntactic categories, combined with the Yoneda
lemma, allow us to think of finitely presentable objects in lfp categories as being presented
by “generators and relations”. This extends Example 2.7 and Fact 2.8 to categories of
models of cartesian theories.
Fix an arbitrary cartesian theory T, and write Tfor its syntactic category.
Notation 6.7. Given {⃗ x|φ} ∈T, we write ⟨⃗ x|φ⟩ ∈Mod (T) for the model corres-
ponding (under Theorem 6.3) to the representable functor y{⃗ x|φ} ∈lex [T,Set].
Recall from §5.2 that the finitely presentable objects of lex [ T,Set] are exactly the
representable functors. Hence, the finitely presentable objects of Mod (T) are, up to
isomorphism, exactly those of the form ⟨⃗ x|φ⟩.
Remark 6.8. Up to isomorphism, we can always assume that a finitely presentable model
is of the form ⟨⃗ x|φ⟩where φisquantifier-free (that is, a finite conjunction of atomic
formulae). See [36, Lemma D1.4.4(ii)].
Remark 6.9. In view of Remark 2.2, if Mod (T) =Mod (U) for some other cartesian
theory UinΣ, then TandUprove the same sequents. In particular, a formula-in-
context ⃗ x::=φis cartesian over Texactly when it is cartesian over U, and the respective
syntactic categories of TandUare the same.
It follows that given E,→Str(Σ) such that E=Mod (U) for some U, the finitely
presentable models ⟨⃗ x|φ⟩ ∈Eare independent from the choice of the theory Usuch
thatE=Mod (U).
6.2.1. The Yoneda lemma. Consider a model M∈Mod (T) and recall from Theorem 6.3
that the functor FM∈lex [T,Set] associated to Mtakes{⃗ x|φ} ∈TtoJ⃗ x|φKM. The
Yoneda lemma provides a bijection
J⃗ x|φKM=FM({⃗ x|φ})∼=lex [T,Set] [y{⃗ x|φ}, FM]. (7)
In one direction, given ⃗ a∈J⃗ x|φKM, the unique natural transformation
FM(−)(⃗ a) : y{⃗ x|φ} −→ FM (8)
corresponding to ⃗ ahas component at {⃗ y|ψ} ∈Tdefined by
T[{⃗ x|φ},{⃗ y|ψ}]→FM({⃗ y|ψ}), θ7→FM(θ)(⃗ a).
Conversely, given an arbitrary λ:y{⃗ x|φ} → FM, set ⃗ a:=λ{⃗ x|φ}(id)∈J⃗ x|φKM. Then
we have λ=FM(−)(⃗ a).
Combining eq. (7) with the bijection
lex [T,Set] [y{⃗ x|φ}, FM]∼=Mod (T) [⟨⃗ x|φ⟩, M] (9)
from Theorem 6.3 yields the following generalisation of Fact 2.8.
Lemma 6.10. There is a bijection
J⃗ x|φKM∼=Mod (T) [⟨⃗ x|φ⟩, M].
As we will often toggle between the set J⃗ x|φKMand the hom-sets Mod (T) [⟨⃗ x|φ⟩, M]
and lex [ T,Set] [{⃗ x|φ}, FM], it is convenient to introduce the following terminology:
Definition 6.11. Given a morphism h:⟨⃗ x|φ⟩ →MinMod (T) and ⃗ a∈Mof the same
sorts as ⃗ x, we say that htakes ⃗ xto⃗ a, or that his induced by ⃗ a, when his the image of
the natural transformation FM(−)(⃗ a) in eq. (8) under the bijection in eq. (9).
336.2.2. Generators. The terminology in Definition 6.11 suggests that the model ⟨⃗ x|φ⟩is
“generated” by the variables ⃗ x=x1, . . . , x n. We will now make this intuition precise.
The bijection in eq. (7) yields the following description of finitely presentable models:
for each sort τ,
⟨⃗ x|φ⟩(τ) = Jy:τ| ⊤K⟨⃗ x|φ⟩∼=lex [T,Set]
y{y:τ| ⊤}, F⟨⃗ x|φ⟩
∼=T[{⃗ x|φ},{y:τ| ⊤}].
Assuming that ⃗ x=x1, . . . , x n, the next lemma shows that we can think of ⟨⃗ x|φ⟩
as being generated by elements ˙ x1, . . . , ˙xn∈ ⟨⃗ x|φ⟩corresponding to the projections
ϖi:{⃗ x|φ} → { xi| ⊤} inT, akin to the way in which generators of free algebras are
modelled by projections in categorical algebra. This implies that homomorphisms with
domain ⟨⃗ x|φ⟩are completely determined by their values on the ˙ xi’s, which will be crucial
to our use of word-constructions in §9.
Lemma 6.12. Let{⃗ x|φ} ∈Twith⃗ x=x1, . . . , x n. There exist ˙x1, . . . , ˙xn∈ ⟨⃗ x|φ⟩such
that, for any M∈Mod (T), any homomorphism h:⟨⃗ x|φ⟩ →Mand any ⃗ a∈J⃗ x|φKM,
htakes ⃗ xto⃗ a⇐⇒ h( ˙xi) =aifor all i= 1, . . . , n .
Proof. Fix an arbitrary i∈ {1, . . . , n }. Assume yis a variable of sort τiand consider the
T-morphism ϖi:{⃗ x|φ} → { y:τi| ⊤} given by the formula
⃗ x, y ::=φ∧xi˙ =y .
We define ˙ xi∈ ⟨⃗ x|φ⟩(τi), of sort τi, to be the image of ϖiunder the bijection
T[{⃗ x|φ},{y:τi| ⊤}]∼=⟨⃗ x|φ⟩(τi).
Now, let h:⟨⃗ x|φ⟩ →Mand⃗ a∈J⃗ x|φKMsuch that h( ˙xi) =aifor all i∈ {1, . . . , n },
and suppose that htakes ⃗ xto⃗b∈J⃗ x|φKM. The function
FM(ϖi) : J⃗ x|φKM−→ M(τi) = Jy:τi| ⊤KM
has graph J⃗ x, y|φ∧xi˙ =yKMand is thus the ith projection. Hence, the natural
transformation FM(−)(⃗b):y{⃗ x|φ} →FMtakes ϖi∈T[{⃗ x|φ},{y:τi| ⊤}] to
FM(ϖi)(⃗b) = bi∈M(τi).
By Lemma 6.4 and the definition of ˙ xi, we have h( ˙xi) =FM(ϖi)(⃗b) =bi. The statement
then follows because h( ˙xi) =aiif, and only if, ai=bi. □
Remark 6.13. Letσbe a (mono-sorted) purely relational signature. Then it is possible
to show that in Str(σ) the structure ⟨⃗ x| ⊤⟩, with ⃗ x=x1, . . . , x n, has carrier {˙x1, . . . , ˙xn}
(where the ˙ xi’s are pairwise distinct). Now, for any formula-in-context {⃗ x|φ}there
exists an epimorphism ⟨⃗ x| ⊤⟩ → ⟨ ⃗ x|φ⟩inStr(σ), see Remark 8.4 below. This induces
a surjection at the level of carriers, and so the carrier of ⟨⃗ x|φ⟩is{˙x1, . . . , ˙xn}(but
this time the ˙ xi’s need not be pairwise distinct). This extends to many-sorted relational
signatures, but is typically no longer true for signatures that are not purely relational, or
if we consider a non-empty (cartesian) theory.
Proof. We first show that the carrier of ⟨⃗ x| ⊤⟩is{˙x1, . . . , ˙xn}.
It follows from Lemma 6.12 that the carrier of ⟨⃗ x| ⊤⟩ contains {˙x1, . . . , ˙xn}. For the
converse inclusion, let Tbe the syntactic category of T(σ), the empty theory in σ(see
eq. (6), §6.1). Recall that ⟨⃗ x| ⊤⟩has carrier
T[{⃗ x| ⊤},{y| ⊤}]
34Let [⃗ x, y|θ] be a T-morphism from {⃗ x| ⊤} to{y| ⊤}. Hence T(σ) proves
θ∧θ[z/y]⊢⃗ x,y,zy˙ =z and ⊢⃗ x(∃y)θ
We show that there is some j∈ {1, . . . , n }such that ( ⃗ x, y::=θ) isT(σ)-equivalent to
⃗ x, y ::=y˙ =xj (10)
In view of (the proof of) Lemma 6.12, this will give the result. We rely on completeness
(Remark 2.2).
We first determine the j∈ {1, . . . , n }. Let Nbe the σ-structure {˙x1, . . . , ˙xn}, with
no relation assumed on the ˙ xi’s.15Since T(σ) proves ( ∃y)θ, it follows that there is some
j∈ {1, . . . , n }such that N|=θ( ˙x1, . . . , ˙xn,˙xj).
We now show that every model of θis a model of (10). Let Mbe aσ-structure, and let
(⃗ a, b)∈J⃗ x, y|θKM. It follows from the definition of Nabove that the function N→M
which takes ˙ xitoaiis a homomorphism. Since θis a positive existential formula, we get
thatM|=θ(⃗ a, a j) (see e.g. [31, Theorem 2.4.3(a)]). Hence b=ajsince ( ∃y)θis cartesian.
Conversely, we show that every model of (10) is a model of θ. Let Mbe aσ-structure,
and let ⃗ a∈M. Since T(σ) proves ( ∃y)θ, we get ( ⃗ a, b)∈J⃗ x, y|θKMfor some b∈M.
Then, reasoning similarly as above yields b=aj.
Hence, the carrier of ⟨⃗ x| ⊤⟩ is{˙x1, . . . , ˙xn}. It remains to show that the ˙ xi’s are
pairwise distinct. In view of (the proof of) Lemma 6.12, this amounts to showing that
for a given θas above, there is a unique jas in (10). But jis unique since ( ∃y)θis
cartesian. □
6.2.3. Homomorphisms. Fix a model M∈Mod (T). We discuss a logical description of
arrows in the comma category Mod (T)fp/Mthat we will use repeatedly. Let h:⟨⃗ y|ψ⟩ →
⟨⃗ x|φ⟩be a homomorphism in Mod (T) with corresponding T-morphism [ ⃗ x, ⃗ y|θ(⃗ x, ⃗ y)],
and let k:⟨⃗ x|φ⟩ →Mbe an arrow in Mod (T):
{⃗ y|ψ} {⃗ x|φ}
⟨⃗ y|ψ⟩ ⟨⃗ x|φ⟩
M[⃗ x,⃗ y|θ(⃗ x,⃗ y)]
h
k◦h k
Lemma 6.14 below says that if ktakes ⃗ xto⃗ a∈J⃗ x|φKM, then the composition k◦h
takes ⃗ yto the unique ⃗b∈J⃗ y|ψKMsuch that M|=θ(⃗ a,⃗b).
Lemma 6.14. Given h, θas above, let ⃗ a∈J⃗ x|φKMand⃗b∈J⃗ y|ψKM. Then M|=θ(⃗ a,⃗b)
if, and only if, the triangle below commutes, where ktakes ⃗ xto⃗ aandℓtakes ⃗ yto⃗b.
⟨⃗ y|ψ⟩ ⟨⃗ x|φ⟩
Mh
ℓ k
15This structure ought to be ⟨⃗ x| ⊤⟩, but we do not need to be that precise.
35Proof. We apply Theorem 6.3. With the notations of eq. (8), we have ℓ=k◦hif, and
only if, the following diagram commutes.
y{⃗ y|ψ} y{⃗ x|φ}
FMy[⃗ x,⃗ y|θ(⃗ x,⃗ y)]
FM(−)(⃗b) FM(−)(⃗ a)(11)
By functoriality of FM, the rightmost path in (11) is
FM((−)◦[⃗ x, ⃗ y|θ(⃗ x, ⃗ y)])(⃗ a) = FM(−)(FM([⃗ x, ⃗ y|θ(⃗ x, ⃗ y)])(⃗ a)).
Hence, the triangle in (11) commutes if and only if
⃗b=FM([⃗ x, ⃗ y|θ(⃗ x, ⃗ y)])(⃗ a),
which is in turn equivalent to ( ⃗ a,⃗b)∈J⃗ x, ⃗ y|θ(⃗ x, ⃗ y)KM(recall from eq. (5) above that
FM([⃗ x, ⃗ y|θ(⃗ x, ⃗ y)]) is the function J⃗ x|φKM→J⃗ y|ψKMof graph J⃗ x, ⃗ y|θ(⃗ x, ⃗ y)KM).□
The following simple and expected fact is an immediate consequence of Lemma 6.14.
Remark 6.15. Let⃗ x=x1, . . . , x n, with xjof sort τj. Then ⟨⃗ x| ⊤⟩is the coproduct of
⟨x1:τ1| ⊤⟩, . . . ,⟨xn:τn| ⊤⟩inMod (T).
Proof. We show that ⟨⃗ x| ⊤⟩ is the coproduct of the ⟨xj:τj| ⊤⟩, with coprojections ιj
induced from T-morphisms ϖj:{⃗ x| ⊤} → { xj:τj| ⊤} as in the proof of Lemma 6.12.
LetM∈Mod (T), together with morphisms hj:⟨xj|τj⟩ →Mfor each j= 1, . . . , n .
Using Lemma 6.12, let cj:=hj( ˙xj)∈M(τj). Let k:⟨⃗ x| ⊤⟩ → Mtake xjtocj. It
then follows from Lemma 6.14 that k◦ιj=hjfor each j= 1, . . . , n . Moreover, given
k′:⟨⃗ x| ⊤⟩ → Msuch that k′◦ιj=hjfor each j= 1, . . . , n , we have k′( ˙xj) = (k′◦ιj)( ˙xj) =
cj=k( ˙xj). Hence k′=kby Lemma 6.12. □
Lemma 6.14 will often be used in the following form:
Corollary 6.16. Let{⃗ x|φ},{⃗ y|ψ} ∈Tand let ⃗ a,⃗b∈Mbe of the same sorts as ⃗ x
and⃗ y, respectively. The following statements are equivalent:
(i) There exists a homomorphism hmaking the triangle below commute,
⟨⃗ y|ψ⟩ ⟨⃗ x|φ⟩
Mh
ℓ k
where ktakes ⃗ xto⃗ aandℓtakes ⃗ yto⃗b.
(ii)M|=φ(⃗ a)∧ψ(⃗b)∧W{θ(⃗ a,⃗b)|θ∈T[{⃗ x|φ},{⃗ y|ψ}]}. (Note that the latter
formula may be infinite.)
6.3.Interpretations and a transfer result. Recall from Corollary 6.5 that Gabriel-
Ulmer duality can be seen as a syntax-semantics duality. Accordingly, morphisms of lfp
categories induce interpretations of formulae, as we now explain.
Consider cartesian theories TandUwith syntactic categories TandU, respectively.
By Gabriel-Ulmer duality, for each morphism of lfp categories R:Mod (U)→Mod (T)
there is a lex-morphism t:T→Usuch that Rcorresponds, via Theorem 6.3, to the
functor t∗: lex [U,Set]→lex [T,Set]. Given a model M∈Mod (U) and {⃗ x|φ} ∈T,
the formula ⃗ x::=φis interpreted in RM as
J⃗ x|φKRM =FRM{⃗ x|φ}∼=FMt{⃗ x|φ}= Jt{⃗ x|φ}KM.
36In particular, for each sort τof the signature ΣofT,
(RM)(τ)∼= Jt{y:τ| ⊤} KM. (12)
It follows that Rinduces an interpretation ( −)tof (possibly infinitary) first-order for-
mulae in Σas formulae in the signature ΓofU. Let ψ(⃗ y) be a formula in Σ, with
⃗ y=y1, . . . , y n. We define a formula ψt(⃗ x1, . . . , ⃗ x n) inΓ, by induction on ψ, as follows.
Ifψis atomic then ψtisφwhere t{⃗ y|ψ}={⃗ x|φ}, and ( −)tcommutes with pro-
positional connectives. If ψ= (∃y:τ)ψ′(⃗ y, y), write {⃗ x|φ}fort{y:τ| ⊤}, and define
ψt(⃗ x1, . . . , ⃗ x n) as
(∃⃗ x) 
φ(⃗ x)∧(ψ′)t(⃗ x1, . . . , ⃗ x n, ⃗ x)
.
The case of ψ= (∀y)ψ′(⃗ y, y) is similar.
For the next result, given a formula ψ(y1, . . . , y n) inΣwith yiof sort τi, for each
i= 1, . . . , n we let {⃗ xi|φi}:=t{yi:τi| ⊤}. Further, for any model MofUand sort τ
ofΣ, letχτ
M:Jt{y:τ| ⊤} KM→(RM)(τ) be the inverse of the bijection in eq. (12).
Theorem 6.17. In the above situation, for all tuples ⃗ a1, . . . ,⃗ a n∈Mwith⃗ ai∈J⃗ xi|φiKM
for each i= 1, . . . , n ,
RM|=ψ(χτ1
M(⃗ a1), . . . , χτn
M(⃗ an))⇐⇒ M|=ψt(⃗ a1, . . . ,⃗ a n).
Remark 6.18. Note that ( −)tinterprets Lκ(Σ) inLκ(Γ), for each regular cardinal κ.
In particular, it interprets Lω(Σ) inLω(Γ). This is a crucial difference between inter-
pretations and word-constructions ( §9.1).
7.Hintikka formulae for back-and-forth games
We now return to the main goal of this paper: to show that, under mild additional
assumptions, given a finitely accessible wooded adjunction R:E→C, the relation of
R-back-and-forth-equivalence induced on the extensional category Eis definable in the
infinitary first-order logic L∞(see Theorem 3.29).
This is achieved in two steps. First, we give a logical description of the games G(a, b) in
the wooded category C. Then, using the tools of §6.3, we transfer this description along
(the Gabriel-Ulmer dual of) Rto obtain a characterisation in the signature of E. In this
section, we assume the existence of formulae defining path embeddings in C; we will see
in§§8–9 how to enforce this condition under the assumptions of Theorem 3.29.
To motivate the logical perspective on the games G(a, b), recall that in the classical
setting of finite Ehrenfeucht-Fra¨ ıss´ e games, the number of rounds corresponds to the
quantifier rank of formulae in Lω. This correspondence can be established by means of
m-Hintikka formulae , see e.g. [23, §2.2]. Given a relational structure Mand a tuple ⃗ aof
elements from M, the 0-Hintikka formula φ0
⃗ adescribes the isomorphism type of ⃗ a. For
m > 0, the m-Hintikka formula φm
⃗ aencodes the isomorphism types to which ⃗ acan be
extended in msteps, adding one element at each step.
In the infinite Ehrenfeucht-Fra¨ ıss´ e game, (an infinitary variant of) Hintikka formulae
yield a correspondence between the quantifier rank of formulae in L∞and the rank of
positions in the game; see e.g. [31, §3.5]. We recall the latter notion in §7.1, tailored to
the case of the games G(a, b). We then proceed in §7.2 to construct “Hintikka formulae”
for these games. This leads to Theorem 7.11, the first main result of this paper, which
states that given an lfp wooded category C, if the path embeddings in Care definable in
some signature Γassociated with C, then
a, b∈Cequivalent in L∞(Γ) =⇒Duplicator wins G(a, b).
Finally, in §7.3 we transfer this result along the interpretation induced by a finitely
accessible wooded adjunction R:E→C.
377.1.Ranks of positions. The following development mirrors [31, §3.4] (see also [41,
20.2]). Let Cbe a wooded category. Given a game G(a, b) as in Definition 3.15 we define
for each ordinal αa set Rk( α) ofpositions of rank ≥αinG(a, b). The definition is by
induction on α:
•(m, n)∈Rk(0) if ( m, n)∈W(a, b);
•(m, n)∈Rk(α+ 1) if ( m, n)∈W(a, b) and for each Spoiler move from position
(m, n), there is a Duplicator move arriving at a position in Rk( α);
•(m, n)∈Rk(α), for αa limit ordinal, if ( m, n)∈Rk(β) for all β < α .
Note that Rk( α)⊆W(a, b) for all ordinals α(this must be enforced in the clause for
successor ordinals, as there may be no possible Spoiler moves from position ( m, n)).
Moreover,
Lemma 7.1. Rk(α)⊆Rk(β)for all β < α .
Proof. By induction on α, we show that for all position ( m, n), if ( m, n)∈Rk(α) then
(m, n)∈Rk(β) for all β < α . The cases of 0 and of limit ordinals are trivial. So we only
consider the case of a successor ordinal α+ 1. Let ( m, n)∈Rk(α+ 1). We reason by
cases on α.
Case of α= 0:Trivial, since Rk(0) = W(a, b) by definition.
Case of α=β+ 1:Since ( m, n)∈Rk(α+ 1), after each Spoiler move, there is a Du-
plicator move reaching a position ( m′, n′)∈Rk(α). By induction hypothesis, all
such ( m′, n′) are in Rk( β). Hence ( m, n)∈Rk(β+ 1) by definition, and the result
follows from the induction hypothesis.
Case of αa limit ordinal: Since ( m, n)∈Rk(α+ 1), after each Spoiler move, there
is a Duplicator move reaching a position ( m′, n′)∈Rk(α). By definition, we
have ( m′, n′)∈Rk(β) for all β < α . It follows that for all β < α , after all
Spoiler move from position ( m, n), there is a Duplicator move reaching a position
(m′, n′)∈Rk(β). Hence ( m, n)∈Rk(β+ 1) for all β < α . Since αis a limit
ordinal, we have β+ 1< α whenever β < α , so that the induction hypothesis
implies ( m, n)∈Rk(β) for all β < α . Hence ( m, n)∈Rk(α) by definition. □
We thus have a decreasing sequence of sets (Rk( α))α⊆Pa×Pb, and this sequence is
eventually stationary. This relies on the following observation:
Lemma 7.2. Letα0be an ordinal such that Rk(α0)⊆Rk(α0+1). Then Rk(α) = Rk( α0)
for all α≥α0.
Proof. The proof is by induction on α≥α0. The result is trivial if α=α0. We consider
the two possible cases for α > α 0. Note that Rk( α0) = Rk( α0+ 1) by Lemma 7.1.
Case of α=β+ 1:Let (m, n)∈Rk(α0). We have to show that ( m, n)∈Rk(β+ 1), i.e.
that for every Spoiler move from position ( m, n), Duplicator has a move reaching
a position ( m′, n′)∈Rk(β). But since ( m, n)∈Rk(α0+ 1), for every Spoiler
move from position ( m, n), Duplicator has a move reaching a position ( m′, n′)∈
Rk(α0). Hence, by induction hypothesis, for every Spoiler move from position
(m, n), Duplicator has a move reaching a position ( m′, n′)∈Rk(β), and we are
done.
Case of αa limit ordinal: Given ( m, n)∈Rk(α0), by induction hypothesis we have
(m, n)∈Rk(β) for all β < α . Hence ( m, n)∈Rk(α) by definition and we are
done. □
Therank ofG(a, b), denoted by αa,b, is the least ordinal αsuch that Rk( α)⊆Rk(α+1).
The next result, a variant of [31, Lemma 3.4.1], implies that positions of rank ≥αa,bare
winning.
38Lemma 7.3. Letαbe an ordinal such that Rk(α)⊆Rk(α+1). For every (m, n)∈Rk(α),
Duplicator has a winning strategy from position (m, n).
Proof. Fix some ( m, n)∈Rk(α). Since ( m, n)∈Rk(α+ 1), for every Spoiler move from
position ( m, n), Duplicator can reach a position ( m′, n′)∈Rk(α). Iterating this process
induces a winning strategy for Duplicator, since Rk( α)⊆W(a, b). □
Remark 7.4. In full generality, Lemma 7.3 requires the Axiom of Dependent Choices16
But no choice axiom is required (with respect to ZF) ifG(a, b) has at most countably
many positions.
As an aside, we note that for each game G(a, b) we can exhibit an ordinal as in
Lemma 7.3. This can be seen by adapting (the proof of) [31, Theorem 3.4.2]: let S
be the set of positions ( m, n) ofG(a, b) such that ( m, n)/∈Rk(β) for some ordinal β.
Since Sis a set,
α0:=W{V{βordinal |(m, n)/∈Rk(β)} |(m, n)∈S}
is a well-defined ordinal.
Lemma 7.5. With α0as above, we have Rk(α0)⊆Rk(α0+ 1).
Proof. If (m, n)∈Rk(α0), then ( m, n)/∈Ssince ( m, n)∈Swould imply ( m, n)/∈Rk(β)
for some β≤α0, contradicting Lemma 7.1. Hence ( m, n)∈Rk(α0) implies that there is
no ordinal βsuch that ( m, n)/∈Rk(β); in particular ( m, n)∈Rk(α0+ 1). □
We then arrive at the following characterisation, based on [31, Theorem 3.4.2].
Theorem 7.6. Let(m, n)be an arbitrary position in the game G(a, b). The following
statements are equivalent:
(i)(m, n)∈Rk(α)for all ordinals α.
(ii)(m, n)∈Rk(αa,b).
(iii) Duplicator has a winning strategy from position (m, n).
Proof. The implication (i) ⇒(ii) follows from Lemma 7.5 and (ii) ⇒(iii) is given by
Lemma 7.3. It remains to prove (iii) ⇒(i). We show by induction on αthat for all
position ( m, n) inG(a, b), if Duplicator has a winning strategy from position ( m, n), then
(m, n)∈Rk(α).
Case of α= 0:If Duplicator has a winning strategy from position ( m, n) then by defin-
ition we have ( m, n)∈W(a, b).
Case of α=β+ 1:Assume that Duplicator has winning strategy from position ( m, n).
Then by induction hypothesis we have ( m, n)∈Rk(β)⊆W(a, b). Moreover,
for every Spoiler move, this strategy leads to a winning position ( m′, n′), and
by induction hypothesis we have ( m′, n′)∈Rk(β). Hence ( m, n)∈Rk(α) by
definition.
Case of αlimit: By induction hypothesis. □
Remark 7.7. Theorem 7.6 deserves a few comments:
(1) From a position of rank ≥k, with k∈N, Duplicator has a strategy which is
winning for krounds in G(a, b). Hence, the rank of G(a, b) is finite if the plays of
G(a, b) have bounded length (cf. Remark 3.16).
For instance, when k < ω , the games played in the arboreal category RE
k(σ)
(Examples 3.13 and 3.19) have finite rank because all plays have length at most k.
Just observe that each path has cardinality at most k.
16This axiom is of intermediate strength between the axiom of Countable Choice and the full Axiom
of Choice cf. e.g. [34, §5] and [41, §20B].
39(2) From a position of rank ω, for all k∈NDuplicator has a strategy that is winning
forkrounds. But they need not have a single strategy that is winning for krounds
for all k∈N.
7.2.Hintikka formulae for wooded categories. LetCbe an lfp wooded category.
We are going to devise sufficient conditions on Cso as to obtain Hintikka formulae for
the games G(a, b) for any a, b∈C. The main technical ingredients are the ordinal ranks
discussed in §7.1 and the material of §6.2 on finitely presentable models of cartesian
theories. Ultimately, we aim to prove Theorem 7.11, which is of the form
a, b∈Cequivalent in L∞=⇒Duplicator wins G(a, b).
As in §3.4, we assume that the paths in Care finitely presentable. However, in contrast
to§3.4, there is (yet) no extensional category E, and we cannot enforce the assumption of
“detection of path embeddings” of Theorem 3.29 (see Definition 3.26). Instead, we will
assume that the path embeddings in Care “definable” in a suitable sense. In a similar
way as in §3.4, we take as parameter the signature with respect to which path embeddings
are assumed to be definable.
Definition 7.8. LetΓbe a signature. We say that the path embeddings of a wooded
category Caredefinable in Γif the following conditions hold.
(i) There is a cartesian theory UinΓsuch that C=Mod (U).17
(ii) Every path in Cis finitely presentable (in C).
(iii) For each path ⟨⃗ y|ψ⟩ofC, there is a (possibly infinite) formula Emb C⟨⃗ y|ψ⟩(⃗ y)
inΓsuch that for all a∈Cand all h:⟨⃗ y|ψ⟩ →ataking ⃗ yto⃗ c∈J⃗ y|ψKa,
his an embedding if, and only if, a|= Emb C⟨⃗ y|ψ⟩(⃗ c).
We shall see in §9 that if a finitely accessible wooded adjunction R:E→Cdetects path
embeddings, then Chas definable path embeddings. E.g., the finitely accessible arboreal
adjunction Lk:RE
k(σ)⇄Str(σ) :Rkin Example 3.24 detects path embeddings, and
similarly for the arboreal adjunctions RP
k:Str(σ)→RP
k(σ) and RM
k:Str(σ)→RM
k(σ)
in Example 3.21.
Fix a signature Γand a wooded category Cwhose path embeddings are definable in Γ.
We are going to devise Hintikka formulae for the games G(a, b), for any a, b∈C. Let
Ube the syntactic category of U. By condition (ii) in Definition 7.8, for each path Q
ofC, there is some {⃗ zQ|ϖQ} ∈Usuch that Q∼=⟨⃗ zQ|ϖQ⟩. We fix a choice of such
a{⃗ zQ|ϖQ}for each Q. This allows us to extend the conventions of condition (iii) in
Definition 7.8 by writing Emb C[Q](⃗ zQ) = Emb C⟨⃗ zQ|ϖQ⟩(⃗ zQ). Whenever it is convenient,
we drop the subscript Qin⃗ zQ.
Fix an object a∈C. For each ordinal α, each path embedding m:P↣a, and each
path Q, we define a formula
Θ[m, Q, α ](⃗ z) = Θ C[a, m, Q, α ](⃗ zQ)
in the signature Γ. The definition is by induction on αand is given in Figure 1, where
we use the following notations. First, given an embedding between paths ℓ:Q↣Q′,
we denote by [ ⃗ z′, ⃗ z|ϑℓ]:{⃗ z′|ϖQ′} → { ⃗ z|ϖQ}theU-morphism corresponding to ℓvia
the Yoneda embedding y:Uop→lex [U,Set]. Moreover, Iso[ P, Q] is the formula ⊤if
P∼=Q, and⊥otherwise. Finally, for notational simplicity, we have dropped references
toCanda, since they remain fixed throughout the induction on α. But note that the
definitions do depend on a: see the clauses for Forth[ −,−,−] and Back[ −,−,−].
17Recall from Remark 6.9 that the choice of Uis irrelevant.
40Θ[m, Q, 0](⃗ z):= Iso[ P, Q]
Θ[m, Q, α ](⃗ z):=V
β<αΘ[m, Q, β ](⃗ z) ( αlimit ordinal)
Θ[m, Q, α + 1](⃗ z):= Iso[ P, Q]∧Forth[ m, Q, α + 1](⃗ z)∧Back[ m, Q, α + 1](⃗ z)
Forth[ m, Q, α + 1](⃗ z):=
V
m′:P′↣a
m≺m′W
ℓ:Q↣Q′
ℓ≺idQ′(∃⃗ z′)
ϖQ′(⃗ z′)∧ϑℓ(⃗ z′, ⃗ z)∧Emb[ Q′](⃗ z′)∧Θ[m′, Q′, α](⃗ z′)
Back[ m, Q, α + 1](⃗ z):=
V
ℓ:Q↣Q′
ℓ≺idQ′(∀⃗ z′) 
ϖQ′(⃗ z′)∧ϑℓ(⃗ z′, ⃗ z)∧Emb[ Q′](⃗ z′)
→W
m′:P′↣a
m≺m′Θ[m′, Q′, α](⃗ z′)
Figure 1. Hintikka formulae for the wooded category C(§7.2).
The next result says that the formulae Θ C[a,−,−, α](⃗ z) represent the positions of rank
at least αin the games G(a, b), where branges over the objects of C. This is proved by
induction on α, along the same lines as, e.g., [31, Theorem 3.5.1].
Proposition 7.9. Assume that the path embeddings of Care definable in Γ. Let a, b∈C
andm:P↣a. Further, let n:Q↣bbe induced by ⃗ c∈J⃗ z|ϖQKb. The following
statements are equivalent for all ordinals α:
(i)b|= Θ C[a, m, Q, α ](⃗ c).
(ii)(m, n)is a position of rank ≥αin the game G(a, b).
Proof. We proceed by induction on α. The case of αa limit ordinal follows trivially
from the induction hypothesis. In the case of α= 0, recall from Definition 3.15 that
(m, n)∈W(a, b) precisely when dom( m)∼=dom( n). This is equivalent to b|= Iso[ P, Q].
We now consider the case of a successor ordinal, say α+ 1. We again have ( m, n)∈
W(a, b) if and only if b|= Iso[ P, Q]. We then reason by cases on the next Spoiler move.
Claim 7.10. The following are equivalent:
•b|= Forth[ m, Q, α + 1](⃗ c).
•For all m′≻m, there is some n′≻nsuch that (m′, n′)∈Rk(α).
Proof of Claim 7.10. Assume that b|= Forth[ m, Q, α + 1](⃗ c) and consider some m′≻m.
Then there exist some ℓ:Q↣Q′and⃗ c′∈bsuch that ℓ≺idQ′and
b|=ϖQ′(⃗ c′)∧ϑℓ(⃗ c′,⃗ c)∧Emb[ Q′](⃗ c′)∧Θ[m′, Q′, α](⃗ c′).
Since the tuple ⃗ c′belongs to J⃗ z′|ϖQ′Kb, it induces a (unique) morphism n′:Q′→b,
which is an embedding because b|= Emb[ Q′](⃗ c′). Moreover, since b|= Θ[ m′, Q′, α](⃗ c′),
the induction hypothesis implies that ( m′, n′)∈Rk(α).
It remains to show that n′≻n. Lemma 6.14 yields n=n′◦ℓ, that is n≤n′. Ifn=n′
inPbthen n=n′◦ifor some iso i. Since n′is a mono, we get that ℓ=iis also an iso,
contradicting that ℓ≺idQ′. Hence n < n′. Further, if n′′is an element of Pbsatisfying
n≤n′′andn′′≤n′, then n=n′′◦k′andn′′=n′◦kfor some embeddings k, k′. Again
since n′is monic, we get k◦k′=ℓ. But as ℓ≺idQ′, either kork′is an iso. So we cannot
have n < n′′< n′.
The converse implication is proved in a similar fashion. □
Similarly, we see that b|= Back[ m, Q, α + 1](⃗ c) if, and only if,
41•for all n′≻n, there is some m′≻msuch that ( m′, n′)∈Rk(α).
The result then follows from the definition of Rk( α+ 1). □
We then get that equivalence in L∞implies back-and-forth equivalence ↔. This is our
first main result. Recall from Definition 3.17 that a↔bwhen Duplicator has a winning
strategy in G(a, b) from the initial position ( ⊥a,⊥b), where ⊥a:0a↣ais the root of Pa
and similarly for ⊥b.
Theorem 7.11. Assume that the path embeddings of Care definable in Γ. Then
a, b∈Cequivalent in L∞(Γ) =⇒a↔b.
The proof of Theorem 7.11 relies on Lemmas 7.12 and 7.13 below. Let Cbe a wooded
category whose path embeddings are definable in the signature Γ. Hence, similarly as
above, there is a cartesian theory UinΓsuch that C∼=Mod (U). Let Ube the syntactic
category of U.
Lemma 7.12. For each a∈C, there is a sentence ζasuch that 0a∼=⟨∅ |ζa⟩.
Proof. Recall from Lemma 3.5 that 0ais obtained by taking a factorisation 0↠0a↣a
of the unique map 0→a, where 0is initial in C. Since Cis lfp, 0is the finitely presentable
U-model ⟨∅ | ⊤⟩ , where ∅is the empty context ( §2.1). Moreover, 0and0aare paths
by Lemma 3.5. Since we assumed that paths in Care finitely presentable, 0ais finitely
presentable, say 0a∼=⟨⃗ x|φ⟩. By Lemma 2.19 we thus get a quotient e:⟨∅ | ⊤⟩ ↠⟨⃗ x|φ⟩.
In particular, eis epic in C, and thus also in its full subcategory Cfp. It then follows from
Theorem 6.3 and the Yoneda lemma that eis induced by a monic U-morphism
[⃗ x|θ] :{⃗ x|φ} −→ {∅ | ⊤} .
Since [ ⃗ x|θ] is monic, it follows from [36, Lemma D1.4.4(iii)] that Uproves the sequent
θ∧θ[⃗ x′/⃗ x]⊢⃗ x,⃗ x′⃗ x˙ =⃗ x′.
Moreover, by construction of U(Definition 6.1), Uproves
θ⊢⃗ xφ and φ⊢⃗ xθ.
It follows that the sentence ζa= (∃⃗ x)φis cartesian over U. Further, {⃗ x|φ}is isomorphic
to{∅ |(∃⃗ x)φ}inU(cf. the proof of [36, Lemma D1.4.4(ii)]), hence ⟨⃗ x|φ⟩is isomorphic
to⟨∅ |(∃⃗ x)φ⟩inC, which concludes the proof. □
Lemma 7.12 shows that Hintikka formulae of the form Θ C[a,⊥a,0b, α] can be assumed
to be sentences. It also implies the following simple yet important fact about wooded
categories with definable path embeddings.
Lemma 7.13. Ifa, b∈Care equivalent in L∞(Γ), then 0a∼=0b.
Proof. Assume that a, b∈Care equivalent in L∞(Γ). Since we have an embedding
⊥a:0a↣a, it follows that ais a model of the sentences ζaand Emb C⟨∅|ζa⟩. Hence
b|=ζa, which by Lemma 6.10 implies the existence of some h:0a→b. Moreover,
b|= Emb C⟨∅|ζa⟩, so that his actually an embedding. It follows that the unique map
0→bfactors as 0↠0a↣b. But 0→balso factors as 0↠0b↣b. Hence 0a∼=0b
since, in a proper factorisation system, factorisations are unique up to isomorphism. □
Remark 7.14. Note that when Cis either of the wooded categories RE
k(σ) orRP
k(σ) from
Examples 3.13 and 3.14(1), the initial object 0has empty carrier and so 0a∼=0bfor all
a, b∈C. However, this is not the case for the wooded category RM
k(σ) in Example 3.14(2),
since0has one element; in that case, we do need Lemma 7.13.
We can now prove Theorem 7.11.
42Proof of Theorem 7.11. Leta, b∈Cbe equivalent in L∞(Γ). We want to show that
Duplicator wins the game G(a, b) from position ( ⊥a,⊥b). By Theorem 7.6, this amounts
to showing that ( ⊥a,⊥b)∈Rk(α) for all ordinals α. We apply Proposition 7.9 and show
that, for every ordinal α, we have b|= Θ C[a,⊥a,0b, α], where we have assumed that
0b=⟨∅ |ζb⟩by Lemma 7.12.
Note that Duplicator wins the game G(a, a) from position ( ⊥a,⊥a). On the other
hand, by Lemma 7.13 we have 0a∼=0b. Hence, there is some ⊥′
a:0b↣asuch that
⊥′
a∼ ⊥ a, i.e. such that ⊥′
aand⊥arepresent the same element of Pa(see §2.4). It
follows that Duplicator wins G(a, a) from position ( ⊥a,⊥′
a). Thus, for each ordinal α, we
have a|= Θ C[a,⊥a,0b, α] and so also b|= Θ C[a,⊥a,0b, α]. □
7.3.The case of finitely accessible wooded adjunctions. Consider a finitely ac-
cessible wooded adjunction
C E,L
⊥
R
where the path embeddings of Care definable in some signature. Intuitively, we would
like to transfer Theorem 7.11 along the interpretation induced by the morphism of lfp
categories R:E→C(see §6.3). To make this precise, we consider a cartesian theory T
such that the lfp category Eis equivalent to Mod (T); see Corollary 6.5.
Combining Theorem 7.11 with the transfer Theorem 6.17 of §6.3 yields at once the
following result. Recall that given M, N∈E, we have M↔RNwhen RM↔RNinC.
Corollary 7.15. LetΣbe a signature. Consider a finitely accessible wooded adjunction
R:E→C, where the path embeddings of Care definable in some signature, and where
E=Mod (T)for some cartesian theory TinΣ. Then
M, N∈Eequivalent in L∞(Σ) =⇒M↔RN.
Note that Corollary 7.15 does not explicitly refer to the signature in which the path
embeddings of the wooded category Care definable; it only refers to the signature Σof
the extensional category E.
While the road towards Corollary 7.15 was relatively straightforward, the proof of
our main Theorem 3.29 is considerably more involved. Before proceeding, we comment
on Hintikka formulae in the context of Corollary 7.15. Fix some R:E→Cas in the
statement of the latter result, and let Tbe such that E=Mod (T).
Note that we may apply the transfer Theorem 6.17 directly to the Hintikka formulae
of§7.2, without the detour via Theorem 7.11. This direct approach requires a more
explicit description. Assume that the path embeddings of Care definable in a signature Γ.
In particular, there is a cartesian theory UinΓsuch that C=Mod (U). Let UandT
be the syntactic categories of UandT, respectively. As discussed in §6.3, the morphism
of lfp categories R:E→Ccorresponds via Theorem 6.3 to a functor t∗: lex [T,Set]→
lex [U,Set], where t:U→Tis a lex-morphism. Recall that the interpretation ( −)t
of§6.3 relies on the fact that given M∈Mod (T) and{⃗ y|ψ} ∈U, we have
J⃗ y|ψKRM∼= Jt{⃗ y|ψ}KM.
Combining this with Proposition 7.9, we get the following result.
Corollary 7.16. LetR:E→Cbe as above. Let M, N∈E, and let m:P↣RM be a
path embedding in C. Consider a path Qwith Q∼=⟨⃗ z|ϖQ⟩, and write {⃗ x|φ} ∈Tfor
t{⃗ z|ϖQ}. Let n:Q↣RNbe induced by ⃗ c∈J⃗ x|φKN. Then the following statements
are equivalent for all ordinals α:
(i)N|= (Θ C[RM, m, Q, α ])t(⃗ c).
43(ii)(m, n)is a position of rank ≥αin the game G(RM, RN ).
The more accurate description in Corollary 7.16 (compared to Corollary 7.15) can be
useful in the following situation. Recall from Remark 6.18 that ( −)tinterprets Lκ(Γ) in
Lκ(Σ) for each regular cardinal κ. In particular, (Θ C[RM, m, Q, α ])t(⃗ x) is a finite formula
whenever so is Θ C[RM, m, Q, α ](⃗ z). Direct inspection of Figure 1 reveals that the latter
formula is finite when all the following conditions are satisfied:
•The ordinal αis finite. This can always be assumed when for each N∈E, the
plays of G(RM, RN ) have (finite) bounded length (Remark 7.7.(1)), as e.g. in the
case of the k-round Ehrenfeucht-Fra¨ ıss´ e game (see Example 3.19).
•There are (up to isomorphism) finitely many embeddings m′:P′↣RM such
thatm≺m′. In the Ehrenfeucht-Fra¨ ıss´ e games for finite σ, this condition is met
when the σ-structure Mis finite.
•For each path QinCthere are (up to isomorphism) finitely many paths Q′and
embeddings ℓ:Q↣Q′with ℓ≺idQ′. This condition is met with k-round
Ehrenfeucht-Fra¨ ıss´ e games for finite (purely relational) signatures σ.
•The formulae Emb C[Q](−) are finite (see Definition 7.8).
Recall from Lemma 3.8 that the subcategory Cpof a wooded category Cdefined the
paths and the embeddings between them can be identified, up to equivalence, with a
forest order. We get
Corollary 7.17. LetΣbe a signature. Consider a finitely accessible wooded adjunction
R:E→Csuch that the path embeddings of Care definable in some signature Γ, and
E=Mod (T)for some cartesian theory TinΣ. Assume the following:
(i) The forest Cpis finitely branching.
(ii) The formulae Emb C[Q](−)(in the signature Γ) are finite.
Further, let M, N∈Esatisfy the following conditions:
(iii) The plays of G(RM, RN )have (finite) bounded length.
(iv) For each path embedding m:P↣RM inC, there are (up to isomorphism) finitely
many embeddings m′:P′↣RM such that m≺m′.
Then
M, N equivalent in Lω(Σ) =⇒M↔RN.
In view of Corollary 7.17, it is interesting to identify sufficient conditions ensuring that
the formulae Emb C[Q](−) of Definition 7.8 can be assumed to be finite. In §9.3, we will
investigate this question under the assumptions of Theorem 3.29.
The finitely accessible arboreal adjunction of Example 4.11 involving presheaves and
forests is a simpler case where condition (ii) above holds, as shown in the next example:
Example 7.18. LetAbe the category of presheaves over a forest, say A=bF.
We have seen that Ais arboreal, thus wooded (Theorem 4.9). Recall that, since Ais a
topos, (epis, monos) is the unique proper factorisation system on A, and this factorisation
system is stable (see §2.4). Moreover, Ais lfp. In fact, A∼=Mod (T(Fop)), where T(Fop)
is the cartesian theory of functors Fop→Set(see Example 2.3).
We shall now see that the path embeddings of Aare definable in the signature Σ(Fop)
ofT(Fop). First, recall that the paths of Aare finitely presentable since they are precisely
the representable functors, along with the initial object (Lemma 4.12). Second, we can
obtain finite formulae that define the path embeddings of AinΣ(Fop). The case of
initial paths is trivial, since in a topos any arrow from the initial object is monic. As
for non-initial paths, recall that Σ(Fop) has one sort pfor each p∈F, and one function
symbol f(q≤p):p→qfor each q≤pinF. The representable functor F[−, p] corresponds
44to the finitely presentable model ⟨x:p| ⊤⟩. Then, for each p∈Fthere is a finite
formula Mono[ p](x) inΣ(Fop) such that the following are equivalent in Mod (T(Fop)):
(i)h:⟨x:p| ⊤⟩ → Mis a monomorphism.
(ii)M|= Mono[ p](c), where htakes xtoc∈M(p).
(See §8.2 below for details.) Hence condition (ii) of Corollary 7.17 holds. Furthermore,
condition (i) of the latter is equivalent to Fbeing finitely branching. In any case, The-
orem 7.11 applies and so (identifying Mod (T(Fop)) with A) we get
M, N∈Mod (T(Fop)) equivalent in L∞(Σ(Fop)) =⇒M↔NinA.
Arboreal categories of the form A=bFappear in the finitely accessible arboreal ad-
junction of Example 4.11. Let Dbe a small category, and let F=F(D) be the forest
consisting of finite sequences sof composable arrows
a0 a1 an−1 ank1 kn
inD, as in Example 4.11. Via the functor π:F→D(which takes sas above to an), we
obtain a finitely accessible arboreal adjunction
bF bDπ!
⊥
π∗
to which Corollary 7.15 applies. Thus
X, Y∈bDequivalent in L∞(Σ(Dop)) =⇒X↔π∗Y,
this time identifying bDwithMod (T(Dop)). □
8.Formulae for embeddings
LetΣbe a signature and consider a finitely accessible wooded adjunction
C EL
⊥
R
where the extensional category Eis of the form Mod (T) for some cartesian theory T
inΣ. By Corollary 7.15, if the path embeddings of the wooded category Care definable
(in some signature), then
M, N∈Eequivalent in L∞(Σ) =⇒M↔RN.
Our main goal is now to establish the latter implication under the assumptions of
Theorem 3.29, namely that the adjunction L:C⇄E:Rdetects path embeddings in the
sense of Definition 3.26:
•A morphism f:P→ainCis an embedding if, and only if, Lf:LP→Lais an
embedding of Σ-structures in E.
To this end, in this section we show that the embeddings of structures in Eare definable
in the signature Σ, provided their domains are finitely presentable (recall from Proposi-
tion 5.6 that Lpreserves finitely presentable objects since its right adjoint Ris finitary).
We shall thus obtain formulae similar to those of condition (iii) in Definition 7.8:
•For each finitely presentable model ⟨⃗ x|φ⟩ofE, there is a (possibly infinite)
formula Emb ⟨⃗ x|φ⟩(⃗ x) inΣsuch that for all M∈Eand all h:⟨⃗ x|φ⟩ →Mtaking
⃗ xto⃗b∈J⃗ x|φKM,
his an embedding of Σ-structures ⇐⇒ M|= Emb ⟨⃗ x|φ⟩(⃗b).
45But this will only lead us halfway between Corollary 7.15 and Theorem 3.29, since
given P, a∈C, we obtain a formula Emb[ LP] inΣand over La∈E, while Corollary 7.15
asks for a formula in a signature for C, and over a∈C. This second step will be made
in§9 with the help of Hodges’ word-constructions .
Returning to the formulae Emb ⟨⃗ x|φ⟩(⃗ x) defining embeddings of structures in E, let
us first consider the special case where E=Str(σ) for a finite (mono-sorted) purely
relational signature σ. In this case, it is well known that we can define finite formulae
Emb⟨⃗ x|φ⟩(⃗ x) by considering appropriate conjunctions of negated atoms, as we now
recall. To start with, note that the structure ⟨⃗ x|φ⟩inStr(σ), with ⃗ x=x1, . . . , x n,
has carrier {˙x1, . . . , ˙xn}where the elements ˙ xi’s may not be pairwise distinct (cf. Re-
mark 6.13). Now, consider a homomorphism
h:⟨⃗ x|φ⟩ →M
inStr(σ) and assume that his induced by ⃗ a∈J⃗ x|φKM. Recall from Lemma 6.12 that
h( ˙xi) =aifor each i= 1, . . . , n , and so h:⟨⃗ x|φ⟩ →Mis an embedding of σ-structures
precisely when for every atomic formula ⃗ x::=α, we have
M|=α(a1, . . . , a n) =⇒ ⟨ ⃗ x|φ⟩ |=α( ˙x1, . . . , ˙xn).
In other words, his an embedding of σ-structures precisely when M|= Embσ⟨⃗ x|φ⟩(⃗ a),
where Embσ⟨⃗ x|φ⟩(⃗ x) is the finite formula
Embσ⟨⃗ x|φ⟩(⃗ x):=^
⃗ x::=αatomic
⟨⃗ x|φ⟩|=¬α( ˙x1,...,˙xn)¬α(⃗ x). (13)
The finiteness of the formula Embσ⟨⃗ x|φ⟩(⃗ x) relies on the facts that σis a finite
relational signature and the finitely presentable structure ⟨⃗ x|φ⟩has finite carrier. If σ
was an infinite (purely relational) signature, the above formula Embσ⟨⃗ x|φ⟩(⃗ x) would
still define embeddings, but would be infinite.
However, this approach does not extend to arbitrary cartesian theories T, even in
a finite relational signature σ. For example, Tcould force a relation symbol to be
functional, and this could lead to the structure ⟨⃗ x|φ⟩being infinite. What is more, the
carrier of ⟨⃗ x|φ⟩does not admit a simple description for non-empty theories T. This is
the reason why, in the remainder of this section, we need to adopt a different approach
to define the formulae Emb ⟨⃗ x|φ⟩(⃗ x).
We handle the general case of E=Mod (T) forTan arbitrary cartesian theory in §8.1.
This invloves some technicalities, for which we heavily rely on the material of §6. In §8.2,
we use the machinery of §8.1 to provide the missing proofs for Example 7.18.
The apparent technical gap between the cases of Str(σ) and Mod (T) will be discussed
in§10 below, where we show that that even when Tis a cartesian theory in a finite
relational signature σ, an adjunction C⇄Mod (T) as in Theorem 3.29 may not reduce
to the simpler case of C⇄Str(σ).
8.1.At-reflecting homomorphisms. Fix a cartesian theory Tin a signature Σ, and
writeTfor the syntactic category of T. Let Atbe a set of atomic formulae-in-context, i.e.
each element of Atis a formula-in-context ⃗ x::=αwhere αis atomic (cf. §2.1). We say
that a homomorphism h∈Mod (T) [M, N ] isAt-reflecting when for all ( ⃗ x::=α)∈At,
h(⃗ a)∈J⃗ x|αKN=⇒⃗ a∈J⃗ x|αKM.
Example 8.1. IfAtconsists of all (sorted) formulae of the form ( x, y::=x˙ =y), then the
At-reflecting homomorphisms of Mod (T) are exactly the monomorphisms. Just observe
that the full inclusion Mod (T),→Str(Σ) preserves and reflects monos by Lemma 6.6,
and the monos of Str(Σ) are exactly the homomorphisms that are sortwise injective (see
Example 2.18).
46Example 8.2. IfAtconsists of all atomic formulae-in-context, then the At-reflecting
morphisms of Mod (T) are exactly the embeddings of Σ-structures, i.e. the homomorph-
isms whose image under the inclusion Mod (T),→Str(Σ) is a strong monomorphism.
In fact, as we shall see in Remark 8.6, every strong monomorphism minMod (T) is
an embedding of Σ-structures. But recall from Remark 3.27.(3) that the converse is not
true, even if we assume that the domain of mis finitely presentable.
Notation 8.3. Given {⃗ x|φ} ∈T, let
ιφ(⃗ x, ⃗ x′):=φ(⃗ x)∧⃗ x˙ =⃗ x′.
This induces a morphism [ ⃗ x, ⃗ x′|ιφ]:{⃗ x|φ} → { ⃗ x| ⊤}. We write ıφ:⟨⃗ x| ⊤⟩ → ⟨ ⃗ x|φ⟩
for the homomorphism in Mod (T) corresponding, under Theorem 6.3, to the natural
transformation y[⃗ x, ⃗ x′|ιφ] (recall that yis contravariant).
Remark 8.4. The arrows ıφ:⟨⃗ x| ⊤⟩ → ⟨ ⃗ x|φ⟩are epimorphisms in Mod (T). This fol-
lows from the fact that the corresponding natural transformations yιφ:y{⃗ y| ⊤} →
y{⃗ y|φ}are epimorphisms in lex [ T,Set]. That is, whenever M∈Mod (T) and
λ, κ:y{⃗ y|φ} →FMare such that
λ◦yιφ=κ◦yιφ, (14)
we have λ=κ. To see this, set ⃗ a=λ{⃗ y|φ}(id) and ⃗b=κ{⃗ y|φ}(id). With the notations
of§6.2 we have λ=FM(−)(⃗ a) and κ=FM(−)(⃗b), and thus eq. (14) entails
FM(ιφ)(⃗ a) = FM(ιφ)(⃗b).
ButFM(ιφ):J⃗ y|φKM→J⃗ y| ⊤KMis the function with graph
J⃗ y, ⃗ y′|φ(⃗ y)∧⃗ y˙ =⃗ y′KM J⃗ y|φKM×J⃗ y| ⊤KM,
hence ⃗ a=⃗band so λ=κ.
Proposition 8.5. The following are equivalent for all h∈Mod (T) [N, M ]:
(i)his At-reflecting.
(ii) For each (⃗ y::=α)∈At and each commutative square as in the left-hand side
below,
⟨⃗ y| ⊤⟩ ⟨⃗ y|α⟩
N Mıα
ℓ k
h⟨⃗ y| ⊤⟩ ⟨⃗ y|α⟩
Nıα
ℓ d (15)
there exists d:⟨⃗ y|α⟩ →Nsuch that the rightmost triangle above commutes.18
Before proving Proposition 8.5, let us make a couple of comments.
Remark 8.6. It follows from Proposition 8.5 that any strong monomorphism in Mod (T)
is an embedding of Σ-structures. Just observe that, if his a strong monomorphism and
αis any atomic formula, each commutative square as in the left-hand side of eq. (15)
admits a diagonal filler because ıαis an epimorphism (see Remark 8.4).
Remark 8.7 (Comparison with ω-pure morphisms) .In the setting of Example 8.2, condi-
tion (ii) in Proposition 8.5 is reminiscent of the notion of ( ω-)pure morphism ; see e.g. [13,
Proposition 5.15, §5A].
18In view of Remark 8.4, this is equivalent to saying that dis a diagonal filler.
47Recall from [13, §2D] that a homomorphism of structures h:N→Misω-pure if for
every commutative square as in the left-hand side below
⟨⃗ y|ψ⟩ ⟨⃗ x|φ⟩
N Mh⟨⃗ y|ψ⟩ ⟨⃗ x|φ⟩
Nd
there is a d:⟨⃗ x|φ⟩ →Nsuch that the triangle in the right-hand side above commutes.
Every ω-pure morphism is a regular monomorphism [13, Proposition 2.31]. Moreover,
by [13, Proposition 5.15], a homomorphism has above is ω-pure if and only if it (preserves
and) reflects positive-primitive formulae, i.e. formulae of the form ( ∃⃗ y)φ(⃗ x, ⃗ y) where φis
a finite conjunction of atomic formulae. In fact, a direct inspection of the proof of [13,
Proposition 5.15] shows that one only has to consider commutative squares of the form
⟨⃗ x| ⊤⟩ ⟨⃗ x, ⃗ y|φ⟩
N Mh
where φ(⃗ x, ⃗ y) is a (finite) conjunction of atomic formulae.
In the setting of Example 8.2, it follows from Proposition 8.5 that ω-pure morphisms
are embeddings of structures. But note that Proposition 8.5 only considers commutative
squares whose top arrows are of the form ⟨⃗ x| ⊤⟩ → ⟨ ⃗ x|α⟩, where the two structures
⟨⃗ x| ⊤⟩and⟨⃗ x|α⟩have the same generators and αis atomic.
The proof of Proposition 8.5 is similar in spirit to that of [13, Proposition 5.15] for ω-
pure morphisms in Str(Σ). But in the case of Mod (T), we have little direct information
about the elements of finitely presentable models ⟨⃗ x|φ⟩. Instead, we rely on Theorem 6.3
and the tools of §6.2, in particular Lemmas 6.10 and 6.14.
Recall from §6.1 that given L∈Mod (T) and [ ⃗ x, ⃗ y|θ]∈T[{⃗ x|φ},{⃗ y|ψ}], the
function FL([⃗ x, ⃗ y|θ]):J⃗ x|φKL→J⃗ y|ψKLhas graph
J⃗ x, ⃗ y|θKL J⃗ x|φKL×J⃗ y|ψKL.
In particular, for a morphism [ ⃗ x, ⃗ x′|ια] as in Notation 8.3, we simply have
FL([⃗ x, ⃗ x′|ια]) : J⃗ y|αKL−→ J⃗ y| ⊤KL
⃗b 7−→ ⃗b
Proof of Proposition 8.5. (i)⇒(ii). Suppose that h:N→MisAt-reflecting and con-
sider a commutative square as in the left-hand side of eq. (15):
⟨⃗ y| ⊤⟩ ⟨⃗ y|α⟩
N Mıα
ℓ k
h
Assume that ℓtakes ⃗ yto⃗ a∈J⃗ y| ⊤KN, and ktakes ⃗ yto⃗b∈J⃗ y|αKM. We have to provide
ad:⟨⃗ y|α⟩ →Nsuch that d◦ıα=ℓ. By Lemma 6.14, this amounts to showing that
N|= (∃⃗ y)ια(⃗ y,⃗ a).
By definition of the formula ια(Notation 8.3), this is equivalent to proving that ⃗ a∈J⃗ y|αKN.
Hence, since ⃗b∈J⃗ y|αKMandhisAt-reflecting, it suffices to show that h(⃗ a) =⃗b.
48At⟨⃗ x|φ⟩(⃗ x):=
^
(⃗ y::=α)∈At^
θ∈T[{⃗ x|φ},{⃗ y|⊤}](∀⃗ y) 
α(⃗ y)∧θ(⃗ x, ⃗ y)
→_
δ∈T[{⃗ x|φ},{⃗ y|α}]δ(⃗ x, ⃗ y)
Figure 2. Formulae for At-reflecting homomorphisms with finitely
presentable domains (Corollary 8.8).
We reformulate the above diagram in terms of the natural transformations given by
Theorem 6.3. We already know that ıαis induced by the natural transformation
yια:y{⃗ y| ⊤} −→ y{⃗ y|α}.
Ifη:FN→FMis the natural transformation corresponding to h:N→M, we get the
following commutative diagram.
y{⃗ y| ⊤} y{⃗ y|α}
FN FMyια
FN(−)(⃗ a) FM(−)(⃗b)
η(16)
Reasoning similarly as in the proof of Lemma 6.14, note that the upper path in eq. (16)
coincides with FM(−)(FM(ια)(⃗b)). Now, taking components at {⃗ y| ⊤} and evaluating
at the identity on {⃗ y| ⊤}, the upper path yields FM(ια)(⃗b) (=⃗b), while the lower path
yields η{⃗ y|⊤}(⃗ a). Hence η{⃗ y|⊤}(⃗ a) =⃗b, and we get h(⃗ a) =⃗bsince by Lemma 6.4 we have
h(⃗ a) = η{⃗ y|⊤}(⃗ a)∈J⃗ y| ⊤KM.
(ii)⇒(i). Consider a homomorphism h:N→Mand a formula ( ⃗ y::=α)∈At. Let
⃗ a∈J⃗ y| ⊤KNbe such that h(⃗ a)∈J⃗ y|αKM. We have to show that ⃗ a∈J⃗ y|αKN.
Write ⃗bforh(⃗ a) and let η:FN→FMbe the natural transformation corresponding to
h:N→M. We first show that diagram (16) above commutes with the present values of
⃗ a,⃗bandη. Thanks to the Yoneda lemma, we just have to show that the two paths below
y{⃗ y| ⊤}{ ⃗ y| ⊤} y{⃗ y|α}{⃗ y| ⊤}
FN{⃗ y| ⊤} FM{⃗ y| ⊤}(yια){⃗ y|⊤}
FN(−)(⃗ a) FM(−)(⃗b)
η{⃗ y|⊤}
are equal on id ∈T[{⃗ y| ⊤},{⃗ y| ⊤}]. The upper path yields FM(ια)(⃗b) =⃗b, while the
lower path yields η{⃗ y|⊤}(⃗ a). Hence we are done since η{⃗ y|⊤}(⃗ a) =h(⃗ a) =⃗bby Lemma 6.4.
Now, assumption (ii) gives some δ:y{⃗ y|α} →FNsuch that δ◦yια=FN(−)(⃗ a). By
Lemma 6.14, this means that there is a tuple ⃗ c∈J⃗ y|αKNsuch that N|=ια(⃗ c,⃗ a), that
is⃗ a=⃗ c∈J⃗ y|αKN. □
Combining Proposition 8.5 with Corollary 6.16 we obtain formulae that detect when a
homomorphism with finitely presentable domain is At-reflecting:
Corollary 8.8. InMod (T), assume that h:⟨⃗ x|φ⟩ →Mis induced by ⃗ a∈J⃗ x|φKM.
The following statements are equivalent:
(i)his At-reflecting.
(ii)M|= At⟨⃗ x|φ⟩(⃗ a)where the (possibly infinite) formula At⟨⃗ x|φ⟩(⃗ x)is defined as
in Figure 2.
498.1.1. Embeddings of structures. Corollary 8.8 yields, in particular, formulae that detect
when a homomorphism in Mod (T) with finitely presentable domain is an embedding of
Σ-structures. We state this result explicitly for future reference.
Notation 8.9. When Atconsists of all atomic formulae, we write Emb ⟨⃗ x|φ⟩(⃗ x) for the
formula At ⟨⃗ x|φ⟩(⃗ x) of Corollary 8.8 (see Figure 2).
With this notation, we have
Corollary 8.10. InMod (T), assume that h:⟨⃗ x|φ⟩ →Mis induced by ⃗ a∈J⃗ x|φKM.
The following statements are equivalent:
(i)his an embedding of Σ-structures.
(ii)M|= Emb ⟨⃗ x|φ⟩(⃗ a).
8.2.Presheaves over a forest. In general, the formulae Emb ⟨⃗ x|φ⟩(⃗ x) in Corol-
lary 8.10 are infinite. In this section, we show that in the setting of Example 7.18,
concerning arboreal categories of presheaves over a forest, these formulae yield finite for-
mulae defining monomorphisms. Fix a forest Fand consider the arboreal category bF.
Recall from Example 2.3 the cartesian theory T(Fop) of functors Fop→Set, so that
Mod (T(Fop))∼=bF. (17)
The signature Σ(Fop) ofT(Fop) has one sort pfor each element p∈F, and one function
symbol f(q≤p):p→qfor each pair of elements q≤pinF.
We claim that for each finitely presentable model ⟨⃗ x|φ⟩there exists a finite formula
Mono⟨⃗ x|φ⟩(⃗ x) inΣ(Fop) such that the following are equivalent in Mod (T(Fop)):
(i)h:⟨⃗ x|φ⟩ →Mis a monomorphism.
(ii)M|= Mono ⟨⃗ x|φ⟩(⃗ c), where htakes ⃗ xto⃗ c.
Fix an arbitrary p∈F. To start with, we show that the presheaf yp∈bFcorresponds
under eq. (17) to the finitely presentable model ⟨x:p| ⊤⟩. Since ypis finitely presentable
inbF, it corresponds under eq. (17) to a finitely presentable object of Mod (T(Fop)), say
⟨⃗ y|ψ⟩. Now, consider a model M∈Mod (T(Fop)). We can assume without loss of
generality that Mis of the form MXfor some presheaf X∈bF, where MX(p):=X(p)
for each p∈Sort(Σ(Fop)). Then we have
Mod (T(Fop))[⟨⃗ y|ψ⟩, MX]∼=bF[yp, X]
∼=X(p)
∼=MX(p)
∼=Jx:p| ⊤KMX
∼=Mod (T(Fop))[⟨x:p| ⊤⟩, MX].
This chain of natural isomorphisms induces an isomorphism of representable functors
Mod (T(Fop))[⟨⃗ y|ψ⟩,−]∼=Mod (T(Fop))[⟨x:p| ⊤⟩,−]
and thus we get ⟨⃗ y|ψ⟩∼=⟨x:p| ⊤⟩, showing that the presheaf yp∈bFcorresponds to
the finitely presentable model ⟨x:p| ⊤⟩.
Now, write Tfor the syntactic category of T(Fop). The following lemma is the key to
obtaining the desired finite formula Mono ⟨⃗ x|φ⟩:
Lemma 8.11. The following statements hold in T:
(i) The hom-set T[{x:p| ⊤},{y:q| ⊤}]has at most one element, and is empty
precisely when q̸≤pinF.
50Mono⟨⃗ x|φ⟩(⃗ x):=
^
q∈↓{p1,...,pn}^
θ∈T[{⃗ x|φ},{y,y′:q|⊤}](∀y, y′)
(y˙ =y′∧θ(⃗ x, y, y′))→_
δ∈T[{⃗ x|φ},{y,y′:q|y˙ =y′}]δ(⃗ x, y, y′)

Figure 3. Formulae for monomorphisms (Proposition 8.12).
(ii) The hom-set T[{x1:p1, . . . , x n:pn|φ},{⃗ y:q| ⊤}]is finite, and it is empty
whenever q̸≤piinFfor all i∈ {1, . . . , n }.
Proof. (i) Recalling from §6.2 that the finitely presentable model ⟨⃗ x|φ⟩corresponds
(under Theorem 6.3) to the representable functor y{⃗ x|φ} ∈lex [T,Set], the Yoneda
lemma entails that, for each q∈F,
T[{x:p| ⊤},{y:q| ⊤}]∼=lex [T,Set] [y{y:q| ⊤},y{x:p| ⊤}]
∼=Mod (T(Fop))[⟨y:q| ⊤⟩,⟨x:p| ⊤⟩]
∼=bF[yq,yp]
∼=F[q, p].
Hence, the hom-set T[{x:p| ⊤},{y:q| ⊤}] has at most one element, and is empty
precisely when q̸≤pinF.
(ii) Consider the contexts ⃗ x=x1:p1, . . . , x n:pnand⃗ y=y1, . . . , y m:q. We consider,
dually, the hom-set Mod (T(Fop))[⟨⃗ y:q| ⊤⟩,⟨⃗ x|φ⟩]. Recall from Notation 8.3 the
homomorphism
ıφ:⟨⃗ x| ⊤⟩ → ⟨ ⃗ x|φ⟩,
which induces a map
ıφ◦ −:Mod (T(Fop))[⟨⃗ y:q| ⊤⟩,⟨⃗ x| ⊤⟩]→Mod (T(Fop))[⟨⃗ y:q| ⊤⟩,⟨⃗ x|φ⟩].
By Remark 6.15, ⟨⃗ y:q| ⊤⟩ is isomorphic to the coproduct of mcopies of ⟨y:q| ⊤⟩,
and we have seen above that ⟨y:q| ⊤⟩ corresponds to the representable presheaf yq.
Since representable functors are projective, and a coproduct of projective objects is again
projective, we see that ⟨⃗ y:q| ⊤⟩is projective in Mod (T(Fop)). Thus the map ıφ◦ −is
surjective because ıφis an epimorphism (see Remark 8.4), and so it suffices to show that
the hom-set Mod (T(Fop))[⟨⃗ y:q| ⊤⟩,⟨⃗ x| ⊤⟩] is finite, and empty whenever q̸≤piinF
for all i∈ {1, . . . , n }. We have
Mod (T(Fop)) [⟨⃗ y:q| ⊤⟩,⟨⃗ x| ⊤⟩]∼=Mod (T(Fop))"ma
j=1⟨y:q| ⊤⟩,na
i=1⟨xi:pi| ⊤⟩#
∼= 
Mod (T(Fop))"
⟨y:q| ⊤⟩,na
i=1⟨xi:pi| ⊤⟩#!m
∼= na
i=1Mod (T(Fop)) [⟨y:q| ⊤⟩,⟨xi:pi| ⊤⟩]!m
where in the last step we used the fact that ⟨y:q| ⊤⟩is a connected object (recall from
Lemma 4.14 and its proof that the corresponding presheaf yqis connected). It follows
from item (i) that the hom-set Mod (T(Fop))[⟨⃗ y:q| ⊤⟩,⟨⃗ x| ⊤⟩] is finite, and it is empty
precisely when q̸≤piinFfor all i∈ {1, . . . , n }. □
51Proposition 8.12. InMod (T(Fop)), assume that h:⟨⃗ x|φ⟩ → Mis induced by ⃗ c∈
J⃗ x|φKM, where ⃗ x=x1:p1, . . . , x n:pn. Then the following are equivalent:
(i)his a monomorphism.
(ii) Condition (ii) of Proposition 8.5, restricted to formulae (y, y′::=α)of the form
(y, y′:q::=y˙ =y′)with q≤pifor some i∈ {1, . . . , n }, holds.
(iii)M|= Mono ⟨⃗ x|φ⟩(⃗ c), where Mono⟨⃗ x|φ⟩(⃗ x)is the finite formula in Figure 3.
Proof. (i)⇔(ii) Combining Proposition 8.5 with Example 8.1 yields that condition (i)
is equivalent to condition (ii) generalised to all formulae ( y, y′::=α) of the form
(y, y′:q::=y˙ =y′)
with q∈F. Hence, we have to show that we can restrict ourselves to the case where
q≤pifor some i∈ {1, . . . , n }. In turn, this follows from the fact that, by Lemma 8.11(ii),
ifq̸≤pifor all i∈ {1, . . . , n }then there exists no morphism ℓ:⟨y, y′:q| ⊤⟩ → ⟨ ⃗ x|φ⟩,
and so there is no commutative square as in the left-hand side of eq. (15) (cf. condition (ii)
of Proposition 8.5).
(ii)⇔(iii) This follows from Corollary 8.8 (cf. also Corollary 6.16).
It remains to prove that the formula Mono ⟨⃗ x|φ⟩is finite. The first conjunction is
finite since Fis a forest, and the second one (over θ) is finite by Lemma 8.11(ii). Fi-
nally, consider the disjunction over δ∈T[{⃗ x|φ},{y, y′:q|y˙ =y′}]. It follows from [36,
Lemma D1.4.4] that
[y, y′, z, z′:q|y˙ =y′∧z˙ =y∧z′˙ =y′]
is a monomorphism from {y, y′:q|y˙ =y′}to{z, z′:q| ⊤}. By precomposition, this
yields an injection of
T[{⃗ x|φ},{y, y′:q|y˙ =y′}]
into the finite set
T[{⃗ x|φ},{y, y′:q| ⊤}].
Hence the hom-set T[{⃗ x|φ},{y, y′:q|y˙ =y′}] is finite. □
The previous proposition yields, in particular, finite formulae defining path embed-
dings in bF∼=Mod (T(Fop)). Recall from Lemma 4.12 that the non-initial paths in bF
are precisely the representable presheaves, which correspond to the objects of the form
⟨x:p| ⊤⟩inMod (T(Fop)). Thus, for each p∈F, Proposition 8.12 gives a finite formula
Mono[ p](x):= Mono ⟨x:p| ⊤⟩(x)
such that the following statements are equivalent for any morphism h:⟨x:p| ⊤⟩ → M
inMod (T(Fop)):
(i)h:⟨x:p| ⊤⟩ → Mis a monomorphism.
(ii)M|= Mono[ p](c), where htakes xtoc∈M(p).
9.Proof of the main result
This section is devoted to the proof of Theorem 3.29, which states that if a finitely
accessible wooded adjunction
C EL
⊥
R
detects path embeddings in a signature Σ, then
M, N∈Eequivalent in L∞(Σ) =⇒M↔RN. (18)
52We know from Corollary 7.15 that the latter implication holds under the assumption
that path embeddings in Care definable. In order to prove Theorem 3.29, we will show
that path embeddings in Care definable whenever they are detected by L:C⇄E:R.
Recall that in Corollary 8.10 ( §8.1.1) we obtained formulae which define embeddings of
structures in E. To translate the latter into formulae which define path embeddings in C,
we use Hodges’ word-constructions [29, 30]. We review the latter in §9.1, and complete
the proof of Theorem 3.29 in §9.2. Finally, in §9.3 we discuss the special case in which Eis
the category of structures for a finite relational signature σ, and give sufficient conditions
for eq. (18) to hold when L∞(σ) is replaced with first-order logic Lω(σ).
9.1.Hodges’ word-constructions. LetTandUbe cartesian theories in signatures Σ
andΓ, respectively. Recall from §6.3 that morphisms of lfp categories
Mod (U)→Mod (T),
i.e. finitary right adjoints (cf. Proposition 5.6), induce interpretations of formulae in Σ
as formulae in Γ. Hodges’ word-constructions [29, 30], see also [31, §9.3], are a relaxed
form of interpretations that apply to all finitary functors Mod (U)→Mod (T), and in
particular to leftadjoints.
9.1.1. Generated structures and presentations. We recall the following standard notions
from [31, 1.2.2 and §9.2].
Fix a signature Σ. Given a tuple of elements ⃗ afrom a Σ-structure M, if the smallest
substructure of Mthat contains ⃗ aisMitself, then we say that ⃗ agenerates M.
Apresentation is a pair ( ⃗ x,(αi)i∈I) where the αi’s are atomic formulae in Σand⃗ xis
a possibly infinite sequence of sorted variables containing all variables of ( αi|i∈I).
LetKbe a class of Σ-structures. Consider a presentation ( ⃗ x,(αi)i∈I) with ⃗ x= (xj)j∈J
and a structure M∈K. Let ⃗ a= (aj)j∈Jbe a sequence of elements of the carriers of M
matching the sorts of ⃗ x. We say that ( ⃗ x,(αi)i∈I)presents the expanded structure ( M,⃗ a)
inKwhen the following conditions hold:
(i)Mis generated (as a Σ-structure) by ⃗ a,
(ii) (M,⃗ a)|=αifor each i∈I,
(iii) If N∈Kand ( N,⃗b)|=αifor each i∈I, there is a (necessarily unique) homo-
morphism ( M,⃗ a)→(N,⃗b).
Note that if ( M,⃗ a) and ( N,⃗b) are both presented by ( ⃗ x, ⃗ α) inK, then the unique homo-
morphism ( M,⃗ a)→(N,⃗b) is an isomorphism.
The following useful fact was proved in [31, Lemma 9.2.1].
Lemma 9.1. LetKbe a class of Σ-structures and consider a presentation (⃗ x,(αi)i∈I).
Then the following are equivalent for each (M,⃗ a)with M∈K:
(i)(⃗ x,(αi)i∈I)presents (M,⃗ a)inK.
(ii)⃗ agenerates M(as a Σ-structure) and for every atomic formula β(⃗ x)ofΣ, we
have (M,⃗ a)|=βif and only if, for all (N,⃗b)with N∈K, if(N,⃗b)|=αifor each
i∈Ithen (N,⃗b)|=β.
Proof of Lemma 9.1. It is convenient to use here the L∞,∞-formula ( ∀⃗ x) (V
iαi→β).
Assume first that ( ⃗ x,(αi)i) presents ( M,⃗ a). Then ⃗ agenerates Mby definition. Consider
now an atomic formula β(⃗ x) ofΣ. IfK|= (∀⃗ x) (V
iαi→β), then we in particular have
(M,⃗ a)|=β. IfK̸|= (∀⃗ x) (V
iαi→β), then there is a N∈Kand some ⃗b∈Nsuch
that ( N,⃗b)|=V
iαibut ( N,⃗b)̸|=β. By assumption on M, there is a homomorphism
h:M→Ntaking ⃗ ato⃗b, so that we must have ( M,⃗ a)̸|=βas well.
53For the converse, we have to show that ( ⃗ x,(αi)i) presents ( M,⃗ a). Given j∈I, we
trivially have K|= (∀⃗ x) (V
iαi→αj), so that ( M,⃗ a)|=αjby assumption. It follows
that ( M,⃗ a)|=V
iαi. Consider now some N∈Kand some ⃗b∈Nsuch that ( N,⃗b)|=V
iαi. Hence for very atomic formula β, if ( M,⃗ a)|=βthen ( N,⃗b)|=βsinceK|=
(∀⃗ x) (V
iαi→β). Recall from §2 that equalities are atomic formulae. Since ⃗ agenerates
M, it follows that the assignment ⃗ a7→⃗bextends to a function h:M→Nwhich preserves
the function symbols of Σ, namely such that for every term t(⃗ x) in Fun( Σ) we have
h(tM(⃗ a)) = tN(⃗b)
It is equally easy to see that hpreserves the predicate symbols of Σ. □
Remark 9.2. Above we considered presentations of pairs ( ⃗ x, ⃗ α) where ⃗ xis a sequence of
sorted variables. But we could have equivalently considered presentations of pairs ( ⃗ c, ⃗ α)
where ⃗ c= (cj)j∈Jis a sequence of elements from a family of sets S= (Sτ|τ∈Sort(Σ)),
and the ⃗ αare atomic formulae in Σ(⃗ c), the extension of Σwith a new constant symbol
of the appropriate sort for each cj.
Moreover, it is a technical convenience to insist that ⃗ x, or⃗ c, form sequences rather
than mere sets. Following [31, Remark 9.2], when leaving implicit the order of elements
in sequences, we may simply consider pairs ( X,Φ) where Xis a set and Φ is a set of
atomic formulae in Σ(X).
9.1.2. Word-constructions. Consider a finitary functor F:Mod (U)→Mod (T), where U
andTare cartesian theories in signatures ΓandΣ, respectively. The corresponding word-
construction provides a formula translation from L∞(Σ) toL∞(Γ) such that, for each
model M∈Mod (U), the theory of FM can be expressed in the theory of M.
More precisely, a word-construction
W:Γ−→ Σ
for a functor Fas above is a syntactic device that produces for each M∈Mod (U) a
presentation W(M) = ( X,Φ) of FM∈Mod (T). The key is that the “generators” X
and “relations” Φ are controlled by formulae in Γwhose definitions are independent of M.
We now recall the formal definition of word-constructions; the following is a finitary
version of the many-sorted notion of [30].
Definition 9.3 (Word-construction) .LetΓandΣbe signatures. A word-construction
W:Γ−→ Σ
is a tuple W= (Σ(W),Te(W),At(W)) where:
(1)Σ(W) is a signature with Sort( Σ(W)):= Sort( Σ) + Sort( Γ) that extends Σwith
function symbols
f:γ1. . . γ n−→ τ
for each γ1, . . . , γ n∈Sort(Γ) and τ∈Sort(Σ).
Note that atomic formulae in Σ(W) are atomic formulae in Σ, but with terms
possibly involving the additional function symbols of Σ(W).
(2) Te( W) is a function taking terms ( ⃗ x:⃗ γ::=t:τ) inΣ(W), with ⃗ γ∈Sort(Γ) and
τ∈Sort(Σ), to formulae in Γwith free variables among ⃗ x:⃗ γ.
(3) At( W) is a function taking atomic formulae ( ⃗ x:⃗ γ::=α) inΣ(W), with ⃗ γ∈Sort(Γ),
to formulae in Γwith free variables among ⃗ x:⃗ γ.
A word-construction W:Γ→Σinduces, for each M∈Str(Γ), a presentation
W(M) = (X,Φ) defined as follows:
54•Xis the set of expressions19of the form t(⃗ a) such that ( ⃗ x:⃗ γ::=t:τ) is in the
domain of Te( W),⃗ a∈M(⃗ γ), and M|= Te( W)(t)(⃗ a).
•Φ is the set of atomic formulae of the form α(⃗ a) where ( ⃗ x:⃗ γ::=α) is in the
domain of At( W),⃗ a∈M(⃗ γ), and M|= At( W)(α)(⃗ a).
Remark 9.4. In general, given a class of structures Kand a presentation ( ⃗ x,(αi)i∈I),
there could be no (expansion of a) member of Kthat is presented by ( ⃗ x,(αi)i∈I).
A characteristic property of universal Horn theories is that, in their categories of mod-
els, every presentation presents some expanded structure; see [31, Theorem 9.2.2 and
Exercise 9.2.19]. In particular, if Kis the class of models of a universal Horn theory, then
there is always an expansion of a structure in Kthat is presented by W(M).
In fact, Hodges considered (infinitary) Horn theories in [29, 30, 31]. Since we allow for
arbitrary cartesian theories, we will need a slight adaptation of Hodges’ results.20
9.1.3. The word-construction of a finitary functor of lfp categories. Fix a finitary functor
F:Mod (U)→Mod (T), where U,Tare cartesian theories. Write ΓandΣfor the
respective signatures of UandT. We will associate with Fa word-construction
W:Γ−→ Σ
such that for each M∈Mod (U),W(M) presents in Mod (T) an expansion of FM.
This will allow us to translate the L∞(Σ)-theory of FM into the L∞(Γ)-theory of M
(see Theorem 9.9 below).
LetM∈Mod (U). Recall that Mis the canonical filtered colimit of the cocone
consisting of morphisms with finitely presentable domain ⟨⃗ x|φ⟩ →M. Since Fpreserves
filtered colimits, FM is the filtered colimit of the F⟨⃗ x|φ⟩ → FM with connecting
maps induced by commuting triangles in Mod (U). It is convenient to have an explicit
description of this filtered colimit.
Remark 9.5. By Lemma 6.6, Mod (T) is closed in Str(Σ) under filtered colimits. Fol-
lowing [13, Remarks 5.1(3) and 3.4(4)(iii)],21this yields the following description of FM.
(1) For each sort τ∈Sort(Σ),FM(τ) is the filtered colimit in Setof the F⟨⃗ x|φ⟩(τ).
Recall that this amounts to saying that FM(τ) is isomorphic to the quotient of
the disjoint sum of the F⟨⃗ x|φ⟩(τ)’s by the equivalence relation that identifies
those pairs of elements having the same image in cospans of the form
F⟨⃗ x|φ⟩(τ) F⟨⃗ y|ψ⟩(τ)
F⟨⃗ z|θ⟩(τ)(Fh)τ(Fk)τ
(see e.g. [40, Proposition 3.1.3]).
(2) Consider now a function symbol f∈Fun(Σ)(τ1, . . . , τ n;τ). Given ⃗ a∈FM(⃗ τ),
since the canonical diagram of Mis filtered there is some Fh:F⟨⃗ x|φ⟩ →FM
such that ⃗ ais in the image of Fh, say ⃗ a= (Fh)(⃗b). We can then let fFM(⃗ a) be
hf⟨⃗ x|φ⟩(⃗b). That this indeed uniquely defines fFMfollows from the fact that the
canonical diagram of Mis filtered.
(3) Finally, for each relation symbol R∈Rel(Σ)(τ1, . . . , τ n),RFMis the union of the
images of the interpretations of Runder the morphisms Fh:F⟨⃗ x|φ⟩ →FM.
19Here we adopt the equivalent approach outlined in Remark 9.2.
20Recall from Remark 2.5 that Horn theories are a proper subclass of cartesian theories.
21Alternatively, one can use the fact that filtered colimits in Str(Σ) are computed in [ T(Σ),Set],
where T(Σ) is the syntactic category of Σ. Cf. §5.2 and eq. (6) in §6.1.
55We now define the word-construction W:Γ→Σassociated with F. To this end, we
have to devise the signature Σ(W) and the functions Te( W) and At( W).
We first describe the signature Σ(W) extending Σ. Recall that the sorts of Σ(W) are
Sort(Γ) + Sort( Σ). The additional function symbols of Σ(W) are as follows. Let ⟨⃗ x|φ⟩
be a finitely presentable model of U. Assume ⃗ x=x1:γ1, . . . , x k:γk(where γ1, . . . , γ k
are sorts of Γ). For each τ∈Sort(Σ) and each c∈F⟨⃗ x|φ⟩(τ) we introduce a new
function symbol
fc
⟨⃗ x|φ⟩:γ1. . . γ k−→ τ.
The intended interpretation of fc
⟨⃗ x|φ⟩is as follows. Given M∈Mod (U), the function
symbol fc
⟨⃗ x|φ⟩with c∈ ⟨⃗ x|φ⟩(τ) is to be thought of as the function
J⃗ x|φKM−→ (FM)(τ)
⃗ a7−→ (Fh⃗ a)(c)
where h⃗ a:⟨⃗ x|φ⟩ →Mis the homomorphism induced by ⃗ a∈J⃗ x|φKM(Lemma 6.10). It
follows that FM is generated (in the sense of §9.1.1) by the valuation
C: (fc
⟨⃗ x|φ⟩, ⃗ a∈J⃗ x|φKM)7−→ (Fh⃗ a)(c)∈FM (19)
where ( ⃗ x::=φ) ranges over the cartesian formulae over U.
We now turn to Te( W). The above description of Σ(W) readily gives the formula
Te(W)(fc
⟨⃗ x|φ⟩)(⃗ x), namely
Te(W)(fc
⟨⃗ x|φ⟩(⃗ x)):=φ(⃗ x).
Moreover, since FMis generated by the valuation Cof eq. (19), for each term tinΣ(W)
that is not of the form fc
⟨⃗ x|φ⟩(⃗ x), we can simply let
Te(W)(t):=⊥.
The case of At( W) is less straightforward. Let Ube the syntactic category of Mod (U).
Letβbe an atomic formula in Σ(W) whose free variables have sorts in Sort( Γ). The
formula At( W)(β) inΓis defined as follows. Recall that the input sorts of the new
function symbols fc
⟨⃗ x|φ⟩are sorts of Γ, and write
β=α
fc1
⟨⃗ x1|φ1⟩(⃗ x1), . . . , fcn
⟨⃗ xn|φn⟩(⃗ xn)
where αis an atomic formula in Σand the ⃗ xi’s need not be distinct. We devise At( W)(β)
on the basis of the following characterisation.
Lemma 9.6. Letα(y1, . . . , y n)be an atomic formula in Σand let M∈Mod (U). Given
morphisms hi:⟨⃗ xi|φi⟩ →Mfori= 1, . . . , n , the following are equivalent:
(i)FM|=α((Fh1)(c1), . . . , (Fhn)(cn)).
(ii) There exist ⟨⃗ x|φ⟩andh:⟨⃗ x|φ⟩ →Msuch that each hican be factored as
⟨⃗ xi|φi⟩ M
⟨⃗ x|φ⟩hi
kih
where the morphisms ki’s satisfy
F⟨⃗ x|φ⟩ |=α 
(Fk1)(c1), . . . , (Fkn)(cn)
.
56Proof. We first show that (ii) ⇒(i). Given h:⟨⃗ x|φ⟩ →Mandki:⟨⃗ xi|φi⟩ → ⟨ ⃗ x|φ⟩
as required, since his a homomorphism we have
FM|=α 
(Fh)(Fk1)(c1), . . . , (Fh)(Fkn)(cn)
,
and thus we are done since
(Fhi)(ci) = ( Fh)(Fki)(ci).
We now show that (i) ⇒(ii). Assume FM|=α((Fh1)(c1), . . . , (Fhn)(cn)). By Re-
mark 9.5, there are some h′:⟨⃗ x′|φ′⟩ →Mand some b1, . . . , b n∈F⟨⃗ x′|φ′⟩such that
F⟨⃗ x′|φ′⟩ |=α(b1, . . . , b n) and ( Fh′)(bi) = ( Fhi)(ci) for each i= 1, . . . , n . Again by
Remark 9.5, using the fact that the canonical diagram of MinMod (U) is filtered, h′
factors as
⟨⃗ x′|φ′⟩ ⟨⃗ x|φ⟩ Mh′′h
such that for each i= 1, . . . , n there is a ki:⟨⃗ xi|φi⟩ → ⟨ ⃗ x|φ⟩with hi=h◦kiand
(Fh′′)(bi) = (Fki)(ci). Since h′′is a homomorphism, we have
F⟨⃗ x|φ⟩ |=α 
(Fh′′)(b1), . . . , (Fh′′)(bn)
.
This concludes the proof. □
Corollary 6.16 provides us with a syntactic formulation of condition (ii) in Lemma 9.6.
This leads us to define At( W)(β)(⃗ x1, . . . , ⃗ x n) as the formula
_
{⃗ x|φ}∈U_
θ1∈U[φ,φ 1],...,θn∈U[φ,φn]
F⟨⃗ x|φ⟩|=α((Fk1)(c1),...,(Fkn)(cn))(∃⃗ x) 
φ∧^
1≤i≤nθi(⃗ x, ⃗ x i)!
where ki:⟨⃗ xi|φi⟩ → ⟨ ⃗ x|φ⟩corresponds to yθiunder Theorem 6.3.
This completes the definition of the word-construction Wassociated with F. We shall
now prove that for each M∈Mod (U), the expanded structure ( FM, C ) is presented by
W(M) inMod (T).
Proposition 9.7. Given M∈Mod (U), the presentation W(M)presents the expanded
structure (FM, C )inMod (T), where Cis as in eq. (19).
Proof. LetM∈Mod (U) and write W(M) = (X,Φ) as in §9.1.2. We apply Lemma 9.1.
First, it follows from Remark 9.5.(1) that FM is generated by C. But the elements
ofXare precisely the fc
⟨⃗ x|φ⟩(⃗ a) such that ( M,⃗ a)|=φ, i.e. such that there is a (necessarily
unique) h⃗ a:⟨⃗ x|φ⟩ →Mtaking ⃗ xto⃗ a. We thus get an interpretation of the elements
ofXin the sequence C, and this interpretation generates FM.
Consider now an atomic formula βinΣwith parameters in X, say
β=α
fc1
⟨⃗ x1|φ1⟩(⃗ a1), . . . , fcn
⟨⃗ xn|φn⟩(⃗ an)
.
We need to prove that ( FM, C )|=βif, and only if, each N∈Mod (T) equipped with
an interpretation of the elements of Xsatisfies βwhenever it satisfies all formulae in Φ.
Note that since FMis a model of T, it is enough to show that for all βas above, we have
(FM, C )|=βiffβ∈Φ,
that is
(FM, C )|=βiffM|= At( W)(β).
But this follows from Corollary 6.16 and Lemma 9.6. □
57Remark 9.8. Note that since Tis not assumed to be a Horn theory, we cannot deduce
Proposition 9.7 from [31, Theorem 9.2.2].
Moreover, comparing Proposition 9.7 with [31, Theorem 9.3.7], note that the latter
deals with the case where Tis a universal Horn theory and Mod (U) =Str(Γ).
As an aside, note that all formulae φandθiinvolved in Te( W) and At( W) are cartesian
and thus primitive-positive (cf. Remark 8.7). Hence, the word-construction Wis present-
ing in the sense of [31, §9.3].
ForF:Mod (U)→Mod (T) and W:Γ→Σas above, and M∈Mod (U), we shall
now explain how the L∞(Σ)-theory of FM can be translated into the L∞(Γ)-theory
ofM. This relies on the following formula translation ( −)W.
Letψ(y1, . . . , y n) be a formula in Σ, and let ⃗f=fc1
⟨⃗ x1|φ1⟩(⃗ x1), . . . , fcn
⟨⃗ xn|φn⟩(⃗ xn) be addi-
tional function symbols from Σ(W) whose output sorts match the sorts of y1, . . . , y n. We
define ψ(⃗f)W(⃗ x1, . . . , ⃗ x n)∈L∞(Γ) by induction on ψas follows.
•Ifψ(y1, . . . , y n) is an atomic formula α(y1, . . . , y n),
ψ(⃗f)W(⃗ x1, . . . , ⃗ x n):= At( W)(β)(⃗ x1, . . . , ⃗ x n)
where β=α
fc1
⟨⃗ x1|φ1⟩(⃗ x1), . . . , fcn
⟨⃗ xn|φn⟩(⃗ xn)
.
•The translation ( −)Wcommutes with propositional connectives.
•In the case of ψ(⃗ y) = (∃y:τ)ψ′(⃗ y, y), we let ψ(⃗f)W(⃗ x1, . . . , ⃗ x n) be the formula
_
{⃗ x|φ}∈U_
c∈(F⟨⃗ x|φ⟩)(τ)(∃⃗ x)
φ(⃗ x)∧ψ′(⃗f, fc
⟨⃗ x|φ⟩)W(⃗ x1, . . . , ⃗ x n, ⃗ x)
where Uis the syntactic category of U.
The translation ( −)Wis correct in the following sense:
Theorem 9.9. Letψ(y1, . . . , y n)∈L∞(Σ), and let ⃗f=fc1
⟨⃗ x1|φ1⟩(⃗ x1), . . . , fcn
⟨⃗ xn|φn⟩(⃗ xn)be
additional function symbols from Σ(W). Let M∈Mod (U)and let ⃗ a1, . . . ,⃗ a n∈M
be such that (M,⃗ a i)|= Te( W)(fci
⟨⃗ xi|φi⟩(⃗ xi))for each i= 1, . . . , n . Then the following
statements are equivalent:
(i)FM|=ψ((Fh1)(c1), . . . , (Fhn)(cn)), where hi:⟨⃗ xi|φi⟩ →Mtakes ⃗ xito⃗ ai.
(ii)M|=ψ(⃗f)W(⃗ a1, . . . ,⃗ a n).
Proof. The statement is proved by structural induction on ψ. We only spell out the most
important cases:
•The case of ψatomic follows from Corollary 6.16 and Lemma 9.6.
•Ifψ(⃗ y) = (∃y)ψ′(⃗ y, y), it follows from Remark 9.5 that
FM|=ψ((Fh1)(c1), . . . , (Fhn)(cn))
if, and only if, there are h:⟨⃗ x|φ⟩ →Mandc∈F⟨⃗ x|φ⟩such that
FM|=ψ′((Fh1)(c1), . . . , (Fhn)(cn),(Fh)(c)).
But there is a homomorphism h:⟨⃗ x|φ⟩ →Mif, and only if, there are ⃗ a∈M
such that ( M,⃗ a)|=φ. Hence the result follows from the induction hypothesis. □
Remark 9.10. Theorem 9.9 is akin to [31, Theorem 9.3.2]. We make the following
further comments:
(1) By Theorem 9.9, if MandNare equivalent in L∞(Γ), then FM andFNare
equivalent in L∞(Σ).
58(2) Unlike the case of interpretations (cf. Remark 6.18), if MandNare equivalent in
Lω(Γ) it does not necessarily follow that FM andFNare equivalent in Lω(Σ).
(3) When Mod (U) and Mod (T) are categories of structures, item (1) can equival-
ently be deduced from [14, Theorems 2.18 and 2.25].
Indeed, it follows from the proof of [13, Theorem 1.70] that both Mod (U) and
Mod (T) are ω-mono generated in the sense of [14]. Then, by [14, Theorem 2.25],
ifMod (U) and Mod (T) are categories of structures Str(Γ) and Str(Σ), respect-
ively, the above preservation of logical equivalence is given by [14, Theorem 2.18].
9.2.Proof of Theorem 3.29. We are now in a position to prove our main result, which
we recall for the reader’s convenience.
Theorem 3.29. LetΣbe a signature and assume that L:C⇄E:Ris a finitely access-
ible wooded adjunction that detects path embeddings in Σ. For all M, N∈E,
M, N equivalent in L∞(Σ) =⇒M↔RN.
Fix an adjunction
C EL
⊥
R
as in the statement above. Recall that this means the following:
(1) There is a cartesian theory TinΣsuch that E=Mod (T).
(2) The wooded category Cis lfp. Hence, by Corollary 6.5(2) we can identify Cwith
Mod (U) for a cartesian theory Uin a signature Γ.
(3) The right adjoint R:E→Cis finitary (Definition 3.22); equivalently, the left
adjoint L:C→Epreserves finitely presentable objects (Proposition 5.6).
(4) The paths of Care finitely presentable, and a C-morphism f:P→awith Pa
path is an embedding (in the sense of the wooded category C) exactly when Lf
is an embedding of Σ-structures in E(Definition 3.26).
Condition (4) above is the key part in the notion of detection of path embeddings.
We know from Corollary 7.15 that the conclusion of Theorem 3.29 holds under the
assumption that path embeddings in Care definable in Γ(Definition 7.8), that is
(5) For each path ⟨⃗ y|ψ⟩inCthere is a formula Emb C⟨⃗ y|ψ⟩(⃗ y)∈L∞(Γ) such that
for each a∈Cand each h:⟨⃗ y|ψ⟩ →ataking ⃗ yto⃗b∈J⃗ y|ψKa,
his an embedding in C⇐⇒ a|= Emb C⟨⃗ y|ψ⟩(⃗b).
Theorem 3.29 is then an immediate consequence of the following lemma, which shows
that, in the setting of the theorem, (4) ⇒(5). I.e., path embeddings in Care definable
whenever they are detected.
Lemma 9.11. Consider an adjunction L:C⇄E:Ras above, and let P=⟨⃗ y|ψ⟩be a
path in C. There is a formula Emb C[P](⃗ y)∈L∞(Γ)such that for every a∈Cand every
homomorphism h:⟨⃗ y|ψ⟩ →ataking ⃗ yto⃗b∈J⃗ y|ψKa, the following are equivalent:
(i) h is an embedding,
(ii)a|= Emb C[P](⃗b).
Proof. Let⟨⃗ x|φ⟩be the finitely presentable model L⟨⃗ y|ψ⟩=LP. Corollary 8.10
provides us with a formula Emb E⟨⃗ x|φ⟩(⃗ x)∈L∞(Σ) such that for each a∈Cand each
homomorphism h:⟨⃗ y|ψ⟩ →a, the following are equivalent:
(A)Lh:⟨⃗ x|φ⟩ →Lais an embedding of structures in E.
(B)La|= Emb E⟨⃗ x|φ⟩(⃗ c), where Lh:⟨⃗ x|φ⟩ →Lais induced by ⃗ c∈J⃗ x|φKLa.
59We will define the formula Emb C[P](⃗ y)∈L∞(Γ) as an appropriate translation of the
formula Emb E⟨⃗ x|φ⟩(⃗ x). To this end, consider the word-construction W(L):Γ→Σin-
duced by the left adjoint L:C→E(§9.1.3) and the ensuing formula translation ( −)W(L),
cf. Theorem 9.9.
Write ⃗ x=x1, . . . , x n. For each i= 1, . . . , n , consider the element ˙ xi∈ ⟨⃗ x|φ⟩given
by Lemma 6.12 and let ⃗f=f˙x1
⟨⃗ y|ψ⟩(⃗ y1), . . . , f˙xn
⟨⃗ y|ψ⟩(⃗ yn) be additional function symbols from
Σ(W(L)). Recall from Proposition 9.7 that each f˙xi
⟨⃗ y|ψ⟩(⃗ yi) is seen as the function
⃗b∈J⃗ y|ψKa7−→ (Lh)( ˙xi)∈La
where h:⟨⃗ y|ψ⟩ →ais induced by ⃗b. Let
Emb C[P](⃗ y):= Emb E⟨⃗ x|φ⟩(⃗f)W(L)(⃗ y, . . . , ⃗ y )∈L∞(Γ).
By Theorem 9.9, the following are equivalent for each a∈Cand each h:⟨⃗ y|ψ⟩ →a:
(C)La|= Emb E⟨⃗ x|φ⟩((Lh)( ˙x1), . . . , (Lh)( ˙xn)).
(D)a|= Emb C[P](⃗b), where h:⟨⃗ y|ψ⟩ →ais induced by ⃗b∈J⃗ y|ψKa.
Saying that Lh:⟨⃗ x|φ⟩ →Lais induced by ⃗ c∈J⃗ x|φKLameans that ( Lh)( ˙xi) =cifor
each i= 1, . . . , n , hence (B) is equivalent to (C), and so all four conditions (A)–(D) are
equivalent. Since the adjunction detects path embeddings, condition (A) is equivalent to
saying that his an embedding in C. Thus the statement of the lemma follows. □
While we derived Theorem 3.29 from Corollary 7.15, in §7.3 we also devised Hintikka
formulae in E, which are obtained from the formulae of Proposition 7.9 ( §7.2) using
the interpretation induced by the finitary right adjoint R:E→C. This was stated in
Corollary 7.16 which, combined with Lemma 9.11, yields the following result.
Corollary 9.12. Consider an adjunction L:C⇄E:Ras above. Let m:P↣RM be
a path embedding in Cwith M∈E. Further, let Q=⟨⃗ z|ϖQ⟩be a path in C, and write
{⃗ x|φ} ∈Tfort{⃗ z|ϖQ}.
For each ordinal α, there is a formula ΘE[M, m, Q, α ](⃗ x)∈L∞(Σ)such that, for each
N∈Eand each n:Q↣RNinduced by ⃗ c∈J⃗ x|φKN, the following are equivalent:
(i)N|= Θ E[M, m, Q, α ](⃗ c),
(ii)(m, n)is a position of rank ≥αin the game G(RM, RN ).
9.3.Finite relational signatures and finitary logic. LetL:C⇄E:Rbe a finitely
accessible wooded adjunction which detects path embeddings in a finite relational signa-
tureσ. We discuss sufficient conditions under which we can strengthen Theorem 3.29 by
replacing infinitary logic with ordinary first-order logic, to the effect that
M, N∈Eequivalent in Lω(σ) =⇒M↔RN.
These conditions essentially amount to the finiteness of the Hintikka formulae Θ Eof
Corollary 9.12. A useful observation (a proof of which will be given below) is the following.
Proposition 9.13. LetE=Str(σ)for a finite σand assume that L:C⇄E:R
detects path embeddings in σ. Assume further that for each path PinCthere are (up to
isomorphism) finitely many quotients e:P↠QinC.
Then, for each path PinC, the formula Emb C[P]of Lemma 9.11 is equivalent to a
finite (i.e. first-order) formula.
Proposition 9.13, combined with Corollary 7.17, yields finite Hintikka formulae for R-
equivalence. We state this observation in the next corollary, where we use the fact that
given any wooded category C, its subcategory Cpdefined by the paths and the embeddings
between them can be identified, up to equivalence, with a forest order (see Lemma 3.8).
60Corollary 9.14. LetE=Str(σ)for a finite σand assume that L:C⇄E:Rdetects
path embeddings in σ. Assume the following:
(i) The forest Cpis finitely branching.
(ii) For each path PinC, there are (up to isomorphism) finitely many quotients
e:P↠QinC.
Further, let M, N∈Esuch that the following conditions hold:
(iii) The plays of G(RM, RN )have (finite) bounded length.
(iv) For each path embedding m:P↣RM inC, there are (up to isomorphism) finitely
many embeddings m′:P′↣RM such that m≺m′.
Then
M, N equivalent in Lω(σ) =⇒M↔RN.
Example 9.15. Consider a finite σ, letk < ω and recall the adjunctions of Example 3.30:
RE
k(σI) Str(σI) Str(σ)Lk
RkH
J⊥ ⊥
Given some finite M∈Str(σ), we obtain, as expected, finite Hintikka formulae in σ
forRI
k-equivalence with M: The σI-structure JM is finite, and it is easy to see that
all conditions of Corollary 9.14 are met for Lk⊣Rk. Now, given N∈Str(σ), ifNis
Lω(σ)-equivalent to M, then it follows from Remark 6.18 that JNisLω(σI)-equivalent
toJM. Hence, Corollary 9.14 yields that JMandJNareRk-equivalent. In other words,
kfinite, Mfinite and M, N equivalent in Lω(σ) =⇒M, N RI
k-equivalent (20)
Remark 9.16. The assumption that Mis finite in eq. (20) is due to condition (iv) of
Corollary 9.14. The latter is precisely condition (iv) of Corollary 7.17. It comes from
the fact that our Hintikka formulae Θ C[RM,−,−,−] in Figure 1 ( §7.2) hide conjunctions
and disjunctions which may (essentially) range over all elements of RM.
This is in line with the Hintikka formulae in [31, Theorem 3.5.1] and [23, Definition
2.2.5], which are infinite when the involved structures are infinite. But note that this
differs from the formulae used in the “Hintikka-Fra¨ ıss´ e” Theorem (see [31, Theorem
3.3.2]): the latter formulae represent elementary equivalence up to a given quantifier
depth, and are finite whenever so is σ.
The proof of Proposition 9.13 relies on Lemma 9.17 below. We assume the same
notations as in Lemma 9.11 and its proof. Furthermore, we write Tfor the syntactic
category of T(σ).
Let⟨⃗ x|φ⟩be the finitely presentable model L⟨⃗ y|ψ⟩, where φis quantifier-free,
and write ⃗ x=x1, . . . , x n. In the proof of Lemma 9.11, we started from a formula
Emb E⟨⃗ x|φ⟩(⃗ x) provided by Corollary 8.10, to which we applied the formula translation
(−)W(L)induced by the word-construction W(L) derived from the left adjoint L:C→E.
But since E=Str(σ) for a (mono-sorted) purely relational σ, instead of starting from
Emb E⟨⃗ x|φ⟩(⃗ x), we can start from the formula
Embσ⟨⃗ x|φ⟩(⃗ x) =^
⃗ x::=αatomic
⟨⃗ x|φ⟩|=¬α( ˙x1,...,˙xn)¬α(⃗ x)
devised in eq. (13) ( §8). It follows that in Lemma 9.11, we can take for Emb C[P](⃗ y) the
formula
Embσ⟨⃗ x|φ⟩(⃗f)W(L)(⃗ y, . . . , ⃗ y )
61where ⃗f=f˙x1
⟨⃗ y|ψ⟩(⃗ y1), . . . , f˙xn
⟨⃗ y|ψ⟩(⃗ yn) and where Embσ⟨⃗ x|φ⟩(⃗f)W(L)(⃗ y1, . . . , ⃗ y n) is given by
Theorem 9.9 from the above formula Embσ⟨⃗ x|φ⟩(⃗ x).
It remains to show that the formula Embσ⟨⃗ x|φ⟩(⃗f)W(L)can be assumed to be fi-
nite under the assumptions of Proposition 9.13. We rely on the following variation on
Lemma 9.6.
Lemma 9.17. Leta∈C=Mod (U)and let Pbe a path of the form ⟨⃗ y|ψ⟩. Assume
LP=⟨⃗ x|φ⟩with⃗ x=x1, . . . , x n. Fix an atomic formula (⃗ x::=α)inσ.
Given h:P→a, and given ci∈L⟨⃗ y|ψ⟩fori= 1, . . . , n , the following are equivalent.
(i)La|=α((Lh)(c1), . . . , (Lh)(cn))
(ii)hfactors as
P a
Qh
e g
for some path Qand some quotient e:P↠Qsuch that
LQ|=α 
(Le)(c1), . . . , (Le)(cn)
Proof. Assume Lh:⟨⃗ x|φ⟩ →Latakes ⃗ xto⃗b∈J⃗ x|φKLa.
We first show that (ii) ⇒(i). For each i= 1, . . . , n we have ( Lh)(ci) = (Lg)((Le)(ci)).
Hence La|=α((Lh)(c1), . . . , (Lh)(cn)) since Lg:LQ→Lais a homomorphism.
For the converse, factor hasm◦e, where e∈Qandm∈M. Then by Lemma 3.5 the
codomain of eis a path, say Q, and we have LQ|=α 
(Le)(c1), . . . , (Le)(cn)
since Lm
is an embedding of structures with ( Lh)(ci) = (Lm)((Le)(ci)) for all i= 1, . . . , n .□
Remark 9.18. Note that the proof of (i) ⇒(ii) implies that we can always take an
arboreal embedding for g, while this is not assumed in condition (ii). Also, the assumption
that eis a quotient is not used in the implication (ii) ⇒(i).
The actual formulation of condition (ii) is tailored to obtain finite formulae under the
word-construction W(L).
We can now prove Proposition 9.13.
Proof of Proposition 9.13. Lemma 9.17 (together with Corollary 6.16) allows for some
simplication of the formula At( W(L))(β)(⃗ y) with
β=α
f˙x1
⟨⃗ y|ψ⟩(⃗ y), . . . , f˙xn
⟨⃗ y|ψ⟩(⃗ y)
where ⃗ x::=αis atomic (in σ), and where the path Pis⟨⃗ y|ψ⟩. Namely, assuming
LP=⟨⃗ x|φ⟩we can take At( W(L))(β)(⃗ y) to be the formula
_
e:P↠Q
LQ|=α((Le)( ˙x1),...,(Le)( ˙xn))(∃⃗ z)θe(⃗ z, ⃗ y)
where Q∼=⟨⃗ z|ϑ⟩and where
[⃗ z, ⃗ y|θe] :{⃗ z|ϑ} −→ { ⃗ y|ψ}
is such that yθe=e.
The formula At( W(L))(β)(⃗ y) can be assumed to be finite if there are (up to isomorph-
ism) finitely many arboreal quotients e:P↠QinC. It follows that the above formulae
Embσ⟨⃗ x|φ⟩(⃗f)W(L)can be assumed to be finite in this case. □
6210.The factorisation property
In the main examples of finitely accessible wooded adjunctions
C EL
R⊥
presented so far, the extensional category Eis a category of structures, while Theorem 3.29
covers the more general case where Eis the category of models for a cartesian theory.
This was done mainly with an eye to future applications and also because it is the natural
setting for Gabriel–Ulmer duality.
On the other hand, note that given a finitely accessible wooded adjunction
C⇄Str(Σ)
and a cartesian theory Tin the signature Σ, we can compose the latter adjunction
with the reflection of Str(Σ) into Mod (T), which is in particular a finitely accessible
adjunction Str(Σ)⇄Mod (T) (cf. Remark 2.9 and Lemma 6.6). The result is a finitely
accessible wooded adjunction between CandMod (T):
C⇄Str(Σ)⇄Mod (T). (21)
The way in which the equality symbol is encoded in the context of game comonads (cf.
Example 3.19 and eq. (3)) can be seen as an example of this phenomenon, by identifying
the category Str(σ) with the category of models for the cartesian theory
I(x, y)⊢x,yx˙ =y, x ˙ =y⊢x,yI(x, y)
in the signature σI. We now provide another example:
Example 10.1. Recall that the modal logic S4is the logic of reflexive and transitive
Kripke frames (see e.g. [15, Theorem 4.29]). Assume for simplicity that σis a modal
vocabulary consisting of a single binary relation and no unary relations. Then the corres-
ponding (pointed) Kripke models and reflexive transitive Kripke models are, respectively,
(pointed) graphs and preorders. Lemma 6.6 gives a finitely accessible adjunction
Gph• Pre•F
U⊥
where Uis the inclusion of the full subcategory Pre•of pointed preorders into the category
Gph•of pointed graphs and their homomorphisms,22andFproduces a preorder from
a graph by taking the reflexive-transitive closure of the edge relation. Composing this
adjunction with the finitely accessible arboreal adjunction induced by the modal comonad
(see Example 3.21(2)), for each k∈Nwe get a finitely accessible arboreal adjunction
RM
k(σ) Gph• Pre•LM
k
RM
kF
U⊥ ⊥
which encodes the S4-unravelling up to level kof a pointed Kripke frame, cf. e.g. [15,
pp. 220–221]. This can be extended in a straightforward way to pointed Kripke models
in the case where σcontains an arbitrary number of unary relations, by considering the
reflection of Kripke models into reflexive transitive Kripke models.
22Bygraphs we mean directed graphs, possibly with self-loops. Note that Gph•can be identified with
a category of structures by adding a constant symbol to the signature, and Pre•is then the category of
models for a cartesian theory in this extended signature.
63The finitely accessible wooded adjunctions of the form C⇄Str(Σ) are technically
easier to deal with, especially when Σis a mono-sorted relational signature. In this
case, the formulae Emb C[P](⃗ y) of Lemma 9.11 can be considerably simplified (cf. Pro-
position 9.13 and its proof). Ultimately, this avoids much of the technical development
of§8, and requires applying the formula translation induced by word-constructions only
to quantifier-free formulae.
One might ask whether it is always possible to reduce ourselves to the case where Eis
a category of structures; this leads us to the following definition.
Definition 10.2. LetE=Mod (T) with Ta cartesian theory in a signature Σ. A finitely
accessible wooded adjunction L:C⇄E:Rhas the factorisation property provided that
it can be decomposed (up to natural isomorphism) as a finitely accessible adjunction
C⇄Str(Σ) followed by the reflection Str(Σ)⇄E, as in eq. (21).
Example 10.3. LetDbe a small category and recall from Example 4.11 the finitely
accessible arboreal adjunction
bF bDπ!
⊥
π∗
whereF=F(D) is the forest of finite sequences of composable arrows in D(see also
Example 7.18 and §8.2). We saw in Example 2.3 that there exists an (equational) theory
T=T(Dop) in a signature Σ=Σ(Dop) such that bD∼=Mod (T). It is possible to show
that the adjunction above has the factorisation property, i.e. it can be decomposed as a
finitely accessible adjunction bF⇄Str(Σ) followed by the reflection Str(Σ)⇄bD.
Proof. Recall from Example 4.11 the functor π:F→Dwhich induces the adjunction
π!⊣π∗. Also, recall from Example 2.3 the signature Σ=Σ(Dop) and the (equational)
theory T=T(Dop) inΣsuch that bD∼=Mod (T). Write F:Str(Σ)⇄bD:Ufor the
adjunction induced from Lemma 6.6.
The adjunction π!⊣π∗factors (up to iso) as
bF Str(Σ) bD. ⊥L
⊥
RF
U
The finitely accessible adjunction L⊣Ris obtained as follows. Write Sfor the syntactic
category of the empty cartesian theory in Σ. There is a functor F→Sopwhich takes a
node s∈F, say
a0 a1 an−1 ank1 kn
to the S-object {x:an|⊤}and such that given a node t∈Fof the form
a0 an an+1 an+m−1 an+ms kn+1 kn+m
theF-morphism s≤tis taken to the S-morphism
[x:an+m, y:an|y˙ =fkn+1(. . . f kn+m(x))] : {x:an+m| ⊤} −→ { y:an| ⊤}
Note that the identity on s∈Fis taken to the S-identity [ x:an, y:an|y˙ =x], while
F-compositions are taken to term substitutions.
By Theorem 6.3, this induces a functor ϖ:F→Str(Σ). The functor R:Str(Σ)→bF
taking MtoStr(Σ) [ϖ(−), M] is a right adjoint (see e.g. [45, Theorem I.5.2]). Note that
Ris finitary since the image of ϖconsists of finitely presentable Σ-structures.
64Moreover, F◦ϖtakes s∈Fas above to the presheaf corresponding to the T-model
⟨x:an| ⊤⟩, that is, to yan. Hence, F◦ϖ∼=y◦πandR◦Utakes a presheaf P∈bDto
Str(Σ) [ϖ(−), UP]∼=bD[Fϖ(−), P]∼=bD[(y◦π)(−), P]∼=Pπ
It follows that R◦U∼=π∗. □
We now give two examples of finitely wooded adjunctions that do notsatisfy the
factorisation property (the second is even an arboreal adjunction). The first example is
less relevant from a logical point of view, but it is a useful warm-up for the second.
Example 10.4. Letσbe the signature {˙≤}of posets (see Example 2.4), and recall from
Example 3.28 the finitely accessible wooded (self-)adjunction
Pos PosId
Id⊥
which also detects path embeddings. Lemma 6.6 yields a finitely accessible adjunction
Gph PosF
U⊥
where Uis the inclusion functor and its left adjoint Ftakes a graph to the poset of its
strongly connected components (SCCs).
We claim that there is no adjunction L:Pos⇄Gph :Rsuch that Id ⊣Id factors (up
to natural isomorphism) as
Pos Gph Pos. ⊥L
⊥
RF
U
To see this, assume towards a contradiction that such an adjunction L⊣Rexists, i.e.
FL∼=Id and RU∼=Id.
We shall use the well-known fact that the inclusion functor U:Pos→Gph preserves
coproducts but not coequalisers. Let |3|be the discrete poset {0,1,2}, and let 2 be the
poset{0≤1}. Consider the monotone maps f, g:|3|⇒2 + 2
0 1 2
a b a′b′f,g fg f,g
≤ ≤
where we represent 2 + 2 as {a≤b}+{a′≤b′}. The coequaliser of fandginPos is
3 ={0≤1≤2}, while their coequaliser in Gph is the following non-transitive graph:
0 1 2
Since L:Pos→Gph is left adjoint, in Gph we get a coequaliser diagram
L|3| L2 +L2 L3.Lf
Lg
On the other hand, since FL∼=Id, the graph L|3|has three SCCs (and no edges between
them), L2 is a graph with two SCCs, say S0, S1, and with at least one edge from S0toS1
but no edges from S1toS0. Similarly, L3 has three SCCs, say T0, T1, T2, with edges from
65T0toT1and from T1toT2(and not the other way around). Moreover, since L3 is the
coequaliser of LfandLginGph , there are no edges from T0toT2inL3.
Consider now the monotone map h: 2→3 that takes 0 to 0, and 1 to 2. In L2, there are
vertices u∈S0andv∈S1with an edge from utov. Using again the fact that FL∼=Id,
it must be the case that Lh(u)∈T0andLh(v)∈T2. But then Lhcannot be a graph
homomorphism because there is no edge from T0toT2inL3. A contradiction. □
We saw in §4.1 that the category Posis not arboreal, so the wooded adjunction in the
previous example is not arboreal. We will now present an example of a finitely accessible
arboreal adjunction, involving “deterministic” Kripke structures, which does not have
the factorisation property.
Example 10.5. LetDbe the full subcategory of Gph defined by deterministic graphs ,
i.e. graphs G= (V, E) such that for all u∈Vthere is at most one v∈Vsatisfying E(u, v).
Note that Dis the category of models of the Horn (in particular, cartesian) theory
{E(x, y)∧E(x, z)⊢x,y,zy˙ =z}.
Consider the finitely accessible adjunction LM:Forest ⇄Gph :RMwhere LMsends
a forest to the graph of its covering relation, and RMsends a graph to the forest of its
finite walks. This restricts to a wooded adjunction
A DLD
⊥
RD
where Ais the full subcategory of Forest consisting of those forests in which the covering
relation is deterministic , i.e. each node is covered by at most one element. In other words,
Aconsists of those forests which are disjoint unions of branches. The category Ais lfp,
and is arboreal with respect to the (surjective, injective) factorisation system. Therefore,
LD:A⇄D:RDis a finitely accessible arboreal adjunction detecting path embeddings.
In view of Lemma 6.6, there is a finitely accessible adjunction
Gph DF
⊥
U
where Uis the full embedding and Ftakes a graph G= (V, E) to its quotient under the
equivalence relation generated by the relation
{(u, v)∈V×V| ∃w∈Vsuch that E(w, u) and E(w, v)}.
We claim that there is no finitely accessible adjunction L:A⇄Gph :Rsuch that the
adjunction LD⊣RDfactors (up to natural isomorphism) as
A Gph D. ⊥L
⊥
RF
U
Assume toward a contradiction that such an adjunction exists and so FL∼=LDand
RU∼=RD. For each n∈N, write nfor the chain 0 <1<···< n−1 of length ninA
and let ⌊n⌋be its image under the functor LD; that is, ⌊n⌋is the deterministic graph
0 1 ··· n−1.
66In particular, ⌊0⌋is the empty graph, ⌊1⌋is the graph with a vertex 0 and no edges, and
⌊2⌋is the graph 0 −→1. Consider the functions f, g:⌊1⌋⇒⌊2⌋+⌊2⌋below:
⌊1⌋ 0
⌊2⌋+⌊2⌋ 0 1 0 1fg fg
In the category A, denote by !: 1→2the unique forest morphism and let φ, ψ:1→2+2
be obtained by composing ! with the first and second coproduct injection, respectively.
Then LD(2+2) can be identified with ⌊2⌋+⌊2⌋, and LDφ, LDψwith fandg, respectively.
The coequaliser of φandψinAis2, while the coequaliser of UfandUginGph is
the graph H2, where Hndenotes the graph displayed below:
1 ··· n
0
Now, since L:A→Gph is left adjoint, in Gph we obtain a coequaliser diagram
L1 L2+L2 L2.Lφ
Lψ
It is not difficult to see that L1∼=U⌊1⌋and, using the fact that the adjunction L⊣Ris
finitely accessible, that L2∼=Hnfor some n >0. Moreover, it follows from the description
ofF:Gph→Dgiven above that Lφ:L1→L2+L2takes 0 to one root of L2+L2,
while Lψtakes 0 to the other root of L2+L2. Therefore, H2nis a coequaliser of Lφand
LψinGph . But Hn̸∼=H2nforn >0, a contradiction. □
Proof. We prove various statements of Example 10.5.
Claim. The category Ais lfp.
Proof of the Claim. We rely on Example 2.12, and more precisely on the equivalence
Forest ∼=bN. Note that this equivalence takes a forest Fto the presheaf XF∈[Nop,Set]
where XF(n) is the set of all u∈Fsuch that ↓uhas cardinality n, and where the
restriction map XF(n+ 1)→XF(n) takes uwith↓u={v1≺ ··· ≺ vn≺vn+1}tovn.
Hence we have F∈Aif, and only if, all the restriction maps of XFare injective. But this
latter condition can be expressed by a cartesian (in fact Horn) theory in the signature
Σ(Nop) associated to Nopin Example 2.3. Hence Ais lfp. □
Claim. Ais an arboreal category.
Proof of the Claim. We are going to prove that Ais arboreal when equipped with the
factorisation system ( Q,M), where Q(resp. M) consists of the surjective (resp. injective)
morphisms.
We have seen above that under the equivalence Forest ∼=bN, the objects of Acor-
respond exactly to the models of a Horn extension of the Horn theory associated to bN
in Example 2.3. Hence we get from (a direct adaptation of) Lemma 6.6 that the full
inclusion A,→Forest is a finitary right adjoint.
It follows from Example 4.3 and Example 2.17 that Forest is arboreal w.r.t. (surjective
morphisms, injective morphisms) factorisations. Moreover, it follows from Example 3.4
that in Forest , the paths are exactly the finite chains.
We now show that ( Q,M) is a (proper) factorisation system on A. Let f∈A[a, b].
We can factor fasf=m◦ewhere e(resp. m) is a surjective (resp. injective) morphism
67ofForest . But it follows from Example 2.17 (actually [16, 4.3.10.g]) that mis a strong
monomorphism in Forest . Then by Remark 8.6, mcorresponds under Forest ∼=bNto
an embedding of Σ(Nop) structures, where Σ(Nop) is the signature associated to Nopin
Example 2.3. Now, Acorresponds under Forest ∼=bN, to the category of models of a
Horn theory in Σ(Nop). This category is thus stable under substructures (see e.g. [13,
Theorem 5.12]). Hence the domain of mis actually an object of A, and it follows that
m◦eis a (Q,M) factorisation of f.
The proper factorization system ( Q,M) is moreover stable since the full inclusion A,→
Forest preserves pullbacks, and preserves as well as reflects QandM.
We thus obtain that Ais wooded, when equipped with ( Q,M).
It remains to check conditions (i)–(iv) of Definition 4.2. Condition (ii) (coproducts of
paths) follows from the fact that Ais lfp, and thus cocomplete.
For the other conditions, first note that the paths of Aare exactly the paths of Forest .
Indeed, from Example 3.4 we get that all the paths of Forest are objects of A, from which
we obtain that all the paths of Forest are actually paths in A. Conversely, since Ais
closed in Forest under domains of injective morphisms, we get that all paths of Aare
paths in Forest .
This yields condition (i) (“2-out-of-3”) of Definition 4.2.
As for condition (iii) (on connectedness), notice that the inclusion A,→Forest pre-
serves coproducts.
Finally, we obtain condition (iv) (path-generation) from the above and the fact that
the inclusion A,→Forest is full. □
Claim. LD:A⇄D:RDis a finitely accessible adjunction.
Proof of the Claim. It follows from the above that the finitely accessible adjunction LM:
Forest ⇄Gph :RMrestricts to an adjunction LD:A⇄D:RDwhere AandDare
lfp.
In view of Proposition 5.6, it remains to show that LD:A→Dpreserves finitely
presentable objects. But this follows from the fact that in both AandD, the finitely
presentable objects are the finite structures. □
Claim. LD:A⇄D:RDdetects path embeddings.
Proof of the Claim. The embeddings in Aare by definition the injective morphisms. Since
LDis a (non full) inclusion, we are done if we show that a morphism f:a→binAis
injective exactly when it is an embedding of ≺-structures.
It is clear that embeddings of ≺-structures are injective.
For the converse, consider an injective morphism f∈A[a, b]. Let uandvbe vertices
ofasuch that f(u)≺f(v) inb. Hence f(v) is not a root of b, so that vcannot be a
root of a. It follows that there is some vertex wofasuch that w≺vina. But then
f(w)≺f(v), so that f(w) =f(u) since bis a forest. Hence w=usince fis injective. □
Claim. F:Gph⇄D:Uis a finitely accessible adjunction.
Proof of the Claim. SinceD=Mod (T) with Tcartesian in σ, it follows from Lemma 6.6
(§6.1) that the inclusion functor U:D→Gph is a finitary right adjoint. Hence, we have
to show that the indicated Fis indeed left adjoint to U. To this end, we just have to
prove the usual universal property (see e.g. [44, Theorem IV.1.2]).
Recall that Ftakes a graph G= (V, E) to its quotient under the least equivalence
relation ≃onVsuch that u≃vif there is some wwith E(w, u) and E(w, v). The edge
relation of FGis the set of those pairs ([ u]≃,[v]≃) such that for some u′≃uand some
v′≃v, we have E(u′, v′) inG.
68Given a graph G∈Gph , we let ηG:G→UFG be the function which takes each
vertex uofGto its≃-class [ u]≃inUFG . It is clear that ηGis a graph morphism, since
ifE(u, v) inG, then there is an edge from [ u]≃to [v]≃inUFG .
Given some K∈Dand some graph morphism h:G→UK, we have to show that
there is a unique D-morphism h∗:FG→Ksuch that the following commutes.
G UK
UFGηGh
Uh∗
We first define h∗:FG→K. To this end, we show by induction on ≃that u≃v
implies h(u) =h(v).
Base case: In the base case, there is some w∈Vsuch that E(w, u) and E(w, v). Hence,
inKthere are edges from hwtohuand to hv. But this implies hu=hv, as
required.
Inductive step (symmetry): In this case we obtained u≃vfrom v≃u, and the
result directly follows from the induction hypothesis.
Inductive step (transitivity): In this case, we obtained u≃vfrom u≃wandw≃v,
and the result again follows from the induction hypothesis.
Hence, if ηG(u) =ηG(v), then h(u) =h(v), and this defines the value of h∗on [u]≃=
[v]≃. Moreover, h∗is indeed a D-morphism, since if E(u′, v′) for some u′≃uand some
v′≃v, then there is an edge from h(u′) to h(v′) in UK, while h∗[u]≃=h(u′) and
h∗[v]≃=h(v′). Finally, we indeed have Uh∗◦ηG=hfrom the definition of h∗.
It remains to show the uniqueness of h∗:FG→K. Let g:FG→KinDbe such that
Ug◦ηG=h. This means g[u]≃=h(u) =h∗[u]≃for each [ u]≃∈F, so that g=h∗.□
Claim. The full inclusion U:D→Gph preserves coproducts.
Proof of the Claim. Consider a family ( Ki|i∈I) of objects of D, with Ki= (Wi, Ei),
and let G:=`
i∈IKibe their coproduct in Gph . By [13, Remark 1.5(3)], the edge
relation EofGcontains exactly those pairs (( i, ui),(j, vj)) such that i=jandEi(ui, vi).
It follows that G∈D. □
Claim. The coproduct ⌊2⌋+⌊2⌋is the same in Gph andD. The coproduct 2+2inA
is the forest with two copies of 2.
Proof. Indeed, the above displayed ⌊2⌋+⌊2⌋is the coproduct in Gph ([13, Remark
1.5(3)]). Hence it is also the coproduct in the cocomplete category D, since the inclusion
U:D→Gph preserves coproducts. As the (non-full) inclusion LD:A→Dis a left
adjoint, it follows that coproduct 2+2in the cocomplete category Ais the forest with
two copies of 2. □
Claim. The coequaliser of φandψinAis2.
Proof of the Claim. We show that the coequaliser of fandginDis⌊2⌋. The result then
follows from the fact that the (non full) inclusion LD:A→Dis a left adjoint.
Lete:⌊2⌋+⌊2⌋↠⌊2⌋take both 0’s to 0, and both 1’s to 1. Then eis a morphism of
D, and moreover we have e◦f=e◦g.
Consider now some D-morphism h:⌊2⌋+⌊2⌋ →Ksuch that h◦f=h◦g. In particular,
h(f(0)) = h(g(0)), hence hidentifies the two 0’s of ⌊2⌋+⌊2⌋. But since K∈D, it follows
that hmust also identify the two 1’s of ⌊2⌋+⌊2⌋(since otherwise h(f(0)) = h(g(0))
would have two distinct outgoing edges in K). It follows that h:⌊2⌋+⌊2⌋ →Kfactors
uniquely through e:⌊2⌋+⌊2⌋↠⌊2⌋. □
69Claim. L1∼=⌊1⌋.
Proof of the Claim. First, note that R⌊1⌋∼=1since R⌊1⌋∼=RU⌊1⌋∼=RD⌊1⌋∼=1. It
follows that Gph [L1,⌊1⌋]∼=A[1,1] is a singleton. In particular, the graph L1has no
edges, and it follows from the above description of F:Gph→Dthat FL1∼=L1. But
FL∼=LD, soL1∼=LD1∼=⌊1⌋since LDis the identity on objects. □
Claim. For some n >0, we have L2∼=Hn.
Proof of the Claim. First, note that Gph [L2,⌊2⌋] is a singleton. This follows from the
fact that R⌊2⌋∼=RD⌊2⌋∼=2+1, so that
Gph [L2,⌊2⌋]∼=A[2,2+1]∼=A[2,2]
while the only forest morphism 2→2is the identity.
Moreover, L2is a finite graph since L:A→Gph preserves finitely presentable objects
(see Proposition 5.6).
Write L2= (V, E) and let h:L2→ ⌊2⌋be the unique graph morphism. We have
V=V0+V1where Vi=h−1({i}). Note that there are no edges between any two vertices
ofVi. Further, each u∈V0must have and edge to a v∈V1, since otherwise we would get
a distinct morphism h′:L2→ ⌊2⌋by taking uto 1. Similarly, each v∈V1must have an
edge from some u∈V0. In particular, V0is non-empty if, and only if, V1is non-empty.
It remains to show that V0is a singleton. Note that FL2∼=⌊2⌋. Hence, it follows
from the above description of Fthat all vertices in V0must be identified by F. But
since no u∈V0is the target of an edge, this implies that V0has at most one element.
Assume toward a contradiction that V0=∅. Then (by the above), we also get V1=∅.
But then L2is⌊0⌋, the initial object of A,Gph andD. Since Fis a left adjoint, this
yields FL2∼=⌊0⌋, which contradicts FL2∼=LD2∼=⌊2⌋. □
Claim. Letk, ℓ:⌊1⌋ →Hn+Hnbe the Gph -morphisms such that ktakes 0to the left
root of Hn+Hn, while ℓtakes 0to the right root of Hn+Hn. Then the coequaliser of k
andℓinGph isH2n.
Proof of the Claim. Lete:Hn+Hn↠H2nbe the graph morphism which identifies the
two roots of Hn+Hnwith the root of H2n, and which is injective on the leaves of Hn+Hn.
We are going to show that eis the coequaliser of kandℓinGph .
First, eobviously coequalises kandℓ. Moreover, if h:Hn+Hn→Gcoequalises
kandℓ, we have h(k(0)) = h(ℓ(0)), and this directly yields the existence of a unique
h∗:H2n→Gsuch that h∗◦e=h. □
This concludes the proof of Example 10.5. □
11.Conclusion
In this work, we have identified a tight upper bound (namely, L∞) for the expressive
power of back-and-forth equivalence relations induced by a finitely accessible wooded
adjunction satisfying mild assumptions concerning the definability (more generally, de-
tection) of path embeddings. These assumptions are met in a broad range of examples.
Besides Ehrenfeucht-Fra¨ ıss´ e games, our results apply to pebble games, and to modal and
hybrid bisimulation games [9, 6, 4]. We expect that the same methodology will extend
to e.g. guarded fragments [3]. On the other hand, our results show that game comonads
forMSO cannot lead to finitely accessible wooded adjunctions, at least with the obvious
choice of path embeddings (see Example 3.32).
This suggests that in order to handle stronger logics, one may need to consider κ-
accessible wooded adjunctions for uncountable regular cardinals κ. We believe that this
70is a natural avenue for future investigation. In particular, games for generalised Lindstr¨ om
quantifiers [17, 19] may be instrumental in developing a systematic study.
Acknowledgment. Research supported by the EPSRC grant EP/V040944/1 and the
ANR project ReCiProg (ANR-21-CE48-0019).
References
1. S. Abramsky, Structure and Power: an Emerging Landscape , Fundam. Informaticae 186 (2022),
no. 1-4, 1–26. Cited on page 16.
2. S. Abramsky, A. Dawar, and P. Wang, The Pebbling Comonad in Finite Model Theory , Proceedings
of LICS’17, 2017. Cited on pages 2, 10, 11, 12, 15, 18, and 22.
3. S. Abramsky and D. Marsden, Comonadic semantics for guarded fragments , 36th Annual ACM/IEEE
Symposium on Logic in Computer Science, LICS 2021, Rome, Italy, June 29 - July 2, 2021, 2021,
pp. 1–13. Cited on page 70.
4. ,Comonadic semantics for hybrid logic , 47th International Symposium on Mathematical
Foundations of Computer Science, MFCS 2022, August 22-26, 2022, Vienna, Austria, 2022, pp. 7:1–
7:14. Cited on pages 15, 16, 18, and 70.
5. S. Abramsky and L. Reggio, Arboreal Categories and Resources , 48th International Colloquium on
Automata, Languages, and Programming, ICALP 2021, July 12-16, 2021, Glasgow, Scotland (Virtual
Conference), 2021, pp. 115:1–115:20. Cited on pages 1, 2, 10, 12, 13, 15, 16, and 23.
6. ,Arboreal Categories: An Axiomatic Theory of Resources , Logical Methods in Computer
Science 19(2023), no. 3. Cited on pages 1, 2, 9, 10, 12, 13, 15, 16, 17, 18, 23, 24, 25, and 70.
7. ,An invitation to game comonads , ACM SIGLOG News 11(2024), no. 3, 5–48. Cited on
pages 2, 12, and 16.
8. S. Abramsky and N. Shah, Relating structure and power: Comonadic semantics for computational
resources , Proceedings of CSL’18, 2018, pp. 2:1–2:17. Cited on pages 2, 11, 12, 15, and 18.
9. ,Relating structure and power: Comonadic semantics for computational resources , J. Log.
Comput. 31(2021), no. 6, 1390–1428. Cited on pages 2, 10, 11, 12, 15, 17, 18, and 70.
10. J. Ad´ amek, H. Herrlich, and G. Strecker, Abstract and concrete categories: The joy of cats , vol. 17,
Reprints in Theory and Applications of Categories, 2006, Originally published by John Wiley and
Sons, New York, 1990. Cited on pages 4 and 21.
11. J. Ad´ amek, S. Milius, L. Sousa, and T. Wissmann, On finitary functors , Theory Appl. Categ. 34
(2019), no. 35, 1134–1164. Cited on page 19.
12. J. Ad´ amek and H.-E. Porst, Algebraic Theories of Quasivarieties , Journal of Algebra 208 (1998),
no. 2, 379 – 398. Cited on pages 3 and 30.
13. J. Ad´ amek and J. Rosick´ y, Locally Presentable and Accessible Categories , London Mathematical
Society Lecture Notes Series, vol. 189, Cambridge University Press, 1994. Cited on pages 3, 6, 7, 8,
10, 15, 20, 28, 29, 30, 32, 47, 48, 55, 59, 68, 69, 74, and 75.
14. T. Beke and J. Rosick´ y, Elementary equivalences and accessible functors , Annals of Pure and Applied
Logic 169(2018), no. 7, 674–703. Cited on page 59.
15. P. Blackburn, M. de Rijke, and Y. Venema, Modal logic , Cambridge Tracts in Theoretical Computer
Science, Cambridge University Press, 2002. Cited on page 63.
16. F. Borceux, Handbook of Categorical Algebra: Volume 1, Basic Category Theory , Encyclopedia of
Mathematics and its Applications, Cambridge University Press, 1994. Cited on pages 8, 29, and 68.
17. X. Caicedo, Back-and-Forth Systems for Arbitrary Quantifiers , Mathematical Logic in Latin America
(A.I. Arruda, R. Chuaqui, and N.C.A. Da Costa, eds.), Studies in Logic and the Foundations of
Mathematics, vol. 99, Elsevier, 1980, pp. 83–102. Cited on page 71.
18. E. Casanovas, P. Dellunde, and R. Jansana, On Elementary Equivalence for Equality-free Logic ,
Notre Dame Journal of Formal Logic 37(1996), no. 3, 506–522. Cited on page 17.
19. A. ´O Conghaile and A. Dawar, Game Comonads & Generalised Quantifiers , 29th EACSL Annual
Conference on Computer Science Logic, CSL, vol. 183, Schloss Dagstuhl - Leibniz-Zentrum f¨ ur
Informatik, 2021, pp. 16:1–16:17. Cited on page 71.
20. M. Coste, Une approche logique des th´ eories d´ efinissables par limites projectives finies , S´ eminaire
B´ enabou, Universit´ e Paris-Nord, 1976. Cited on pages 3, 5, and 30.
21. A. Dawar, T. Jakl, and L. Reggio, Lov´ asz-type theorems and game comonads , Proceedings of LICS’21,
2021. Cited on page 17.
7122. Y. Diers, Categories of boolean sheaves of simple algebras , Lecture Notes in Mathematics, vol. 1187,
Springer-Verlag, Berlin, 1986. Cited on page 19.
23. H.-D. Ebbinghaus and J. Flum, Finite model theory , second ed., Springer Monographs in Mathem-
atics, Springer, 1999. Cited on pages 1, 5, 11, 22, 37, and 61.
24. A. Ehrenfeucht, An application of games to the completeness problem for formalized theories , Fund.
Math. 49(1960/61), 129–141. Cited on pages 10 and 17.
25. R. Fra¨ ıss´ e, Sur quelques classifications des syst` emes de relations , Publ. Sci. Univ. Alger. S´ er. A 1
(1954), 35–182. Cited on pages 11 and 17.
26. P.J. Freyd and G.M. Kelly, Categories of continuous functors, I , Journal of Pure and Applied Algebra
2(1972), no. 3, 169–191. Cited on page 9.
27. P. Gabriel and F. Ulmer, Lokal Pr¨ asentierbare Kategorien , Lecture Notes in Mathematics, vol. 221,
Springer, 1971. Cited on pages 3, 27, and 30.
28. M. Hebert, J. Ad´ amek, and J. Rosick´ y, More on orthogonality in locally presentable categories ,
Cahiers de Topologie et G´ eom´ etrie Diff´ erentielle Cat´ egoriques 42(2001), no. 1, 51–80. Cited on
pages 20 and 74.
29. W. Hodges, A normal form for algebraic constructions , Bulletin of the London Mathematical Society
6(1974), no. 1, 57–60. Cited on pages 4, 23, 53, and 55.
30. ,A normal form for algebraic constructions II , Logique et Analyse 18(1975), no. 71/72,
429–487. Cited on pages 4, 23, 53, 54, and 55.
31. ,Model theory , Encyclopedia of Mathematics and its Applications, vol. 42, Cambridge Uni-
versity Press, 1993. Cited on pages 1, 4, 5, 11, 17, 35, 37, 38, 39, 41, 53, 54, 55, 58, 61, and 74.
32. N. Immerman, Descriptive complexity , Graduate Texts in Computer Science, Springer-Verlag, New
York, 1999. Cited on page 2.
33. T. Jakl, D. Marsden, and N. Shah, A game comonadic account of Courcelle and Feferman-Vaught-
Mostowski theorems , https://arxiv.org/abs/2205.05387, 2022. Cited on page 22.
34. T. Jech, Set Theory: The Third Millennium Edition, revised and expanded , Springer Monographs in
Mathematics, Springer, 2006. Cited on pages 39 and 76.
35. P.T. Johnstone, Stone Spaces , Cambridge Studies in Advanced Mathematics, Cambridge University
Press, 1982. Cited on page 29.
36. ,Sketches of an Elephant: A Topos Theory Compendium , Oxford Logic Guides, Clarendon
Press, 2002. Cited on pages 3, 5, 6, 7, 20, 26, 30, 31, 33, 42, 52, 74, and 75.
37. A. Joyal, M. Nielsen, and G. Winskel, Bisimulation and open maps , Proceedings of the Eighth Annual
Symposium on Logic in Computer Science (LICS’93), Montreal, Canada, June 19-23, 1993, 1993,
pp. 418–427. Cited on pages 2 and 16.
38. ,Bisimulation from Open Maps , Inf. Comput. 127(1996), no. 2, 164–185. Cited on pages 2
and 24.
39. C. Karp, Finite-quantifier equivalence , Proceedings of the Symposium on the Theory of Models,
Berkeley, 1963 (Amsterdam) (J. W. Addison, L. A. Henkin, and A. Tarski, eds.), North Holland,
1965, pp. 407–412. Cited on page 2.
40. M. Kashiwara and P. Schapira, Categories and Sheaves , Grundlehren der mathematischen Wis-
senschaften, vol. 332, Springer-Verlag Berlin Heidelberg, 2006. Cited on page 55.
41. A. S. Kechris, Classical Descriptive Set Theory , Graduate Texts in Mathematics, vol. 156, Springer,
1995. Cited on pages 4, 38, and 39.
42. T. Kloks, Treewidth: Computations and Approximations , Lecture Notes in Computer Science,
Springer Berlin, Heidelberg, 1994. Cited on page 15.
43. L. Libkin, Elements of Finite Model Theory , Texts in Theoretical Computer Science. An EATCS
Series, Springer Berlin, Heidelberg, 2004. Cited on page 1.
44. S. Mac Lane, Categories for the Working Mathematician , 2nd ed., Springer, 1998. Cited on pages
4, 28, and 68.
45. S. Mac Lane and I. Moerdijk, Sheaves in Geometry and Logic: A First Introduction to Topos Theory ,
Springer, 1992. Cited on pages 6, 25, 30, and 64.
46. M. Makkai and A. M. Pitts, Some Results on Locally Finitely Presentable Categories , Transactions
of the American Mathematical Society 299(1987), no. 2, 473–496. Cited on page 30.
47. D. Marker, Model Theory: An Introduction , Graduate Texts in Mathematics, vol. 217, Springer New
York, NY, 2002. Cited on page 1.
48. M. Mislove, When are order scattered and topologically scattered the same? , Orders: description
and roles (L’Arbresle, 1982), North-Holland Math. Stud., vol. 99, North-Holland, Amsterdam, 1984,
pp. 61–80. Cited on pages 27 and 28.
7249. S. Negri, Proof analysis beyond geometric theories: from rule systems to systems of rules , J. Log.
Comput. 26(2016), no. 2, 513–537. Cited on page 6.
50. J. Neˇ setˇ ril and P. Ossona de Mendez, Tree-depth, subgraph coloring and homomorphism bounds ,
European Journal of Combinatorics 27(2006), no. 6, 1022–1041. Cited on page 15.
51. M. O. Rabin, Classes of models and sets of sentences with the intersection property , Annales de la
facult´ e des sciences de l’universit´ e de Clermont. Math´ ematiques 7(1962), no. 1, 39–53. Cited on
pages 20, 74, and 75.
52. ,Decidability of Second-Order Theories and Automata on Infinite Trees , Transactions of the
American Mathematical Society 141(1969), 1–35. Cited on page 23.
53. L. Reggio, Polyadic sets and homomorphism counting , Advances in Mathematics 410, Part A
(2022), no. 108712, 108712. Cited on page 19.
54. E. Riehl, Factorization Systems , Available at https://math.jhu.edu/ ~eriehl/factorization.
pdf, 2008. Cited on page 9.
55. J. G. Rosenstein, Linear Orderings , Pure and Applied Mathematics, Academic Press, 1982. Cited
on pages 2, 11, 18, and 23.
56. S. Shelah, The Monadic Theory of Order , The Annals of Mathematics, Second Series 102 (1975),
no. 3, 379–419. Cited on page 23.
57. H. Volger, Preservation Theorems for Limits of Structures and Global Sections of Sheaves of Struc-
tures , Mathematische Zeitschrift 166(1979), 27–54. Cited on pages 20 and 74.
73Appendix A.Lfp categories as categories of structures
In Remark 3.27(1) we recalled that, given a full subcategory EofStr(Σ) that is
reflective and closed under filtered colimits in Str(Σ), there need not be a cartesian
theory TinΣsuch that E∼=Mod (T). This can be seen with a slight adaptation of an
example given in [51], which we detail here; see also [57, 28].
LetKbe a class of Σ-structures. Following [51, Definition 1, §2], we say that Khas the
intersection property if given M∈Kand given a family ( Ni|i∈I) of structures Ni∈K
such that each Niis a substructure of M, we haveT
i∈INi∈K. The above intersection
of structuresT
i∈INiis the wide pullback in Str(Σ) of the substructure embeddings
Ni↣M. In particular, given a cartesian theory TinΣ, since Mod (T) is closed under
limits in Str(Σ) (Lemma 6.6), we get that Mod (T), seen as a class of Σ-structures, has
the intersection property.23
Example A.1. The following is adapted from [51, 57]. Let σbe the signature with one
(n+ 1)-ary relation symbol Pnfor each n∈N. The following sentences were devised
in [51, §8]: define, for each n∈N,
ϖn:= (∀x)(∀y1, . . . , y n, yn+1) 
Pn+1(x, y1, . . . , y n, yn+1)→Pn(x, y1, . . . , y n)
φn:= (∀x)(∀⃗ y, yn+1)(∀⃗ z, zn+1) 
Pn+1(x, ⃗ y, y n+1)∧Pn+1(x, ⃗ z, z n+1)
→⃗ y˙ =⃗ z
γn:= (∀x)(∃y1, . . . , y n)Pn(x, y1, . . . , y n)
LetEbe the full subcategory of Str(σ) on the models of all the above sentences, where n
ranges over N. It has been observed in [57] that Eis closed under finite limits in Str(σ).
By a result of [57], this implies that Eis closed in Str(σ) under limits and filtered colimits,
from which we get the following (see [13, Theorem 5.20 and Corollary 5.21]).
Claim. Eis reflective and closed under filtered colimits in Str(σ).
Proof of the Claim. This follows from [13, Corollary 5.21], which only requires us to show
thatEis closed under finite limits in Str(σ). The sentences ϖn,φnandγnare regular,
hence it follows from [31, Lemma 9.1.4] that Eis closed in Str(σ) under products (see
also [36, D2.4.3]). It remains to show that Eis closed under equalisers in Str(σ).
We rely on the description of equalisers in Str(σ) given in [13, Remark 5.1(2)]. Namely,
the equaliser in Str(σ) of parallel arrows f, g:M→NinEis the substructure EofM
on those a∈Msuch that f(a) =g(a). We have to show that E|=ϖn∧φn∧γnfor all
n∈N. Note that ϖnandφnare Horn sentences, so their classes of models are closed
under substructures (this follows from [13, Theorem 5.12]). Hence E|=ϖn∧φnfor all
n∈N. It remains to show that E|=γnfor all n∈N. Fix n∈Nand let a∈E. Since M
is a model of γn+1andϖn, there are ⃗b, b∈Msuch that Pn+1(a,⃗b, b) and Pn(a,⃗b) hold
inM. Hence Pn+1(f(a), f(⃗b), f(b)) and Pn+1(g(a), g(⃗b), g(b)) both hold in N. But we
have f(a) =g(a) because a∈E, and so f(⃗b) =g(⃗b) since N|=φn. It follows that ⃗b∈E,
and we are done because Eis a substructure of M. □
In particular E, seen as a class of σ-structures, has the intersection property. However,
by [51, Theorem 11] there is no set Ψ of sentences in σsuch that Eis the class of models
of Ψ, and such that for each ψ∈Ψ, the class of models of ψhas the intersection property.
It is then not difficult to derive the following.
Claim. There is no cartesian theory Tinσsuch that E=Mod (T).
Proof of the Claim. Assume toward a contradiction that E=Mod (T) for some cartesian
theory Tinσ. By Definition 2.1, for each sequent ( ψ1⊢⃗ xψ2) ofT, there is a finite
23Recall that substructure embeddings are regular monomorphisms in Str(Σ), cf. Example 2.18.
74cartesian T(ψ1⊢⃗ xψ2)⊆Twith ( ψ1⊢⃗ xψ2)∈T(ψ1⊢⃗ xψ2). Then, for each ( ψ1⊢⃗ xψ2)∈T,
there is a sentence ψinσwhose class of models is exactly Mod (T(ψ1⊢⃗ xψ2)), and thus
has the intersection property. Hence, Eis the class of models of a set of sentences Ψ,
such that for each ψ∈Ψ, the class of models of ψhas the intersection property. This
contradicts [51, Theorem 11]. □
Appendix B.Additional material for §2 (Preliminaries)
B.1.Structures and homomorphisms. Amany-sorted signature Σconsists of a set
Sort(Σ) ofsorts together with collections
Fun(Σ) =[
(τ1,...,τn;τ)∈Sort(Σ)n+1Fun(Σ)(τ1, . . . , τ n;τ)
Rel(Σ) =[
(τ1,...,τn)∈Sort(Σ)nRel(Σ)(τ1, . . . , τ n)
of, respectively, function andrelation symbols. We write
f:τ1. . . τ n→τ
iff∈Fun(Σ)(τ1, . . . , τ n;τ), and
R ,→τ1. . . τ n
ifR∈Rel(Σ)(τ1, . . . , τ n).
Definition B.1 (Structures) .LetΣbe a signature.
(1) A Σ-structure Mis given by the following data:
(i) for each sort τ∈Sort(Σ), a set M(τ);
(ii) for each function symbol f:τ1. . . τ n→τ, a function fM:M(τ1)× ··· ×
M(τn)→M(τ);
(iii) for each relation symbol R ,→τ1. . . τ n, a relation RM⊆M(τ1)×···× M(τn).
(2) A homomorphism of Σ-structures h:M→Nis a family of functions
(hτ:M(τ)→N(τ)|τ∈Sort(Σ))
such that for every f:τ1. . . τ n→τandR ,→τ1. . . τ n, and for all ( a1, . . . , a n)∈
M(τ1)× ··· × M(τn), we have
hτ(fM(a1, . . . , a n)) = fN(hτ1(a1), . . . , hτn(an))
RM(a1, . . . , a n)⇒RN(hτ1(a1), . . . , hτn(an))
(3) We write Str(Σ) for the category whose objects are Σ-structures and whose
morphisms are homomorphisms.
B.2.Infinitary first-order logic. We shall consider different fragments of infinitary
first-order logic. In contrast with [13, §5] but in accordance with [36, §D1] we work
with formulae having at most finitely many free variables. These variables are declared
contexts Γ of the form x1:τ1, . . . , x n:τnwhere the variables x1, . . . , x nare pairwise
distinct.
Theterms-in-context Γ::=t:τin a signature Σare inductively defined as follows:
•x1:τ1, . . . , x n:τn::=xi:τiis a term-in-context for every i= 1, . . . , n ,
•Γ::=f(t1, . . . , t n) :τis a term-in-context if f:τ1. . . τ n→τand if Γ ::=ti:τiis
a term-in-context for each i= 1, . . . , n .
We now turn to formulae.
Definition B.2 (Formulae) .LetΣbe a signature. The many-sorted language L∞(Σ) =
L∞(=L∞,ω) consists of the formulae-in-context Γ::=φinductively defined as follows.
75•Γ::= (t˙ =τu) is a formula-in-context if Γ ::=t:τand Γ ::=u:τare terms-in-
context.
•Γ::=R(t1, . . . , t n) is a formula-in-context if R ,→τ1. . . τ nand if Γ ::=ti:τiis a
term-in-context for each i= 1, . . . , n .
•Γ::=¬φis a formula-in-context if Γ ::=φis a formula-in-context.
•Γ::= (∀x:τ)φand Γ ::= (∃x:τ)φare formulae-in-context if Γ , x:τ::=φis a
formula-in-context.
•Γ::=V
i∈Iφiand Γ ::=W
i∈Iφiare formulae-in-context if Iis a small set and if
Γ::=φiis a formula-in-context for each i∈I.
Note that L∞is a large set. Note also that by construction, formulae-in-context have at
most finitely many free variables. Finally, note that in case Σis purely relational (i.e.
Fun(Σ) =∅), the notion of term-in-context still properly handles the contexts of atomic
formulae: e.g. Γ ::=P(x1, . . . , x n) requires all the xito be declared in Γ with appropriate
sort, but Γ may declare additional variables.
Given a cardinal κ, we write Lκ(=Lκ,ω) for the set of formulae φ∈L∞whose con-
junctions and disjunctions have cardinality < κ. The following is a trivial consequence
of the definitions.
Fact B.3 (AC).Ifφ∈L∞, then φ∈Lκfor some κ.
Proof. By induction on φ. We only discuss the case of φ=V
i∈Iφi. By induction
hypothesis, for each i∈Ithere is a cardinal κi>0 such that φi∈Lκi. Using the Axiom
of Choice (see e.g. [34, §5]), let κbe the cardinal ofP
i∈Iκi. Then φi∈Lκfor all i∈I.
Since Ihas cardinality ≤κ, we get φ∈Lκ. □
Dipartimento di Matematica “Federigo Enriques”, Universit `a degli Studi di Milano,
Italy
Email address :luca.reggio@unimi.it
LIP, ENS de Lyon, France
Email address :colin.riba@ens-lyon.fr
76
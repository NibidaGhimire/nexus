Polyhedral Aspects of Feedback Vertex Set
and Pseudoforest Deletion Set‚àó
Karthekeyan Chandrasekaran‚Ä†Chandra Chekuri‚Ä°Samuel Fiorini¬ß
Shubhang Kulkarni‚Ä†Stefan Weltge¬∂
Abstract
We consider the feedback vertex set problem in undirected graphs (FVS). The input to FVS is an
undirected graph G= (V, E)with non-negative vertex costs. The goal is to find a minimum cost subset
of vertices S‚äÜVsuch that G‚àíSis acyclic. FVS is a well-known NP-hard problem and does not
admit a (2‚àíœµ)-approximation for any fixed œµ >0assuming the Unique Games Conjecture. There are
combinatorial 2-approximation algorithms [BBF95, BG96] and also primal-dual based 2-approximations
[CGHW98, Fuj99]. Despite the existence of these algorithms for several decades, there is no known
polynomial-time solvable LP relaxation for FVS with a provable integrality gap of at most 2. More
recent work [CM16] developed a polynomial-sized LP relaxation for a more general problem, namely
Subset FVS, and showed that its integrality gap is at most 13for Subset FVS, and hence also for FVS.
Motivated by this gap in our knowledge, we undertake a polyhedral study of FVS and related prob-
lems. In this work, we formulate new integer linear programs (ILPs) for FVS whose LP-relaxation can
be solved in polynomial time, and whose integrality gap is at most 2. The new insights in this process
also enable us to prove that the formulation in [CM16] has an integrality gap of at most 2for FVS. Our
results for FVS are inspired by new formulations and polyhedral results for the closely-related pseudo-
forest deletion set problem (PFDS). Our formulations for PFDS are in turn inspired by a connection to
the densest subgraph problem. We also conjecture an extreme point property for a LP-relaxation for
FVS, and give evidence for the conjecture via a corresponding result for PFDS.
‚àóCorresponding Author: Karthekeyan Chandrasekaran, Affiliation: University of Illinois, Urbana-Champaign, E-mail Ad-
dress: karthe@illinois.edu.
‚Ä†University of Illinois, Urbana-Champaign, Email: {karthe, smkulka2}@illinois.edu. Supported in part by NSF grants
CCF-1814613 and CCF-1907937.
‚Ä°University of Illinois, Urbana-Champaign, Email: chekuri@illinois.edu. Supported in part by NSF grants CCF-1910149 and
CCF-1907937.
¬ßUniversit√© libre de Bruxelles, Email: sfiorini@ulb.ac.de
¬∂Technische Universit√§t M√ºnchen, Email: weltge@tum.de. Supported in part by Deutsche Forschungsgemeinschaft (DFG,
German Research Foundation), project number 451026932.
1arXiv:2303.12850v2  [cs.DS]  30 May 2024Contents
1 Introduction 3
1.1 Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
2 Preliminaries 10
3 Pseudoforest Deletion Set 11
3.1 Orientation and 2-Pseudotree Cover constraints . . . . . . . . . . . . . . . . . . . . . . . . . . 11
3.2 Extreme point property of the Weak Density polyhedron . . . . . . . . . . . . . . . . . . . . . 12
3.2.1 Background on supermodular functions and set families . . . . . . . . . . . . . . . . . 13
3.2.2 Conditional supermodularity of Weak Density constraints . . . . . . . . . . . . . . . . 14
3.2.3 Conditional properties of tight sets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14
3.2.4 Conditional basis structure for extreme points . . . . . . . . . . . . . . . . . . . . . . . 16
3.2.5 Proof of Theorem 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19
3.3 Extreme point property of the Orientation polyhedron . . . . . . . . . . . . . . . . . . . . . . 20
4 Feedback Vertex Set 23
4.1 Weak Density and Cycle Cover constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
4.1.1 Minimal FVS and Weak Density constraints . . . . . . . . . . . . . . . . . . . . . . . . 24
4.1.2 Proof of integrality gap . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
4.2 Orientation and Cycle Cover constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28
4.3 Alternative formulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28
A Pseudoforest Deletion Set 30
A.1 Polynomial-time separation oracle for 2-Pseudotree Cover constraints . . . . . . . . . . . . . 30
B Feedback Vertex Set 31
B.1 Polynomial-sized formulation of the Cycle Cover polyhedron . . . . . . . . . . . . . . . . . . . 31
B.2 Chekuri-Madan formulation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
B.2.1 Chekuri-Madan‚Äôs ILP for SFVS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
B.2.2 Reduction from FVS to SFVS satisfying the CM-properties . . . . . . . . . . . . . . . 33
B.2.3 Bounding the integrality gap . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34
B.3 Orientation formulation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
21 Introduction
We consider the feedback vertex set problem in undirected graphs. For a graph G= (V, E), a subset
U‚äÜVis afeedback vertex set ifG‚àíUis acyclic; in other words Uis a hitting set for the cycles of
G. In the feedback vertex set problem (FVS), the input is an undirected graph G= (V, E)with non-
negative vertex costs c:V‚ÜíR‚â•0and the goal is to find a feedback vertex set of minimum cost, i.e.,
minnP
u‚ààUc(u):U‚äÜVandUis a feedback vertex set for Go
. FVSisafundamentalvertexdeletionprob-
lem in the field of combinatorial optimization and appears in Karp‚Äôs list of 21 NP-Complete problems (as
a decision version). We consider the approximability of FVS, in particular via polynomial-time solvable
polyhedral formulations. First, we mention some known lower bounds. Via a simple reduction, the well-
known weighted vertex cover problem can be reduced to FVS in an approximation preserving fashion. Hence,
known results for the vertex cover problem imply that there is no polynomial-time (2‚àíœµ)-approximation
for every fixed constant œµ >0under the Unique Games Conjecture (UGC) [KR08] and that there is no
polynomial-time (1.36‚àíœµ)-approximation for every fixed constant œµ >0under the PÃ∏=NPassumption
[DS05].
Approximation algorithms for the unweighted version of FVS (UFVS), i.e., when all vertex costs are one,
havebeenstudiedsince1980s. An O(logn)-approximationforUFVSisimplicitintheworkofErd√∂sandP√≥sa
[EP62]; Monien and Schulz [MS81] seem to be the first ones to explicitly study the problem, and obtained an
O(‚àölogn)-approximationforUFVS.Bar-Yehuda, Geiger, Naor, andRoth[BYGNR98]improvedtheratiofor
UFVS to 4, and also noted that an O(logn)-approximation holds for FVS. Soon after that, Bafna, Berman,
and Fujito [BBF95], and independently Becker and Geiger [BG96], obtained 2-approximation algorithms for
FVS. While [BBF95] explicitly uses the local-ratio terminology, [BG96] describes the algorithm in a purely
combinatorial fashion. Although the algorithm in [BBF95] is described via the local-ratio method, the
underlying LP relaxation is not obvious. As observed in [BYGNR98], the natural hitting set LP relaxation
for FVS has an integrality gap of Œò(log n). Chudak, Goemans, Hochbaum, and Williamson [CGHW98]
described exponential sized integer linear programming (ILP) formulations for FVS, and showed that the
algorithms in [BBF95, BG96] can be viewed as primal-dual algorithms with respect to the LP relaxations
of these formulations. This also established that these LP relaxations have an integrality gap of at most 2.
Fujito [Fuj99] considered a unified generalization of FVS and vertex cover, namely matroidal FVS, and gave
aO(logn)-approximation for matroidal FVS via connections to submodular set cover. In the same work,
Fujito formulated an exponential sized ILP for matroidal FVS, and designed a primal-dual algorithm with
respect to its LP relaxation. He proved that the algorithm has an approximation ratio of 2for a certain
family of matroids. When specialized to FVS, we note that the ILP and the resulting primal-dual algorithm
in [Fuj99] is slightly different from the one in [CGHW98] although they both yield 2-approximations.
Werecalltheintegerlinearprogram(ILP)formulationandtheassociatedLP-relaxationfrom[CGHW98].
For a graph G= (V, E)and a subset S‚äÜV, letE[S]:=
{u, v} ‚ààE:u, v‚ààS	
andG[S]:= (S, E[S]), and
for a vertex v‚ààV, letdS(v)denote the degree of vinG[S]. We will denote the following polyhedron as the
strong density polyhedron and the constraints describing the polyhedron as strong density constraints1:
PSD(G):=
x‚ààRV
‚â•0:X
u‚ààS(dS(u)‚àí1)xu‚â• |E[S]| ‚àí |S|+ 1‚àÄSsuch that E[S]Ã∏=‚àÖ
.(1)
Chudak, Goemans, Hochbaum, and Williamson proved that strong density constraints are valid for FVS and
that the following is an integer linear programming formulation for FVS:
minX
u‚ààVcuxu:x‚ààPSD(G)‚à©ZV
. (FVS-IP: SD)
They interpreted the local-ratio algorithm from [BBF95] as a primal-dual algorithm with respect to2the
1The use of the ‚Äúdensity‚Äù terminology will be clear later when we discuss the connection to the densest subgraph problem
and its LP relaxation.
2AnŒ±-approximation with respect to an LP min{cTx:Ax‚â§b}is an algorithm that returns an integral solution z‚àósatisfying
Ax‚â§bsuch that cTz‚àó‚â§Œ±OPT LP, where OPT LPis the optimum objective value of the LP.
3LP-relaxation of (FVS-IP: SD) that we explicitly write below:
minX
u‚ààVcuxu:x‚ààPSD(G)
. (FVS-LP: SD)
Itis,however,notknownwhether(FVS-LP:SD)canbesolvedinpolynomialtime. Equivalently,itisopen
to design a polynomial-time separation oracle for the family of strong density constraints. Moreover, there
has been no other polynomial-time solvable LP relaxation through which one could obtain a 2-approximation
for FVS. This status leads to the following natural question:
Question 1. Does there exist an ILP formulation for FVS whose LP-relaxation can be solved in polynomial
time and has integrality gap at most 2?
The lack of solvable LP relaxations for FVS with small integrality gap has also been a stumbling block
for the design of approximation algorithms for a generalization of FVS called the subset feedback vertex set
problem (Subset-FVS) [ENSZ00]: the input is a vertex-weighted graph Gand a terminal set T‚äÜV, and the
goal is to remove a minimum cost subset of vertices Sto ensure that G‚àíShas no cycle containing a terminal
t‚ààT. There is an 8-approximation for Subset-FVS [ENZ00] and this is based on a complex algorithm that
combines combinatorial and LP-based techniques. Chekuri and Madan [CM16] formulated a polynomial-
sized integer linear program for Subset-FVS and showed that the integrality gap of its LP-relaxation is at
most 13. They explicitly raised the question of whether the integrality gap of their formulation is better for
FVS; in fact it is open whether their formulation‚Äôs integrality gap is at most 2for Subset-FVS.
In this work, we provide an affirmative answer to Question 1 by undertaking a polyhedral study of
FVS and a closely related problem, namely the pseudoforest deletion set problem that will be described
shortly. In addition to formulating polynomial-time solvable LP relaxations with small integrality gap,
it is also of interest to find algorithms that can round fractional solutions to the LP relaxations, and to
understand properties of extreme points of the corresponding polyhedra. Based on several interrelated
technical considerations, we conjecture the following property for the strong density polyhedron:
Conjecture 1. LetG= (V, E)be a graph that contains a cycle. For every extreme point xof the polyhedron
PSD(G), there exists a vertex u‚ààVsuch that xu‚â•1/2.
This conjecture would lead to an alternative proof that the integrality gap of the LP-relaxation (FVS-LP:
SD) is at most 2via iterative rounding (instead of the primal-dual technique). Although we were unable to
resolvethisconjectureforthestrongdensitypolyhedron, wewereabletoshowthatavariantoftheconjecture
holds for a weak density polyhedron (to be defined later). The weak density polyhedron closely resembles
the strong density polyhedron and is associated with an ILP formulation of the pseudoforest deletion set
problem. We also discuss extreme point properties for other formulations later in the paper.
Pseudoforest Deletion Set Problem (PFDS). A connected graph is a pseudotree if it has exactly one
cycle; inotherwordsthereisanedgewhoseremovalresultsinaspanningtree. Agraphisa pseudoforest ifev-
eryconnectedcomponentiseitheracyclicorapseudotree. Foragraph G= (V, E), asubset U‚äÜVisapseud-
oforest deletion set ifG‚àíUisapseudoforest. Inthepseudoforestdeletionsetproblem(PFDS),theinputisan
undirected graph G= (V, E)with non-negative vertex costs c:V‚ÜíR‚â•0and the goal is to find a pseudofor-
est deletion set of minimum cost, i.e., minnP
u‚ààUc(u):U‚äÜVandUis a pseudoforest deletion set for Go
.
Intuitively, one can see that PFDS is closely related to FVS: we note that a feasible solution for FVS in a
given graph Gis a feasible solution to the PFDS instance on G. Also, finding an FVS in a graph that is a
pseudoforest is easy: for each connected component that is a pseudotree, we remove the cheapest vertex in
its unique cycle. PFDS and FVS are special cases of the more general ‚Ñì-pseudoforest deletion problem that
was introduced in [PRS18] from the perspective of parameterized algorithms (FVS corresponds to ‚Ñì= 0and
PFDS to ‚Ñì= 1). Lin, Feng, Fu, and Wang [LFFW19] studied approximation algorithms for ‚Ñì-pseudoforest
deletion problem. In this paper, we restrict attention to PFDS and FVS and do not discuss the more general
4‚Ñì-pseudoforest deletion problem. The status of PFDS is very similar to that of FVS. It has an approxi-
mation preserving reduction from the vertex cover problem and consequently, it is NP-hard, and does not
have a polynomial time (2‚àíœµ)-approximation for every constant œµ >0assuming the UGC. It admits a
polynomial-time 2-approximation based on the local-ratio technique [LFFW19]. The authors in [LFFW19]
do not discuss LP relaxations for PFDS. However, the local-ratio technique of [LFFW19] can be converted
to an LP-based 2-approximation for PFDS following the ideas in [CGHW98]. We describe the associated
LP relaxation. A graph G= (V, E)is a2-pseudotree if it is connected and has |E| ‚â• |V|+ 1(i.e., the graph
has at least 2edges in addition to a spanning tree). We will denote the following polyhedra as weak density
polyhedron and 2-pseudotree cover polyhedron respectively, and the constraints describing them as weak
density constraints and 2-pseudotree cover constraints respectively:
PWD(G):=
x‚ààRV
‚â•0:X
u‚ààS(dS(u)‚àí1)xu‚â• |E[S]| ‚àí |S| ‚àÄS‚äÜV
,and (2)
P2-PT-cover (G):=
x‚ààRV
‚â•0:X
u‚ààUxu‚â•1‚àÄU‚äÜVsuch that G[U]contains a 2-pseudotree
.(3)
We encourage the reader to compare and contrast the weak density constraints with the strong density
constraints. Weakdensityconstraintsand 2-pseudotreecoveringconstraintsarevalidforPFDS.Inparticular,
the following are ILP formulations for PFDS:
minX
u‚ààVcuxu:x‚ààPWD(G)‚à©ZV
and (PFDS-IP: WD)
minX
u‚ààVcuxu:x‚ààPWD(G)‚à©P2-PT-cover (G)‚à©ZV
. (PFDS-IP: WD-and-2PT-cover)
The local-ratio technique for PFDS due to Lin, Feng, Fu, and Wang [LFFW19] can be converted to a
2-approximation for PFDS with respect to the following LP-relaxation via the primal-dual technique:
minX
u‚ààVcuxu:x‚ààPWD(G)‚à©P2-PT-cover (G)
. (PFDS-LP: WD-and-2PT-cover)
The family of 2-pseudotree cover constraints admits a polynomial-time separation oracle (see Lemma 18).
However, we do not know a polynomial-time separation oracle for the family of weak density constraints
(similar to the status of strong density constraints), and for this reason we do not know how to solve (PFDS-
LP: WD-and-2PT-cover) in polynomial time3. This leads to the following question (which is the counterpart
of Question 1 for PFDS):
Question 2. Does there exist an ILP formulation for PFDS whose LP-relaxation can be solved in polynomial
time and has integrality gap at most 2?
We emphasize that weak density constraints and our answer to Question 2 will play a crucial role in our
answer to Question 1. Furthermore, we prove an extreme point property of the weak density polyhedron that
closely resembles the extreme point property of the strong density polyhedron mentioned in Conjecture 1.
1.1 Results
We begin with our results for PFDS. These results influence our results for FVS which will be discussed
subsequently.
3We note that Fujito‚Äôs framework [Fuj99] encompasses PFDS and hence a 2-approximation follows from his work. It appears
that [LFFW19] were unaware of [Fuj99]. The authors of this paper also became aware of [Fuj99] after completing an earlier
version. The LP relaxation in [Fuj99] does not appear to have a polynomial-time separation oracle.
5PFDS: ILP formulations and LP integrality gap. We answer Question 2 affirmatively via a new ILP
for PFDS. Our ILP for PFDS is based on Charikar‚Äôs LP for the densest subgraph problem (DSG) [Cha00].
In DSG, the input is an undirected graph G= (V, E)and the goal is to find an induced subgraph G[S]of
maximum density where the density of S‚äÜVis defined as |E(S)|/|S|. We define the density of Gto be
max{|E[S]|/|S|:‚àÖ Ã∏=S‚äÜV}. We note that a graph is a pseudoforest if and only if its density is at most
one. Thus, PFDS can equivalently be phrased as the problem of finding a minimum cost subset of vertices
to delete so that the remaining graph has density at most one. Charikar formulated an LP to compute
the density of a graph. The dual of Charikar‚Äôs LP can be interpreted as a fractional orientation problem.
Using that dual, we obtain an ILP for PFDS. We describe the details now. Via Charikar‚Äôs LP and previous
results, one can show that an unweighted graph Ghas density at most Œªiff the edges of Gcan be fractionally
oriented such that the total fractional in-degree at every vertex is at most Œª. For an edge e=uvwe use
variables ye,uandye,vto denote the fractional amount of ethat is oriented towards uandvrespectively. We
recall that in PFDS the goal is to remove vertices such that the residual graph has density at most 1. Thus,
we also have variables xufor each u‚ààVto indicate whether uis deleted. An edge e=uvis in the residual
graph only if uandvare not deleted. These observations allow us to formulate the an ILP for PFDS based
on the polyhedron below. We refer to this as the orientation polyhedron:
Porient(G):=Ô£±
Ô£¥Ô£¥Ô£¥Ô£≤
Ô£¥Ô£¥Ô£¥Ô£≥(x, y):xu+xv+ye,u+ye,v‚â•1‚àÄe‚ààE:e=uv
xu+P
e‚ààŒ¥(u)ye,u‚â§1‚àÄu‚ààV
xu‚â•0‚àÄu‚ààV
ye,u‚â•0‚àÄe‚ààŒ¥(u), u‚ààV.Ô£º
Ô£¥Ô£¥Ô£¥Ô£Ω
Ô£¥Ô£¥Ô£¥Ô£æ.
We will denote the projection of Porient(G)to the xvariables by Qorient(G). For non-negative costs
c:V‚ÜíR‚â•0, we consider the following formulations:
minX
u‚ààVcuxu:x‚ààQorient(G)‚à©ZV
and (PFDS-IP: orient)
minX
u‚ààVcuxu:x‚ààQorient(G)‚à©P2-PT-cover (G)‚à©ZV
.(PFDS-IP: orient-and-2PT-cover)
WewillbeinterestedintheintegralitygapofthefollowingLP-relaxationof (PFDS-IP: orient-and-2PT-cover):
minX
u‚ààVcuxu:x‚ààQorient(G)‚à©P2-PT-cover (G)
. (PFDS-LP: orient-and-2PT-cover)
Theorem 1. For an input graph G= (V, E)with non-negative costs c:V‚ÜíR‚â•0,(PFDS-IP: orient) and
(PFDS-IP: orient-and-2PT-cover) are integer linear programming formulations for PFDS. Moreover, we have
the following properties:
(1)Qorient (G)‚äÜPWD(G)for every graph Gand there exist graphs Gfor which Qorient (G)‚ääPWD(G).
(2) The LP (PFDS-LP: orient-and-2PT-cover) is solvable in polynomial time and its integrality gap is at
most 2.
We note that a necessary step for showing Theorem 1(1) is to show that there exists a polynomial-time
separationoracleforthefamilyof 2-pseudotreecoverconstraints. WeincludeaproofofthisfactinLemma18
in Appendix A.1 for the sake of completeness. We also note that the upper bound of 2on the integrality gap
of(PFDS-LP:orient-and-2PT-cover)mentionedinTheorem1istightasshowninFigure1. Asaconsequence
of Theorem 1, we immediately obtain an integer linear program for PFDS whose LP-relaxation is solvable
in polynomial time and has integrality gap at most 2‚Äî namely (PFDS-IP: orient-and-2PT-cover). We also
bound the integrality gap of the LP-relaxation of (PFDS-IP: orient), but this will be based on extreme point
properties and will be discussed next.
6Figure 1: An example showing that the integrality gap of (PFDS-LP: orient-and-2PT-cover) tends to 2as
ntends to infinity. Consider the graph G= (V, E)as shown above (where Kndenotes the complete graph
onnvertices) with cost of every vertex a‚ààV‚àí {u, v, w }being 1and costs of vertices u, v, wbeing infinite.
The optimum value of (PFDS-IP: orient-and-2PT-cover) is n‚àí1. The optimum value of (PFDS-LP: orient-
and-2PT-cover) is at most n/2: the solution xa= 1/2for every vertex a‚ààV‚àí{u, v, w },xu=xv=xw= 0,
ye,a= 0for all edges e=abwhere a, b‚ààV‚àí{u, v, w },yuv,v=yvw,w =ywu,u= 1,yuv,u=yvw,v=ywu,w = 0,
andyua,a= 1/2,yua,u= 0for every a‚ààV‚àí {u, v, w }is feasible for (PFDS-LP: orient-and-2PT-cover) and
has cost n/2.
PFDS: extreme point properties. Motivated by Conjecture 1 and the goal of designing primal rounding
algorithms for PFDS (and thus, for FVS), we investigate extreme point properties of the weak density
polyhedron and the orientation polyhedron. Although we were unable to resolve Conjecture 1 for the strong
density polyhedron, we were able to prove an extreme point property for the weak density polyhedron.
Theorem 2. LetG= (V, E)be a graph that is not a pseudoforest. For every extreme point xof the
polyhedron PWD(G), there exists a vertex u‚ààVsuch that xu‚â•1/3.
Our proof of Theorem 2 is based on a conditional supermodularity property‚Äîif all coordinates are small,
then the weak density constraints have a supermodular property; we use this supermodular property to
show the existence of a structured basis for the extreme point which is subsequently used to arrive at a
contradiction. To the best of authors‚Äô knowledge, the conditional supermodularity property based proof
has not previously appeared in the literature on iterated rounding, and might be of independent interest.
Theorem 2 implies the corollary below regarding the following LP-relaxation of (PFDS-IP: WD):
minX
u‚ààVcuxu:x‚ààPWD(G)
. (PFDS-LP: WD)
Corollary 2.1. The integrality gap of (PFDS-LP: WD) is at most 3.
Corollary 2.1 can be seen to follow from Theorem 2 by the iterative rounding technique, where we
repeatedly apply the following two steps until the graph Gis a pseudoforest: (1) Compute an extreme point
optimum solution xof (PFDS-LP: WD). (2) By Theorem 2, there exists a vertex u‚ààVsuch that xu‚â•1/3;
include the vertex uin the solution and remove it from the graph G. The approximation factor of the
solution constructed by this procedure relative to the starting extreme point optimum solution to the LP is
at most 3. The example given in Figure 2a shows that the (1/3)-bound in Theorem 2 and the integrality
gap of 3mentioned in Corollary 2.1 are both tight.
We emphasize that the extreme point result given in Theorem 2 and the integrality gap result mentioned
in Corollary 2.1 are interesting only from a polyhedral viewpoint currently, and are not of help from the
perspective of algorithm design. This is because, implementing the above-mentioned iterative rounding
71/30 0
0 0
(a) The unique extreme point in the weak density poly-
hedron along the all-ones objective direction for the
butterfly graph is as shown. The largest coordinate is
1/3and all other coordinates are 0. Consequently, the
integrality gap of the LP min{P
u‚ààVxu:x‚ààPWD(G)}
is at least 3.1/30 0
0 02/3
1/32/3
1/30
2/31/31/3
1/31/3
0
2/3
(b) A minimal extreme point in the orientation polyhe-
dron along the all-ones objective direction for the but-
terflygraphisasshown. Thelargest x-coordinateis 1/3
and all other x-coordinates are 0. Consequently, the in-
tegrality gap of the LP min{P
u‚ààVxu:x‚ààPorient (G)}
is at least 3.
procedure requires us to solve the LP-relaxation (PFDS-LP: WD) in polynomial time, but we do not know
how to do this yet.
We next show that although Qorient(G)is a subset of PWD(G)(as shown in Theorem 1), the extreme
point result for PWD(G)given in Theorem 2 still holds for Qorient(G). We will say that an extreme point of
a polyhedron is minimal if for each variable, reducing the value of that variable by any œµ >0while keeping
the rest of the variables unchanged results in a point that is outside the polyhedron. We note that extreme
points of a polyhedron along non-negative objective directions will be minimal.
Theorem 3. LetG= (V, E)be a graph that is not a pseudoforest. For every minimal extreme point (x, y)
of the polyhedron Porient (G), there exists a vertex u‚ààVsuch that xu‚â•1/3.
Similar to Corollary 2.1 that follows from Theorem 2, Theorem 3 implies the corollary below regarding
the following LP-relaxation of (PFDS-IP: orient):
minX
u‚ààVcuxu:x‚ààQorient(G)
(PFDS-LP: orient)
Corollary 3.1. The integrality gap of (PFDS-LP: orient) is at most 3. Moreover, given an extreme point
optimum solution xfor the LP, there exists a polynomial time algorithm to obtain an integral feasible solution
x‚Ä≤for the LP-relaxation such thatP
u‚ààVcux‚Ä≤
u‚â§3P
u‚ààVcuxu.
Corollary 3.1 can be seen to follow from Theorem 3 by the iterative rounding technique, where we
repeatedly apply the following two steps until the graph Gis a pseudoforest: (1) Compute an extreme point
optimum solution xofminnP
u‚ààVcuxu:x‚ààQorient(G)o
. (2) By Theorem 3, there exists a vertex u‚ààV
such that xu‚â•1/3; include the vertex uin the solution and remove it from the graph G. The approximation
factor of this procedure is 3. In contrast to the weak density constraints based LP, namely (PFDS-LP: WD),
we can solve the orientation based LP, namely (PFDS-LP: orient), in polynomial time. The example given in
Figure 2b shows that the (1/3)-factor in Theorem 3 and the integrality gap of 3mentioned in Corollary 3.1
are both tight.
81/3 1/3
1/3 1/3
Figure 3: The unique extreme point optimum for (FVS-LP: WD-and-cycle-cover) along the all-ones objective
direction on the complete graph K4is as shown. Consequently, the integrality gap of (FVS-LP: WD-and-
cycle-cover) is at least 3.
FVS: poly-sized ILP formulations and LP integrality gaps. Next, we answer Question 1 affirma-
tively via a new ILP for FVS. In order to achieve this goal, we formulate an intermediate ILP for FVS
whose LP-relaxation has integrality gap at most 2, but it is unclear if this LP-relaxation is polynomial-time
solvable. We will later formulate a polynomial-sized ILP for FVS whose LP-relaxation is at least as strong
as that of the intermediate ILP, thereby achieving our goal. Our intermediate ILP is based on weak density
constraints and the following polyhedron that will be referred to as the cycle cover polyhedron:
Pcycle-cover (G):=
x‚ààRV
‚â•0:X
u‚ààUxu‚â•1‚àÄU‚äÜVsuch that G[U]contains a cycle
.(4)
We will denote the constraints describing the cycle cover polyhedron as cycle cover constraints. It is known
that the integrality gap of this polyhedron for FVS is Œò(log n)[BYGNR98].
For non-negative costs c:V‚ÜíR‚â•0, we consider the following formulation and its LP-relaxation:
minX
u‚ààVcuxu:x‚ààPWD(G)‚à©Pcycle-cover (G)‚à©ZV
and (FVS-IP: WD-and-cycle-cover)
minX
u‚ààVcuxu:x‚ààPWD(G)‚à©Pcycle-cover (G)
. (FVS-LP: WD-and-cycle-cover)
Theorem4. For aninput graph G= (V, E)with non-negative costs c:V‚ÜíR‚â•0,(FVS-IP: WD-and-cycle-cover)
isan integerlinear programming formulationfor FVS. Moreover, theintegralitygap of (FVS-LP: WD-and-cycle-cover)
is at most 2.
Theorem 4 shows that (FVS-IP: WD-and-cycle-cover) is an ILP for FVS whose LP-relaxation (FVS-LP:
WD-and-cycle-cover) has integrality gap at most 2. However, we do not have a polynomial-time algorithm
to solve the LP-relaxation (FVS-LP: WD-and-cycle-cover). This is because, we do not have a polynomial-
time separation oracle for the family of weak density constraints (although we do have a polynomial-time
separation oracle for the family of cycle cover constraints).
Remark 1. In the spirit of using iterative rounding to bound integrality gaps (e.g., Theorem 2 that leads
to Corollary 2.1 and Theorem 3 that leads to Corollary 3.1), it is tempting to bound the integrality gap of
(FVS-LP: WD-and-cycle-cover) by proving an extreme point result. In particular, if we could show that
every extreme point optimum of (FVS-LP: WD-and-cycle-cover) had a coordinate with value at least 1/2,
then we would have an alternative proof of the integrality gap bound mentioned in Theorem 4 via the iterative
rounding technique. However, the example given in Figure 3 shows that there exists an extreme point optimum
of (FVS-LP: WD-and-cycle-cover) all of whose coordinates have value at most 1/3.
We will use Theorem 1 in conjunction with Theorem 4 to prove the following result:
9Theorem 5. There exists a polynomial-sized integer linear programming formulation for FVS whose LP-
relaxation has integrality gap at most 2.
We prove Theorem 5 by showing three different polynomial-sized integer linear programs for FVS all of
whose LP-relaxations have integrality gap at most 2:
1. The first formulation is
minX
u‚ààVcuxu:x‚ààQorient(G)‚à©Pcycle-cover (G)‚à©ZV
.(FVS-IP: orient-and-cycle-cover)
By Theorem 1(1), we have that Qorient(G)‚äÜPWD(G). As a consequence of Theorem 4, the integrality
gap of the following LP-relaxation is also at most 2:
minX
u‚ààVcuxu:x‚ààQorient(G)‚à©Pcycle-cover (G)
.(FVS-LP: orient-and-cycle-cover)
Both Qorient(G)andPcycle-cover (G)admitapolynomial-sizeddescription(seeLemma19inAppendixB.1
for polynomial-sized description of Pcycle-cover (G)), and thus, we have a polynomial-sized ILP for FVS
whose LP-relaxation has integrality gap at most 2.
2. The second formulation is the Chekuri-Madan formulation who, as we remarked earlier, formulated an
ILP for Subset-FVS and showed that the integrality gap of its LP-relaxation is at most 13[CM16]. We
show that their LP-relaxation specialized for FVS has integrality gap at most 2by proving that it is at
least as strong as (FVS-LP: orient-and-cycle-cover). Our result gives additional impetus to improving
the integrality gap of their LP-relaxation for Subset-FVS.
3. Our third formulation to prove Theorem 5 is based on the orientation perspective, but without cycle
cover constraints (as opposed to our first formulation). Here, we give an orientation based ILP formu-
lation whose associated polyhedron is contained in the strong density polyhedron. Since the integrality
gap of (FVS-LP: SD) is at most 2(as shown by Chudak, Goemans, Hochbaum, and Williamson
[CGHW98]), the integrality gap of our third formulation is also at most 2.
We emphasize that the proof of the integrality gap of the LP-relaxation of all three of our ILPs rely on
the integrality gap upper bound of (FVS-LP: WD-and-cycle-cover) or (FVS-LP: SD). It would be interesting
to have a direct proof. In particular, it would be useful to design a primal rounding algorithm (for arbitrary
LP-optimum solutions or for extreme point LP-optimum solutions) that yields a 2-approximate solution.
Organization. We focus on PFDS in Section 3 and FVS in Section 4. In Section 3.1, we prove properties of
the orientation polyhedron and show Theorem 1. In Sections 3.2 and 3.3, we prove extreme point properties
of the weak density polyhedron and the orientation polyhedron and show Theorems 2 and 3 respectively. In
Section 4.1, we prove properties of the weak density polyhedron and show Theorem 4. In Section 4.2, we
give a polynomial-sized ILP formulation for FVS with integrality gap at most 2, thereby proving Theorem 5.
For the sake of completeness, we discuss two additional polynomial-sized ILP formulations for FVS with
integrality gap at most 2in Section 4.3.
2 Preliminaries
For a minimization IP min{cTx:Ax‚â§b, x‚ààZn
‚â•0}, theintegrality gap of its LP-relaxation min{cTx:Ax‚â§
b, x‚â•0}is the maximum ratio, over all non-negative cost functions, of the minimum cost of a feasible
solution to the IP and that of the LP, i.e., max c‚ààRnmin{cTx:Ax‚â§b, x‚ààZn
‚â•0}/min{cTx:Ax‚â§b, x‚â•0}.
For a graph G= (V, E), we will use Œ¥(A, B)to denote the set of edges with exactly one end-vertex in Aand
exactly one end-vertex in B. We summarize the results of Lin, Feng, Fu, and Wang [LFFW19] in a manner
that will be useful for our polyhedral study.
10Theorem 6. (PFDS-IP: WD) and (PFDS-IP: WD-and-2PT-cover) are ILP formulations for PFDS. Fur-
themore, the LP-relaxation (PFDS-LP: WD-and-2PT-cover) has integrality gap at most 2.
We emphasize that Lin, Feng, Fu, and Wang did not prove Theorem 6 directly, but their local ratio
based algorithm and standard techniques to convert local ratio based algorithms to LP-based primal-dual
algorithms (following the ideas in [CGHW98]) lead to the theorem.
3 Pseudoforest Deletion Set
In this section, we formally prove our main results for Pseudoforest Deletion Set. We prove Theorem 1 in
Section 3.1, Theorem 2 in Section 3.2, and Theorem 3 in Section 3.3.
3.1 Orientation and 2-Pseudotree Cover constraints
In this section, we restate and prove Theorem 1.
Theorem 1. For an input graph G= (V, E)with non-negative costs c:V‚ÜíR‚â•0,(PFDS-IP: orient) and
(PFDS-IP: orient-and-2PT-cover) are integer linear programming formulations for PFDS. Moreover, we have
the following properties:
(1)Qorient (G)‚äÜPWD(G)for every graph Gand there exist graphs Gfor which Qorient (G)‚ääPWD(G).
(2) The LP (PFDS-LP: orient-and-2PT-cover) is solvable in polynomial time and its integrality gap is at
most 2.
Proof.In order to show that (PFDS-IP: orient) and (PFDS-IP: orient-and-2PT-cover) are ILP formulations
for PFDS, it suffices to show that the ILP (PFDS-IP: orient) is a formulation for PFDS. This is because
2-pseudotree cover constraints are valid for PFDS.
For a subgraph ÀúG= (ÀúV ,ÀúE)of the graph G, we let dÀúG(u):=|Œ¥(u)‚à©ÀúE|denote the degree of the vertex u
in the subgraph ÀúG. We now define an intermediate polyhedron PWD-Subgraphs (G).
PWD-Subgraphs (G):=Ô£±
Ô£≤
Ô£≥x‚ààRV
‚â•0:X
u‚ààÀúV(dÀúG(u)‚àí1)xu‚â• |ÀúE| ‚àí |ÀúV| ‚àÄsubgraphs ÀúG= (ÀúV ,ÀúE)ofG.Ô£º
Ô£Ω
Ô£æ.(5)
We note that PWD-Subgraphs (G)‚äÜPWD(G). We will use the following claim to show that the ILP (PFDS-IP:
orient) formulates PFDS and also to conclude that Qorient(G)‚äÜPWD(G).
Claim 1. Qorient (G)‚äÜPWD-Subgraphs (G).
Proof.Letx‚ààQorient(G). Then, there exists a vector ysuch that (x, y)‚ààPorient(G). Let ÀúG= (ÀúV ,ÀúE)be an
arbitrary subgraph of G. We have the following:
|ÀúE| ‚â§X
e=vw‚ààÀúE(xv+xw+ye,v+ye,w)
=X
v‚ààÀúV(dÀúG(v)‚àí1)xv+X
v‚ààÀúVÔ£´
Ô£¨Ô£≠xv+X
e‚ààŒ¥ÀúG(v)ye,vÔ£∂
Ô£∑Ô£∏
‚â§X
v‚ààÀúV(dÀúG(v)‚àí1)xv+|ÀúV|,
where the inequalities are because the vector (x, y)‚ààPorient. Rearranging the above inequality gives the
constraint for ÀúGgiven in PWD-Subgraphs (G). Hence, x‚ààPWD-Subgraphs (G).
11We remark that Claim 1 can be strengthened to show that Qorient(G) =PWD-Subgraphs (G), but we will
not need this stronger version for the purposes of this theorem. We now show that the ILP (PFDS-IP:
orient) formulates PFDS. Let S‚äÜVbe a pseudoforest deletion set, i.e., the subgraph F:=G‚àíSis a
pseudoforest. Let x:=œáS‚àà {0,1}Vdenote the indicator vector of the set S. Select an arbitrary orientation
of the pseudoforest Fsuch that the maximum indegree of every vertex is at most 1, and let ye,v:= 1for the
edge e=vwifeis an edge of Fthat is oriented towards v, and ye,v:= 0otherwise. Then, (x, y)‚ààPorient(G).
Next, suppose x‚ààQorient(G)‚à©ZV. Then, we have that x‚àà {0,1}V. By Claim 1, x‚ààPWD-Subgraphs (G)‚äÜ
PWD(G). Since (PFDS-IP: WD) is an ILP formulation for PFDS by Theorem 6, it follows that the set
S:={u‚ààV:xu= 1}is a pseudoforest deletion set for the graph G. This concludes the proof that the ILP
(PFDS-IP: orient) formulates PFDS.
We now prove the two additional conclusions of the theorem statement.
(1) By Claim 1, we have that Qorient(G)‚äÜPWD-Subgraphs (G)‚äÜPWD(G). We now show that there is a
graph Gsuch that PWD-Subgraphs (G)‚ääPWD(G). In particular, we consider the graph K5= (V, E)
where V={v1, v2, . . . , v 5}andE= V
2
. Let x= (2/3,2/3,1/3,0,0). We note that x‚ààPWD(K5).
We now show that xÃ∏‚ààPWD-Subgraphs (K5). Consider the subgraph ÀúG= (ÀúV ,ÀúE)obtained by removing
the edge {v1, v2}from the graph G, i.e. ÀúV=Vand ÀúE= V
2
‚àí {v1, v2}. Then, we have the following:
X
u‚ààÀúV(dÀúG(u)‚àí1)xu= 2x1+ 2x2+ 3x3+ 3x4+ 3x5=11
3<4 =|ÀúE| ‚àí |ÀúV|.
In particular, the vector xdoes not satisfy the constraint of PWD-Subgraphs (K5)defined by the subgraph
ÀúG. Thus, we have that Qorient(K5)‚äÜPWD-Subgraphs (K5)‚äÇPWD(K5).
(2) By Theorem 6, the ILP (PFDS-IP: WD-and-2PT-cover) is a valid formulation of PFDS and its LP-
relaxation (PFDS-LP: WD-and-2PT-cover) has integrality gap at most 2. We have already shown
that the ILP (PFDS-IP: orient-and-2PT-cover) is a valid formulation of PFDS and that Qorient(G)‚äÜ
PWD(G). Consequently, the integrality gap of (PFDS-LP: orient-and-2PT-cover) is at most 2. Finally,
we note that (PFDS-LP: WD-and-2PT-cover) can be solved in polynomial time because Qorient(G)is
the projection of Porient(G)which admits a polynomial sized description, and because 2-pseudotree-
cover constraints admit a polynomial time separation oracle by Lemma 18 (in Appendix A.1). The
polynomial time separation oracle for 2-pseudotree-cover constraints is based on the fact that node-
weighted Steiner tree for constant number of terminals is solvable in polynomial time. We present its
proof in a separate subsection for clarity.
3.2 Extreme point property of the Weak Density polyhedron
In this section, we prove Theorem 2. We restate it below.
Theorem 2. LetG= (V, E)be a graph that is not a pseudoforest. For every extreme point xof the
polyhedron PWD(G), there exists a vertex u‚ààVsuch that xu‚â•1/3.
For a fixed x‚ààRV, we define the function fx:2V‚ÜíRas
fx(S):=|E[S]| ‚àí |S| ‚àíX
u‚ààS(dS(u)‚àí1)xu‚àÄS‚äÜV.
Using this function, we can express the weak density polyhedron as
PWD(G) =n
x‚ààRV
‚â•0:fx(S)‚â§0‚àÄS‚äÜVo
.
12In Section 3.2.1, we recall properties of supermodular functions and chain set families. In Section 3.2.2,
we show that if xu‚â§1/2for all u‚ààV, then the function fx:2V‚ÜíRis supermodular. This conditional
supermodularity property allows us to uncross the tight constraints that form a basis of an extreme point
xfor which xu‚â§1/2for all u‚ààV. We prove properties about the tight constraints in Section 3.2.3 and
show the existence of a chain basis in Section 3.2.4. Using the chain basis structure and its properties, we
complete the proof of Theorem 2 in Section 3.2.5.
Notation. Letb(S):=|E[S]| ‚àí |S|for all S‚äÜV. For vertex u‚ààV, letœáu‚àà {0,1}Vdenote the indicator
vector of u. For a subset S‚äÜV, let row(S)denote the row of the constraint matrix of PWD(G)corresponding
to the set S, i.e,
row(S)u=(
dS(u)‚àí1ifu‚ààS
0 o.w.‚àÄu‚ààV.
ForJ‚äÜ2V, let Rows (J) ={row(S):S‚ààJ}. When the context is clear, we also use Rows (J)to denote the
submatrix of the weak density polyhedron constraint matrix given by the set Rows (J). We let span(Rows (J))
denote the spanof the set of vectors Rows (J), i.e. the smallest linear subspace that contains the set Rows (J).
We let columns (J)denote the set of columns of the submatrix Rows (J). For matrix M, we denote rank(M)
as therankof the matrix. We note that rank(Rows (J)) = rank(columns (J)). For x‚ààRV, we will use
gx(S):=P
u‚ààS(dS(u)‚àí1)xufor all S‚äÜV,Tx:={S‚äÜV:fx(S) = 0}be the tight sets for x, and
Z:={u‚ààV:xu= 0}. Let x‚ààP(G)be an extreme point of the weak density polyhedron. For J‚äÜ Tx, we
say that the set Rows (J)is abasisforxifspan(Rows (J)) = span(Rows (2V)).
3.2.1 Background on supermodular functions and set families
Here, we recall supermodular functions, chain set families, and some of their properties that will be useful
while proving the extreme point property of the weak density polyhedron. A set function f:2V‚ÜíRis said
to besupermodular iff(A) +f(B)‚â§f(A‚à©B) +f(A‚à™B)for all subsets A, B‚äÜV. We refer the reader
to [Fuj05] for background on supermodular set functions and their properties. We will rely on the following
property:
Proposition 1. LetG= (V, E)be an undirected graph with non-negative edge weights w:E‚ÜíR‚â•0. Then,
the function f:2V‚ÜíR‚â•0defined by f(S):=P
e‚ààE[S]wefor all S‚äÜVis supermodular.
Two sets AandBare said to crossif they have a non-empty intersection and neither set is contained
in the other, i.e. A‚à©B, A‚àíB, B‚àíAÃ∏=‚àÖ. For a ground set V, the set C={A1, A2, . . . A ‚Ñì} ‚äÜ2Vis said
to be achain family if its elements can be ordered such that A1‚äÜA2‚äÜ. . .‚äÜA‚Ñì. We need the following
proposition on chain families. This is well-known but we give a proof for the sake of completeness.
Proposition 2. LetCbe a chain family and Abe a subset that crosses some set B‚àà C. Then, the number
of sets in Ccrossed by A‚à™BandA‚à©Bis strictly less than the number of sets in Ccrossed by A.
Proof.Our strategy will be to pick an arbitrary set in Cthat crosses the set A‚à™B(resp. A‚à©B) and show
that this picked set also crosses the set A. The claim then follows since the set Bcrosses the set Abut not
the set A‚à™B(resp A‚à©B).
LetP‚àà Cbe an arbitrary set that crosses the set A‚à™B. Since both B, P‚àà C, it must be that either
P‚äÇBorB‚äÇP. First, we consider the case where P‚äÇB. Then P‚äÇA‚à™Band thus does not cross the set
A‚à™Bas it is contained in it. This contradicts the choice of P. Next, we consider the case where B‚äÇP. If
A‚äÜPthen A‚à™B‚äÜP, contradicting choice of Pcrossing A‚à™B. Furthermore, if P‚äÜA, then B‚äÇP‚äÜA,
contradicting the hypothesis that the set Bcrosses the set A. Finally, A‚à©PÃ∏=‚àÖasA‚à©BÃ∏= 0andB‚äÇP.
Thus the set Pcrosses the set A.
LetP‚àà Cbe an arbitrary set that crosses the set A‚à©B. Since the sets P, B‚àà Care part of a chain
family, it must be that either P‚äÜBorB‚äÜP. IfB‚äÜP, then A‚à©B‚äÜP, contradicting the choice of set
P. Thus P‚äÜB. IfP‚äÜA, then P‚äÜA‚à©B, contradicting the choice of set P. Moreover, if A‚äÜP, then we
have that A‚äÜB, contradicting that AandBcross. Thus the set Pcrosses the set A.
133.2.2 Conditional supermodularity of Weak Density constraints
We now show that the function fxis supermodular if xu<1
2‚àÄu‚ààV.
Lemma 1. Letx‚ààRV. Ifxu<1
2‚àÄu‚ààV, then the function fxis supermodular.
Proof.LetS‚äÜV. We have
fx(S) =|E[S]| ‚àí |S| ‚àíX
u‚ààS(dS(u)‚àí1)xu
=|E[S]| ‚àíX
u‚ààSdS(u)xu‚àí |S|+X
u‚ààSxu
=|E[S]| ‚àíX
u‚ààSX
v‚ààŒ¥(u)xu‚àíX
u‚ààS(1‚àíxu)
=|E[S]| ‚àíX
uv‚ààE[S](xu+xv)‚àíX
u‚ààS(1‚àíxu)
=X
uv‚ààE[S] 
1‚àí(xu+xv)
‚àíX
u‚ààS(1‚àíxu).
Thus, the function fxcan be expressed as fx=px‚àíqxfor functions px, qx:2V‚ÜíRdefined by px(S):=P
uv‚ààE[S](1‚àí(xu+xv))andqx(S):=P
u‚ààS(1‚àíxu). Since xu<1/2for all u‚ààV, we have that px(S)‚â•0
andqx(S)‚â•0for all S‚äÜV.
Now, let H= (V, E)be a graph with edge weights w:E‚ÜíRdefined by w(uv):= 1‚àí(xu+xv). We note
that the edge weights are non-negative since xa<1/2for all a‚ààV. By definition, px(S) =P
uv‚ààE[S]w(uv)
for all S‚äÜV. By Proposition 1, the function pxis supermodular. Moreover, the function qxis modular.
Thus, the function fxis the sum of a supermodular function and a modular function. Consequently, fxis a
supermodular function.
3.2.3 Conditional properties of tight sets
Next, we prove certain properties of tight sets that help us to prove the existence of a well-structured basis
for the extreme point xunder the condition that xu<1/2for every u‚ààV.
Lemma 2 (Conditional Uncrossing Properties) .Letxbe an extreme point of PWD(G)such that xu<1
2for
allu‚ààVand the family of tight sets for xbeTx:={S‚äÜV:fx(S) = 0}. Let A, B‚àà T. Then,
1.A‚à©BÃ∏=‚àÖ, i.e., tight sets overlap,
2.A‚à©B, A‚à™B‚àà Tx, i.e. tight sets form a lattice family,
3.Œ¥(A‚àíB, B‚àíA) =‚àÖ, i.e. tight sets admit no crossing edges, and
4.row(A) +row(B) =row(A‚à©B) +row(A‚à™B).
Proof.We recall that for a set S‚äÜV, we denote b(S):=|E[S]| ‚àí|S|. Moreover, for the point x‚ààPWD(G),
we denote gx(S):=P
u‚ààS(dS(u)‚àí1)xu. We prove each property separately below.
141. By way of contradiction, assume that A‚à©B=‚àÖ. We have that
b(A‚à™B)‚â§gx(A‚à™B)
=gx(A) +gx(B) +X
ab‚ààŒ¥(A,B)(xa+xb)
=|E[A]‚àí |A|+|E[B]‚àí |B|+X
ab‚ààŒ¥(A,B)(xa+xb)
=|E[A‚à™B]| ‚àí |A‚à™B| ‚àí |Œ¥(A, B)|+X
ab‚ààŒ¥(A,B)(xa+xb)
=b(A‚à™B)‚àí |Œ¥(A, B)|+X
ab‚ààŒ¥(A,B)(xa+xb)
< b(A‚à™B)‚àí |Œ¥(A, B)|+|Œ¥(A, B)|,
a contradiction. Here, the first inequality is by the weak density constraint for the set A‚à™B. The
first and third equalities are by the hypothesis that A‚à©B=‚àÖ. The final inequality is because xu<1
2
‚àÄu‚ààV.
2. We have the following:
0 =fx(A) +fx(B)‚â§fx(A‚à™B) +fx(A‚à©B)‚â§0.
Here, the first equality is due to the sets A, B‚àà Tx, and thus fx(A) =fx(B) = 0. The first inequality
follows from supermodularity of the function fxshown in Lemma 1. The final inequality follows from
weak density constraints for the sets A‚à™BandA‚à©B. Thus, all inequalities are equalities, and we
have that fx(A‚à©B) =fx(A‚à™B) = 0using weak density constraints on the respective sets.
3. By way of contradiction, assume that Œ¥(A‚àíB, B‚àíA)Ã∏=‚àÖ. Since A, B‚àà Tx, we have that A‚à©B,
A‚à™B‚àà Txby the previously shown property that tight sets uncross. Thus, fx(A) = fx(B) =
fx(A‚à©B) =fx(A‚à™B) = 0. We have that
0 =fx(A) +fx(B)‚àífx(A‚à©B)‚àífx(A‚à™B) =X
uv‚ààŒ¥(A‚àíB,B‚àíA) 
1‚àí(xu+xv)
>0,
a contradiction. Here, the second equality is by definition of fx, and the final inequality is because
xu<1
2‚àÄu‚ààV.
4. Let u‚ààVbe an arbitrary vertex. It suffices to show that (dA(u)‚àí1) + ( dB(u)‚àí1) = ( dA‚à™B(u)‚àí1) +
(dA‚à©B(u)‚àí1). We consider four cases:
First, we consider the case u‚ààA‚àíB. Then, we have that (1) dA(u) =dA‚àíB(u) +Œ¥(u, A‚à©B),
(2)dB(u) = 0(3)dA‚à©B(u) = 0and (4) dA‚à™B(u) =dA‚àíB(u) +Œ¥(u, A‚à©B). Here, (4) follows from
Œ¥(u, B‚àíA) =‚àÖby the previous part. Thus, the claimed equality follows. We note that the argument
for the case where u‚ààB‚àíAis similar to this case.
Next, we consider the case u‚ààA‚à©B. Then, we have that (1) dA(u) =dA‚à©B(u) +Œ¥(u, A‚àíB), (2)
dB(u) =dA‚à©B(u) +Œ¥(u, B‚àíA), and (3) dA‚à™B(u) =dA‚à©B(u) +Œ¥(u, A‚àíB) +Œ¥(u, B‚àíA). Thus, the
claimed equality follows.
Finally, we consider the case u‚ààV‚àí(A‚à™B). Then, we have that dA(u) =dB(u) =dA‚à©B(u) =
dA‚à™B(u) = 0and the claimed equality follows.
Next, we show that every tight set is of size at least 2and the graph induced over the tight set is
connected.
15Lemma 3. Letxbe an extreme point of PWD(G)such that xu<1
2for all u‚ààVand the family of tight
sets for xbeTx:={S‚äÜV:fx(S) = 0}. For every A‚àà Tx, we have that |A| ‚â•2and the graph G[A]is
connected.
Proof.LetA‚àà Tx. Suppose that |A|= 1. Let A={u}. Then, A‚àà Tximplies that fx({u}) = 0.
Equivalently, ‚àíxu=‚àí1and hence, xu= 1, a contradiction. Hence, |A| ‚â•2. Next, we show that G[A]is
connected. By way of contradiction, let A=A1‚äéA2such that G[A1], G[A2]are disconnected components
ofG[A]. Then, we have the following:
gx(A1) +gx(A2) =gx(A)
=b(A)
=|E[A]| ‚àí |A|
=|E[A1]| ‚àí |A1|+|E[A2]| ‚àí |A2|
=b(A1) +b(A2)
‚â§gx(A1) +gx(A2).
Here, the first and fourth equalities are because A1‚à©A2=‚àÖ. The second equality holds because A‚àà Tx.
The final inequality holds by the weak density constraints on A1andA2.
The chain of inequalities implies that the final inequality is an equality. By weak density constraints for
A1andA2, we also have that b(A1)‚â§gx(A1)andb(A2)‚â§gx(A2)and consequently, A1andA2are tight
sets, i.e., A1, A2‚àà Tx. However, A1‚à©A2=‚àÖby assumption, contradicting Lemma 2 that tight sets must
overlap.
3.2.4 Conditional basis structure for extreme points
In this section, we use the conditional structural properties of tight sets proved in Section 3.2.3 to show that
every extreme point xfor the weak density polyhedron for which xu<1/2for all u‚ààVhas a well-structured
basis. We recall that a 2-pseudotree is a connected graph that has one more edge than the number of vertices.
The following lemma is the main result of this section.
Lemma 4. Letxbe an extreme point of PWD(G)such that xu<1
2‚àÄu‚ààV, the family of tight sets for xbe
Tx:={S‚äÜV:fx(S) = 0}, and let Z:={u‚ààV:xu= 0}. Then, there exists a family C ‚äÜ T xsuch that
(1) the family Cis a chain family,
(2) the set of vectors Rows (C ‚à™ Z )is linearly independent,
(3)span(Rows (C ‚à™ Z )) = span(Rows (Tx‚à™ Z)),
(4) For each S‚àà C, the subgraph G[S]contains a 2-psuedotree,
(5) For each S‚àà Cand each vertex u‚ààS, we have that dS(u)‚â•2, and
(6) For every A, B‚àà Csuch that A‚äÇB, there exists a vertex v‚ààB‚àíAsuch that xv>0.
Proof.We first show that there exists a family satisfying properties (1)-(4). Let C(1)‚äÜ Txbe an inclusion-
wise maximal chain family. Claim 2 below shows that span(Rows (C(1))) = span(Rows (Tx)).
Claim 2. span(Rows (C(1))) = span(Rows (Tx)).
Proof.By way of contradiction assume false. Let A‚àà Txsuch that row(A)Ã∏‚ààspan(Rows (C(1)))andAcrosses
the fewest number of sets in C(1). Consider a set B‚àà C(1)such that Bcrosses A. We note that such a set B
exists since otherwise the family C(1)‚à™{A}contradicts the inclusion-wsie maximality of C(1). Recall that by
Lemma 2, the sets A‚à©B, A‚à™B‚àà Txare also tight. We note that by Proposition 2, the sets A‚à©BandA‚à™B
cross fewer sets in C(1)than the number of sets in C(1)crossed by A. We consider two cases based on whether
16row(A‚à™B),row(A‚à©B)‚ààspan(Rows (C(1))). First, consider the case where row(A‚à™B)Ã∏‚ààspan(Rows (C(1)))
without loss of generality. Since A‚à™Bcrosses fewer sets in C, the set A‚à™Bcontradicts the choice of A.
Next, consider the case where row(A‚à™B),row(A‚à©B)‚ààspan(Rows (C(1))). By Lemma 2, we have that
row(A) +row(B) =row(A‚à™B) +row(A‚à©B). Thus row(A)‚ààspan(Rows (B, A‚à©B, A‚à™B)), contradicting
choice of A.
LetC(2)‚äÜ C(1)be an inclusion-wise maximal family such that the set Rows (C(2)‚à™ Z)is linearly inde-
pendent. We note that span(Rows (C(2)‚à™ Z)) = span(Rows (C(1)‚à™ Z)) = span(Rows (Tx‚à™ Z)), where the first
equality is because the family C(2)is inclusion-wise maximal. In particular, we have that the family C(2)
satisfies properties (1)-(3). Claim 3 below shows that the family C(2)also satisfies property (4).
Claim 3. For every S‚àà C(2), the subgraph G[S]contains a 2-pseudotree.
Proof.By way of contradiction, let S‚àà C(2)such that G[S]does not contain a 2-pseudotree. Let Si:=
{u‚ààS:dS(u) =i}andS‚â•i:={u‚ààS:dS(u)‚â•i}. We note that b(S)‚â§0since G[S]does not contain a
2-pseudotree. Hence, we have that
0‚â•b(S) =g(S)
=X
u‚ààS(dS(u)‚àí1)xu
=X
u‚ààS0(dS(u)‚àí1)xu+X
u‚ààS1(dS(u)‚àí1)xu+X
u‚ààS‚â•2(dS(u)‚àí1)xu
‚â•X
u‚ààS‚â•2xu
‚â•0
Here, the first equality holds because S‚àà Tx. The final inequality holds since |S| ‚â•2andG[S]has no
isolated vertices by Lemma 3, and by the non-negativity constraints on vertex variables of PWD(G).
Thus, all inequalities above are equalities, and consequently, we have thatP
u‚ààS‚â•2xu= 0This, coupled
with the non-negativity constraints on vertex variables, implies that xu= 0for each u‚ààS‚â•2. We also
note that row(S)u= 0for each u‚ààS1‚à™S0asS0=‚àÖanddS(u)‚àí1 = 0foru‚ààS1. Thus, we have that
row(S)‚ààspan(Rows (Z)), contradicting linear independence of Rows (C(2)‚à™ Z).
We now show the existence of a family satisfying properties (1)-(5). Let C ‚äÜ T xbe a family satisfying
properties (1)-(4) which minimizesP
S‚ààC|S|. We will show that this Calso satisfies property (5). By way
of contradiction, suppose there exists S‚àà Cwith u‚ààSsuch that dS(u)<2. Since S‚àà Tx, we have that
|S| ‚â•2anddS(u)‚â•1since tight sets cannot have isolated vertices by Lemma 3. Thus, dS(u) = 1. Let
uv‚ààE[S]be the unique edge incident to uinG[S]. We note that E[S]should contain at least one more
edge apart from the edge uvas otherwise row(S) = 0. Furthermore, by Lemma 3, the subgraph G[S]must
be connected. Thus, dS(v)‚â•2and we have the following:
gx(S‚àíu) =gx(S)‚àíxv
=b(S)‚àíxv
=|E[S]| ‚àí |S| ‚àíxv
= (|E[S‚àíu]|+ 1)‚àí(|S‚àíu|+ 1)‚àíxv
=b(S‚àíu)‚àíxv
‚â§gx(S‚àíu)‚àíxv
The above chain of inequalities implies that xv‚â§0. By the non-negativity constraints on xv, we have that
xv= 0. Thus, the final inequality in the above chain is in fact an equality, and hence, the set S‚àíuis inTx.
We now make three observations:
171.row(S)‚àíœáv=row(S‚àíu)(we note that the LHS subtracts the indicator vector of the vertex vwhile
the RHS considers the row vector of the set S‚àíu, where uis the vertex with dS(u) = 1),
2. Every X‚àà Csuch that X‚äÇSeither has dX(u) = 1orXdoes not contain u, and
3. For every X‚äÇSsuch that X‚àà Candu, v‚ààX,row(X)‚àíœáv=row(X‚àíu).
Here, the first observation is due to dS(u) = 1and thus row(S)u= 0. The second observation follows because
of monotonicity of the induced-degree function and the fact that tight sets cannot have isolated vertices by
Lemma 3. The third observation follows by writing down the corresponding chain of inequalities as above
for each such set X. Then, by the three observations, we can remove the vertex ufrom every set in Cthat
contains uresulting in a set family C‚Ä≤Ã∏=Cthat still satisfies properties (1)-(4). However, we have thatP
S‚ààC‚Ä≤|S|<P
S‚ààC|S|, contradicting our choice of family C.
Finally, we show that Calso satisfies property (6). By way of contradiction, assume that there exists
A, B‚àà Csuch that A‚äÇBandxu= 0for each u‚ààB‚àíA. We first show a lower bound on |Œ¥(A, B‚àíA)|.
Claim 4.|Œ¥(A,B‚àíA)|
2‚â• ‚àíb(B‚àíA).
Proof.First, we argue that the subgraph G[B‚àíA]is a forest. By way of contradiction, suppose that the
subgraph G[B‚àíA]contains a cycle. Let Cbe a minimal cycle in the subgraph G[B‚àíA]. Then, gx(C) = 0
asxu= 0for each u‚ààB‚àíAby our hypothesis. Furthermore, b(C) = 0asCis a cycle. Thus, C‚àà Txis a
tight set. However, since C‚äÜB‚àíA, we have that C‚à©A=‚àÖ. This contradicts the fact that all tight sets
must overlap (as shown by Lemma 2).
Letkbe the number of disconnected acyclic components of the forest G[B‚àíA]. Then, we have the
following two observations:
1.b(B‚àíA) =‚àíkand
2.|Œ¥(A, B‚àíA)| ‚â•2k.
We note that the claim follows from above observations. We justify these observations next.
The first observation follows from the fact that the subgraph G[B‚àíA]is a forest. In particular, we have
that
b(B‚àíA) =E[B‚àíA]‚àí |B‚àíA|= 
|B‚àíA| ‚àí1
‚àí(k‚àí1)
‚àí |B‚àíA|=‚àík.
We now prove the second observation. Each of the kacyclic components of the subgraph G[B‚àíA]is
either a singleton or has at least two leaves. If the component is a singleton vertex v, then we have that
|Œ¥(v, A)|=dB(v)‚â•2, where the inequality is because B‚àà Cand the family Csatisfies property (5).
Alternatively, suppose that the component has two leaves. Let vbe an arbitrary leaf of the component. We
note that the induced degree dB‚àíA(v) = 1. Thus, |Œ¥(v, A)|=dB(v)‚àídB‚àíA(v)‚â•1, where the inequality is
once again because B‚àà CandCsatisfies property (5).
18With the above lower bound on the cut size |Œ¥(A, B‚àíA)|, we get the required contradiction as follows:
gx(A) +|Œ¥(A, B‚àíA)|
2> gx(A) +X
uv‚ààŒ¥(A,B‚àíA)xu
=gx(A) +gx(B‚àíA) +X
uv‚ààŒ¥(A,B‚àíA)(xu+xv)
=gx(B)
=b(B)
=|E[B]| ‚àí |B|
= 
|E[A]|+|E[B‚àíA]|+|Œ¥(A, B‚àíA)|
‚àí 
|A|+|B‚àíA|
=b(A) +b(B‚àíA) +|Œ¥(A, B‚àíA)|
‚â•b(A) +|Œ¥(A, B‚àíA)|
2
=gx(A) +|Œ¥(A, B‚àíA)|
2.
The first inequality follows from xu<1/2‚àÄu‚ààV. The first equality follows from the assumption that
xu= 0for each u‚ààB‚àíA. The penultimate inequality follows from Claim 4, and the final equality holds
since the set A‚àà Txis a tight set.
3.2.5 Proof of Theorem 2
We now complete the proof of Theorem 2. In the next lemma, we use a stronger hypothesis that xu<1/3
for all u‚ààVto show that there exist at least two vertices u, vwhich take non-zero values. We emphasize
that the lemma does not rely on extreme point properties and holds for every feasible point xsatisfying the
hypothesis.
Lemma 5. LetG= (V, E)be a connected graph with minimum degree at least 2such that Gcontains a
2-pseudotree. Let x‚ààPWD(G)such that xu<1/3for all u‚ààV. Then, there exist distinct vertices u, v‚ààV
such that xu, xv>0.
Proof.By way of contradiction, let S‚äÜVbe a set such that the subgraph G[S]is connected, has minimum-
degree at least 2, contains a 2-pseudotree, but Scontains at most one vertex with a corresponding non-zero
vertex variable. We first consider the case where xv= 0for all v‚ààS. Observe that in this case, gx(S) = 0.
Consequently, we have that 0 =gx(S)‚â•b(S) =|E[S]| ‚àí |S| ‚â•1, a contradiction. Here, the first inequality
is by the weak-density constraint on S, and the second inequality is because G[S]is connected and contains
a2-pseudotree‚Äîthis can be observed by starting with the 2-pseudotree, and then charging the remaining
vertices to the edges which connect them to the 2-pseudotree.
We next consider the case where the set Scontains exactly one vertex v‚ààSsuch that xv>0. It follows
that
(dS(v)‚àí1)xv=gx(S)‚â•b(S) =|E[S]| ‚àí |S|.
Here the first equality is because xvis the only non-zero variable, while the first inequality is by the weak-
density constraint on S. We now consider two cases based on the degree of vinG[S].
First, consider the case where dS(v)‚â•4. Then we have the following:
xv=|E[S]| ‚àí |S|
dS(v)‚àí1‚â•|S| ‚àí1 +dS(v)
2‚àí |S|
dS(v)‚àí1=1
2
1‚àí1
dS(v)‚àí1
‚â•1
2¬∑2
3=1
3,
a contradiction to our hypothesis that xu<1/3‚àÄu‚ààV. Here, the first inequality is by hypothesis that
dS(u)‚â•2for each u‚ààS.
19Next, consider the case where dS(v)‚â§3. We recall (from the last sentence of the first paragraph) that
b(S) =|E[S]| ‚àí |S| ‚â•1since G[S]is connected and contains a 2-pseudotree. This gives us the required
contradiction as follows:
1‚â§b(S)‚â§gx(S) = (dS(v)‚àí1)xv‚â§2xv<1,
Here, the first inequality holds by the weak-density constraints on S, while the the final inequality holds due
to our hypothesis that xv<1
2.
We use Lemma 5 to conclude the following:
Corollary 5.1. LetG= (V, E)be a connected graph with minimum degree at least 2such that Gcontains a
2-pseudotree. Let xbe an extreme point of PWD(G)such that xu<1
3for all u‚ààV, the family of tight sets
forxbeTx:={S‚äÜV:fx(S) = 0}, and let Z:={u‚ààV:xu= 0}. LetC ‚äÜ T xbe a chain family satisfying
the properties in Lemma 4. Then, for every S‚àà C, there exist distinct vertices u, v‚ààSsuch that xu, xv>0.
Proof.By Lemma 4, we have that for every A‚àà C, the subgraph G[A]contains a 2-pseudotree. The claim
follows by Lemma 5.
We now restate and prove Theorem 2.
Theorem 2. LetG= (V, E)be a graph that is not a pseudoforest. For every extreme point xof the
polyhedron PWD(G), there exists a vertex u‚ààVsuch that xu‚â•1/3.
Proof.By way of contradiction, let xu<1
3for all u‚ààV. Let C={C1, C2, C3, . . . , C t}be the chain basis
guaranteed by Lemma 4. We order the sets in the basis so that C0‚äÜC1‚äÜC2‚äÜC3‚äÜ ¬∑¬∑¬∑ ‚äÜ Ct‚äÜCt+1,
where we denote C0:=‚àÖandCt+1:=Vfor notational convenience. Let NZ(Ci) ={v‚ààCi:xv>0}. Let
NZ:=NZ(V)be the set of vertices vwith xv>0. Then, NZcan be partitioned as follows: NZ(V) =
‚äéi‚àà[t+1]NC(Ci)\NC(Ci‚àí1). Hence, we have that
|C|<X
i‚àà[t]NZ(Ci)\NZ (Ci‚àí1)‚â§ |NZ| .
The first inequality holds due to the following two reasons: (i) |NZ(C1)\NZ (C0)|=|NZ(C1)| ‚â•2by
Corollary 5.1 and (ii) |NZ(Ci)\NZ (Ci‚àí1)| ‚â•1fori‚àà[2, t]by property (6) of Lemma 4. The second
inequality is because |NZ(Ct+1)\NZ (Ct)| ‚â•0and our observation that the set of differences of subsequent
basis sets in the chain ordering of Cpartitions the set of non-zero variables. Thus, we have that
|V|=|Z|+|C|<|Z|+|NZ| =|V|,
a contradiction. The first equality is because xis an extreme point and Cis such that Rows (C ‚à™Z )is linearly
independent and span(Rows (C ‚à™ Z )) = span(Rows (Tx‚à™ Z))by Lemma 4. The last equality is because the
number of variables is equal to the sum of the number of zero variables and the number of non-zero variables.
3.3 Extreme point property of the Orientation polyhedron
In this section, we prove Theorem 3. We restate it below.
Theorem 3. LetG= (V, E)be a graph that is not a pseudoforest. For every minimal extreme point (x, y)
of the polyhedron Porient (G), there exists a vertex u‚ààVsuch that xu‚â•1/3.
We recall that an extreme point of Porient(G)is said to be minimal if we cannot lower any single variable,
keeping the others unchanged, while maintaining feasibility. Before proceeding with the proof of Theorem 3,
we establish a few lemmas. In the lemmas below, we always assume that Gis not a pseudoforest, (¬Øx,¬Øy)
20is a minimal extreme point of Porient(G)and, aiming toward a contradiction, ¬Øx(v)<1/3for all vertices
v‚ààV(G).
For a graph G, we denote its edge-vertex incidence graph by H. Thus, V(H) =V(G)‚à™E(G)andE(H) =
{ev:e‚ààE(G), v‚ààV(G), e‚ààŒ¥(v)}. We note that |V(H)|=|V(G)|+|E(G)|and|E(H)|= 2|E(G)|.
Thesupport graph of¬Øyis the subgraph of the incidence graph Hwhose vertices are all the vertices of the
incidence graph Hand whose edges are those for which ¬Øye,v>0. Denoting this subgraph by H(¬Øy), we have
V(H(¬Øy)) =V(H) =V(G)‚à™E(G)andE(H(¬Øy)) ={ev‚ààE(H):¬Øye,v>0}.
Lemma 6. The support graph H(¬Øy)is a forest.
Proof.Towards a contradiction, suppose that there exists a cycle in H(¬Øy). Since H(¬Øy)is bipartite, the edge
set of this cycle can be partitioned into two matchings M1andM2. Given some Œµ >0, we define two points
¬Øy¬±‚ààRE(H)by letting ¬Øy¬±:= ¬Øy¬±ŒµœáM1‚àìŒµœáM2. IfŒµis sufficiently small, both (¬Øx,¬Øy+)and(¬Øx,¬Øy‚àí)are feasible
(that is, belong to the orientation polytope), which contradicts the fact that (¬Øx,¬Øy) =1
2(¬Øx,¬Øy+) +1
2(¬Øx,¬Øy‚àí)is
extreme.
Lemma 7. The number of (connected) components of H(¬Øy)is|V(G)|‚àí|E(G)|+m0, where m0denotes the
number of edges ev‚ààE(H)such that ¬Øye,v= 0.
Proof.Wehavethat |V(H(¬Øy))|=|V(G)|+|E(G)|and|E(H(¬Øy))|= 2|E(G)|‚àím0bydefinition. ByLemma6,
the number of components of H(¬Øy)is
|V(H(¬Øy))| ‚àí |E(H(¬Øy))|= (|V(G)|+|E(G)|)‚àí(2|E(G)| ‚àím0)
=|V(G)| ‚àí |E(G)|+m0.
Lemma 8. Every edge e=vw‚ààE(G), we have ¬Øye,v>0or¬Øye,w>0(or both) and ¬Øxv+ ¬Øxw+ ¬Øye,v+ ¬Øye,w= 1.
Proof.If both ¬Øye,v= 0and¬Øye,w= 0then, since (¬Øx,¬Øy)is feasible, we have ¬Øxv+ ¬Øxw‚â•1. Hence, ¬Øxv‚â•1/2or
¬Øxw‚â•1/2, a contradiction.
For the second part, toward a contradiction, suppose that ¬Øxv+ ¬Øxw+ ¬Øye,v+ ¬Øye,w>1. We may assume (by
symmetry) that ¬Øye,v>0. Then, slightly decreasing ¬Øye,vpreserves the feasibility of (¬Øx,¬Øy). This contradicts
the minimality of (¬Øx,¬Øy).
Now consider a component Tof the support graph H(¬Øy). By Lemma 6, the component Tis a tree. We
define the defectofTas the number vertices v‚ààV(T)‚à©V(G)such that ¬Øxv>0, plus the number of vertices
v‚ààV(T)‚à©V(G)such that ¬Øxv+P
e‚ààŒ¥(v)¬Øye,v<1. Below, we denote this quantity by defect( T).
We say that component Tistightif¬Øxv+P
e‚ààŒ¥(v)¬Øye,v= 1for all vertices v‚ààV(T)‚à©V(G). Tight
components play an important role in our analysis. We seek a tight component with extra properties,
dubbed ‚Äòinteresting‚Äô (Lemma 11 below states that such tight components exist).
Lemma 9. LetTbe a tight component of H(¬Øy). Suppose that some vertex v‚ààV(G)is a leaf of T. Then
Thas exactly two vertices and ¬Øxw= 0for the other vertex w‚ààV(G)that is incident to the unique edge of
GinT.
Proof.Since Tis tight, we have ¬Øxv+P
e‚ààŒ¥(v)¬Øye,v= 1. If ¬Øye,v= 0for all e‚ààŒ¥(v), we get ¬Øxv= 1, a
contradiction. Hence, Thas at least two vertices and we have ¬Øye,v= 0for all e‚ààŒ¥(v)except for precisely
one edge, say f=vw. From ¬Øxv+ ¬Øyf,v= 1and¬Øxv+ ¬Øxw+ ¬Øyf,v+ ¬Øyf,w(see Lemma 8), we get ¬Øxw+ ¬Øyf,w= 0,
which implies ¬Øxw= 0and¬Øyf,w= 0. The result follows.
We will call a tight component Twith exactly two vertices as a dyad. Let Tbe a dyad, say, with
V(T) ={v, f}where v‚ààV(G)andf=vw‚ààE(G). We note that xv+P
e‚ààŒ¥(v)ye,v= 1follows from the
tight constraints xv+xw+yf,v+yf,w= 1,xw= 0,ye,v= 0for all e‚ààŒ¥(v)\ {f}andyf,w= 0.
21Lemma 10. LetT1, ..., Tkdenote the components of H(¬Øy)and let ddenote the number of dyads. We have
kX
i=1defect( Ti)‚â§k‚àíd . (6)
Proof.The number of variables defining the orientation polytope is |V(G)|+|E(H)|=|V(G)|+2|E(G)|. By
Lemma 8, we can write the total number of constraints that are tight at (¬Øx,¬Øy)as|E(G)|+ntight+n0+m0,
where ntightdenotes the number of vertices v‚ààV(G)such that ¬Øxv+P
e‚ààŒ¥(v)¬Øye,v= 1,n0denotes the number
of vertices v‚ààV(G)such that ¬Øxv= 0, and m0(as above) denotes the number of edges ev‚ààE(H)such
that ¬Øye,v= 0. For every dyad T, the tight constraint ¬Øxv+P
e‚ààŒ¥(v)¬Øye,v= 1follows from the other tight
constraints, where vis the unique vertex of GinT. Since (¬Øx,¬Øy)is an extreme point, we have that the number
of variables is at most the number of tight constraints. Hence,
|V(G)|+ 2|E(G)| ‚â§ |E(G)|+ntight+n0+m0‚àíd.
Rewriting the above gives
|V(G)| ‚àíntight+|V(G)| ‚àín0‚â§ |V(G)| ‚àí |E(G)|+m0‚àíd .
Inequality (6) follows from this and Lemma 7.
We call a component TofH(¬Øy)interesting if it is tight, has defect at most 1and is not a dyad. By
Lemma 9, interesting components Thave the following properties: (i) Thas at least three vertices, (ii) every
leaf of Tis an edge of G, and (iii) ¬Øx(v) = 0for all vertices v‚ààV(T)‚à©V(G)except at most one.
Lemma 11. At least one component of H(¬Øy)is interesting.
Proof.First, we observe that if ¬Øxv= 0for all vertices v‚ààV(G), then Gis a pseudoforest, which contradicts
our hypothesis. Hence, there exists a vertex r‚ààV(G)with ¬Øxr>0.
LetT1, ..., Tkdenote the components of H(¬Øy). If some Tiwhich is not a dyad has defect( Ti) = 0, then
Tiis interesting. Hence, we may assume that defect( Ti)‚â•1for all components that are not dyads. By
Lemma 10, this implies defect( Ti) = 0for all dyads and defect( Ti) = 1for all the other components. Then,
the unique component containing ris interesting.
We now restate and prove Theorem 3.
Theorem 3. LetG= (V, E)be a graph that is not a pseudoforest. For every minimal extreme point (x, y)
of the polyhedron Porient (G), there exists a vertex u‚ààVsuch that xu‚â•1/3.
Proof.Aiming toward a contradiction, suppose that ¬Øxv<1/3for all vertices v‚ààV(G). Hence, each one of
the above lemmas apply. Let Tdenote an interesting component of H(¬Øy), which exists by Lemma 11. Since
it is interesting, Thas at least two vertices and each leaf of Tis an edge of G.
Letr‚ààV(T)‚à©V(G)denote any vertex such that ¬Øxv= 0for all vertices v‚ààV(T)‚à©V(G)distinct from
r. We call rtherootofT. For w‚ààV(G), letdT(w)denote the number of edges e‚ààV(T)‚à©E(G)that are
incident to w. (This is a slight abuse of notation since dT(w)is also defined for vertices w‚ààV(G)outside
ofT.) We let N(T)denote the set of vertices w‚ààV(G)such that dT(w)>0andw /‚ààV(T). Finally, we let
L(T)‚äÜE(G)denote the leaf set of T.
By Lemma 8 and since Tis an interesting component of the support graph H(¬Øy), we have
|V(T)‚à©E(G)| ‚àí |V(T)‚à©V(G)|
=X
e=vw‚ààV(T)‚à©E(G) 
¬Øxv+ ¬Øxw+ ¬Øye,v+ ¬Øye,w
‚àíX
v‚ààV(T)‚à©V(G)Ô£´
Ô£≠¬Øxv+X
e‚ààŒ¥(v)¬Øye,vÔ£∂
Ô£∏
= (dT(r)‚àí1)¬Øxr+X
w‚ààN(T)dT(w)¬Øxw.
22We notice that |V(T)‚à©E(G)| ‚àí |V(T)‚à©V(G)|=|L(T)| ‚àí1. Hence, from the equations above, we get
(dT(r)‚àí1)¬Øxr+X
w‚ààN(T)dT(w)¬Øxw=|L(T)| ‚àí1. (7)
LetM:= (dT(r)‚àí1) +P
w‚ààN(T)dT(w) = (dT(r)‚àí1) +|L(T)|denote the sum of the coefficients in the
left-hand side of (7). We note that dT(r)‚â§ |L(T)|. This implies M‚â§2|L(T)| ‚àí1. Thus,
1
MÔ£´
Ô£≠(dT(r)‚àí1)¬Øxr+X
w‚ààN(T)dT(w)¬ØxwÔ£∂
Ô£∏‚â•|L(T)| ‚àí1
2|L(T)| ‚àí1‚â•1
3.
This is a contradiction since the left-hand side is an average of values that are all strictly less than 1/3.
4 Feedback Vertex Set
In this section, we prove our main results for FVS. We prove Theorem 4 in Section 4.1 and Theorem 5 in
Section 4.2. We discuss two additional polynomial-sized ILP formulations for FVS with integrality gap at
most 2in Section 4.3.
4.1 Weak Density and Cycle Cover constraints
In this section, we restate and prove Theorem 4.
Theorem4. For aninput graph G= (V, E)with non-negative costs c:V‚ÜíR‚â•0,(FVS-IP: WD-and-cycle-cover)
isan integerlinear programming formulationfor FVS. Moreover, theintegralitygap of (FVS-LP: WD-and-cycle-cover)
is at most 2.
LetG= (V, E)be a graph with non-negative vertex costs c:V‚ÜíR‚â•0. By definition, the ILP
min{P
u‚ààVcuxu:x‚ààPcycle-cover (G)‚à©ZV}formulates FVS. We note that weak density constraints are
valid for FVS. Consequently, (FVS-IP: WD-and-cycle-cover) is an ILP formulation for FVS. The rest of the
section is devoted to proving the integrality gap bound mentioned in Theorem 4.
Lemma 12. The integrality gap of the LP (FVS-LP: WD-and-cycle-cover) is at most 2.
LetCbe the set of cycles in the input graph G. Let b(S):=|E[S]| ‚àí |S|for all S‚äÜV. We rewrite
(FVS-LP: WD-and-cycle-cover) and its dual in Figure 4.
Primal:
minX
u‚ààVcuxu
s.t.X
u‚ààS(dS(u)‚àí1)xu‚â•b(S),‚àÄS‚äÜV
X
u‚ààCxu‚â•1 ‚àÄC‚àà C
xu‚â•0 ‚àÄu‚ààVDual:
maxX
S‚äÜVb(S)yS+X
C‚ààCzC
s.t.X
S‚äÜV:u‚ààS(dS(u)‚àí1)yS+X
C‚ààC :u‚ààCzC‚â§cu‚àÄu‚ààV
yS‚â•0 ‚àÄS‚äÜV
zC‚â•0 ‚àÄC‚àà C
Figure 4: WD-CC Primal and Dual LPs for FVS
We will need the definition of semi-disjoint cycles from [CGHW98]: A cycle Cin graph G is semi-disjoint
(with respect to the graph G) if there is at most one vertex in Cof degree strictly larger than 2. We call such
a vertex as the pivotvertex of the semi-disjoint cycle. We note that such cycles can be viewed as ‚Äúhanging
off‚Äù the graph via their pivots which are cut vertices.
234.1.1 Minimal FVS and Weak Density constraints
In this section, we show an important property of inclusion-wise minimal feedback vertex sets. Let Fbe
a feedback vertex set for a graph G. Awitness cycle for a vertex f‚ààFis a cycle Cof the graph Gsuch
that F‚à©C={f}i.e.fis the only vertex that witnesses the cycle C. We note that every vertex of a
minimal FVS must have a witness cycle. In Lemma 13, we show that for a graph with non-trivial degree and
no semi-disjoint cycles, every minimal feedback vertex set is essentially a 2-approximation to the optimal
feedback vertex set with respect to an appropriate cost function. We note that our proof of the lemma
appears implicitly in [CGHW98]. However, we include it here for completeness.
Lemma 13. LetGbe a graph with minimum-degree at least 2and containing no semi-disjoint cycles. Then,
for every minimal feedback vertex set F, we have that
X
v‚ààF(d(v)‚àí1)‚â§2b(V).
Proof.We first show a convenient sufficient condition that proves the claimed upper bound. We subse-
quently prove this sufficient condition by an edge-counting argument. Let tdenote the number of connected
components in G‚àíF.
Claim 5. If|Œ¥(F, V‚àíF)| ‚â• |F|+ 2t, thenP
v‚ààF(d(v)‚àí1)‚â§2b(V).
Proof.We have the following:
X
v‚ààF(d(v)‚àí1) = 2 |E| ‚àí |F| ‚àíX
v‚ààV‚àíFd(v)
= 2|E| ‚àí |F| ‚àí 
|Œ¥(F, V‚àíF)|+ 2|E[V‚àíF]|
= 2|E| ‚àí |F| ‚àí 
|Œ¥(F, V‚àíF)|+ 2(|V| ‚àí |F| ‚àít)
‚â§2|E| ‚àí |F| ‚àí 
2|V| ‚àí |F|
= 2b(V).
Here, the first equality holds because the sum of all vertex degrees is 2|E|, the third equality is because
G‚àíFis acyclic, and the inequality is due to the hypothesis that |Œ¥(F, V‚àíF)| ‚â• |F|+ 2t.
We now show that a minimal feedback vertex set Fhas at least |F|+ 2tedges crossing it. For this, we
consider the auxiliary bipartite graph H= (K‚à™F, E H)as follows: Each vertex k‚ààKcorresponds to a
connected component CkinG‚àíF. For vertices k‚ààK, f‚ààF, the graph Hcontains the edge (k, f)if there
exists a vertex v‚ààCksuch that the edge (v, f)‚ààEexists in the original graph G. Furthermore, we define
the weight of an edge (k, f)‚ààEHaswH(k, f):=|Œ¥G(Ck, f)|. We note that |K|=t.
Since Fis an inclusionwise minimal feedback vertex set, every vertex f‚ààFhas a witness cycle. We note
that there are no edges between the components of G‚àíF. Thus, every witness cycle is completely contained
in some component Ckfor some k‚ààK. In particular, this implies that in the graph H, every vertex f‚ààF
has an edge of weight at least 2incident on it. For each f‚ààFpick an arbitrary such edge ef‚ààŒ¥H(f)of
weight at least 2and call it f‚Äôsprimary edge. Then, reducing the weight of all primary edges by 1still leaves
all edges in EHwith positive weight, but counts |F|edges in the cut |Œ¥(F, V‚àíF)|in the original graph G.
LetH‚Ä≤denote the residual graph after this weight reduction. By Claim 5, it now suffices to show that the
weight of all edges in H‚Ä≤is at least 2|K|.
For this, we claim that each vertex k‚ààKmust have a cumulative edge-weight of at least 2incident on
it in the residual graph H‚Ä≤. By way of contradiction, suppose that there exists a vertex k‚ààKwith total
incident edge-weight at most 1. We consider two cases. First, suppose that khas no incident edges. We recall
that we reduced the weight of only primary edges in our weight-reduction step. Thus, if there was a primary
edge incident to k, then kwould have a weight 1edge incident on it in the residual graph, contradicting the
case assumption. Thus, there are no edges incident to CkinG, i.e. Ckis a disconnected acyclic component
24ofG. In particular, Ckcontains a leaf vertex, contradicting the hypothesis that the minimum degree of Gis
at least 2.
Next, consider the case where khas a total weight of 1incident on it in the residual graph H‚Ä≤. Let f‚ààF
be its unique neighbor in the residual graph. Then, fmust also be its unique neighbor in H. We note that if
Ckhas only one edge to finG, then Ckmust contain a leaf node in Gas it is acyclic, a contradiction. Thus,
Ckdoes not contain any leaf nodes, is acyclic, and has exactly 2edges to finG. In particular, Ck‚à™ {f}is
a semi-disjoint cycle in G, contradicting the hypothesis that Ghas no semi-disjoint cycles.
4.1.2 Proof of integrality gap
In this section, we prove Lemma 12, i.e., we show that the integrality gap of the LP-relaxation for FVS given
in Figure 4 is at most 2. We prove this by constructing a dual feasible solution (y,z)and a FVS Fsuch that
the cost of Fis at most twice the dual objective value of (y,z). This implies that the integrality gap of the
LP is at most 2since the LP is a relaxation for FVS. We construct such a pair of solutions via a primal-dual
algorithm. Our primal-dual algorithm is an extension of the 2-approximation primal-dual algorithm due to
[CGHW98]. We state our algorithm in Algorithm 1.
Algorithm 1 Primal-Dual for FVS
Input:(1) Graph G= (V, E); (2) Vertex weights c:V‚ÜíR+.
Output: Feedback vertex set F‚äÜV.
1. Initialize (y, z):= 0,i:= 1,F:=‚àÖ, and G1=G.
2.Whilethe graph Gi= (Vi, Ei)has a cycle:
(a) Recursively remove vertices of degree 1from Gi.
(b)IfGihas a semi-disjoint cycle Ci:
Define the set Si=Cias the semi-disjoint cycle.
Increase dual variable zSiuntil the first dual constraint for some vertex vi‚ààCibecomes tight.
(c)Else:
Define the set Si=Vias the entire vertex set.
Increase dual variable ySiuntil the first dual constraint becomes tight for some vertex vi‚ààVi.
(d) Update F:=F‚à™ {vi}
Gi+1:=Gi‚àívi
i:=i+ 1.
3. Perform reverse-delete on F.
4. Return F.
Algorithm 1 is a primal-dual algorithm based on the LP relaxation for FVS given in Figure 4. The
algorithm initializes with the dual feasible solution (y= 0,z= 0). In the ith iteration of the while-loop,
the algorithm selects a specific set Siof vertices (which is either a cycle Cior entire vertex set Vi) and
increases the corresponding dual variable until a dual constraint for some vertex vi‚ààSibecomes tight. It
then includes the vertex viinto the FVS and removes vifrom the graph. Adding vito the candidate set Fis
interpreted as setting the primal variable xvi= 1. Thus, Algorithm 1 always maintains dual feasibility and
primal complementary slackness (i.e., xvi= 1only if the dual constraint for viis tight).
We now explain the reverse-delete procedure mentioned in Algorithm 1. Let ‚Ñìbe the number of iteration
of the while loop. The reverse-delete procedure iteratively considers vertices in the reverse-order in which
they were added into F, i.e. v‚Ñì, v‚Ñì‚àí1, . . . v 1. For every vertex in this order, the procedure checks whether
removal of this vertex from Fis still a feasible FVS for G. If so, then the vertex is removed from F. We will
later rely on reverse-delete to show that F‚à©Siis a minimal FVS in G[Si]for every iteration i.
25We now observe that the algorithm terminates in polynomial time to return a feasible FVS.
Lemma 14 (Feasibility and Runtime) .Algorithm 1 returns a feasible FVS for the input graph Gin poly-
nomial time.
Proof.Each step of the while loop and reverse-delete procedure can be implemented to run in polynomial
time. In ith iteration of the while-loop, at least one vertex of the graph Giis removed. The empty graph
has no cycles and so the while-loop will terminate in at most linear number of iterations. Furthermore, the
reverse delete step considers every vertex in Fexactly once, and so, it also terminates in at most linear
number of steps. The output set Fis a feasible FVS by the terminating condition of the while-loop and the
fact that reverse-delete deletes a vertex only if its deletion maintains feasibility.
We now bound the approximation factor of the solution Freturned by Algorithm 1. Let (y,z)be the
dual solution constructed by Algorithm 1 and let œáF‚àà {0,1}Vbe the indicator vector of F. We note that
Lemma 14 implies that œáFis a feasible solution to the primal LP. Let primal (œáF),dual(y,z)denote the
objective values of the primal and dual LPs for solutions œáFand(y,z)respectively.
LetI1‚äÜ[‚Ñì]denote the set of iterations in which the dual variable for the entire residual graph was
increased (i.e. statement (c) of Algorithm 1 is executed) and let I2‚äÜ[‚Ñì]denote the set of iterations in
which the dual variable for a semi-disjoint cycle in the residual graph was increased (i.e. statement (b) of
Algorithm 1 is executed). For notational convenience, we let Fj=F‚à© {vj}andF‚â•j=‚à™k‚àà[j,‚Ñì]Fj. The next
lemma shows that the set Si‚à©F‚â•iis a minimal feedback vertex set for the subgraph G[Si]for each i‚àà[‚Ñì].
Lemma 15. The set Si‚à©F‚â•iis a minimal feedback vertex set for the subgraph G[Si]for each i‚àà[‚Ñì].
Proof.We prove by induction on ‚Ñì‚àíi. For the base case, we consider i=‚Ñì. We observe that F‚â•‚Ñì={v‚Ñì}as
otherwise, the following two observations result in a contradiction: (i) The reverse-delete step only removes
v‚Ñìfrom Fif the set F‚àí {v‚Ñì}is a feasible feedback vertex set for G; and (ii) if F‚àí {v‚Ñì}were a FVS for G,
then the algorithm would have terminated after the (‚Ñì‚àí1)thiteration. We note that F‚Ñìis a FVS for G‚Ñìas
there was no (‚Ñì+ 1)thiteration. If the set S‚Ñì=V‚Ñìis the entire vertex set of the graph G‚Ñì, then v‚Ñì‚ààV‚Ñì.
Alternatively, if the set S‚Ñìis a semi-disjoint cycle C‚Ñì, then v‚Ñì‚ààC‚Ñì, as otherwise the cycle C‚Ñìwould remain
inG‚Ñì+1contradicting that there were only ‚Ñìiterations. In both scenarios, the set S‚Ñì‚à©F‚â•‚Ñìis a minimal FVS
forG[S‚Ñì].
For the inductive case, assume that 0‚â§i < ‚Ñì. By the inductive hypothesis, we have that the set Sj‚à©F‚â•j
is a minimal FVS for the graph G[Sj]for all ‚Ñì‚â•j > i. We consider two cases based on whether the set Si
is a semi-disjoint cycle of Gior the entire vertex set of Gi.
First, we consider the case where Siis a semi-disjoint cycle Ci. We need to show that |F‚à©Ci|= 1. We
observe that 1‚â§ |F‚à©Ci| ‚â§2: The lower bound follows from the fact that the set F‚â•iis a feasible FVS
forGiand thus intersects all cycles in at least one vertex. The upper bound holds by the following three
observations: (i) The vertex viis the first vertex of the set Cito be selected into Fby the algorithm; (ii) If
the vertex viis the pivot vertex, then all vertices in Ci‚àí {vi}get recursively removed and thus cannot be
selected into Fin any subsequent iteration after i; and (iii) If the vertex viis not the pivot vertex, then all
vertices in Ci‚àí{vi}except the pivot vertex get recursively removed due to step (a) and thus, only the pivot
vertex can be included into Fin some subsequent iteration after i. We note that if scenario (ii) happens,
then F‚â•i‚à©Ci={vi}and hence, |F‚à©Ci|= 1. Alternatively, suppose that scenario (iii) happens. If the pivot
is never selected into F, then once again we have F‚â•i‚à©Ci={vi}and hence, |F‚à©Ci|= 1. Otherwise the
pivot is selected into Fand the reverse-delete step processes the pivot vertex before processing vi. If the
reverse-delete step removes the pivot vertex from F, then once again we have F‚â•i‚à©Ci={vi}and hence,
|F‚à©Ci|= 1. Otherwise, the reverse-delete step does not remove the pivot from F. Consider the iteration of
reverse-delete that processes vi‚Äîwe need to show that reverse-delete will indeed remove viin this iteration.
We observe that the set {vk:k‚àà[1, i‚àí1]}has not been processed by reverse-delete and this set intersects
every cycle that is not entirely contained in Gi(this is true since Giis the residual graph after removal
of{v1, . . . v i‚àí1}along with recursively removing degree-1 vertices in each step). Since the pivot for Ciis
already in Fand the cycle Ciis semi-disjoint in Gi, the reverse-delete step must remove the vertex vifrom
26Fasviintersects no cycles other than those already intersected by F‚àí {vi}. In particular, F‚â•i‚à©Ciis a
singleton set consisting of the pivot vertex for Ci. Thus, in all cases we have that |F‚â•i‚à©Ci|= 1. It follows
thatFiis a minimal FVS for the cycle G[Ci].
Next, we consider the case when Si=Viis the entire vertex set of the subgraph Gi. Here, we consider the
set of all cycles that viintersects in Gand partition them into two types: (1) Cycles completely contained
inGi; and (2) cycles that include at least one vertex from V‚àíVi. Since F‚â•iis a feasible FVS for Gi, we
have that F‚â•iintersects all cycles of the first type. Furthermore, since the vertices in V‚àíVido not exist in
Gi, the set {v1, . . . , v i‚àí1}intersect all cycles of the second type. We recall that the set F‚â•i+1is a minimal
FVS for Gi+1.
We consider the first subcase where the set F‚â•i+1is an FVS for the graph Gi. Then, the set F‚â•i+1
intersects all cycles contained in Gi. In particular, it intersects all cycles of type (1). Thus, the set
{v1, . . . , v i‚àí1} ‚à™F‚â•i+1is a feasible FVS for the original graph G. Due to this, the reverse-delete step
removes the vertex vifrom Fand we have that F‚â•i=F‚â•i+1. Furthermore, by the inductive hypothesis we
have that F‚â•i+1is a minimal FVS for Gi+1. Thus, the set F‚â•iis a minimal FVS for Gi=G[Si].
We next consider the remaining subcase where the set F‚â•i+1is not a FVS for the graph Gi. In particular,
there must be a cycle of the first type that viintersects, but none of the vertices of F‚â•i+1intersect. In
particular, the set {v1, . . . , v i‚àí1} ‚à™F‚â•i+1is not a feasible FVS for the original graph Gas the set does
not intersect all type (1) cycles. Thus, the reverse-delete step cannot remove vifrom F. By the induction
hypothesis, we have that F‚â•i+1is a minimal FVS for G‚â•i+1. Consequently, none of these vertices can be
removed from F‚â•ias the resulting set would not be a feasible FVS. It follows that F‚â•iis a minimal FVS for
Gi=G[Si].
We show in Lemma 16 that the solution Fconstructed by the algorithm has cost at most twice the
objective value of the dual feasible solution (y,z)constructed by the algorithm. We recall that œáF‚àà {0,1}V
is the indicator vector of the set Fandprimal (œáF),dual(y,z)denote the objective values of the primal and
dual LPs for solutions œáFand(y,z)respectively.
Lemma 16 (Integrality gap bound) .We have that
primal (œáF)‚â§2¬∑dual(y,z).
Proof.We have that
primal (œáF) =X
v‚ààFcv
=X
v‚ààFÔ£´
Ô£≠X
S‚äÜV:v‚ààS(dS(v)‚àí1)yS+X
C‚ààC:v‚ààCzCÔ£∂
Ô£∏
=X
S‚äÜVySX
v‚ààF‚à©S(dS(v)‚àí1) +X
C‚ààCzCX
v‚ààF‚à©C1
=X
i‚ààI1ySiX
v‚ààF‚à©Si(dSi(v)‚àí1) +X
i‚ààI2zCi|F‚à©Ci|
‚â§2X
i‚ààI1ySib(Si) +X
i‚ààI2zCi
‚â§2¬∑dual(y,z).
Here, the second equality follows by the primal complementary slackness maintained by Algorithm 1. The
fourth equality follows by the fact that all dual variables that were not incremented during some iteration of
Algorithm 1 have value zero. The first inequality follows by Lemma 15 and Lemma 13. Here, we note that
fori‚ààI2,|F‚à©Ci|= 1(by Lemma 15) because G[Ci]is an induced cycle and consequently a minimal FVS
forG[Ci]contains exactly 1vertex.
27Lemma 16 completes the proof of Lemma 12 since dual(y,z)‚â§primal (œáF)by weak duality and the fact
that the ILP min{P
u‚ààVcuxu:x‚ààPWD(G)‚à©Pcycle-cover (G)‚à©ZV}is an ILP formulation for FVS (whose
LP-relaxation is given in Figure 4). It also proves that the approximation factor of the solution Freturned
by Algorithm 1 is at most 2.
4.2 Orientation and Cycle Cover constraints
In this section, we give a polynomial-sized ILP for FVS based on orientation and cycle cover constraints.
Moreover, we show that the integrality gap of the LP-relaxation of this formulation is at most 2. We consider
the following formulation:
minÔ£±
Ô£≤
Ô£≥X
u‚ààVcuxu:x‚ààQorient(G)‚à©Pcycle-cover (G)‚à©ZVÔ£º
Ô£Ω
Ô£æ. (FVS-IP: orient-and-cycle-cover)
Lemma17. For aninput graph G= (V, E)with non-negative vertexcosts c:V‚ÜíR‚â•0,(FVS-IP: orient-and-cycle-cover)
is an integer linear programming formulation for FVS. Moreover, its LP-relaxation has integrality gap at most
2.
Proof.The indicator vector xof a feedback vertex set of Gis contained in Qorient(G)‚à©Pcycle-cover (G).
Moreover, every integral solution x‚ààQorient(G)‚à©Pcycle-cover (G)is the indicator vector of a feedback vertex
set: since x‚ààQorient(G)‚à©ZV, we have that x‚àà {0,1}Vand since x‚ààPcycle-cover (G), we have that xis the
indicator vector of a feedback vertex.
We now show that the integrality gap of the LP-relaxation is at most 2. By Theorem 1(1), we have that
Qorient(G)‚äÜPWD(G)and hence, the integrality gap of the LP-relaxation is at most the integrality gap of
(FVS-LP: WD-and-cycle-cover). By Theorem 4, the integrality gap of (FVS-LP: WD-and-cycle-cover) is at
most 2.
Theorem 5 follows from Lemma 17, the observation that Qorient(G)can be expressed using polynomial
number of variables and constraints (see the description of Porient(G)), and the fact that the cycle cover
polyhedron can equivalently be described using polynomial number of variables and constraints. We note
that this fact is folklore, but we include a proof of it in Lemma 19 in the appendix.
4.3 Alternative formulations
In Section 4.2, we described an ILP formulation based on orientation and cycle cover polyhedra and showed
that its LP-relaxation is at least as strong as (FVS-LP: WD-and-cycle-cover). We briefly discuss two more
polynomial-sized LP-relaxations for FVS with integrality gap at most 2. We give full details in the appendix
for the sake of completeness.
We recall that Chekuri and Madan [CM16] gave a polynomial-sized ILP formulation for Subset-FVS.
We note that the LP-relaxation of their ILP-formulation specialized for FVS has integrality gap at most
that of the LP-relaxation of (FVS-IP: orient-and-cycle-cover). Consequently, the LP-relaxation of their
ILP formulation has integrality gap at most 2. We present the details in Appendix B.2. This result gives
additional impetus to improving the integrality gap analysis of their LP-relaxation for Subset-FVS.
Next, we give an ILP formulation based only on orientation constraints (without relying on cycle cover
constraints) - see Appendix B.3. We show that its LP-relaxation is at least as strong as that of the strong
density constraints based formulation and consequently is also at most 2.
Acknowledgements. Samuel Fiorini and Stefan Weltge would like to thank Gwena√´l Joret and Yelena
Yuditsky for preliminary discussions. Karthekeyan Chandrasekaran and Samuel Fiorini would like to ac-
knowledge the support of the trimester program on Discrete Optimization at the Hausdorff Institute for
Mathematics (2021) for facilitating initial discussions on the problem. Chandra Chekuri, Samuel Fiorini and
28Stefan Weltge would like to thank the Oberwolfach Research Institute for Mathematics and the organizers
of the Combinatorial Optimization workshop (2021) during which this research started. Shubhang Kulkarni
thanks Da Wei Zheng for engaging in preliminary discussions on the separation oracle for 2-pseudotree cover
constraints. We thank the reviewers for their comments which helped improve the presentation of the paper.
Declarations
Funding and/or Conflicts of Interests/Competing Interests. Karthekeyan Chandrasekaran and
ShubhangKulkarniweresupportedinpartbyNSFgrantsCCF-1814613andCCF-1907937. ChandraChekuri
was supported in part by NSF grants CCF-1910149 and CCF-1907937. Stefan Weltge was supported in part
by Deutsche Forschungsgemeinschaft (DFG, German Research Foundation), project number 451026932. No
Conflicts of Interests/Competing Interests.
References
[BBF95] Vineet Bafna, Piotr Berman, and Toshihiro Fujito. Constant ratio approximations of the
weighted feedback vertex set problem for undirected graphs. In Algorithms and Computations ,
pages 142‚Äì151, 1995.
[BG96] Ann Becker and Dan Geiger. Optimization of Pearl‚Äôs method of conditioning and greedy-like
approximation algorithms for the vertex feedback set problem. Artificial Intelligence , 83:167‚Äì
188, 1996.
[BWB18] Austin Buchanan, Yiming Wang, and Sergiy Butenko. Algorithms for node-weighted steiner
tree and maximum-weight connected subgraph. Networks , 72(2):238‚Äì248, 2018.
[BYGNR98] Reuven Bar-Yehuda, Dan Geiger, Joseph Naor, and Ron M Roth. Approximation algorithms
for the feedback vertex set problem with applications to constraint satisfaction and bayesian
inference. SIAM Journal on Computing , 27(4):942‚Äì959, 1998.
[CGHW98] Fabi√°n A. Chudak, Michel X. Goemans, Dorit S. Hochbaum, and David P. Williamson. A pri-
mal‚Äìdual interpretation of two 2-approximation algorithms for the feedback vertex set problem
in undirected graphs. Operations Research Letters , 22(4):111‚Äì118, 1998.
[Cha00] Moses Charikar. Greedy Approximation Algorithms for Finding Dense Components in a Graph.
InApproximation Algorithms for Combinatorial Optimization , pages 84‚Äì95, 2000.
[CM16] Chandra Chekuri and Vivek Madan. Constant factor approximation for subset feedback set
problems via a new LP relaxation. In Proceedings of the Twenty-Seventh Annual ACM-SIAM
Symposium on Discrete Algorithms , SODA, pages 808‚Äì820, 2016.
[DS05] Irit Dinur and Samuel Safra. On the hardness of approximating minimum vertex cover. Annals
of mathematics , pages 439‚Äì485, 2005.
[ENSZ00] Guy Even, Joseph Naor, Baruch Schieber, and Leonid Zosin. Approximating minimum subset
feedback sets in undirected graphs with applications. SIAM Journal on Discrete Mathematics ,
13(2):255‚Äì267, 2000.
[ENZ00] Guy Even, Joseph Naor, and Leonid Zosin. An 8-approximation algorithm for the subset
feedback vertex set problem. SIAM Journal on Computing , 30(4):1231‚Äì1252, 2000.
[EP62] Paul Erd√∂s and Lajos P√≥sa. On the maximal number of disjoint circuits of a graph. Publ. Math.
Debrecen , 9:3‚Äì12, 1962.
29[Fuj99] Toshihiro Fujito. Approximating node-deletion problems for matroidal properties. Journal of
Algorithms , 31(1):211‚Äì227, 1999.
[Fuj05] Satoru Fujishige. Submodular functions and optimization . Elsevier, 2005.
[KR08] Subhash Khot and Oded Regev. Vertex cover might be hard to approximate to within 2- Œµ.
Journal of Computer and System Sciences , 74(3):335‚Äì349, 2008.
[LFFW19] Mugang Lin, Qilong Feng, Bin Fu, and Jianxin Wang. An approximation algorithm for the
‚Ñì-pseudoforest deletion problem. Theoretical Computer Science , 806, 08 2019.
[MS81] Burkhard Monien and Reinald Schulz. Four approximation algorithms for the feedback vertex
set problem. In WG, pages 315‚Äì326, 1981.
[PRS18] Geevarghese Philip, Ashutosh Rai, and Saket Saurabh. Generalized pseudoforest deletion:
Algorithms and uniform kernel. SIAM Journal on Discrete Mathematics , 32(2):882‚Äì901, 2018.
[Wes00] Douglas B. West. Introduction to Graph Theory . Prentice Hall, 2000.
A Pseudoforest Deletion Set
A.1 Polynomial-time separation oracle for 2-Pseudotree Cover constraints
Inthissection, weshowthatthefamilyof 2-pseudotreecoverconstraintsadmitsapolynomialtimeseparation
oracle.
Lemma 18. The family of 2-pseudotree cover constraints admits a polynomial-time separation oracle.
Inordertosolvetheseparationproblem,itsufficestodesignapolynomialtimealgorithmforthe Minimum
Cost 2-Pseudotree problem: The input to MC2PT is a vertex-weighted graph 
G= (V, E), w:V‚ÜíR‚â•0
,
and the goal is to compute a minimum weight subset U‚äÜVof vertices such that G[U]is a2-pseudotree,
i.e.,
minX
u‚ààUw(u):U‚äÜVandG[U]is a2-pseudotree
.
Our strategy to solve MC2PT is to reduce it to solving a polynomial number of special instances of the Mini-
mum Node-Weighted Steiner Tree4(NWST), and use the result of [BWB18] which says that these special in-
stances of NWST can be solved in polynomial time. Formally, the input to NWST is a vertex-weighted graph 
G= (V, E), w:V‚ÜíR‚â•0
and a terminal set S‚äÜV. We will say that a graph His aSteiner tree inGfor
terminal set SifHis connected, acyclic, and is a subgraph of Gwith S‚äÜVH. Moreover, the weight of a sub-
graph HofGis the sum of weights of vertices in H. The NWST problem is to find a minimum weight Steiner
treein Gforterminalset S, i.e., min{P
u‚ààVHw(u):H= (VH, EH)is a Steiner tree in Gfor terminal set S}.
NWST can be solved in polynomial time if the number of terminals is a constant.
Proposition 3 (Theorem 1 of [BWB18]) .There exists a O(3kn+ 2kn2+n3)time algorithm for NWST,
where kdenotes the number of terminals and ndenotes the number of vertices in the input instance.
The following proposition shows a correspondence between minimum weight 2-pseudotrees in a vertex-
weighted graph and Steiner trees.
Proposition 4. LetG= (V, E)be a graph with non-negative vertex weights w:V‚ÜíR‚â•0and let W‚â•0.
Then, there exists a subset U‚äÜVsuch that G[U]is a2-pseudotree withP
u‚ààUw(u)‚â§Wif and only if
there exists a pair of edges e1=u1v1, e2=u2v2inGsuch that there exists a Steiner tree H= (VH, EH)in
the graph G‚Ä≤:=G‚àí {e1, e2}for terminal set S:={u1, v1, u2, v2}withP
u‚ààVHw(u)‚â§W.
4We refer to nodesasverticesfor consistency with the rest of our technical sections.
30Proof.We will say that a graph T= (VT, ET)is aminimal 2-pseudotree if it is connected and has exactly
|VT|+ 1edges. Equivalently, Thas exactly 2edges in addition to a spanning tree. We observe that for a
subset U‚äÜV, the subgraph G[U]is a2-pseudotree if and only if there exists a subgraph T= (U, E T)of
G[U]such that Tis a minimal 2-pseudotree. Hence, it suffices to show that there exists a subset U‚äÜVsuch
that G[U]has a subgraph that is a minimal 2-pseudotree withP
u‚ààUw(u)‚â§Wif and only if there exists
a pair of edges e1=u1v1, e2=u2v2inGsuch that there exists a Steiner tree H= (VH, EH)in the graph
G‚Ä≤:=G‚àí {e1, e2}for terminal set S:={u1, v1, u2, v2}withP
u‚ààVHw(u)‚â§W. We prove this statement
now.
LetU‚äÜVsuch that G[U]contains a subgraph T= (U, E T)that is a minimal 2-pseudotree withP
u‚ààUw(u)‚â§W. Then, there exists a pair of edges e1=u1v2ande2=u2v2inTsuch that the subgraph
H:=T‚àí {e1, e2}is acyclic, connected, and is a subgraph of T. In particular, we have that His acyclic,
connected, and is a subgraph of G‚Ä≤:=G‚àí {e1, e2}with S={u1, v1, u2, v2} ‚äÜU=V(H). Hence, for the
pair of edges e1, e2inG, we have that His a Steiner tree in G‚Ä≤for terminal set SwithP
u‚ààV(H)w(u) =P
u‚ààUw(u)‚â§W.
Next, let e1=u1v2, e2=u2v2be a pair of edges in Gsuch that there exists a Steiner tree H= (VH, EH)
in the graph G‚Ä≤:=G‚àí {e1, e2}for terminal set S={u1, v1, u2, v2}withP
u‚ààVHw(u)‚â§W. Consider the
graph T:=H+{e1, e2}. Then, Tis a minimal 2-pseudotree. The vertex set of TisU:=VHandTis
a subgraph of G[U]. Hence, we have a subset U‚äÜVsuch that G[U]has a subgraph that is a minimal
2-pseudotree withP
u‚ààUw(u)‚â§W.
We now restate and prove Lemma 18.
Lemma 18. The family of 2-pseudotree cover constraints admits a polynomial-time separation oracle.
Proof.It suffices to show that MC2PT can be solved in polynomial time. Let G= (V, E)with vertex
weights w:V‚ÜíR‚â•0be the input instance of MC2PT. Consider the following algorithm: for all pairs
of edges e1=u1v1ande2=u2v2inE, use the algorithm guaranteed by Proposition 3 to solve NWST
on the graph G‚àí {e1, e2}with vertex weights wfor terminal set {u1, v1, u2, v2}, and return the minimum
weight solution over all instances. The correctness of the algorithm follows from Proposition 4. We now
analyze the runtime of the algorithm. There are O(|V|2)pairs of edges to enumerate. Furthermore, for
each pair of edges, the associated NWST instance can be solved in polynomial time using the algorithm
from Proposition 3 since each such instance has only four terminals. Thus, the algorithm runs in polynomial
time.
B Feedback Vertex Set
B.1 Polynomial-sized formulation of the Cycle Cover polyhedron
In this section, we show that Pcycle-cover (G)can be expressed using polynomial number of variables and
constraints. This is folklore, but we include its proof for the sake of completeness. For a graph G= (V, E),
we define E‚Ä≤:={(e, s),(e, t):‚àÉcycle in Gcontaining e=st‚ààE}and consider
Pdist-cycle-cover (G):=Ô£±
Ô£¥Ô£¥Ô£≤
Ô£¥Ô£¥Ô£≥(x, d)‚ààRV
‚â•0√óRV√óE‚Ä≤
‚â•0:d(e,s)
s= 0 ‚àÄ(e=st, s)‚ààE‚Ä≤
d(e,s)
t+xs‚â•1 ‚àÄ(e=st, s)‚ààE‚Ä≤
d(e,s)
a+xb‚â•d(e,s)
b‚àÄ(e, s)‚ààE‚Ä≤, ab‚ààE‚àí {e}Ô£º
Ô£¥Ô£¥Ô£Ω
Ô£¥Ô£¥Ô£æ.(8)
Lemma 19. For every graph G= (V, E), the polyhedron Pcycle-cover (G)is the projection of the polyhedron
Pdist-cycle-cover (G)toxvariables. Consequently, Pcycle-cover (G)admits a polynomial-sized description.
Proof.LetQdist-cycle-cover (G)be the projection of Pdist-cycle-cover (G)to the xvariables. We prove that
Qdist-cycle-cover (G) =Pcycle-cover (G)by showing inclusion in both directions.
31First, we show that Qdist-cycle-cover (G)‚äÜPcycle-cover (G). Let x‚ààQdist-cycle-cover (G). Let d‚ààRV√óE‚Ä≤
‚â•0be
a vector such that (x, d)‚ààPdist-cycle-cover (G). It suffices to show that for every cycle CinG, we have thatP
u‚ààV(C)xu‚â•1. Let Cbe a cycle in G. Fix an edge e=st‚ààE(C). By definition of the set E‚Ä≤, we have
that(e, s)‚ààE‚Ä≤. Consequently, d(e,s)
s= 0andd(e,s)
t+xs‚â•1by the first two constraints of Pdist-cycle-cover (G).
Leta1=s, a2, a3, . . . , a r‚àí1, ar=tbe the ordered vertices along the s‚àítpath induced by E(C)‚àíe. Then,
for every i‚àà[r‚àí1], we have that d(e,s)
ai+xai+1‚â•d(e,s)
ai+1by the third constraint of Pdist-cycle-cover (G). Adding
all of these constraints gives us thatPr
i=2xai‚â•d(e,s)
ar=d(e,s)
t‚â•1‚àíxs= 1‚àíxa1. Thus, the constraintPr
i=1xai‚â•1holds.
Next, we show that Qdist-cycle-cover (G)‚äáPcycle-cover (G). Let x‚ààPcycle-cover (G). Let d‚ààRV√óE‚Ä≤
‚â•0be
defined as follows: for each (e=st, s)‚ààE‚Ä≤, let
d(e,s)
u:= minÔ£±
Ô£≤
Ô£≥X
v‚ààP‚àí{s}xv:Pis a path from stouandPÃ∏={s, t}Ô£º
Ô£Ω
Ô£æ.
We show that (x, d)‚ààPdist-cycle-cover (G). We note that the vector (x, d)is non-negative by definition. Let
(e=st, s)‚ààE‚Ä≤. Then, d(e,s)
s= 0by definition. Moreover, d(e,s)
t+xs‚â•1holds because of the following
reasoning: let Pbe a path from stotsuch that d(e,s)
t=P
v‚ààP‚àí{s}xvandPÃ∏={s, t}. Then, Pconcatenated
with the edge stforms a cycle Candd(e,s)
t+xs=xs+P
v‚ààP‚àí{s}xv=P
u‚ààV(C)xu‚â•1. Finally, the
inequality d(e,s)
a+xb‚â•d(e,s)
bfor every edge ab‚ààEholds because of the following reasoning: for an edge
ab‚ààE, letPbe a path from stoasuch that d(e,s)
a=P
v‚ààP‚àí{s}xv. Then, Pconcatenated with bis a path
from stoband consequently, d(e,s)
b‚â§P
v‚ààP+{b}‚àí{s}xvby definition.
B.2 Chekuri-Madan formulation
In this section, we show that the polynomial-sized ILP for FVS given by Chekuri and Madan is such that
its LP-relaxation has integrality gap at most 2. Chekuri and Madan formulated a polynomial-sized ILP for
the more general problem of Subset Feedback Vertex Set (SFVS). SFVS is defined as follows: The input is a
graph G= (V, E)with non-negative vertex costs c:V‚ÜíR‚â•0along with a set of terminals T‚äÜV. A subset
Uof non-terminals is said to be a subset feedback vertex set if G‚àíUhas no cycle containing a vertex of
T. The goal is to find a least cost subset feedback vertex set. In Section B.2.1, we discuss Chekuri-Madan‚Äôs
ILP for SFVS (henceforth referred to as ( SFVS-IP: CM )) with some background and notation. In Section
B.2.2, we discuss a reduction from FVS to SFVS satisfying certain technical properties. In Section B.2.3,
we show that the integrality gap of the LP-relaxation of ( SFVS-IP: CM ) specialized for FVS (henceforth
referred to as the ( FVS-LP: CM )) is at most 2.
B.2.1 Chekuri-Madan‚Äôs ILP for SFVS
In this section, we discuss the ( SFVS-IP: CM ). Let H= (VH, EH)denote the input graph, SH‚äÜVHdenote
the terminal set, and cH:VH‚ÜíR‚â•0denote the vertex cost function. We will say that a cycle is interesting
if it contains a terminal. Let CHdenote the set of interesting cycles in the graph H.
Henceforth, we will assume that a SFVS of finite cost exists in the graph H. Furthermore, we will assume
without loss of generality that the instance Hsatisfies the following properties (see [CM16] for a justification
of these assumptions):
(i) the graph His connected,
(ii) each terminal si‚ààSHhas infinite cost, is a degree two vertex with neighbors ai, bihaving infinite cost,
(iii) no two terminals are connected by an edge or share a neighbor,
(iv) there exists a special non-terminal degree one vertex r‚ààVwith infinite cost, and
32(v) each interesting cycle contains at least two terminals.
We refer to properties (i)-(v) as CM-properties.
Notation. Throughout this section we will use the following notation: We let k=|SH|denote the number
of terminals. We refer to the set Pi:={ai, bi}as thepivot set for the terminal si, and the set PH=‚à™i‚àà[k]Pi
as the set of all pivots. We define the set
‚ÑìH(u) ={i‚àà[k]:siis reachable from uvia a path not containing any other terminals } ‚à™ {k+ 1}
as the set of labelsfor each vertex u‚ààVH\S. We denote ÀúVHas the set of vertices in VHthat are not in
SH‚äéPH‚äé {r}. We denote ÀúEHas the set of edges in EHthat are not incident to any terminals and the set
E‚Ä≤
Has the set of edges incident to terminals. We will refer to E‚Ä≤
Has special edges.
(SFVS-IP: CM ).See Figure 5 for the labelling-based ( SFVS-IP: CM ). In this ILP, we have vertex
variables xufor each u‚ààÀúVindicating whether the vertex uis in the SFVS F, and vertex labelling variables
zu,ifor each u‚ààÀúV‚à™PH, i‚àà[k]indicating whether vertex ureceives label i. We note that Figure 5 simplifies
the exposition of the ILP from [CM16] by explicitly substituting the values for variables whose values are
directlysetbyconstraints,i.e. xu= 0foru‚ààS‚à™{r},zsi,i= 1fori‚àà[k],and zr,k+1= 1. Moreover,itslightly
strengthens the first constraint (Chekuri-Madan used a slightly weaker constraint: xu+P
i‚àà[k+1]zu,i= 1).
The constraints can be interpreted as follows: Let Fbe a minimal finite cost subset feedback vertex
set of H. Constraint (1) says that if a vertex u‚ààÀúVHis not in F, then it must receive exactly one of the
labels in ‚ÑìH(u). Constraint (2) says that exactly one of aiandbican receive the label ifor each i‚àà[k].
Constraint (3) is a spreading constraint that says that both end vertices of every non-special edge in H‚àíF
must receive the same label. Constraint (4) is a cycle covering constraint and says that the solution Fmust
intersect every interesting cycle in at least one vertex. Constraint (5) ensures that the set Fcontains no
pivot vertices.
We now briefly address why a labeling satisfying the LP constraints must exist for every minimal finite
weight subset feedback vertex set F(see [CM16] for further details). We note that none of the vertices of
S‚à™P‚à™{r}are in Fas these have infinite cost. Let the graph H‚Ä≤= (VH‚Ä≤, EH‚Ä≤)be defined as H‚Ä≤=H‚àíF. For
simplicity, we first assume that the graph H‚Ä≤is connected and then address the more general case when H‚Ä≤
is not connected. Since there is no cycle containing any terminal in H‚Ä≤, each terminal is a cut vertex in H‚Ä≤.
Consider the block-cut-vertex tree decomposition T‚Ä≤ofH‚Ä≤‚Äî (refer to [Wes00] for details on block-cut-vertex
tree decompositions). We label a vertex uofH‚Ä≤asi‚àà[k]if terminal siis the first terminal encountered on
any path from vertex uto the root rin the graph H‚Ä≤. If no terminals are encountered, then we label the
vertex as k+ 1. We note that such a labelling is well-defined as T‚Ä≤is the block-cut-vertex tree and the set
Sare cut vertices. In this labelling, we observe that every non-special edge uv‚ààÀúEH‚Ä≤has the property that
both end points receive the same label. Finally, in the case where H‚Ä≤is not connected, we can justify the
existence of such a labeling by picking an arbitrary non-terminal vertex from each component, imagining a
dummy edge connecting it to the root r, and considering the labeling corresponding to block-cut-vertex tree
of this (implicit) graph.
B.2.2 Reduction from FVS to SFVS satisfying the CM-properties
FVS can be seen as a special case of SFVS where every vertex in the graph is a terminal. However, this simple
reduction does not result in an SFVS instance satisfying the CM-properties (see properties (i)‚Äì(v) mentioned
in the first paragraph of Section B.2.1). In this section, we show how to construct an SFVS instance from
an FVS instance such that the SFVS instance satisfies the required properties. Let G= (VG, EG)with
vertex costs cG:VG‚ÜíR‚â•0be the FVS instance. We will construct an SFVS instance H= (VH, EH)with
terminals SHand vertex costs cH:VH‚ÜíR‚â•0satisfying the required properties. We may assume that the
FVS instance Ghas an infinite-weighted degree-1 root vertex r, satisfying property (iv) since adding such a
vertex does not change the set of minimal feasible solutions. We construct Has follows:
33Subset Feedback Vertex Set:
minX
u‚ààÀúVHcuxu
s.t.
(1)xu+X
i‚àà‚ÑìH(u)zu,i= 1 ‚àÄu‚ààÀúVH‚à™PH
(2)zai,i+zbi,i= 1 ‚àÄi‚àà[k]
(3)xu+zu,i‚àízv,i‚â•0 ‚àÄuv‚ààÀúEH, i‚àà[k+ 1]
(4)X
u‚ààCxu‚â•1 ‚àÄC‚àà CH
(5)xu= 0 ‚àÄu‚ààPH
(6)zu,i‚â•0 ‚àÄu‚ààÀúVH‚à™PH, i‚àà[k+ 1]
(7)xu‚â•0 ‚àÄu‚ààÀúVH
(8)zu,i‚ààZ ‚àÄu‚ààÀúVH‚à™PH, i‚àà[k+ 1]
(9)xu‚ààZ ‚àÄu‚ààÀúVH
Figure 5: ( SFVS-IP: CM )
1. For each edge e=uv‚ààEG, we subdivide the edge eso that the edge becomes a path u, ae, se, be, vof
length 4.
2. We let SH=S
e‚ààE(G){se}denote the terminal set. Thus, the set Pe:={ae, be}is the set of pivot
vertices for each terminal se‚ààSH, and the set PH:=S
e‚ààE(G)Peis the set of all pivots of the graph
H.
3. We define the cost function as cH(u) =cG(u)ifu‚ààVG, and cH(u) =‚àûotherwise (i.e., if u‚ààSH‚à™PH).
We observe that the graph Hsatisfies properties (i)-(v) assumed by the Chekuri-Madan LP. The next
proposition says that solving FVS in the graph Gwith cost function cGis equivalent to solving SFVS in the
graph Hwith terminal set SHwith cost function cH. The proposition follows by construction.
Proposition 5. LetF‚äÜVG. The set Fis a feedback vertex set for Gif and only if the set Fis a subset
feedback vertex set for the graph Hwith terminal set SH. Furthermore, the cost of Fin both graphs is the
same, i.e. cG(F) =cH(F).
[CM16] showed that the LP-relaxation of ( SFVS-IP: CM ) given in Figure 5 has integrality gap at most
13. It immediately follows that the integrality gap of that LP-relaxation on the instance Hconstructed as
above is also at most 13. In the subsequent section, we tighten this integrality gap to 2for instances H
constructed as above.
B.2.3 Bounding the integrality gap
In this section, we show that the LP-relaxation of the ( SFVS-IP: CM ) given in Figure 5 for the instance
Hconstructed as given in the reduction in Section B.2.2 has integrality gap at most 2. We prove this by
showing that the LP constraints imply orientation and cycle cover constraints. Consequently, the integrality
gap of the LP-relaxation is at most that of min{P
u‚ààVcuxu:x‚ààQorient(G)‚à©Pcycle-cover (G)}. By Lemma 17,
it follows that the integrality gap of the LP-relaxation is at most 2.
34Webeginbysimplifyingthe( SFVS-IP: CM )giveninFigure5forSFVSinstances Hthatareconstructed
from FVS instances as obtained from the reduction in Section B.2.2. We make two observations that will
help us in the simplification. The first observation is that each edge e‚ààEGcorresponds to a unique terminal
se‚ààVH. Thus, we may replace the set [k]which indexed the set of terminals in the ILP of Figure 5 with
the set EG. For ease of exposition, we denote erby the label k+ 1. We now give the second observation.
Letu‚ààVGbe arbitrary. Since each edge e‚ààŒ¥G(u)has been subdivided in the graph Hand contains a
terminal se, the only terminals that ucan reach via a path that does not contain any other terminal is
exactly {se:e‚ààŒ¥G(u)}. For an arbitrary pivot vertex u‚ààPH, let g(u)denote the unique non-terminal
neighbor of uinH. Then, the only terminals that ucan reach via a path that does not contain any other
terminal is exactly {se:e‚ààŒ¥G(g(u))}. We summarize these observations in the next proposition.
Proposition 6. We have that
1. For each vertex u‚ààVG, we have that ‚ÑìH(u) =Œ¥G(u)‚à™ {er};
2. For each pivot vertex u‚ààP, we have that ‚ÑìH(u) =Œ¥G(g(u))‚à™ {er}.
Using Proposition 6 and the first observation mentioned above, we simplify the ( SFVS-IP: CM ) in
Figure 5 for the SFVS instance Hand write its LP-relaxation ( FVS-LP: CM ) in Figure 6.
LP-relaxation of ( SFVS-IP: CM ) for graph H:
minX
u‚ààÀúVHcuxu
s.t.
(1)xu+X
e‚àà‚ÑìH(u)zu,e= 1 ‚àÄu‚ààÀúVH‚à™PH
(2)zae,e+zbe,e= 1 ‚àÄe‚ààEG
(3)xu+zu,e‚àízv,e‚â•0 ‚àÄuv‚ààÀúEH, e‚ààEG‚à™ {er}
(4)X
u‚ààCxu‚â•1 ‚àÄC‚àà CH
(5)xu= 0 ‚àÄu‚ààPH
(6)zu,e‚â•0 ‚àÄu‚ààÀúVH‚à™PH, e‚ààEG‚à™ {er}
(7)xu‚â•0 ‚àÄu‚ààÀúVH
Figure 6: ( FVS-LP: CM )
We now show that the constraints of the LP in Figure 6 imply the orientation and cycle cover constraints
forG.
Lemma 20. Let(x,z)be a feasible solution to ( FVS-LP: CM ) from Figure 6. Then,
1.x‚ààPcycle-cover (G)and
2.(x,y)‚ààPorient (G), where ye,u=zu,efor all e‚ààŒ¥(u), u‚ààVG.
Proof.We have that x‚ààPcycle-cover (G)owing to inequality (4). We now show that (x,y)‚ààPorient(G). We
havethat xu‚â•0forall u‚ààVGandye,u‚â•0forall e‚ààŒ¥G(u), u‚ààVG. Wenowshowthat xu+P
e‚ààŒ¥G(u)ye,u‚â§
1for every u‚ààVG. Let u‚ààV. We have that
xu+X
e‚ààŒ¥G(u)ye,u=xu+X
e‚àà‚ÑìH(u)zu,e‚àízu,er= 1‚àízu,er‚â§1,
35where the last inequality holds since zu,er‚â•0.
Finally, we show that xu+xv+ye,u+ye,v‚â•1for every e=uv‚ààEG. Let e=uv‚ààEG. Let u, ae, se, be, v
be the path in the graph Hcorresponding to the subdivided edge e. Then, we have that
xu+xv+ye,u+ye,v=xu+xv+zu,e+zv,e
= (xu+xv+zu,e+zv,e) + (zae,e+zbe,e)‚àí(zae,e+zbe,e)
= 1 + ( xu+zu,e‚àízae,e) + (xv+zv,e‚àízbe,e)
‚â•1.
Here, the third equality follows from constraint (2) and the final inequality follows from constraint (3) of
(FVS-LP: CM ) in Figure 6.
Lemma 20 implies that min{P
u‚ààVcuxu:x‚ààQorient(G)‚à©Pcycle-cover (G)}is a relaxation of ( FVS-LP:
CM) from Figure 6. Lemma 17 tells us that the integrality gap of min{P
u‚ààVcuxu:x‚ààQorient(G)‚à©
Pcycle-cover (G)}is at most 2. Consequently, the integrality gap of ( FVS-LP: CM ) from Figure 6 is also at
most 2. We note that ( FVS-LP: CM ) from Figure 6 can be converted to a polynomial-sized LP by replacing
inequality (4) using a polynomial-sized description of cycle cover constraints as given in Lemma 19.
B.3 Orientation formulation
In this section, we give another polynomial-sized ILP for FVS whose LP-relaxation has integrality gap at
most 2. This ILP is based only on orientation constraints and does not require cycle cover constraints (in
contrast to the ILP presented in Section 4.2). We consider the following formulation and denote it as the
(FVS-IP: Complete-Orient ):
minX
u‚ààVcuxu
xv+xw+yf
e,v+yf
e,w‚â•1‚àÄe=vw‚ààE, f‚ààE (9)
xv+X
e=vw‚ààEyf
e,w‚â•1‚àÄv‚ààV, f‚ààE (10)
X
v‚ààV‚àí{a,b}xv+X
e=vw‚ààE‚àí{f}(yf
e,w+yf
e,v)‚â§ |V| ‚àí2‚àÄf=ab‚ààE (11)
xu‚â•0‚àÄu‚ààV (12)
yf
e,v‚â•0‚àÄe‚ààŒ¥(v), v‚ààV, f‚ààE (13)
xu‚ààZ‚àÄu‚ààV
yf
e,v‚ààZ‚àÄe‚ààŒ¥(v), v‚ààV, f‚ààE.
Theorem 5 follows from the following lemma.
Lemma 21. For an input graph G= (V, E)with non-negative vertex costs c:V‚ÜíR‚â•0, (FVS-IP:
Complete-Orient ) is an integer linear programming formulation for FVS. Moreover, its LP-relaxation
has integrality gap at most 2.
Proof.Letxbe the indicator vector of a feedback vertex set SofG. We show that there exists a binary
vector ysatisfying the constraints. Let Tbe a spanning tree of Gcontaining all edges of Gthat are not
incident to vertices in S. Fix an edge f=ab‚ààE. For each vertex v‚ààV\(S‚à™ {a, b}), set yf
e,w= 1where
e=vwis the first edge on the unique path from vtoainT. Moreover, set yf
f,a=yf
f,b= 1and all other yf
variables to 0. We prove that this choice of ysatisfies all constraints.
For an edge e=vw‚ààE, if|S‚à© {v, w}| ‚â• 1, then xv+xw‚â•1and if v, wÃ∏‚ààS, then e‚ààTand
consequently, either yf
e,v= 1oryf
e,w= 1and hence, the constraint xv+xw+yf
e,v+yf
e,w‚â•1holds. For
36a vertex v‚ààV, ifv‚ààS, then xv‚â•1and if v‚ààV‚àíS, then there exists an edge e=vw‚ààTand
hence, yf
e,w= 1and consequently, the constraint xv+P
e=vw‚ààEyf
e,w‚â•1holds. It remains to show that the
constraintP
v‚ààV‚àí{a,b}xv+P
e=vw‚ààE‚àí{f}(yf
e,w+yf
e,v)‚â§ |V|‚àí2holds. By the choice of x, it suffices to show
that|S\ {a, b}|+P
e=vw‚ààT‚àí{f}(yf
e,w+yf
e,v)‚â§ |V| ‚àí2holds. By the choice of yf, it suffices to show that
|S\ {a, b}|+P
e=vw‚ààT(yf
e,w+yf
e,v)‚â§ |V|. Simplifying this further, it suffices to show that
X
e=vw‚ààT(yf
e,w+yf
e,v)‚â§ |(V‚àíS)‚à™ {a, b}|.
We note thatP
e=vw‚ààT(yf
e,w+yf
e,v) =P
v‚ààV(P
e=vw‚ààTyf
e,w). Hence, it suffices to show that
X
v‚ààVÔ£´
Ô£≠X
e=vw‚ààTyf
e,wÔ£∂
Ô£∏‚â§ |(V‚àíS)‚à™ {a, b}|.
We have the following four inequalities:
X
e=vw‚ààTyf
e,w‚â§1‚àÄv‚ààV‚àí(S‚à™ {a, b}),
X
e=vw‚ààTyf
e,w= 0‚àÄv‚ààS‚àí {a, b},
X
e=aw‚ààTyf
e,w=yf
e,b= 1,and
X
e=bw‚ààTyf
e,w=yf
e,a= 1.
Hence,P
v‚ààVP
e=vw‚ààTyf
e,w
‚â§ |(V‚àíS)‚à™ {a, b}|.
Next, we show that an integral solution to the system of inequalities (9), (10), (11), (12), and (13) is the
indicator vector of a feedback vertex set. We will use the following claim.
Claim 6. Constraints (9), (10), (11), (12), and (13) imply the strong density constraints.
Proof.Let(x, y)be a solution satisfying constraints (9), (10), (11), (12), and (13). Let S‚äÜVsuch that
E[S]Ã∏=‚àÖ. We will show thatX
u‚ààS(dS(u)‚àí1)xu‚â• |E[S]| ‚àí |S|+ 1.
Equivalently, we will show that
|E[S]| ‚àí |S| ‚àíX
u‚ààS(dS(u)‚àí1)xu‚â§ ‚àí1.
Let us rewrite the LHS as
|E[S]| ‚àí |S| ‚àíX
u‚ààS(dS(u)‚àí1)xu=X
vw‚ààE[S](1‚àíxv‚àíxw) +X
v‚ààS(xv‚àí1).
Let us inspect each sum separately. Fix an arbitrary f=ab‚ààE[S]. We have that
X
vw‚ààE[S](1‚àíxv‚àíxw) =X
vw‚ààE[S]
1‚àíxv‚àíxw‚àíyf
e,w‚àíyf
e,v
+X
vw‚ààE[S]
yf
e,v+yf
e,w
‚â§1‚àíxa‚àíxb‚àíyf
f,a‚àíyf
f,b+X
vw‚ààE[S]
yf
e,v+yf
e,w
37where the inequality follows from (9) and the fact that f=ab‚ààE[S]. We also have that
X
v‚ààS(xv‚àí1) =X
v‚ààSÔ£´
Ô£≠xv‚àí1 +X
e=vw‚ààEyf
e,wÔ£∂
Ô£∏‚àíX
v‚ààSX
e=vw‚ààEyf
e,w
‚â§X
v‚ààVÔ£´
Ô£≠xv‚àí1 +X
e=vw‚ààEyf
e,wÔ£∂
Ô£∏‚àíX
v‚ààSX
e=vw‚ààEyf
e,w
where the last inequality follows from (10). Before adding the two upper bounds, we also note that
X
vw‚ààE[S]
yf
e,v+yf
e,w
‚àíX
v‚ààSX
e=vw‚ààEyf
e,w‚â§0
by (13). Hence,
X
vw‚ààE[S](1‚àíxv‚àíxw) +X
v‚ààS(xv‚àí1)‚â§1‚àíxa‚àíxb‚àíyf
f,a‚àíyf
f,b+X
v‚ààVÔ£´
Ô£≠xv‚àí1 +X
e=vw‚ààEyf
e,wÔ£∂
Ô£∏
= 1‚àí |V|+X
v‚ààV‚àí{a,b}xv+X
vw‚ààE‚àí{f}(yf
e,v+yf
e,w)
‚â§ ‚àí1
where the last inequality follows from (11).
By the results of Chudak, Goemans, Hochbaum, and Williamson [CGHW98], every integral solution
satisfying strong density constraints corresponds to the indicator vector of a feedback vertex set. Thus, by
Claim 6, an integral solution to the system of inequalities (9), (10), (11), (12), and (13) is the indicator
vector of a feedback vertex set. This completes the proof that the formulation given in the lemma is indeed
an integer linear programming formulation for FVS.
Finally, we bound the integrality gap of the LP-relaxation. By the results of Chudak, Goemans,
Hochbaum, and Williamson [CGHW98], we know that (FVS-IP: SD) is an ILP formulation for FVS and the
integrality gap of its LP-relaxation (FVS-LP: SD) is at most 2. We have already shown that the ILP in the
lemma statement is a valid formulation for FVS. By Claim 6, the LP-relaxation of the ILP in the lemma
statement has integrality gap at most 2.
38
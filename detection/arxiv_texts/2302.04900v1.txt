PETIoT: PEnetration Testing the Internet of Things
Giampaolo Bellaa, Pietro Biondia, Stefano Bognanniband Sergio Espositoc
aDipartimento di Matematica e Informatica, Università degli Studi di Catania, Catania, Italy
bCybersecurity Division, Leonardo S.p.A., Catania, Italy
cDepartment of Information Security, Royal Holloway University of London, Egham, UK
ARTICLE INFO
Keywords :
Cyber Kill Chain
Vulnerability Assessment
VAPT
Ethical Hacking
Attack
Exploitation
Fix
Oﬀensive SecurityABSTRACT
Attackers may attempt exploiting Internet of Things (IoT) devices to operate them unduly as
well as to gather personal data of the legitimate device owners’. Vulnerability Assessment and
Penetration Testing (VAPT) sessions help to verify the eﬀectiveness of the adopted security
measures. However, VAPT over IoT devices, namely VAPT targeted at IoT devices, is an open
research challenge due to the variety of target technologies and to the creativity it may require.
Therefore, this article aims at guiding penetration testers to conduct VAPT sessions over IoT
devicesbymeansofanewcyberKillChain(KC)termedPETIoT.Severalpracticalapplications
of PETIoT conﬁrm that it is general, while its main novelty lies in the combination of attack
anddefencesteps. PETIoTisdemonstratedonarelevantexample,thebest-sellingIPcameraon
AmazonItaly,theTAPOC200byTP-Link,assuminganattackerwhositsonthesamenetwork
asthedevice’sinordertoassessallthenetworkinterfacesofthedevice. Additionalknowledge
is generated in terms of three zero-day vulnerabilities found and practically exploited on the
camera, one of these with High severity and the other two with Medium severity by the CVSS
standard. ThesearecameraDenialofService(DoS),motiondetectionbreachandvideostream
breach. The application of PETIoT culminates with the proof-of-concept of a home-made ﬁx,
based on an inexpensive Raspberry Pi 4 Model B device, for the last vulnerability. Ultimately,
our responsible disclosure with the camera vendor led to the release of a ﬁrmware update that
ﬁxes all found vulnerabilities, conﬁrming that PetIoT has valid impact in real-world scenarios.
1. Introduction
The Internet of Things (IoT) has revolutionised the current technological landscape. It has changed people’s uses
of traditional devices and has, at the same time, sparked oﬀ the deﬁnition of new ones. It would have been otherwise
impossible, for example, to operate kitchen appliances from a smartphone and to conceive a smart plug. The IoT has
virtually no boundaries. Notably, it spans over the application domain of Cyber-Physical Systems (CPSs) and that
of Information-Operation Technology (IT/OT). While CPSs include layman’s devices and applications such as those
in the automotive and healthcare areas, IT/OT concerns industrial systems, where manufacturing and production are
increasingly intertwining and becoming computer-controlled.
Correspondinglywithariseinpervasiveness,theIoThasexperiencedariseintermsofcybersecurityandprivacy
threats. OncethedevicesareconnectedtotheInternet,criminalsgainapotentialopportunitytoabusethemanddeny
their services; for example, the Mirai malware built a botnet to compromise thousands of devices [2]. People’s data
is often the ultimate target of exploitation due to the fact that IoT devices, particularly CPSs, collect a variety of user
preferencesandgenerateddata. Acarwillprocessdatasuchascabinpreferencesandhistoryofvisitedplacesand,in
healthcare, an ultrasound machine will handle data such as personally identiﬁable information and health conditions.
An additional surge of attacks has been reported during the COVID-19 pandemic [19].
The need to assess IoT devices from a cybersecurity and privacy standpoint is, therefore, strongly justiﬁed, hence
the relevance of the contents of this article. One of the relevant approaches is to instruct a team of ethical hackers to
carryoutthatassessmentempirically,oftenimpersonatingcriminals,albeitinacontrolledenvironment. Suchactivities
standunderthebigumbrellaofVulnerabilityAssessmentandPenetrationTesting(VAPT),henceanethicalhackeris
alsoaddressedasatester. TherearevariousincarnationsofVAPT,suchasred-blue-purpleteaming,white-black-grey
approaches and social-engineering assessments, but these are not pivotal for the sequel of this manuscript. VAPT
giamp@dmi.unict.it (G. Bella); pietro.biondi@phd.unict.it (P. Biondi); stefano.bognanni@leonardo.com (S. Bognanni);
sergio.esposito.2019@live.rhul.ac.uk (S. Esposito)
ORCID(s):0000-0002-7615-8643 (G. Bella); 0000-0003-1795-2836 (P. Biondi); 0000-0001-5843-2031 (S. Bognanni);
0000-0001-9904-9821 (S. Esposito)
Bella et al.: Preprint submitted to Elsevier Page 1 of 21arXiv:2302.04900v1  [cs.CR]  9 Feb 2023PETIoT: PEnetration Testing the Internet of Things
sessions happen repeatedly over IoT devices, for example, at device manufacturing time if the manufacturer follows a
SecureSoftwareDevelopmentLifecycle. Alternatively,theymaybeconductedbypotentialbuyersofthedevicewith
the aim of operating a market choice on the basis of the security guarantees that the device oﬀers.
Given the importance of VAPT in the IoT domain, this article poses the following research questions: How to
approach a VAPT session with ethical purposes over IoT devices? Do approaches exist that could be leveraged prof-
itably? Andwhattailoringwouldtheserequire? ThesequestionsarerelevantbecauseVAPTischallengingingeneral,
requiringcreativitybeyondsheercompetence,butisallthemorechallenging,inparticular,overIoTdevicesduetothe
domainsizeandvarietyofadoptedtechnologies. Initsaimtoaddresstheresearchquestionsstatedabove,thisarticle
makestheresearchhypothesesthatVAPTisnotfullyunstructuredasaprocess,andthatitispossibletodistiloutand
frame its fundamental steps speciﬁcally towards the IoT. This is done through the formalization of a Kill Chain (KC),
each KC being a comprehensive description of the various steps forming an attack.
1.1. Contributions
ThisarticledemonstrateshowtogoaboutVAPToverIoTdevicesand,atthesametime,demonstratesthatexisting,
general approaches are useful but require appreciable rethinking. This article introduces PETIoT, a new cyber Kill
Chain (KC) to conduct VAPT sessions over IoT devices. PETIoT is slim, so that testers may begin to apply and
experience it quickly. The value of PETIoT is to enable the penetration tester who approaches the IoT domain with a
clearly deﬁned roadmap to conduct her experiments. As a limitation, it must be stressed that, while a KC is meant to
spell out the steps to take to conduct the activities, it does not prescribe the very tools to use through each step and,
most importantly, does not teach how to use them. A few basic tools will be suggested below as examples for use
duringthedemonstrationoftheKC,butitisﬁrmthatmanyalternativesexistandthatthetestermayusetheirfavourite
ones.
By applying PETIoT using basic freeware tools only, we found three vulnerabilities on the TP-Link TAPO C200,
thebest-sellerdomesticcameraonAmazonItalyatthetimeoftheresearch. Thevulnerabilitiesdiscussedinthisarticle
can be brieﬂy outlined and evaluated (according to CVSS [9]) as follows:
•Vulnerability 1 – Improper neutralization of inbound packets allows complete Denial of Service. It means that
the tester can DoS the camera and make it unusable. This vulnerability has severity 6.5, that is, Medium. We
exploited it by an intensive scan through a vulnerability scanner.
•Vulnerability2–Insuﬃciententropyinencryptednotiﬁcationsallowsbreachofmotiondetection. Itmeansthat
the tester can infer whether the camera detects motion despite the fact that the corresponding notiﬁcations are
encrypted. Thetestercanalsodroptherelevantpackets,therebycausingadenialofthemotiondetectionservice.
This vulnerability has severity 5.4, that is, Medium. We exploited it by TLS packet inspection in a dedicated
experiment.
•Vulnerability 3 – Cleartext transmission of video stream allows breach by unintended actors. It means that the
tester can intercept and interpret the full video stream if the camera users run third-party video players. This
vulnerability has severity 8.8, that is, High. We exploited it by traﬃc eavesdropping in a dedicated experiment.
We also prototype a ﬁx for this vulnerability by leveraging an inexpensive Raspberry Pi 4 Model B device [37]
to transmit the video stream through a cryptographic tunnel.
The three vulnerabilities were zero-day vulnerabilities when we found them because they had not been reported
before. During the responsible disclosure process, the vendor acknowledged all issues discussed in this article and
followed our advice on how to thwart them; the current ﬁrmware release addresses all three vulnerabilities.
In summary, this manuscript answers its research questions by making the following contributions:
•an account on the relevant existing KCs (§2.1);
•an original tailoring of existing KCs into a new KC that combines attack and defence for the ﬁrst time and is
speciﬁc for PEnetration Testing the IoT, here termed PETIoT1(§3);
•apracticaldemonstrationofPETIoTduringaVAPTsessiononarelevant,best-sellerdevice,theTP-LinkTAPO
C200 with ﬁrmware 1.0.16 (§5);
1Thepenetrationtester’sparadoxofattackingfortheultimategoalofdefendingechoestheparadoxicallifeofMarcelAndréHenriFélixPetiot,
who was a doctor as well as a serial killer. Hence the name of our Cyber Kill Chain.
Bella et al.: Preprint submitted to Elsevier Page 2 of 21PETIoT: PEnetration Testing the Internet of Things
•adiscoveryofthreeunknownvulnerabilitiesonthecamera(oneofHighseverityandtwoofMediumseverity),
their exploitation in an experimental environment, their responsible disclosure with the vendor, the design of
their ﬁxes and a proof of concept of the most complicated of the ﬁxes, which requires a cryptographic tunnel
(§5.4);
•ultimately,acompilationoflessonslearnedandrecommendationscontributingtostrengthenthegeneralcyber-
security posture in the IoT domain (§6).
1.2. Generality
PETIoT has taken a long time to shape up as the way it is deﬁned below. It has been gestated over years of
experiments with several IoT devices, starting with printers [5] and continuing with VoIP phones [6, 7]. It guided
VAPT eﬀorts over modern voice personal assistants, notably favouring the discovery of the AvA attack on Amazon
EchoDot[11]. PETIoTwasalsousedoverseveralIPcameras,includingNetvueOrbMini,NetvueVigilCam,Ctronics
CTIPC-380C-4MP and TP-Link TAPO C200, with preliminary results made public about the TAPO C200 [8].
This article conceptualises and describes PETIoT fully for the ﬁrst time. To provide a relevant and complete
demonstration of the practical application of our KC, the article adopts it during a VAPT session against the current
best-seller IP camera on Amazon Italy and discusses the complete ﬁndings. PETIoT was born by abstraction and
generalisation on top of the innumerable vulnerability assessment and penetration testing experiments conducted so
far; also, as a KC, its constituent steps are inherently broad. Therefore, PETIoT is general by design .
1.3. Novelty
The contributions described above are novel at least in two ways. One concerns the very ﬁndings on the Tapo
C200, which were already mentioned above. Not only were the three vulnerabilities unknown but, remarkably, we
shall see how they arise thanks to focus of PETIoT on the device with its network environment rather than solely on
the device as a target to intrude into.
Thesecondelementofnoveltyconcernsthemethodologicalapproachfocusingonethicalhacking,sothatPETIoT
deliberately aims at guiding VAPT activities more than it seeks out to represent known attacks. In consequence, our
KC distinctively culminates with a step devoted at ﬁxing the vulnerabilities that may have been found and exploited.
Ononehand,thisisinnovativeintheKCdomain,whosefocusnormallyisontheoﬀensivestepsandsolelyonthose,
as is the case, to just advance an example, with the popular Mitre ATT&CK [29], while Mitre D3FEND [30] is the
only relevant KC for the defensive activities. On the other hand, PETIoT combines attack and defence because this
is an obvious necessity for the penetration tester, who cannot complete her reports without detailing clear ﬁxing or
mitigation activities for the exploited vulnerabilities.
1.4. Article Structure
This manuscript continues by presentng the related work (Section 2). It then introduces PETIoT (Section 3) and
the basics information and toolkit to apply it in practice (Section 4). It demonstrates PETIoT over the TAPO C200
(Section 5), derives lessons learned and recommendations (Section 6) and concludes (Section 7).
2. Related Work
Therelatedworkcanbeconvenientlypartitionedintotwogroups. OneconcernstheKCsandtheotheroneisabout
the security aspects of IP cameras.
2.1. Cyber Kill Chains
A historical account on KCs is due to Grant et al. [15]. However, at the time of this writing, the best established
KCs can be summarised as follows:
•Lockheed Martin’s Cyber Kill Chain [20] is the pioneering representative. It sets the scene in 2011 with the 7
essential steps of Reconnaissance, Weaponization, Delivery, Exploitation, Installation, Command and Control,
Actions on Objectives.
•Mitre ATT&CK [29] is a subsequent KC oﬀering a ﬁner-grained description of an attack over 14 steps. Most
importantly, it is enhanced with a knowledge base of relevant techniques.
Bella et al.: Preprint submitted to Elsevier Page 3 of 21PETIoT: PEnetration Testing the Internet of Things
•UniﬁedKillChain[34]israthermodern,datingbackto2017. Itspellsout18steps,groupedasthethreeessential
macro-steps Initial Foothold, Network Propagation, Action on Objectives.
•Expanded Cyber Kill Chain [25] extends Lockheed Martin’s with an Internal Kill Chain and a Target Manipu-
lation Kill Chain. It thus oﬀers ﬁner and ﬁner detail.
•Mitre D3FEND [30] “ is at an early stage and is an experimental research project ”. It aims at expressing the
defensive steps against attacks.
Over the years, the trend is clear towards specialising the various steps of Lockheed Martin’s CKC further, with
the result that KCs become more detailed, hence longer. While detail itself may be useful in general, it may turn out
an overkill in certain scenarios, sometimes even reaching redundancy, as it can be argued when KCs are spelled out
in the IoT domain. The reason is an architectural one. Precisely, because the VAPT target is the IoT device, the latter
mustbemadereachabletothetester,otherwisetheactivitieswouldbeaimingatadiﬀerenttarget,suchaspenetrating
the network that hosts the device. A physical reach means that the device is physically given to the tester, who may
theninteractbyallavailabledeviceinterfaces,suchasEthernet,Wi-Fi,Bluetooth,etc. A logicalreach meansthatthe
deviceisonlymadelogicallyaccessibletothetesterbymeansofsomeinterface,typicallybymeansofanIPaddress.
In general, a physical reach allows for a broader test, covering all interfaces, while this is harder to reproduce by a
logical reach only. Also, a physical reach normally implies a logical reach, but the opposite does not hold.
In consequence, there appears to be some redundancy through the application of Lockheed Martin’s CKC to the
IoTdomain. Forexample,Reconnaissanceassuch,whichisaimedatidentifyingandselectingtargets,isvoidbecause
the target is given, hence this step reduces to the sheer gathering of information about the target, for example through
network scanning. Also, Weaponization seems redundant because a basic toolkit may suﬃce to tackle innumerable
devices,asweshallseebelow. WeshallseethatthwartingthesesourcesofredundancycontributestoPETIoTslimness.
Moreover, with VAPT over IoT devices as its goal, PETIoT focuses on the given device with its network environ-
ment,whichoftenseestraﬃcwithsomesupportingserverorcloudaswellasacompanionsoftwareapptoextendthe
minimal user interface of the device. Because of this, also the Installation and Command and Control steps of Lock-
heedMartin’sCKCareunnecessary,uponthebasisthatnosoftwareneedstobemaliciouslyinstalledandoperatedas
in the case of intrusions into the device. Also a reduction of these sources of redundancy will keep PETIoT slim. We
do not believe that the more recent and detailed KC listed above would add signiﬁcant value to VAPT activities over
IoT devices.
Finally, two more works are related. One, of 2018, tailors the KC model to multimedia service with its network
environments [23], but it seems to lack suitable practical demonstration. A more recent one, of 2020, derives a novel
KC from a large number of IoT attacks [18]; while this work is full of insights and relevant information, it seems
speciﬁcally oriented at the creation of zombie devices towards DDoS.
2.2. Security of IP cameras
TherelatedworkconcerningIPcamerasecurityhostsanumberofitems,becauseithasbeenshownthatIPcameras
maysuﬀermultiplesecurityissues,includingmultimediasecurity,networksecurityandcloudsecurity. However,only
a few works are closely related to the contents of this article.
In 2015, Tekeoglu and Tosun looked into the security of cloud-based wireless IP cameras [41]. They studied the
traﬃc generated by a wireless IP camera that is easy to set up for the average home user. Hence, they proved that an
attackercansniﬀtheIPcamera’snetworktraﬃcandwouldbeabletoreconstructtheJPEGimagesfromthedatastream.
Based on their information, their system has some limitations, e.g. their script only reconstructed 253 JPEG images
over about 20 hours of video track. This work relates to ours in its focus on the device with its network environment,
but its aims are more device-speciﬁc than ours of a general KC.
In 2017, Liranzo and Hayajneh presented an analysis of the main privacy and security issues aﬀecting thousands
of IP camera consumers globally [24]. They proposed a series of recommendations to help protect consumers’ IoT
devices in the intimacy of their houses, including security the (remote) connection between the smartphone running
thevideoplayerandthecamera. Thisiscoherentwiththeobservationsandtheﬁndingsreportedinthepresentarticle.
Recently,AbdallaandVaroltackledanIPcamerawithsimilaraimstoours[1],butonlycontributedanassessmentof
basic vulnerabilities such as the use of default passwords. This and similar vulnerabilities would be captured during
the central steps of PETIoT.
The Master thesis mentioned above [17] is of 2022 and targets the TAPO C200 too. It experiments with the
Heartbleed vulnerability aﬀecting the camera ﬁrmware up to version 1.0.10, which is prior to version 1.0.16 of our
Bella et al.: Preprint submitted to Elsevier Page 4 of 21PETIoT: PEnetration Testing the Internet of Things
experiments. It also demonstrates an intrusion into the camera due to CVE-2021-4045 vulnerability, which aﬀects
ﬁrmware up to version 1.1.15, hence also the version of our experiments. However, that vulnerability was only pub-
lishedinMarch2022,whileourexperimentsdatebacktoayearbefore,henceourautomatedscannerscouldnotreport
it because they were lacking the relevant signature. With its focus on the device with its network environment, the
sequel of this article demonstrates that the use of PETIoT unveils additional, unknown vulnerabilities.
3. Deﬁning PETIoT, a Cyber Kill Chain for the IoT
KCscanbeunderstoodasacomprehensivedescriptionofthevariousstepsthatmustbefollowedtocarryoutsome
oﬀensiveactivities. OurresearchstartedbyconsideringexistingKCsandcontinuedbyassessinghowtoleveragethem
towards answering our research questions. As a result, PETIoT was deﬁned in a way to provide those answers and,
therefore, it now guides the penetration tester’s VAPT activities in the IoT domain. In consequence:
•PETIoT spells out VAPT activities. While we are used to KCs that only describe the steps of an intrusion or,
separately, the steps to defend against that, PETIoT combines both for the ﬁrst time simply because it aims at
guiding VAPT activities. These always culminate with reports that not only describe prototypical exploitations
of the vulnerabilities that were found, but also explain how to mitigate in practice if not entirely ﬁx them.
•PETIoT focuses on the IoT device. Existing KCs bear some redundancy when applied to the IoT domain due
to the fact that the target IoT device is made reachable to the tester and most of the needed tools are consoli-
dated. Therefore,redundancyisappreciableintheearlystepsofReconnaissance,whichreducestoinformation
gathering about the device, and Weaponization, which merely leverages a consolidated, basic toolkit.
•PETIoT also focuses on the network environment. While most KCs spell out intrusions into the target, none
paysuﬃcientattentiontotheenvironment,whichisparticularlyrelevantwhenthetargetisanIoTdevice,hence
hastraﬃcwithsupportingserverorcloudandcompanionapp. So,nooﬀensivestepsareneededafterExploita-
tionbecausethereisnosoftwaretooperateremotely,whileActionsonObjectiveshappensduringExploitation.
PETIoT prescribes the following 6 steps:
1.Experiment Setup. The tester is granted physical reach to the IoT device to test, namely is given the device
itself,ormerely logicalreach toit,namelyisprovidedwiththedeviceaddresssuchasanIPoraBluetoothaccess.
Reach is a plausible assumption because the target of the test is the device itself with its network environment,
coherentlywiththescopeofPETIoT.Appropriatesetupsfollow,dependingonthespeciﬁcnetworkinterfaceto
usetoreachthedevice. Thetesterhastoinstallthedeviceinarealisticenvironmenttoenableherselftoprobeit
by the relevant toolkit. The setup is termed non-invasive when the device is installed and not tampered with. It
isinvasivewhenthetesterdisassemblespartsofthedevicewiththeaimofgettingholdofrelevantinformation
that the device would never mean to transmit, such as a private key or a whitelist.
2.Information Gathering. Similarly to other KCs, the tester attempts to acquire as much information as possi-
ble about the functioning of the device, also to unveil potentially hidden features. In a black-box session , that
is, a testing session in which the tester has no information on the target environment at the beginning, this is
normally achieved by probing the device repeatedly through the setup prepared before. For example, crucial
testsaimatunderstandingtheuseofcryptography,itstypeandworkingassumptionssuchastheprotectionofa
cryptographickeyintosomeHardwareSecurityModule. Afurthercapability,althoughexclusivefor white-box
sessions, is that the tester may also assess source codes to derive additional information geared, as always, at
identifyingpossiblevulnerabilities. Infact,duringawhite-boxsession,thetesterhasusuallyaccesstoalldetails
regardingnetwork,coding,policies,etc. Thetesterusesastandardtoolkit(recalledbelow)tointercept,interpret
and, if needed, decipher traﬃc in a passive ( eavesdropping ) or in an active ( man-in-the-middle) fashion.
3.Traﬃc Analysis. It is always worthwhile to attempt to distill out the entire network functioning of the device.
This eﬀort may be interpreted as a reiteration of the previous step through structured experiments aimed at
combining into the full picture the various insights gained about the network traﬃc. For example, a successful
TraﬃcAnalysisoverthenetworkingactivityyieldsasequencediagramdetailingtheexchangesthatoccuramong
allrelevantparticipants. However,itisclearthatthisstepmaynotalwayssucceeddependingontheintricacies
ofthefunctioningofthetargetdeviceaswellasonitsimplementationofdedicatedprotectionmeasuressuchas
the use of randomised response mechanisms and of advanced cryptographic primitives.
Bella et al.: Preprint submitted to Elsevier Page 5 of 21PETIoT: PEnetration Testing the Internet of Things
4.Vulnerability Assessment. Once information is available about the target device, the tester can move on to
study, mechanically or manually, whether vulnerabilities exist. It means that, while standard scanners such as
OpenVAS, Nessus Pro and Nmap with scripting oﬀer valid help, the tester may need to formulate parallel con-
jecturesordevelopspecialscriptsdependingonthetypeoftarget. Forexample,standardscannersmaynotcome
with software connectors for all possible target architectures. Vulnerabilities should be formulated as scenarios
thatwouldbreakatleasttheessentialsecuritypropertiesofconﬁdentiality,integrityandavailability. Thetester
should be prepared to hunt for vulnerabilities at any architectural level, including hardware and software, and,
in particular, at any level of the communication protocols.
5.Exploitation. Notallvulnerabilitiescanbepracticallyexploited,andthisstepaimsatverifyingwhetherthatis
thecase. Exploitationperhapsisthestepthatrequiresmostofthetester’screativityandstubbornness. Itunfolds
through repeated trials whereby the tester takes a rather empirical approach aimed at verifying whether a trial
succeeds. Forexample,onlyspeciﬁcpayloadsmayleadtosuccess,whileallothersmaynot. Exploitationisalso
the core and main target of the entire VAPT activity. The white-box approach or a successful Traﬃc Analysis
followingtheblack-boxonemayfavourthisstepbecausethetesterwouldbemoreeasilydriventhroughprecise
trials. Following the stated focus on the IoT device environment, all oﬀensive activities terminate in this step.
6.Fixing.Once the penetration tester successfully attacks the target device by the exploitation of a vulnerability,
shemustcontinuewithanassessmentonhowtoﬁxtheattack. Fixescouldbeof preventativenature sothat,once
they get deployed over all similar devices on the large-scale production level, the vulnerability will no longer
aﬀectneitherthefuturedevices,northeupdatedones. Whenpreventativeﬁxesarenotpossible,thetestermight
revert to engineering ﬁxes of notiﬁcation nature , which aim at informing the device user when a scenario that
maysuﬀertheattackoccurs—inthehopethattheuserwillknowhowtoﬁndsecurewaystofacethatscenario.
Forexample,ifabrowsercannotfullyverifythecertiﬁcationofthedisplayedURLuptoatrustedrootauthority,
itnotiﬁesitsusersofthatbecauseitwasimpossibletofullypreventtheriskofaman-in-the-middleattack(since
the certiﬁcate does not chain back to a valid root certiﬁcate).
4. Basic toolkit and information
This Section recalls a well-known, basic toolkit in support of any VAPT activity, then continues by outlining the
basic information that is useful to follow the sequel of the manuscript. We consider a basic toolkit to include the
following software tools:
•Ettercap [12] is a suite of tools for Man-in-the-Middle attacks. It can be used to capture network packets, ﬁlter
contents, dissecting protocols, etc. In this work, we will use it to eavesdrop between the Tapo application and
the Tapo camera;
•Nessus [43] is a vulnerability scanner. It is generally used to assess the level of security of a node, or of an
entirenetwork,againstknownattacksandvulnerabilities. Inthiswork,wewilluseittoperformavulnerability
assessment on the TAPO camera.
•Nmap [21] is primarily an utility for network discovery. It can rapidly scan large network to discover running
hosts and services. In this work, we will use it to gather information about the services exposed by the camera;
•SSL packet capture [16] is a strong debugging tool that allows to intercept encrypted traﬃc for subsequent
analysis. In this work, we will use it to interpret SSL traﬃc to and from the Tapo application;
•IPtables [40] is an administration tool used for packet ﬁltering and NAT. It allows an administrator to manage
ﬁrewall rules in the Linux kernel, so that packets with certain characteristics are all handled correctly. In this
work, we will use it to actively interpose between the Tapo application and the Tapo camera;
•Wireshark [45] is network protocol analyser that allows to capture and analyse network packets, following
streams such as TCP or HTTP, and decrypt protocols such as IPSec and TLS. In this work, we will use it to
convert network traﬃc into playable video via the H264 extractor extension.
Bella et al.: Preprint submitted to Elsevier Page 6 of 21PETIoT: PEnetration Testing the Internet of Things
Having seen the relevant tools in support of VAPT, further information is necessary to understand the activities
conductedbelowtodemonstratePETIoT.Asastart,theabilitytoappealtothevideostreamingservicesmaybegained
by using the open source, multi-platform media player VLC [44] and the iSpy DVR [22]. Consolidated protocols
exist to make the streaming work. An essential protocol to integrate the camera with third-party infrastructures and
systems, such as the Real Time Streaming Protocol (RTSP) [36]. IT is a network protocol used for video streaming
and to orchestrate the exchange of media, such as audio and video, across the network. RTSP extends the RTP [38]
and RTCP [39] protocols by adding the necessary directives for streaming, such as:
•Describe, used by the client to obtain information about the desired resource.
•Setup, used to specify how a single media stream is to be transported.
•Play/Pause, used to start or pause video playback.
•Record, used to store a stream.
Further relevant information comes from the Open Network Video Interface Forum (ONVIF), whose aim is to
promote compatibility of video surveillance equipment so that devices made by diﬀerent companies can interoperate.
ONVIF provides an interface for communication with diﬀerent devices through the use of various protocols. It also
provides a few conﬁguration proﬁles to make the best use of the diﬀerent technical features. In particular, proﬁles G,
Q, S and T, are dedicated to video systems, however, the Tapo C200 is only compatible with Proﬁle S [32]. Proﬁle S
is designed for IP-based video systems and involves the use of a compliant device (e.g. Tapo C200) and a compliant
client (e.g. iSpy [22]) that can together conﬁgure, request and control video streaming. The most relevant features of
Proﬁle S concern user authentication, NTP support and H264 [31] audio and video streaming using RTSP.
One of the modern technologies to strengthen security protocols that are based on public-key cryptography is
CertiﬁcatePinning,which“ leveragesknowledgeofthepre-existingrelationshipbetweentheuserandanorganization
or service to help make better security related decisions ” [33]. For example, this is useful for a mobile application
meanttoconnecttoitssupportingserverorcloud. Becausesucharelationshipisknownsincedesigntime,theserver’s
public key certiﬁcate is preinstalled in the application so that the latter will not follow up to encrypted traﬃc from a
diﬀerent peer even if that traﬃc is correctly certiﬁed.
Once an attack is found, measuring its severity is useful for several reasons, notably to promptly bootstrap the
applicable processes during the incident management and response and, with less urgency, to inform the periodical
cybersecurity and data protection risk assessment. A widely established approach to measure attack severity is the
CommonVulnerabilityScoringSystem(CVSS)[9]. WhileafewincarnationsofCVSSexist,thewidelyestablished3.0
versionrequiresthetestertoassignparametersAttackVector(AV),Scope(S),AttackComplexity(AC),Conﬁdentiality
(C), Privileges Required (PR) & Integrity (I), User Interaction (UI) and Availability (A). The system then returns a
score ranging between 0 and 10, with the highest number indicating highest severity.
Finally, the Raspberry Pi 4 Model B device must be mentioned, a rather inexpensive device boasting a Broadcom
BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC at 1.5GHz and several network interfaces. In particular, its
IEEE 802.11ac Wi-Fi and Gigabit Ethernet features will be used below. When needed, its network interface card will
be turned into an access point by means of Hostapd [13].
5. Demonstrating PETIoT
PETIoT needs practical demonstration. This is already available through the previous experiments that were in-
strumentaltodeﬁneandsharpentheverystepsofourKC.Forexample,ExperimentSetupandInformationGathering
were proven essential for the ﬁrst time over printers and phones [6], while Traﬃc Analysis and Vulnerability Assess-
ment turned out much larger in the application described below. Exploitation, in turn, was problematic over Amazon
Echo Dot, a case in which the Fixing step inspired a new breed of preventative security measures that are still being
tested [11].
TooﬀeracompletedemonstrationofPETIoTinthepresentmanuscript,wechosearelevantIoTdevicethatsupports
a paradigmatic application of the kill chain. Of course, the list of possible candidates is never ending, but we decided
thatthebestbalancebetweeninexpensivenessandpopularityliesintheareaofsmall,portablecamerassuchasthose
usedforhomesurveillance,oftenIPcameras[4],andthosetypicallyusedonvehicles,namelydashcameras[35]. With
anestimateofaround770millionIPcamerasusedforCCTVin2019[10],wedecidedtosearchthroughAmazonItaly
Bella et al.: Preprint submitted to Elsevier Page 7 of 21PETIoT: PEnetration Testing the Internet of Things
and chose the no.1 best seller in category “Dom camera”, which includes domestic cameras. As shown in Figure 1,
it is the Tapo C200 by TP-Link, which costs approximately 30 Nand totals over 38.000 rather positive reviews at the
time of this writing.
Figure 1: The Tapo C200 on Amazon Italy
TheC200isanentry-levelIPcamerareleasedin2020. Itstechnicalspeciﬁcationssupportseveralfunctionalities,
such as night vision, resolution up to 3MP, motion detection, acoustic alarm, data storage, voice control, use with
third-party software and webcam mode. We argue that such a popular target is ideal to demonstrate our kill chain, so
thesequelofthisarticlediscusseshowthemainstepsofPETIoTcanbefollowedtoconductaVAPTsessioninpractice
on a real device. In this example, the tester is granted physical reach to the camera, conducts a black-box session of
VAPT on it and concludes with a ﬁx of preventative nature for one of the reported vulnerabilities.
5.1. Experiment Setup
We begin by setting up our experiment over the C200. To operate the camera, a TP-Link account is required to
enable access to the various cloud services available. Access to the TP-Link account is via the Tapo app, which is
available free of charge on Google Play for devices running Android 4.4+ [14] and App Store [3] for those running
IOS 9+. The application has a simple and intuitive user interface, from which it is possible to use and manage the
devices of the Tapo family, including the Tapo C200. The range of services oﬀered for the C200 includes: remote
access and camera control; sharing the camera with other accounts; synchronisation of settings; integration of the
camera with smart home systems; receipt of motion notiﬁcations.
Figure 2 shows the testbed on which the experiments were conducted and how the various devices, including the
attacker’s machines are inter-connected via a Wi-Fi access point also operating as a switch. The testbed consists of:
•A Wi-Fi switch to which the various devices are connected.
•The Tapo C200 IP camera.
•AsmartphoneOneplus8T(Android11,8Core,8GBRAM,128GBstorage)runningSSLPacketCaptureand
the Tapo application.
•A Linux machine on which the attacker runs Ettercap and Wireshark.
•A Linux machine on which the attacker runs the third-party players iSpy and VLC.
WhiletheTapoC200worksnormally,ourtestbedenablesustomonitoritsnetworkenvironmentbymeansofthe
various tools with the aim of extracting useful information for operational analysis.
Bella et al.: Preprint submitted to Elsevier Page 8 of 21PETIoT: PEnetration Testing the Internet of Things
Figure 2: The testbed for the TAPO C200
5.2. Information Gathering
Oncetheexperimentissetupandready,wemoveontoinformationgathering. Thecameraisnowintegratedwith
third-party infrastructures and systems, hence we can probe it through repeated sessions of experiments to gather our
initial knowledge about its functioning. The basic information and toolkit outlined above guide us to conduct such
experiments through this step.
Generally,anNmapscanistheﬁrsttoolthatisusedasitgathersinformationonopenportsandexposedservices.
The Nmap manual oﬀers a large range of scanning options, but simple ones are suitable in this case, mostly because
stealthiness is not a requirement. Ettercap enables the tester’s machine to interpose between the Tapo application and
theTapocamera,thenWiresharkcanbeusedtoderiveadynamicviewoftheexposedservices,namelythetraﬃcthey
generate and receive. Appeals follow to SSL packet capture to interpret traﬃc oriented at the external TAPO server,
and to Nessus to learn about known vulnerabilities that are in place.
In consequence of all the above trials, we learn about the services exposed by the camera and about the speciﬁc
protocols that are used to make them available. Moreover, we ﬁnd out that when the Tapo application and the Tapo
camera are on diﬀerent networks, a classic client-server architecture is used in which the Tapo Server is used to dis-
tribute information, such as the device conﬁguration. Conversely, when both are on the same network, no external
servers are used to control the camera and access the video stream.
No known vulnerabilities are found by the automated Nessus scans conducted through this step. However, it is
remarkable that three unknown ones are manually found later by combining our experience with the gathered infor-
mation.
5.3. Traﬃc Analysis
Ourworkonthissteptailorsinformationgatheringtoanunderstandingoftheprecisemessagesequencesthatﬂow
between the user, the app and the camera. The Traﬃc Analysis eﬀort is now partitioned depending on the software
app that is used to stream from the camera, in particular on whether that software is the proprietary or third-party’s.
5.3.1. Using the Tapo C200 through proprietary software
The sequence diagram in Figure 3 describes the various exchanges that allow the user to access the video stream
through the Tapo application. After choosing one of the initialised devices, the Tapo application logs into the Tapo
C200, obtaining the stoktoken, and this is needed to perform the control and modiﬁcation operations.
Moreprecisely,the stokisatokengeneratedduringauthenticationoftheapplicationtothecamera. First,theTapo
C200 authenticates the user by a username and password, then assigns the stokto the Tapo application. The purpose
of the token is to create a session without having to re-authenticate the application every time the camera settings are
changed. Thevariousrequestsgeneratedbytheapplicationcarrythe stokobtainedinthelastauthenticationphase. In
this way the Tapo C200 only accepts requests from authenticated users.
Following the user’s request to access the video stream, the Tapo application and the Tapo C200 coordinate to
serve that. In particular, the Tapo C200 sends to the application a noncethat is necessary for the construction of a
symmetric key. At this point, both parties calculate the initialisation vector and an AES key in order to later encrypt
Bella et al.: Preprint submitted to Elsevier Page 9 of 21PETIoT: PEnetration Testing the Internet of Things
thevideostreamusingAESinCBCmode. Oncethekeyiscalculated,theTapoapplicationauthenticatesitselftothe
Tapo C200 by providing a “response” tag. Finally, the Tapo C200, after verifying the validity of the response, starts
the video streaming session by encrypting it with the agreed key. This completes the Traﬃc Analysis of the camera
functioning when its proprietary app is used.
Communication in plaintext
Communication over TLS channel
Stream video Encrypted with AES key
Figure 3: Sequence diagram for using the IP camera with the proprietary Tapo application
5.3.2. Using the Tapo C200 through third-party software
Figure 4 describes the outcome of our Traﬃc Analysis eﬀorts targeting the camera use via third-party software.
Using the Tapo application, we ﬁrst need to access the device and change its settings so that the camera can create a
new user for third-party software. After that, the Tapo C200 works with the software pair mentioned above, namely
iSpy and VLC. These are used to carry out a login on the camera so that it initiates a free-to-air media streaming
session. In particular, the diagram shows that the stoktoken is forwarded again to the camera, due to the necessary
creation of the dedicated user for the third-party app to access the camera.
This diagram is derived by mounting a man-in-the-middle attack to the camera and analyse the traﬃc while the
other machine running VLC and iSpy are accessing the camera and receiving the video stream. More precisely:
•On VLC, select the “network resources” section of the player and enter:
rtsp://username:password@
<tapoc200address>/stream/1
Bella et al.: Preprint submitted to Elsevier Page 10 of 21PETIoT: PEnetration Testing the Internet of Things
•On iSpy, conﬁgure the ONVIF S proﬁle to URI:
http://username:password@
<tapoc200address>/onvif/
device_service
Since ONVIF’s S proﬁle does not add any functionality to the video stream, no diﬀerences emerged from the
analysisofthetraﬃcgeneratedforthevideostreamofthetwoplayers. Inparticular,thepacketsanalysedshowedthat,
after access through the speciﬁc URI for ONVIF devices, iSpy uses RTSP in the exact way used by VLC. However,
a remarkable diﬀerence is apparent by comparing the two diagrams discussed above, namely that, when third-party
softwareengageswiththecamera,thisstartsanunencryptedvideostreamingsession. Itfollowsthatsuchcontentsare
intelligible to a man-in-the-middle attacker.
Communication in plaintext
Communication over TLS channel
Figure 4: Sequence diagram for using the IP camera with third party software
5.4. Vulnerability assessment
The sequence diagrams discussed above explain in great detail how the camera works, making a few signiﬁcant
features apparent. In particular, we note that no traﬃc ﬁltering mechanism is there, hence what follows.
Vulnerability 1 – Improper neutralization of inbound packets allows complete Denial of Service. The
camera uses no mechanisms to ﬁlter traﬃc, hence it would honour any message request as soon as pos-
sible, without checking the genuineness of the caller and of the content. It means that an attacker could
maliciouslyattempttoﬂooditwithtraﬃcandmakeitunavailable. Thisvulnerabilityisaspeciﬁcinstance
of weakness “CWE-707: Improper Neutralization” [28].
Bella et al.: Preprint submitted to Elsevier Page 11 of 21PETIoT: PEnetration Testing the Internet of Things
5.4.1. Using the Tapo C200 through proprietary software
Ourvulnerabilityassessmentthencontinuesbytacklingmotiondetection. Thisimportantfeatureworksasfollows:
1. The Tapo C200 detects some movement and sends a notiﬁcation to the TP-Link server.
2. The server receives the notiﬁcation and sends an alert to all devices connected to the account associated with
the camera.
3. The application receives the message and generates a notiﬁcation for the human.
When the Tapo application and Tapo C200 are not on the same network, security in terms of the conﬁdentiality
of the video stream is entrusted to the channel itself on which the stream ﬂows. Using SSL/TLS on port 443, all data
exchanged between the Tapo C200, the TP-Link server and the Tapo application is properly encrypted. In addition,
theTapoapplicationandtheTapoC200usecertiﬁcatePinning. Itfollowsthat,ifinformationneedstobesharedwith
theTP-Linkserver,noSSL/TLSsessionisestablishedtowardsanyentityotherthanaTP-LinkserverwhoseSSL/TLS
certiﬁcate they already have by default. We ﬁnd no vulnerabilities about the implementation of these cryptographic
protocols.
Our manual assessment returns on the way motion detection is implemented, concluding that also the detection
notiﬁcations are cryptographically protected hence should be unintelligible to the attacker. However, we observe a
speciﬁc feature leading to a vulnerability.
Vulnerability 2 – Insuﬃcient entropy in encrypted notiﬁcations allows breach of motion detection. The
size of the motion detection notiﬁcations, despite the fact that these are encrypted, is always the same,
precisely 523 bytes. We therefore report that, by using the Tapo C200 as an oracle, the attacker may
be able to discern movement notiﬁcations based on the size of the messages, without intervening in the
cryptographicscheme,whichremainssecure. Thisvulnerabilityisaspeciﬁcinstanceofweakness“CWE-
331: Insuﬃcient Entropy” [27].
FollowingthisstyleofTraﬃcAnalysis,theattackermaydeduce,forexample,theprecisetimeswhensomeoneisin
thehousethatthecameramonitorsorwhenthehouseisempty. Weshallseebelowinwhatscenariothisvulnerability
can be exploited. Additionally, by ﬁltering and blocking only the messages carrying out a motion detection alert, the
attackercouldeﬀectivelydenytherelevantnotiﬁcationtothelegitimateuserandconvincethevictimthatnomovement
occurs in the area covered by the camera.
5.4.2. Using the Tapo C200 through third-party software
Theuseofthird-partyplayersforvideostreamingiscommonbecauseitisconvenientfortheend-user: itsupports
concurrent streaming from multiple cameras while the native app does not. With the increasing popularity of these
devices, perhaps due to their low price and to the widespread need for surveillance, third-party players are becoming
increasingly popular. Still, we found a feature that causes a vulnerability.
Vulnerability3–Cleartexttransmissionofvideostreamallowsbreachbyunintendedactors. Becausethe
ONVIFproﬁleSislimitedtoprovidinganinterfacefortheuseofRTSP,bothstreamingthroughONVIF
onport2020andRTSPonport554donotsupportencryption,hencethereisnosecuritymeasuretoensure
conﬁdentialityofthevideostream. Infact,afterconﬁguringtheTapoC200tousethesesystems,whenever
a request is made, the video stream is sent in the clear by H264 encoding. This is clearly insecure, as the
attacker could intercept the stream and decode it so that it would become fully intelligible. Also for this
vulnerability,towhatextentitcanbeexploitedwillbeseenbelow. Thisvulnerabilityisaspeciﬁcinstance
of weakness “CWE-319: Cleartext Transmission of Sensitive Information” [26].
5.5. Exploitation
This Section reports on the exploitation experiments corresponding to the vulnerabilities discussed above. It is
possible to exploit all three vulnerabilities reported above at least for an attacker who has access to the same network
on which the TAPO C200 operates. This is the setup that is used through our exploitation eﬀorts reported below.
Bella et al.: Preprint submitted to Elsevier Page 12 of 21PETIoT: PEnetration Testing the Internet of Things
5.5.1. Denial of Service
A Denial of Service (DoS) is a drastic malfunction of a device due to some form of resource exhaustion. Such
attackstendtounderminequalityand,eventually,availabilityofaservicebyoverloadingitwithanarbitrarilynumber
of requests.
Figure 5: Crash of the Tapo C200 camera
We succeeded in exploiting the vulnerability that allows DoS on the Tapo C200 camera, that is, Vulnerability 1.
In fact, an intensive scan by Nessus makes the device crash, as it can be seen from the red led in Figure 5. After the
crash, the device reboots. As also occurred elsewhere, this may be due to “ insuﬃcient memory speciﬁc to TCP/IP
stackleadingtoasmallamountofprobesconsumingitallandcausingDoS ”butweare“ unabletodeterminewhatthe
root cause is in this situation because we do not possess information about the TCP/IP implementation on the remote
host” [42].
Figure 6 shows the CVSS score that we calculated for Vulnerability 1. As there is a complete loss of availability
foreveryserviceoﬀeredbythecamera,theAvailabilityparameterissettoHigh,leadingtothe6.5CVSSscore,which
evaluates to Medium.
Figure 6: CVSS score calculated for Vulnerability 1 – Denial of Service
5.5.2. Breach of motion detection
ToexploitVulnerability2anddemonstratethatitispracticallyfeasible,wedeviseaspecialexperimentconsisting
of two stages. A capture stage, namely to use the Tapo C200 to record a public place; a processing stage, namely to
verify whether recorded events can be predicted correctly by intercepting encrypted motion detection notiﬁcations.
We conducted the capture part of the experiment by recording a suburban street of our hometown overnight back in
Bella et al.: Preprint submitted to Elsevier Page 13 of 21PETIoT: PEnetration Testing the Internet of Things
June 2021. For the processing part, we intercepted packets using Ettercap then selected SSL/TLS packets of length
523 every 10 minutes. The outcome is represented in the chart in Figure 7.
Figure 7: Packets carrying notiﬁcations of motion detection from an overnight capture
It can be seen that starting at 23:00, the amount of packets begins to decrease until about 3:00. From 3:30 it is
possible to see an increase in packets reaching a maximum after 5:00. We remark that the chart is solely built out
of encrypted data. The trend of the curve is consistent with what could be expected from overnight traﬃc, but the
experiment continued to conﬁrm that by comparing the chart with the actual recorded video. As a result, the charted
packets match recorded movements precisely. For example, Figure 8 shows a frame taken at about 00:05, when a car
can be seen in transit, while the chart shows 10 motion detection packets at the subsequent sampling time.
Figure 8: One of the frames at 00:05 recording a moving car
If on one hand our experiment can be interpreted as a conﬁrmation of the reliability of the motion detection func-
tionality, it becomes apparent, on the other hand, that such a function leaks relevant information due to the strictly
deterministic use of encryption. As mentioned, an attacker could proﬁtably take advantage of such an exploit. If the
cameraisusedtoprotectahousehold,theadversarycouldinferwhetherthelegitimateuserisathomeornot,basedon
thecapturedmotiondetectionnotiﬁcations. Furthermore,Ettercapcanbeusedtointerceptmotiondetectionmessages
and appropriate Iptables rules deﬁned to prevent their delivery, thereby denying the motion detection service.
Having veriﬁed how to exploit Vulnerability 2, we are ready to score it by CVSS. Figure 9 shows the resulting
score, of 5.4, thus Medium relevance.
5.5.3. Breach of video stream
ToverifywhetherVulnerability3canbeexploited,weneedtodemonstratehowanattackercouldobtainthevideo
stream transmitted using third-party software. We conduct an experiment on the machine running the multimedia
playersbystartingamultimediasessionwiththeTapoC200. Atthesametime,theothermachineisactingasaMITM
to intercept the traﬃc exchanged between the other two devices. Traﬃc is ﬁrst interpreted by using Wireshark. It is
Bella et al.: Preprint submitted to Elsevier Page 14 of 21PETIoT: PEnetration Testing the Internet of Things
Figure 9: CVSS score calculated for Vulnerability 2 – Breach of motion detection
thenpossibletousetheH264extractortooltoreconstructtheentirevideostreamfromitsframes,whichareshownin
Figure 10. It is clear that lack of encryption makes the success of this exploit relatively easy to achieve.
Figure 11 shows the CVSS score we calculate for this vulnerability: there is a High loss of Conﬁdentiality as the
adversary is able to read the whole video stream; Integrity loss is High as well, as the adversary could replace every
H264 frame with an entirely diﬀerent one, or could tamper with the sent frames; ﬁnally, Availability loss is High as
theadversarycoulddropallH264frames,therebypracticallydiscardingtheentirevideostream. ThisleadstoaCVSS
score of 8.8 for this vulnerability, which evaluates to High severity.
Figure 10: Example intercepted H264 frames
5.6. Fixing
The last step of PETIoT prescribes the deﬁnition of countermeasures for the vulnerabilities that may have been
found and exploited. In the particular case of the Tapo C200, the ﬁrst vulnerability could be addressed by standard
ﬁltering strategies to mitigate denial-of-service attacks at kernel level and at ﬁrewall level. Vulnerability 2 could be
addressed by randomising the size of the frame carrying the motion detection notiﬁcation, and Vulnerability 3 by
Bella et al.: Preprint submitted to Elsevier Page 15 of 21PETIoT: PEnetration Testing the Internet of Things
Figure 11: CVSS score calculated for Vulnerability 3 – Breach of video stream
adding a cryptographic tunnel to the video stream.
Theimplementationofsuchﬁxesclearlyrequiresupgradestothecameraproprietarysoftware,whichwecannotdo.
However, we investigated various home-made setups as alternative ﬁxes, and the sequel of this Section demonstrates
themagainstVulnerability3. Theideabehindourownsolutiontoprotectthevideostreaminthethirdpartyscenario
is to use the Raspberry Pi 4 Model B as an access point of the Tapo C200 in order to modify the traﬃc in transit by
applying a layer of encryption. One Pi suﬃces to secure one camera but it must be remarked that this is only meant
asaproofofconceptofourﬁx,whilethecryptographictunnelthatthePicontributestoestablishbetweenthecamera
and the video player should be implemented by the vendor in the camera ﬁrmware instead.
5.6.1. Upgrading the sequence diagram
AsequencediagramrepresentingtheinsertionofthePidevicewhentheTapoC200workswiththird-partysoftware
isshowninFigure12. Itcanbeseenthatthepresenceofthenewdeviceistotallytransparenttotheuser,sothatshecan
usetheserviceexactlyassheusedtointheoriginalscenario. TheessentialdiﬀerenceisthatthePirelaysthecleartext
video stream to the player but adds the desired encryption layer. It is clear that the new diagram makes sense against
thesamethreatmodelconsideredbefore,whichseesmaliciousactivitywithinthesamenetworkthatinterconnectsthe
devices. However, the upgraded diagram assumes that the attacker cannot sneak in through the connection between
the camera and the Pi, an assumption that can be realistically enforced in practice by connecting solely the Pi and
thecameraon adedicatedSSID.This isonlyaproof-of-concept oftheﬁx,while thementionedcryptographictunnel
should be implemented by the vendor in the camera ﬁrmware, so as to thwart the odds that the attacker interposes.
5.6.2. Upgrading the testbed
TheRaspberryPi4ModelBhasanetworkcardthatexposesawiredandawirelessinterface. Itwasthenpossible
to connect the device to the testbed switch by ethernet cable, while the Pi also exposes a separate Wi-Fi network to
which the Tapo C200 can connect. Figure 13 shows the resulting network architecture. More precisely, the Pi can be
conﬁgured to act as an access point for the camera by Hostapd and some DHCP tweaks.
5.6.3. Attempting exploitation of Vulnerability 3 again
Inordertodemonstratetheeﬀectivenessofourhome-madeﬁx,thesameexperimenttoexploitVulnerability3was
carried out again, but this time the execution of the H264 had no luck. Figure 14 shows that the intercepted traﬃc is
unintelligible, hence the execution of the H264 extractor tool could not produce valid results.
5.6.4. A glimpse at the implementation of encryption
A fundamental prerequisite was to conﬁgure IPtables on the Raspberry Pi with the policy in Listing 1:
Code 1: Conﬁguration of IPtables for encryption
iptables −A FORWARD −m
−−physdev −is−in wlan0 −p udp
−s TAPOC200_ADDRESS_IPV4
−j NFQUEUE −−queue num 1
Bella et al.: Preprint submitted to Elsevier Page 16 of 21PETIoT: PEnetration Testing the Internet of Things
Communication in plaintext
Communication over TLS channel
Video stream encrypted with symmetric AES key
Figure 12: Sequence diagram for tunnelling the Tapo C200 video stream through a Raspberry Pi 4 Model B
Figure 13: The testbed for the TAPO C200 with the Raspberry Pi 4 Model B
iptables −A INPUT −A FORWARD −m
−−physdev −is−in wlan0 −f−j DROP
The ﬁrst rule makes it possible to intercept packets in transit (FORWARD chain) from the network interface (-m
–physdev-is-inwlan0)transportedwithUDP(-pudp)comingfromtheTapoC200(-sTAPOC200_ADDRESS_IPV4)
Bella et al.: Preprint submitted to Elsevier Page 17 of 21PETIoT: PEnetration Testing the Internet of Things
Figure 14: A sample of encrypted network traﬃc
andthentosendthemonqueue1. Afterthat,thesecondruleeliminatesallpossiblefragmentsofthepacketsintransit,
in order to avoid sending partial packets.
Oncetheﬁrewallqueuesupthepacketsasdiscussed,thePythonscriptshowninListing2,encryptsthepacketsin
thequeue. Thescriptretrievespacketsfromthequeue,extractsthepayload(byskipping28bytesofheaders),encrypts
it and sends it back to the recipient’s address.
Code 2: Encryption script
def encrypt ( packet ):
cipher_suite = Fernet (key)
encoded_text = cipher_suite . encrypt
( packet . get_payload ()[28:])
pkt = IP( packet . get_payload ())
UDP_IP = pkt [IP ]. dst
UDP_PORT = pkt [UDP]. dport
MESSAGE = encoded_text
sock = socket . socket ( socket .AF_INET,
socket .SOCK_DGRAM)
sock . sendto (MESSAGE,
(UDP_IP, UDP_PORT))
packet . drop ()
5.6.5. A glimpse at the implementation of decryption
A conﬁguration of IPtables was also necessary for the client machine running third-party video player in order to
enable it to decrypt the encrypted stream originating with the Pi. Listing 3 shows the policy.
Bella et al.: Preprint submitted to Elsevier Page 18 of 21PETIoT: PEnetration Testing the Internet of Things
Code 3: Conﬁguration of IPtables for decryption
iptables −A INPUT −p udp
−s RASPBERRY_ADDRESS_IPV4
−j NFQUEUE −−queue num 2
This policy intercepts incoming packets (INPUT chain) transported with UDP (-p udp) coming from the Pi (-s
RASPBERRY ADDRESS _ IPV4) and then sends them on queue 2.
ThecorrespondingscriptfordecryptingthepacketsisshowninListing4. Itfetchespacketsfromthequeue,extracts
the payload and decrypts it before accepting it.
Code 4: Decryption script
def decrypt ( packet ):
cipher_suite = Fernet (key)
decoded_text = cipher_suite . decrypt
( packet . get_payload ()[28:])
pkt = IP( packet . get_payload ())
UDP_IP = pkt [IP ]. dst
UDP_PORT = pkt [UDP]. dport
MESSAGE = decoded_text
sock = socket . socket ( socket .AF_INET,
socket .SOCK_DGRAM)
sock . sendto (MESSAGE,
(UDP_IP, UDP_PORT))
packet . drop ()
6. Lessons learned and recommendations
TheresearchanddevelopmentsdiscussedabovetaughtusthatthenotionofaKillChainisusedratherbroadlyinthe
ethicalhackingcommunity. Therefore,thisarticleaimed,ﬁrstandforemost,atpreciseness. Theﬁrstlimitationarising
from the state of the art was the separation between KCs for attack or for defence, whereas both are indispensable
during VAPT activities, hence PETIoT combines them. Moreover, we learned and experienced that each KC comes
withaprecisefocus,which,bynecessityarisingfromthe(im)maturityofthestateoftheart,isnotalwaystakenstrictly
by practitioners. For example, Lockheed Martin’s CKC concerns intrusions into a target device, other KCs detail the
intrusion process further, while others still concern operations that are internal to the target. Then, we saw how steps
thatareestablishedwithinotherKCsbecomeredundantinPETIoTduetothefocusontheIoTdomain,orunnecessary
due to the focus on the device environment.
WhatisnotedaboveallowedPETIoTtostayveryslimhence,arguably,easilyapplicableinpractice,sothatitisthe
recommendedchoice forthepenetration testerwhois taskedwithan IoTdevice, providingthemost eﬀectivestepsto
focusonthedeviceenvironment. Evenasaresultofthisrecommendation,whichhasbeendemonstratedthroughoutthe
presentarticle,itisﬁrmthatthestateoftheartremainsuseful. Forexample,asimpliﬁcationofLockheedMartin’sCKC
asexplainedaboveisrecommendedtoguideactualintrusionactivitiesinanIoTdevicebecausetheKCisgeneralabout
intrusionsinto anydevice. Notably,arecentMaster’sthesis[17]maybeinterpretedinsupportofthisrecommendation
despitethefactthatthethesisitselfdoesnotmakeitexplicitthatitis,infact,applyingaKC.Conversely,PETIoTcould
be applied to any device beyond the IoT to instruct VAPT activities focused on the environment of the device.
The very demonstrator that was tackled, the TAPO C200, also taught us general lessons. Because ﬂooding this
device (and similar ones, as noted over other devices discussed elsewhere) is rather simple, not just household chores
butalsosensitivemonitoringsuchasovernewbornsorhouseperimetersareatrisk. Therefore,itisrecommendedthat
thisandeveryIoTdeviceimplementsappropriatetraﬃcﬁlteringmeasures. Also,arobbercouldproﬁtablyexploitthe
breachofmotiondetectiontoinferwhenatargethouseholdisverylikelytobeunmanned. Theconsequentrecommen-
dation is to randomise the motion detection signal on this and similar devices to minimise its predictability. Finally,
Bella et al.: Preprint submitted to Elsevier Page 19 of 21PETIoT: PEnetration Testing the Internet of Things
thevideostreambreachisclearlyintrusive,henceanaturalrecommendationisthatnounencryptedstreameverleaves
any IP camera, independently of the use case. The camera vendor acknowledged all three vulnerabilities through the
responsible disclosure process that we followed with them, so that the current ﬁrmware version of the TAPO C200
ﬁxes all vulnerabilities discussed in this article.
7. Conclusions
This article aimed at facilitating the adoption of the KC approach for the sake of ethical hacking in the IoT appli-
cation domain. By deﬁning the PETIoT KC for IoT devices, the article showed how penetration testers can follow a
KC during VAPT sessions. PETIoT is slim and readily applicable. Its focus is on how the tester can violate a device
she can reach, either physically or logically. Our KC insists on a ﬁxing step for devising preventative or notiﬁcation
measures and thwart the vulnerabilities that may have been found and exploited.
In consequence, our research questions can be answered by noting that, in general, there do exist approaches that
canbeleveragedtowardsVAPTintheIoTdomainalbeitwithappreciabletailoringandthat,inparticular,PETIoTcan
be applied beside a simpliﬁed version of Lockheed Martin’s CKC.
To demonstrate PETIoT, we followed it to engage into a VAPT session on the best-selling IP camera on Amazon
Italy, the TAPO C200 by TP-Link. Under speciﬁc circumstances, three vulnerabilities arose, one in terms of denial
of service, the other two in terms of privacy of the camera users and overall security of the services that the camera
exposestothem. Itisfoundthatthetestercan,respectively,understandmotiondetectionsignalsfromcryptographically
protected notiﬁcations, and breach the captured video when it is streamed unencrypted towards a third-party player.
With a CVSS score of 8.8, the last vulnerability, in particular, is of High severity, and a proof-of-concept ﬁx for it
was provided. Responsible disclosure with the vendor led to ﬁxing all reported vulnerabilities in the latest ﬁrmware
released for the camera.
PETIoThasbeengestatedoutofyearsofexperimentswithseveraltypesofIoTdevices. Wehavebeenevaluating
itsbeneﬁtsempiricallyoverthemanydevicesourresearchgrouphasbeenbesieging. Theoutcomeshavealwaysbeen
very positive, conﬁrming that PETIoT eﬀectively drives the testers through the operations, saving time, although any
KC may require several sub-steps such as scripting, fuzzing, probing, physical tampering, etc, which depend on the
precise architecture and functions of the target device as well as on the tester’s skillset. Future work includes further
applications of our KC to more devices, and this will be facilitated by the popularity of the techniques experienced
overtheTAPOC200,includingONVIFproﬁlesandRTSP.ItseemsfairtoconcludethatourdemonstrationofPETIoT
gainedusanin-depthunderstandingofthetargetcamerafromacybersecurityandprivacystandpoint,henceitiswell
worth employing on more IoT devices.
8. Acknowledgements
We are grateful to Angelo Zinna for contributing to the experiments. This research was supported by “Linea di
intervento 2, progetto MEGABIT” of funding programme “PIAno di inCEntivi per la RIcerca di Ateneo 2020/2022
(PIACERI)” of University of Catania, and open access was supported by “Linea di Intervento 4” of the same funding
programme.
References
[1] Abdalla, P., Varol, C., 2020. Testing iot security: The case study of an ip camera, in: 8th International Symposium on Digital Forensics and
Security (ISDFS), pp. 1–5. doi: 10 :1109/ISDFS49300 :2020 :9116392.
[2] Antonakakis, M., et al., 2017. Understanding the Mirai Botnet, in: 26th USENIX Security Symposium (USENIX Security 17), USENIX
Association, Vancouver, BC. pp. 1093–1110.
[3] Apple Store, 2022. TP-Link Tapo App. https://apps :apple :com/us/app/tp-link-tapo/id1472718009 .
[4] Asmag security and IoT, 2019. Smart home camera conﬁrms popularity in the market. https://www :asmag :com/showpost/28003 :aspx.
[5] Bella, G., Biondi, P., 2019. You Overtrust Your Printer, in: Romanovsky, A., Troubitsyna, E., Gashi, I., Schoitsch, E., Bitsch, F. (Eds.),
ComputerSafety,Reliability,andSecurity,SpringerInternationalPublishing,Cham.pp.264–274. doi: 10 :1109/FMEC49853 :2020 :9144875.
[6] Bella,G.,Biondi,P.,Bognanni,S.,2022. Multi-serviceThreats: AttackingandProtectingNetworkPrintersandVoIPPhonesAlike. Elsevier
Internet of Things 18. doi: 10 :1016/j :iot :2022 :100507.
[7] Biondi,P.,Bognanni,S.,Bella,G.,2020. Voipcanstillbeexploited-badly,in: 2020FifthInternationalConferenceonFogandMobileEdge
Computing (FMEC), pp. 237–243. doi: 10 :1109/FMEC49853 :2020 :9144875.
[8] Biondi,P.,Bognanni,S.,Bella,G.,2021. Vulnerabilityassessmentandpenetrationtestingonipcamera,in: 20218thInternationalConference
on Internet of Things: Systems, Management and Security (IOTSMS), pp. 1–8. doi: 10 :1109/IOTSMS53705 :2021 :9704890.
Bella et al.: Preprint submitted to Elsevier Page 20 of 21PETIoT: PEnetration Testing the Internet of Things
[9] Common Vulnerability Scoring System, 2022. CVSS. https://www :first :org/cvss/ .
[10] Cosgrove,E.,2019. Onebillionsurveillancecameraswillbewatchingaroundtheworldin2021,anewstudysays. https://www :cnbc :com/
2019/12/06/one-billion-surveillance-cameras-will-be-watching-globally-in-2021 :html.
[11] Esposito,S.,Sgandurra,D.,Bella,G.,2022. AlexaVersusAlexa: ControllingSmartSpeakersbySelf-IssuingVoiceCommands,in: Proceed-
ings of the 2022 ACM on Asia Conference on Computer and Communications Security, Association for Computing Machinery, New York,
NY, USA. p. 1064–1078. URL: https://doi :org/10 :1145/3488932 :3497766, doi: 10 :1145/3488932 :3497766.
[12] Ettercap, 2021. Ettercap project. https://www :ettercap-project :org/.
[13] Gentoo, 2022. Hostapd. https://wiki :gentoo :org/wiki/Hostapd .
[14] Google Play Store, 2022. TP-Link Tapo. https://play :google :com/store/apps/details?id=com :tplink :iotŹhl=itŹgl=US .
[15] Grant,T.,Burke,I.,vanHeerden,R.,2012.ComparingModelsofOﬀensiveCyberOperations,in: 7thInternationalConferenceonInformation
Warfare and Security, p. 108.
[16] Grey Shirts, 2022. Packet Capture. https://play :google :com/store/apps/details?id=app :greyshirts :sslcapture .
[17] Gustafsson, H., Kvist, H., 2022. Cyber Security Demonstrations using Penetration Testing on Wi-Fi Cameras. https://www :diva-
portal :org/smash/record :jsf?pid=diva2:1679623 .
[18] Haseeb, J., Mansoori, M., Welch, I., 2020. A Measurement Study of IoT-Based Attacks Using IoT Kill Chain, in: 19th IEEE In-
ternational Conference on Trust, Security and Privacy in Computing and Communications (TrustCom), pp. 557–567. doi: 10 :1109/
TrustCom50675 :2020 :00080.
[19] Helpnetsecurity, 2021. IoT malware attacks rose 700% during the pandemic. https://www :helpnetsecurity :com/2021/07/20/iot-
malware-attacks-rose/ .
[20] Hutchins,E.,Cloppert,M.,Amin,R.,2011. Intelligence-DrivenComputerNetworkDefenseInformedbyAnalysisofAdversaryCampaigns
and Intrusion Kill Chains. Leading Issues in Information Warfare & Security Research 1.
[21] Insecure, 2022. Nmap. https://nmap :org/book/man :html.
[22] iSpyConnect, 2022. iSpy. https://www :ispyconnect :com/.
[23] Kim,H.,Kwon,H.,Kim,K.K.,2019. Modiﬁedcyberkillchainmodelformultimediaserviceenvironments. MultimediaToolsandApplica-
tions 78, 3153–3170. doi: 10 :1007/s11042-018-5897-5 .
[24] Liranzo,J.,Hayajneh,T.,2017.Securityandprivacyissuesaﬀectingcloud-basedIPcamera,in: 2017IEEE8thAnnualUbiquitousComputing,
Electronics and Mobile Communication Conference (UEMCON), pp. 458–465. doi: 10 :1109/UEMCON :2017 :8249043.
[25] Malone, S., 2016. The Expanded Cyber Kill Chain Model. https://www :blackhat :com/docs/us-16/materials/us-16-Malone-
Using-An-Expanded-Cyber-Kill-Chain-Model-To-Increase-Attack-Resiliency :pdf.
[26] MITRE,2006a. CWE-CWE-319: CleartextTransmissionofSensitiveInformation(4.9). https://cwe :mitre :org/data/definitions/
319 :html.
[27] MITRE, 2006b. CWE - CWE-331: Insuﬃcient Entropy (4.9). https://cwe :mitre :org/data/definitions/331 :html.
[28] MITRE, 2008. CWE - CWE-707: Improper Neutralization (4.9). https://cwe :mitre :org/data/definitions/707 :html.
[29] MITRE, 2022a. Mitre Att&ck. https://attack :mitre :org/.
[30] MITRE, 2022b. Mitre Def3end. https://d3fend :mitre :org/.
[31] ONVIF, 2019. ONVIF Proﬁle S Speciﬁcation. https://www :onvif :org/wp-content/uploads/2019/12/ONVIF_Profile_-
S_Specification_v1-3 :pdf.
[32] ONVIF, 2022. Conformant Products. https://www :onvif :org/conformant-products/ .
[33] OWASP, 2022. Certiﬁcate and Public Key Pinning. https://owasp :org/www-community/controls/
Certificate_and_Public_Key_Pinning .
[34] Pols, P., 2021. The Uniﬁed Kill Chain. https://www :unifiedkillchain :com/.
[35] ProClip, 2020. The Rising Popularity of Dash Cameras. https://blog :proclipusa :com/the-rising-popularity-of-dashcams .
[36] Rao, A., Lanphier, R., Schulzrinne, H., 1998. Real Time Streaming Protocol (RTSP). RFC 2326. doi: 10 :17487/RFC2326 .
[37] Raspberry Pi foundation, 2021. Raspberry Pi 4 Model B. https://www :raspberrypi :org/products/raspberry-pi-4-model-b/ .
[38] RFC, 2003. RTP: A Transport Protocol for Real-Time Applications. https://tools :ietf :org/html/rfc3550 .
[39] Schooler, E., Ott, J., Chesterﬁeld, J., 2010. RTP Control Protocol (RTCP) Extensions for Single-Source Multicast Sessions with Unicast
Feedback. RFC 5760. doi: 10 :17487/RFC5760 .
[40] Team, N.C., 2022. iptables(8) - Linux man page. https://linux :die :net/man/8/iptables .
[41] Tekeoglu, A., Tosun, A.S., 2015. Investigating Security and Privacy of a Cloud-Based Wireless IP Camera: NetCam, in: 2015 24th Interna-
tional Conference on Computer Communication and Networks (ICCCN), pp. 1–6. doi: 10 :1109/ICCCN :2015 :7288421.
[42] Tenable Community, 2021. Applications on a host being scanned crash while Nessus is scanning the host. https:
//community :tenable :com/s/article/Applications-on-a-host-being-scanned-crash-while-Nessus-is-scanning-
the-host .
[43] Tenable Network Security, 2022. Nessus. https://www :tenable :com/products/nessus .
[44] Videolan, 2022. VLC. https://www :videolan :org/vlc/index :it :html.
[45] Wireshark, 2022. Wireshark project. https://www :wireshark :org/.
Bella et al.: Preprint submitted to Elsevier Page 21 of 21
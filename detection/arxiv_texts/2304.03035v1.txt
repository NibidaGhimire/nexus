Optimal allocation strategies in platform trials
Marta Boll Roig1, Ekkehard Glimm2, Tobias Mielke3, and Martin Posch1
(martin.posch@meduniwien.ac.at)
1Section for Medical Statistics, Center for Medical Data Science, Medical University of Vienna, Vienna
2Advanced Methodology and Data Science, Novartis Pharma AG, Basel
3Statistics and Decision Sciences, Janssen-Cilag GmbH
Abstract
Platform trials are randomized clinical trials that allow simultaneous comparison of multiple interven-
tions, usually against a common control. Arms to test experimental interventions may enter and leave
the platform over time. This implies that the number of experimental intervention arms in the trial
may change over time. Determining optimal allocation rates to allocate patients to the treatment and
control arms in platform trials is challenging because the change in treatment arms implies that also
the optimal allocation rates will change when treatments enter or leave the platform. In addition, the
optimal allocation depends on the analysis strategy used. In this paper, we derive optimal treatment
allocation rates for platform trials with shared controls, assuming that a stratied estimation and testing
procedure based on a regression model, is used to adjust for time trends. We consider both, analysis
using concurrent controls only as well as analysis methods based on also non-concurrent controls and
assume that the total sample size is xed. The objective function to be minimized is the maximum of the
variances of the eect estimators. We show that the optimal solution depends on the entry time of the
arms in the trial and, in general, does not correspond to the square root of kallocation rule used in the
classical multi-arm trials. We illustrate the optimal allocation and evaluate the power and type 1 error
rate compared to trials using one-to-one and square root of kallocations by means of a case study.
1 Introduction
Platform trials compare multiple experimental treatments to a control. They are multi-arm multi-stage
trials with the additional feature of allowing arms to enter and leave the trial over time [ 1,2,3,4]. As in
multi-arm trials, the common trial infrastructure permits shortening the required time and reducing the
costs to evaluate new interventions. In addition, the shared control group increases the statistical eciency
compared to separate parallel group trials and requires fewer patients to be allocated to the control group.
However, due to the additional exibility of platform trials, their design and analysis are more complex.
A major concern when designing and analysing platform trials is the potential presence of time trends, due
to, for instance, changes in the patient population being recruited. Especially, if the allocation rates between
each of the active treatment arms and the control group vary over time, such time trends can lead to biased
treatment eect estimates and hypothesis tests [ 5,6,7,8]. To address such biases, time period-adjusted
analyses based on regression models have been proposed [ 9,10], where the time periods are dened as the
time spans where the allocation ratios stay constant.
Time trends are of an even larger concern when so-called non-concurrent controls are used for treatment-
control comparisons. Here, for a specic experimental treatment arm, non-concurrent controls refer to the
patients allocated to the control group before the arm under evaluation enters the platform trial. In contrast,
concurrent controls are the control group patients randomised concurrently (in time) to those in the treatment
arm. While including non-concurrent controls in the estimation of treatment eects can increase the power of
testing treatment-control dierences and reduce the variance of the estimates, they can also introduce bias in
the estimates due to time trends if not adjusted for [ 11,12,13]. Also in this context, time period-adjusted
analyses based on regression models have been proposed. They can adjust for potential time trends, and
thus control the type 1 error and give unbiased estimates, if time trends in all treatment arms are equal and
additive on the model scale [14].
1arXiv:2304.03035v1  [stat.ME]  6 Apr 2023In this paper, we derive optimal treatment allocation rates for platform trials under the assumption that a
time period-adjusted analysis based on regression models is used. To understand the principles of optimal
allocation strategies in platform trials, we focus on the simple setting of a platform trial with two treatment
arms and a shared control, where one of the treatment arms enters when the trial is already ongoing. For
this platform trial design, we aim to clarify which design elements the optimal allocation ratios depend on
and compare the optimal platform trial design with the optimal multi-arm trial design. For the latter, it is
well known that for kexperimental treatments (and under some additional assumptions), the standard error
of treatment eect estimates is minimized for 1 : 1 : :::: 1 :p
kallocation [15].
Several authors discuss the problem of adding a new treatment arm during the ongoing trial using dierent
optimality criteria and statistical analysis procedures. Cohen et al. [16]reviewed statistical methodologies
and examples of trials with newly added treatment arms. Choodari-Oskooei et al. [17]centered the attention
on the family-wise type 1 error rate when new arms are added. Elm et al. [18]evaluated the operating
characteristics of pairwise comparisons of trials adding a new arm over the trial under dierent approaches.
Ren et al. [19]described statistical considerations with respect to type 1 error and power in three-arm
umbrella trials. They also discussed the optimal allocation ratio for the control arm in periods in which
treatment arms overlap, when minimising the sum of variances of the treatment eect estimators. However,
to the best of our knowledge, Bennett and Mander [20]is the only article in which the optimal allocation rates
in platform trials are investigated. They optimised the allocation rates to maximize the probability to nd
all treatments that are better than control, while assuming that the expected treatment eects were equal
for all treatment arms. In their approach, treatment comparisons are based on simple group comparisons
with z-tests, using concurrent controls. Concurrent data from dierent periods (where other treatments may
have entered or left the platform and the allocation ratios may have changed) are pooled in this approach.
However, in platform trials with time trends and changing allocation ratios over time, this approach can lead
to an ination of the type 1 error rate and biased estimates [ 10]. More recently, Pan et al. [21]addressed
the modication of the critical boundaries to control the family-wise error rate and re-estimation of the
sample sizes when new arms are added, and, similarly as in Bennett and Mander [20]provided the optimal
allocation ratios when minimizing the total sample size to achieve a desirable marginal power level, using
only concurrent controls and without adjusting for potential time trends.
Here, we optimise allocation rates for a testing procedure based on a regression approach, which includes a
\period" eect to account for changing allocation ratios when using period-wise treatment eect estimators
and focus the attention on the marginal power. We also consider a dierent optimisation criterion. Instead of
the power to reject all null hypotheses corresponding to eective treatments, we minimise the maximum of
the standard errors of the means of the treatment eect estimators resulting from the regression model. This
is asymptotically equivalent to maximizing the minimum power across treatments, assuming equal treatment
eects. This implies (under some regularity assumptions) that, under the optimal design, the power of the
dierent arms will be equal. In particular, for multi-sponsor platform trials, this is a reasonable feature, as
all sponsors should get the same chance to demonstrate the ecacy of their treatments in the platform. In
addition, besides platform trials that only use concurrent data to compare treatments against control, we
consider trials that incorporate non-concurrent controls as well.
The paper is structured as follows. In Section 2, we introduce the platform trial designs considered and
introduce the notation. In Section 3, we derive optimal allocations for trials using concurrent controls only
and, in Section 4, do so for trials also incorporating non-concurrent controls. In Section 5, we illustrate the
application of dierent allocation rules (optimal compared to equal allocation and square root of kallocation)
by a simulation study based on an example in the context of a hypercholesterolemia trial. We conclude the
paper with a discussion.
2 Trial designs and optimality criterion
Consider a platform trial evaluating the ecacy of two experimental arms ( i= 1;2) against a shared control
(i= 0). The trial design allows the sequential entry and exit of the experimental arms, such that the trial
initially starts with arm 1 and the control, and arm 2 may enter the platform trial at a later time point.
In addition, recruitment to arm 1 may end before the recruitment to arm 2 ends. Thus, the platform trial
consists of three periods ( s= 1;2;3) dened according to the sets of actively recruiting treatment arms Is. In
2period 1, patients are recruited to treatment 1 and control ( I1=f0;1g), in period 2 to both experimental
treatments and control ( I2=f0;1;2g) and, in period 3, to treatment 2 and control ( I3=f0;2g).
The total sample size of the trial is denoted by N, which is partitioned into the three periods with sample
sizesNs,s= 1;2;3. We refer to the corresponding proportions of patients by rs=Ns=N. In each period s,
patients are allocated to the arms i2Iswith the allocation proportions pi;s, such thatP
i2Ispi;s= 1 for
s= 1;2;3. See Figure 1 for an illustration of the trial design.
CA1A2
T imep0,2p1,2p2,2
p0,1p1,1
p0,3p2,3
Period 1 Period 2 Period 3
(r1=N1/N) (r2=N2/N) (r3=N3/N)
Figure 1: Platform trial with two active treatments and three periods. pi;sdenotes the allocation proportions
of patients in period s(s= 1;2;3) to armi(i= 0;1;2),rs=Ns=Nrefers to the proportion of patients in
periods, whereNsandNare the sample sizes in period sand in the overall trial, respectively.
Letyjdenote the observation of patient jon treatment arm ij(j= 1;:::;N ,ij= 0;1;2), distributed as
yjN(i;2) whereis assumed to be known and where we dropped the subindex jin the mean for
simplicity. Let i=i 0denote the treatment eect for treatment i(i= 1;2), and consider the null
hypotheses Hi:i0.
The simple mean dierence between the treatment and control groups are biased estimators of the treatment
eects if there are time trends (i.e., the means in the treatment arms change over time) and the allocation
rates change across periods. Therefore, we use stratied estimators, stratied by period, that adjust for
potential time trends [22, 7, 23]. The stratied estimators are given by
bi=X
s=i;i+1wi;s^i;s (1)
where ^i;s=yi;s y0;sis the treatment eect estimate in period sfor armi(i= 1;2), where yi;sandy0;sare
the sample means in period sfor experimental and control arms, and the weights are given by
w1;s=1
2
1;s
1
2
1;1+1
2
1;2andw2;s=1
2
2;s
1
2
2;2+1
2
2;3; (2)
where2
i;s=Var(^i;s) denotes the variances of the estimates per period, and is given by 2
i;s=2(1=ni;s+
1=n0;s). This choice of weights minimizes the variance of the stratied treatment eect estimator. Then, the
variance of the stratied eect estimator is given by:
Var(bi) =X
s=i;i+1w2
i;s2
i;s=2
N
ripi;ip0;i
pi;i+p0;i+ri+1pi;i+1p0;i+1
pi;i+1+p0;i+1 1
: (3)
A few comments: (i) The stratied estimator is equivalent to the non-stratied estimator if the allocation
proportions are equal across periods. (ii) The expressions (3)for the variances apply if the above distributional
assumptions hold, i.e, there are no time trends. However, as discussed above, the stratied treatment eect
3estimate used is also unbiased if time trends are present. (iii) The stratied estimator (and corresponding
test) corresponds to the treatment eect estimators in the linear models:
E(yj) =1+1I(ij= 1) +2I(ij= 2) +2I(j2(N1+ 1;N2]) (4)
E(yj) =2+1I(ij= 1) +2I(ij= 2) +3I(j2(N2+ 1;N]) (5)
where the rst model (to test H1) is t with observations from periods 1 and 2 of the control and treatment
arms 1 and 2 and the second model (to test H2) with observations from periods 2 and 3 of the control and
arms 1 and 2. Here sdenotes the period eect which adjusts for potential time trends. The treatment eects
are assumed to be constant in time (no time-by-treatment interaction).
The optimality criterion we aim to minimise is the maximum of the variances of the stratied eect
estimators across experimental treatment arms. Thus, given a xed overall sample size N, we aim to nd the
allocation probabilities p= (p0;1;p1;1;p0;2;p1;2;p2;2;p0;3;p2;3) that minimise the objective function
max(Var( ^1);Var(^2)): (6)
Note that if the expected eect sizes are equal for both experimental arms, minimizing this objective function
will also maximize the minimum individual power. Furthermore, as Nis only a scaling factor in (3), the
optimal allocation does not depend on N.
3 Optimal Designs
We derive optimal designs minimizing the objective function (6) for three dierent cases:
Case 1: Unrestricted optimization. In this setting, the entry time for treatment 2 (corresponding to r1)
is a design parameter that is determined by the trial design rather than being externally governed,
e.g., by the time a new treatment becomes available to be included in the trial. Similarly, the time
from entry of treatment 2 and completion of the sub-trial corresponding to treatment 1, r2, is a design
parameter in this case, which can also be chosen. We therefore optimize over pandr1;r2(r3is then
given byr3= 1 r1 r2).
Case 2: Fixed sample size in period 1. We xr1and optimize pandr2. In this case, the entry time
of arm 2 is not subject to optimization.
Case 3: Fixed sample sizes in all three periods. In addition to r1, we also x r2(and thus also r3).
Therefore, this case corresponds to a design in which both r1, the entry time of arm 2 and the completion
time of arm 2 (given by r1+r2) are predened, and we optimize over ponly.
In the derivations, we assume that the sample sizes are positive real numbers such that the variance of
the estimators (3)is a dierentiable function of the sample sizes. This is a reasonable approximation for
large sample sizes. The derivations were performed in Mathematica (see the Supplementary Material, Section
C and GitHub ( https://github.com/MartaBofillRoig/Allocation ). In calculations resulting in several
solutions, we selected those resulting in real values between 0 and 1 based on numeric examples only.
Furthermore, since stratied test statistics are used, the optimal allocation in periods 1 and 3 is equal
allocation, i.e., p0;1=p1;1=p0;3=p2;3= 1=2. This can be directly seen from equation (3): the allocation
ratios in period 1 only aect Var(^1) and, since p0;1= 1 p1;1, it follows that p1;1p0;1=(p1;1+p0;1) is
maximized for p1;1=p0;1= 1=2. A similar argument holds for the optimal allocation in period 3. Thus, it
remains to determine the optimal allocation in period 2 and, depending on the case considered, the optimal
partition between periods by means of rs.
3.1 Case 1: Unrestricted optimization
In this case, the optimal design satises r2= 1 (andr1=r3= 0) such that all patients are recruited in
period 2. In this design, there is only a single period and the eect estimates reduce to the non-stratied
mean dierences. The one-period design is optimal because then all control observations are shared and are
4used in both treatment eect estimates, and a non-stratied estimate is applied which, under the model
assumption of no time trend, also reduces variance. The resulting trial is a classical multi-armed trial with
many-to-one comparisons [ 15]. For this design, it is well known that the optimal allocation is p0;2= 1=(1+p
2),
p1;2=p2;2= 1 1=p
2.
Note that the optimal allocation satises the constraint
Var(b1) =Var(b2): (7)
This follows by the following argument: Assume the variances at the optimal allocation are not equal, e.g.,
thatVar(b1)<Var (b2). Then the objective function can be further decreased by moving a small fraction of
the sample size from treatment 1 to treatment 2 such that the inequality still holds. This shift reduces the
Var(b2) and thereby the maximum of the two variances. This is a contradiction to the assumption that the
allocation is optimal.
3.2 Case 2: Fixed sample size in period 1
Assume that the time point when the second treatment enters the platform trial is given. Thus, the size of
period 1,r1, is xed and we optimize (6) in r2andp. As noted above, the optimal allocation in the rst
and third periods is equal allocation. For the optimal allocation in period 2, we distinguish between the
casesr1>1=2, where period 1 is larger than half of the total sample size and therefore for all allocations the
variability of 2is larger than that of 1andr11=2 where under the optimal allocation the variances of
the two estimates are equal.
Ifr1>1=2, then, for all allocations (even if all observations after arm 2 enters are allocated to arm 2 and
the control), we have Var(^2)>Var (^1) such that in this case also the optimum allocation does not satisfy
(7). However, as the objective function is the maximum of the two variances, it is minimized in this case, if all
patientsj >N 1are equally allocated to treatment 2 and control, i.e., for p0;1=p1;1= 1=2,p0;3=p2;3= 1=2,
andr2= 0. This optimal solution corresponds to two separate consecutive trials, wherein the rst period
we compare arm 1 versus control, there is no second period, and in the third period, we use the remaining
sample size to compare arm 2 versus control. Note that all design settings comprising only two periods and
two arms per period, that is p0;2=p2;2= 1=2,p1;2= 0 with 0r21 r1andr3= 1 r1 r2, minimize
the variance and would be optimal solutions too. In these designs, the allocation ratio is the same in periods
2 and 3, and all patients in periods 2 (and 3) are equally allocated to treatment 2 and control.
Otherwise, if r11=2, similar as in Case 1 the optimal design satises that the variances of the eect
estimators are equal (7). Furthermore, for the optimal design we have r2= 1 r1andr3= 0. While this can
be conrmed by numerical optimisation { see Figure 3 where the maximum of the two variances compared
to separate trials is plotted with respect to r2and note that the maximum variance reduction occurs for
r1+r2= 1, there is also a heuristic argument for this result: For any given three-period platform trial (with
r1;r2;r3>0), we can dene a corresponding two-period platform trial with the same sample sizes in each
arm. This can be obtained by shifting the observations from arms i= 0;2 in period 3 to the respective arms
in period 2 such that r3= 0. Now, by recruiting all control arm patients from period 2 onward in period
2, instead of splitting them between periods 2 and 3, the sample size of the control arm in the estimate of
b1increases and therefore the variance of the estimator is reduced. In addition, the variance of b2is not
increased in this design, as the number of observations in the control arm used in the estimate of b1does
not change and, as r3= 0, a non-stratied estimate is used, which has a lower variability than the stratied
estimate (under the model assumption of no time trend).
The optimal allocations p0;2,p1;2andp2;2can be obtained numerically as special case of Case 3, setting
r2= 1 r1, outlined below. Hence, the optimal design is a two-period trial in which arm 2 enters later, but
both arms nish at the end of the trial.
3.3 Case 3: Fixed sample sizes in all three periods
Assume that, in addition to the time point when treatment 2 enters, r1, also the number of patients in period
2,r2, is xed. For the optimal allocation in period 2, we now consider three situations. (i) If r11=2, as
in Case 2, the optimal allocation allocates all patients after period 1 to treatment arm 2 and control, with
equal allocation between the two arms. This is achieved, e.g., for p0;1=p1;1=p0;2=p2;2=p0;3=p2;3= 1=2
5andp1;2= 0. (ii) If r1+r21=2, then for all allocations, the maximum variance is the variance of ^1and
therefore (as in Case 2) the optimal design allocates all observations in period 2 to treatment 1, such that
p0;2=p1;2= 1=2,p2;2= 0. (iii) If, on the other hand, r1<1=2 andr1+r2>1=2, the argument as for Case
2 implies that the variances of the two treatment eect estimators are equal, (7), holds under the optimal
allocation. To optimise under this constraint, we use the method of Lagrange multipliers, which shows that
the solution satises
p0;2=1
2(1 p2;2) p2;2 (8)
r2
1 2r1=(1 p2;2)3
(2p2;2 1)(p2;2(p2;2(p2;2(2p2;2(2p2;2 7) + 19) 15) + 7) 2)(9)
Now,p2;2can be obtained as the numerical solution of (9)andp0;2is given by (8). As the sum of the
allocation proportions is 1 also p1;2results. Note that by (9)that the optimal solution depends on r1;r2only
viar2=(1 2r1).
Figure 2 shows the optimal allocation probabilities pi;2;i= 0;1;2 in period 2 as function of r2for dierent r1.
The optimal allocation ratio p0;2for the control is not monotone in r2but takes its minimum at r2= 1 2r1,
i.e., wherer1=r3. For this special case, we can derive an explicit solution for the optimisation problem. As
in this case, the objective function is symmetric in the two treatments, it follows that Var(^1;1) =Var(^2;3).
Therefore, to satisfy constraint (7), alsoVar(^1;2) =Var(^2;2) needs to hold. The latter, however, implies
that in period 2 the allocation ratios for both treatment arms have to be equal, such that p1;2=p2;2.
Furthermore, by results for the many-to-one setting [ 15], we know that the variances are minimized for
1 : 1 :p
2allocation, such that p0;2= 1=(1 +p
2) andp1;2=p2;2= 1 1=p
2. This can be also veried by
substituting the solution in (9).
In order to illustrate further cases apart from those included in the paper, we built a shiny app (available
athttps://github.com/MartaBofillRoig/Allocation ) that allows visualising the allocation rates with
respect to the sample sizes per period 2. The app also shows the variance in the optimum as a function of r2.
Figure 3 includes one of the gures that can be obtained in the app. On the bottom, we see the variance
with respect to the proportion of r2=N2=Ncompared to the variance when running two separate trials. We
can observe that the decrease in variance becomes larger with r2.
4 Optimal allocation in trials using non-concurrent controls
Suppose we want to use also non-concurrent controls to compare arm 2 against the control. To this end, we
consider the regression model estimate of the treatment eect of treatment 2 from the model
E(yj) =0+X
i=1;2iI(ij=i) +X
s=2;3sI(j2(Ns 1+ 1;Ns]); (10)
We t this model based on all observed data in periods 1, 2 and 3. This model provides unbiased treatment
eect estimators and controls the type 1 error if time trends aect all arms equally and are additive on the
model scale [ 14]. For treatment 1, we suppose that the ecacy is evaluated after treatment arm 1 ends, as is
common in platform trials. Thus, we do not use the estimate from this model, but the stratied treatment
eect estimators dened in (4)based on data from treatment 1 and the control group from stages 1 and 2
only.
Using the regression model (10) to incorporate non-concurrent controls implies that the treatment eect of
arm 2 compared to control is estimated by the stratied treatment eect estimator
e2=!1;1(y1;1 y:;1) +!1;2(y1;2 y:;2) +!2;2(y2;2 y:;2) +!2;3(y2;3 y:;3); (11)
where y:;sis the pooled mean per period, and !i;sare weights, which are functions of the sample sizes. As a
consequence, also the variance of e2can be written as a function of the rates rand the total sample size N.
This variance is given by
Var(e2) =2
N 
r3p2;3(1 p2;3) +r2 
p2;2(1 p2;2) r2p2
1;2p2
2;2
r1p1;1(1 p1;1) +r2p1;2(1 p1;2)!! 1
: (12)
60.0 0.2 0.4 0.6 0.8 1.00.0 0.1 0.2 0.3 0.4 0.5r1=0.1
r2Allocation Ratios Period 2
0.0 0.2 0.4 0.6 0.8 1.00.0 0.1 0.2 0.3 0.4 0.5r1=0.3
r2Allocation Ratios Period 2
0.0 0.2 0.4 0.6 0.8 1.00.0 0.1 0.2 0.3 0.4 0.5r1=0.4
r2Allocation Ratios Period 2
0.0 0.2 0.4 0.6 0.8 1.00.0 0.1 0.2 0.3 0.4 0.5r1=0.49
r2Allocation Ratios Period 2Figure 2: Optimal allocation probabilities pi;2;i= 0;1;2 in period 2 as function of r2and dierent r1for
trials with three-periods as in Figure 1. Black lines: p0;2, red linep1;2, blue linep2;2. The vertical line at
r2= 1 2r1indicates the setting, where equal allocation between treatments 1 and 2 is optimal. There
the optimal allocation ratio to control is p0;2= 1=(1 +p
2) (indicated by the upper gray line). Solid lines
correspond to optimal allocations in trials utilising concurrent controls only (Sect. 3), and dashed lines
correspond to optimal allocations in trials utilising concurrent and non-concurrent controls (Sect. 4).
See the Supplementary Material Section A2 for the derivation and the expression of the weights !i;s. For arm
1, for which the treatment eect is estimated using only concurrent controls, the treatment eect estimator
and its variance are given by (1) and (3), respectively.
As in Section 3, we aim to minimise the maximum of the variances max(Var(b1);Var(e2)) inrand discuss
the optimal allocations for unrestricted optimisation (Case 1), where the entry time of treatment 2 is xed
(Case 2) and where both the entry time of treatment 2 and the completion time of treatment 1 are given
(Case 3).
Note that it is evident from (3)and(12) that for all r1;r2;r3(and thus for all three considered cases), the
optimal allocation in periods 1 and 3 is equal allocation, i.e., p0;1=p1;1=p0;3=p2;3= 1=2. Therefore, it
7Figure 3: Optimal allocations per arm in period 2 and decrease in the maximum of the two variances
compared to separate trials for trial designs using concurrent controls only (solid line) and using concurrent
and non-concurrent controls (dashed line).
remains to determine the optimal allocation ratios in period 2 in the three cases.
4.1 Case 1: Unrestricted optimization
As for the setting using concurrent controls only, without restrictions with respect to the time at which arm 2
enters the platform, the optimal allocation rates correspond to a multi-arm design where all treatment arms
start and end at the same time, such that there are no non-concurrent controls. This follows because then all
control patients are used in direct comparisons for both treatment arms. Then, the optimal allocation is
1 : 1 :p
2 allocation as in Section 3.
4.2 Case 2: Fixed sample size in period 1
Suppose we aim at optimising a design where the time at which arm 2 enters is given. Therefore, as in Case
2 for trials using concurrent controls only (Section 3.2), we optimise assuming that r1is xed.
8We consider two cases: r11=2 andr1<1=2. Ifr11=2, as in the case of concurrent controls, the
optimal allocation allocates all patients after period 1 to treatment arm 2 and control, with equal allocation
between the two arms. This is achieved, e.g., for p0;1=p1;1= 1=2,p0;3=p2;3= 1=2 andpi;2= 0,i= 0;1;2
such thatr2= 0. Note that this design has only two periods and the model (10) is tted without the period
eect2as there is no data to estimate this factor in this case. In addition, the non-concurrent controls do
not contribute to the treatment eect estimator (only the weight !2;3in(11) is larger than zero) because
only the control treatment is present in both periods. Therefore, the period eect can only be estimated from
the control group data and consequently the estimate of the control group treatment (and also the treatment
eect estimate for treatment 2) cannot be improved by estimates from other treatments.
To see that the above allocation is optimal, note that Var(~2) dened in (12) is minimized by r3=
1 r1;r2= 0 andp0;3=p2;3= 1=2 ifr1is kept xed and for this allocation the variance Var(~2) does not
depend on the allocation ratios in period 1. Furthermore, because r11=2 and assuming equal allocation
between the control arm and arm 1 in period 1 we have Var(^1)Var(~2). Therefore, under an allocation
ratio that minimizes Var(~2) the objective function, the maximum of the variances of the treatment eect
estimates is the variance of treatment 2. It follows, that this allocation ratio also minimizes the objective
function.
Ifr1<1=2, as in Case 2 in Section 3, the optimal design satises that r2= 1 r1, and therefore it leads
to a two-period platform trial, where treatments 1 and 2 complete recruitment at the same time and there
is no period 3. While this can be seen by inspection of Figure 3, there is also an argument for this result.
First, note that for any given three-period platform trial (with r2;r3>0), we can achieve the same sample
sizes for each arm in a two-period platform trial, shifting all observations from period 3 to period 2 such that
r3= 0. Now, after period 1, recruiting all observations of the control arm in period 2 instead of splitting them
between periods 2 and 3, increases the sample size of the control arm for the estimate of b1and therefore
reduces its variance. Also, the variance of ~2is not increased, as the number of concurrent controls for arm 2
is not aected and, as r3= 0, the model (10) is tted with one parameter less (without 3) in this case.
It remains to determine the optimal allocation in period 2 for the resulting two-period platform trial. In
this case, the eect size estimate of treatment 2 using non-concurrent controls (11) can be written as
e2=^2;2+(^1;1 ^1;2) (13)
where=n 1
0;2=(n 1
0;1+n 1
0;2+n 1
1;1+n 1
1;2) and its variance simplies to:
Var(e2) =2
N 
r2q2;2 r2
2p2
1;2p2
2;2
r1q1;1+r2q1;2! 1
; (14)
whereqi;s=pi;s(1 pi;s).
We now minimise max(Var(b1);Var(e2)), where Var(b1) and Var(e2) are dened by (3)and(14), respectively.
For givenr1and assuming that r3= 0 the variances under the optimal allocation are equal and we obtain an
explicit expression for the optimal allocation by minimizing Var(b1) settingp01=p11= 1=2. The resulting
formula for the allocation proportions in period 2 are:
p22= 1 +
1
4p
3p
a(1 r1)0
@p
 b s
4 + 8a+a2 12(2 +a)r1+ 12r1p
3r
a3(1 r1)
 b+ 9r2
11
A
p12=
1 q
4r1p22=(1 r1) r1+ 4p2
22=(1 r1)2 4p22=(1 r1) + 1 r1
=(2(1 r1));
wherea=3q
9r1(3(r1 4)r1+ 4) + 6p
3p
r1(16 9r1(3(r1 4)r1+ 8)) + 8 andb= 6(a 4)r1+(a 2)2+9r2
1.
Figure 4 displays the optimal allocations as a function of r1both, for trials using non-concurrent controls
(dashed lines) and using only concurrent controls (solid lines). Comparing the period 2 allocation rates of the
optimal designs with non-concurrent and only concurrent controls, one sees that the latter allocates more
patients to the control group.
90.00.10.20.30.40.50.00.10.20.30.40.5
r1Allocation Ratios Period 2Figure 4: Optimal allocation probabilities ri;2=r2;i= 0;1 in period 2 as function of r1for trials with
two-periods ( r3= 0). Black, red and blue lines represent the allocation rates to control, arm 1 and arm 2,
respectively. Solid lines refer to analysis with concurrent controls only, and dashed lines to analysis with
concurrent and non-concurrent controls.
4.3 Case 3: Given sample sizes in periods 1 and 2
We now assume that r1>0 andr2<1 are xed (and not optimised) corresponding to a three-period platform
trial in which arm 2 enters later and arm 1 nishes before arm 2 does (Figure 1). As for concurrent controls,
we distinguish 3 situations: (i) If, r1>1=2, as in Case 2, the optimal design allocates all patients j >N 1
equally to treatment 2 and control, i.e., for p0;1=p1;1=p0;2=p2;2=p0;3=p2;3= 1=2, andp1;2= 0. (ii)
As for concurrent controls, if r1+r21=2, then for all allocations, the maximum variance is the variance
of^1(inclusion of non-concurrent controls can only reduce the variance of ^2) and therefore the optimal
design allocates all observations in period 2 to treatment 1. (iii) If r1<1=2 andr1+r2>1=2, we minimise
max(Var(b1);Var(e2)), by minimizing Var(b1) inpfor xedr1andr2. In this case, the two variances are
equal under the optimal allocation. As we could not obtain an analytical solution for the optimization problem
in this case, we minimized Var(b1) in the remaining free variables p1;2;p2;2under the constraint of equal
variances with the Mathematica function FindMinimum or the r-package nloptr [ 24] using the sequential
quadratic programming algorithm for nonlinearly constrained gradient-based optimization [ 25]. See Section
C in the Supplementary Material. Numerical solutions for the optimal allocations in period 2 are shown
in dashed lines in Figure 2. As expected, the larger r1, the larger the dierence between designs utilising
non-concurrent controls compared to designs with concurrent controls only, as the size of the non-concurrent
control group is then larger. The pattern of the optimal allocation rates is similar to the scenario where
concurrent controls only are used. However, the ratio of patients assigned to the control group is lower when
non-concurrent controls are used. Furthermore, it may be lower than the number of patients assigned to arm
1 or 2 (which does not occur with concurrent controls).
105 Example and simulation study
We illustrate the optimal allocations in platform trials by means of a phase II placebo-controlled trial
in primary hypercholesterolemia [ 26]. In this trial, the goal was to evaluate the ecacy of 80 mg of the
antibody atorvastatin with SAR236553 as compared to atorvastatin alone. Additionally, there was interest in
evaluating other doses and combinations, in particular, to investigate the ecacy of 10 mg of atorvastatin
plus SAR236553 compared to atorvastatin alone. The primary endpoint was the percent change in calculated
LDL cholesterol from baseline. Patients were randomly assigned according to a 1:1:1 allocation to receive a
80 mg of atorvastatin plus SAR236553, 10 mg of atorvastatin plus SAR236553, or 80 mg of atorvastatin plus
placebo.
We revisit the design of this trial to discuss three allocation strategies: equal allocation (1:...:1), square
root ofk(1:...:p
k) and the proposed optimal allocations. We assume the total sample size as in the original
trial,N= 92, and mean responses and variances in the control group according as observed in the trial
(i.e., a mean of 4 :94 with variance 1 in the control), and consider means equal to 5 :66 and variance 1 for
the experimental treatment arms, which lead to 80% power at 0 :025 signicance level in a multi-arm design
setting using the square root of kallocation. Furthermore, we considered three designs depending on the
entry and end of arm 2 in the trial, that is:
1.Design with one period only (that is, multi-arm design), and thus with sample sizes per period N1=N
andN2=N3= 0 as Case 1 (in Section 3.1).
2.Design with two periods (arm 2 starts later, but arms 1 and 2 nish at the same time), as Case 2 (in
Section 3.2), assuming a sample size of N1=N=4 in period 1 and N2= 3N=4 in period 2.
3.Design with three periods (arm 2 starts later and nishes after arm 1 does), as Case 3 (Section 3.3),
considering two situations: N1=N2=N3=N=3, andN1=N=3,N2= 4N=9 andN3= 2N=9.
After rounding, we obtain, e.g., for the three-period design, N1=N3= 31, andN2= 30. We consider the
analysis for comparing groups based on concurrent data only. For each design conguration and allocation
strategy, we describe the sample size per period and arm. Furthermore, we compare the statistical individual
power for each treatment control comparison and also evaluate the variance of the estimates by simulating
100000 trials. In the main manuscript, we report simulation results where no time trends were assumed. In
the Supplementary Material (Section B.3), results for trials with time trends are presented.
We start with the standard multi-arm design (Case 1). In this case, as discussed before, the optimal
allocation coincides with the root of krule (see Table 1 in the Supplementary Material). The power of testing
treatments against control is the same in both designs, equal and optimal allocations. When comparing the
power of the design with optimal allocations against the design with 1:1 allocation, we can see that there
is an increase in power when using the optimal design and the condence intervals (CIs) are narrower (see
Table 1). However, it could also be noted that in this example, the dierence is not substantial.
Suppose now that the second arm enters while the trial is ongoing, but that it is assumed to end with the
rst arm. This situation would lead to a two-period design. Tables 2 in the Supplementary Material shows
the sample sizes per arm and period. We can observe that the designs using optimal allocations and using the
root ofkrule dier. The optimal strategy allocates fewer patients to the rst arm in the second period, and
more to the second arm in the second period, while maintaining equal allocation between arm 1 and control
in the rst period as is the case for the one-to-one and square root of kallocations. When comparing the
powers, the results are as expected considering the optimization strategy: the power of testing the ecacy of
arm 1 versus control is larger than the power of the comparison regarding arm 2 when using 1:1 allocation
and square root of kallocation (see Table 1). Under the optimal allocation strategy, the power and standard
errors of eect estimates for both treatment control comparisons are the same. As we minimize maximum
variance, we see that the maximum power is smaller under the optimal allocation. Similarly, the (maximum)
width of the CIs for the optimal design is smaller than the maximum width of the CI of the other designs.
Finally, consider a design in which arm 2 enters after arm 1, and in addition, the timing when arm 1 ends is
xed at some point before the end of the trial. For the resulting three-period trial, we consider two scenarios.
In the rst, the total sample sizes for periods 1 and 3 are assumed to be equal. Note that this also implies
that the total sample sizes for arms 1 and 2 are equal. Then, in the second period, the optimal allocation is
the square root of kallocation. When increasing the sample size of period 2 (such that r3<r 1) this is no
11Table 1: Power for each design according to the allocation strategy. Here r1andr2are the proportion
of patients allocated to periods 1 and 2, respectively; \one" denotes one-to-one allocation, \opt" denotes
optimal allocation and \sqrt" denotes the square root of kallocation; \Power A i" is the estimated power
when testing A iagainst control ( i= 1;2), and \CI Width A i" refers to the width of the condence interval
for the treatment eect of arm A icompared to control. Note that the optimal allocation coincides with the
square root of kin the 1-period design and 3-period design with N1=N2=N3=N=3.
Design r1 r2Allocation Power Power CI Width CI Width
A1 A2 A1 A2
1-period1.000 0.000 one 0.798 0.798 1.106 1.106
1.000 0.000 opt (=sqrt) 0.805 0.805 1.100 1.100
2-period0.250 0.750 one 0.844 0.671 1.006 1.006
0.250 0.750 opt 0.772 0.757 0.998 0.998
0.250 0.750 sqrt 0.851 0.681 0.997 0.997
3-period0.337 0.326 one 0.720 0.722 1.026 1.151
0.337 0.326 opt (=sqrt) 0.725 0.724 1.085 1.096
3-period0.337 0.446 one 0.782 0.687 0.947 1.173
0.337 0.446 opt 0.737 0.730 1.038 1.055
0.337 0.446 sqrt 0.784 0.682 0.939 1.157
longer the case. Moreover, as the period where the control arm is shared increases, with the optimal design
also the power increases for larger r2(see Table 1). Under both choices of r2, the (minimum) power of the
optimal design is larger than the minimum power using the 1:1 and square root of kallocation strategies. See
Tables 2 and 3 for the sample size per arm and period assumed for each allocation strategy.
We also evaluated the type 1 error under the dierent allocation strategies. In all the considered designs,
the type 1 error is controlled (see Table 5 in the Supplementary Material), even if there are time trends (see
Section B.3 in the Supplementary Material). However, in the latter case, the variances might slightly deviate
because the time trends may increase the variability in the treatment groups.
Table 2: Sample size distribution per arm and period according to the allocation strategy for a three-period
design where arm 2 starts later and nishes after arm 1 does, and with N1=N2=N3=N=3.
Period 1 Period 2 Period 3
Arm 2 0 10 16
Arm 1 16 10 0
Control 16 10 16
(a) One-to-onePeriod 1 Period 2 Period 3
Arm 2 0 9 16
Arm 1 16 9 0
Control 16 12 16
(b)p
kallocationPeriod 1 Period 2 Period 3
Arm 2 0 9 16
Arm 1 16 9 0
Control 16 12 16
(c) Optimal allocations
Table 3: Sample size distribution per arm and period according to the allocation strategy for a three-period
design where arm 2 starts later and nishes after arm 1 does, and with N1=N=3,N2= 2(N N1)=3 and
N3= (N N1)=3.
Period 1 Period 2 Period 3
Arm 2 0 14 10
Arm 1 16 14 0
Control 16 14 10
(a) One-to-onePeriod 1 Period 2 Period 3
Arm 2 0 12 10
Arm 1 16 12 0
Control 16 17 10
(b)p
kallocationPeriod 1 Period 2 Period 3
Arm 2 0 16 10
Arm 1 16 8 0
Control 16 17 10
(c) Optimal allocations
126 Discussion
We derived optimal allocation rules for platform trials, minimizing the maximum variance of the treatment
eect estimators of treatment-control comparisons. The most ecient design is the multi-arm trial, where all
treatments start and end at the same time. However, this may not be feasible if, e.g., not all treatments are
available at the start. Under the assumption that some treatments enter the trial at a later time point, we
showed that in the optimal design, all treatments nish at the end of the platform trial. This again, however,
will in general not be practical. Therefore, we considered optimal designs under constraints on the entry and
exit times of treatment arms.
In contrast to earlier work, we performed the optimisation assuming that the analyses to compare the
ecacy of treatments against control are adjusted with the categorical factor time period. These periods are
dened by the time intervals in which no arm enters or leaves the study. Adjusted analyses are recommended
in this case to avoid potential biases caused by time trends. Note that the optimal allocation depends on the
chosen analysis model.
In this work, we assumed that the total sample size of the platform trial is known. Although the total
sample size is only a scaling factor in the optimisation problem, this assumption might be unrealistic in this
type of trials. However, an equivalent strategy to the one followed to optimise the allocation rates would be
to consider a targeted minimum precision (corresponding to the maximum variance) for the estimates of the
treatment eects, assuming that these are equal, and minimise the total sample size of the trial. To this
end, we need to search for the total sample sizes Nsuch that the minimum precision of the corresponding
optimal design is equal to the target precision. As the optimised minimum precision is monotonic in N, this
corresponds to a simple numerical root nding.
Changing the allocation ratio in a clinical trial has been controversially discussed in the context of response
adaptive randomisation [ 27,28]. The main concern is the need to adjust for potential time trends, which
leads to statistical ineciency. Also, for platform trials, we saw that the statistically most ecient design
is a multi-arm trial, where allocation ratios stay constant over time. However, if it is not feasible to start
and complete all arms at the same time, but some arms enter the trial at a later time point, or complete
recruitment before the end of the platform trial, a change in the allocation ratios is optimal, also for analysis
procedures that adjust for the time trends.
In this manuscript, we optimised the allocation ratios under the assumption that the times when the second
treatment enters or leaves the platform are known. In many realistic settings, these times may, however, be
unknown at the start of the trial. In the resulting, optimal trial designs, however, the optimal allocation
ratio in the rst period is always 1:1 randomisation and, thus, does not depend on r1andr2. The optimal
allocation ratios for period 2 can be computed when treatment 2 enters the platform and r2determining when
treatment 1 should be completed is xed. This holds for both, analysis including non-concurrent controls and
concurrent controls only. If it is desirable to use equal allocation among the experimental treatment arms,
one can choose r2such that the optimal design satises this condition (see Figure 2). For the analysis using
concurrent controls only, the optimal allocation in period 2 is then a 1 : 1 :p
2 allocation.
Our manuscript aims to advance the understanding of optimal allocation principles in platform trials. To
accomplish this, we centered our focus on a trial design with two experimental arms and a shared control arm.
The derivation of optimal allocation rules for platform trials with more than two arms is an open problem
and subject to further research.
7 Supplementary Material
Web Supplementary Material, including the derivations of the variance of the treatment eect estimators and
additional results from the case study, is available with this paper. Mathematica and R code to reproduce
the results are available at https://github.com/MartaBofillRoig/Allocation .
Acknowledgments
The authors are members the EU Patient-centric clinical trial platform (EU-PEARL). EU-PEARL (EU Patient-
cEntric clinicAl tRial pLatforms) project has received funding from the Innovative Medicines Initiative (IMI)
132 Joint Undertaking (JU) under grant agreement No 853966. This Joint Undertaking receives support from
the European Union's Horizon 2020 research and innovation programme and EFPIA and Children's Tumor
Foundation, Global Alliance for TB Drug Development non-prot organisation, Springworks Therapeutics Inc.
This publication reects the authors' views. Neither IMI nor the European Union, EFPIA, or any Associated
Partners are responsible for any use that may be made of the information contained herein.
References
[1]Scott M Berry, Jason T Connor, and Roger J Lewis. The platform trial: an ecient strategy for
evaluating multiple treatments. Jama , 313(16):1619{1620, 2015.
[2]Benjamin R. Saville and Scott M. Berry. Eciencies of platform clinical trials: A vision of the future.
Clinical Trials , 13(3):358{366, jun 2016. ISSN 1740-7745. doi: 10.1177/1740774515626362. URL
http://journals.sagepub.com/doi/10.1177/1740774515626362 .
[3]Janet Woodcock and Lisa M LaVange. Master Protocols to Study Multiple Therapies, Multiple
Diseases, or Both. New England Journal of Medicine , 377(1):62{70, jul 2017. ISSN 0028-4793. doi:
10.1056/NEJMra1510062. URL http://www.ncbi.nlm.nih.gov/pubmed/28679092http://www.nejm.
org/doi/10.1056/NEJMra1510062 .
[4]Elias Laurin Meyer, Peter Mesenbrink, Cornelia Dunger-Baldauf, Hans-J urgen F ulle, Ekkehard Glimm,
Yuhan Li, Martin Posch, and Franz K onig. The Evolution of Master Protocol Clinical Trial De-
signs: A Systematic Literature Review. Clinical Therapeutics , 42(7):1330{1360, jul 2020. ISSN
01492918. doi: 10.1016/j.clinthera.2020.05.010. URL https://linkinghub.elsevier.com/retrieve/
pii/S0149291820302447 .
[5]Douglas G Altman and J Patrick Royston. The hidden eect of time. Statistics in medicine , 7(6):
629{637, 1988.
[6]Kenneth A Getz and Rafael A Campo. Trial watch: trends in clinical trial design complexity. Nature
Reviews Drug Discovery , 16(5):307{308, 2017.
[7]Stephen Senn. Hans van houwelingen and the art of summing up. Biometrical Journal , 52(1):85{94,
2010.
[8]Steven A Julious and Sue-Jane Wang. How biased are indirect comparisons, particularly when comparisons
are made over time in controlled trials? Drug Information Journal , 42(6):625{633, 2008.
[9]Christopher Jennison and Bruce W Turnbull. Group sequential methods with applications to clinical
trials . CRC Press, 1999.
[10]Richard Simon and Noah Robin Simon. Using randomization tests to preserve type I error with response
adaptive and covariate adaptive randomization. Statistics & Probability Letters , 81(7):767{772, jul 2011.
ISSN 01677152. doi: 10.1016/j.spl.2010.12.018. URL http://dx.doi.org/10.1016/j.spl.2010.12.
018https://linkinghub.elsevier.com/retrieve/pii/S0167715210003688 .
[11]Rajeshwari Sridhara, Olga Marchenko, Qi Jiang, Richard Pazdur, Martin Posch, Scott Berry, Marc
Theoret, Yuan Li Shen, Thomas Gwise, Lorenzo Hess, Andrew Raven, Khadija Rantell, Kit Roes, Richard
Simon, Mary Redman, Yuan Ji, and Cindy Lu. Use of Nonconcurrent Common Control in Master
Protocols in Oncology Trials: Report of an American Statistical Association Biopharmaceutical Section
Open Forum Discussion. Statistics in Biopharmaceutical Research , 0(0):1{5, jul 2021. ISSN 1946-6315.
doi: 10.1080/19466315.2021.1938204. URL https://doi.org/10.1080/19466315.2021.1938204https:
//www.tandfonline.com/doi/full/10.1080/19466315.2021.1938204 .
[12]Kim May Lee, Louise C Brown, Thomas Jaki, Nigel Stallard, and James Wason. Statistical consideration
when adding new arms to ongoing clinical trials: the potentials and the caveats. Trials , 22(1):203, dec 2021.
ISSN 1745-6215. doi: 10.1186/s13063-021-05150-7. URL https://trialsjournal.biomedcentral.
com/articles/10.1186/s13063-021-05150-7 .
14[13]Benjamin R Saville, Donald A Berry, Nicholas S Berry, Kert Viele, and Scott M Berry. The Bayesian
Time Machine: Accounting for temporal drift in multi-arm platform trials. Clinical Trials , page
174077452211120, aug 2022. ISSN 1740-7745. doi: 10.1177/17407745221112013. URL http://journals.
sagepub.com/doi/10.1177/17407745221112013 .
[14]Marta Boll Roig, Pavla Krotka, Carl-Fredrik Burman, Ekkehard Glimm, Stefan M Gold, Katharina
Hees, Peter Jacko, Franz Koenig, Dominic Magirr, Peter Mesenbrink, et al. On model-based time trend
adjustments in platform trials with non-concurrent controls. BMC medical research methodology , 22(1):
1{16, 2022.
[15]Charles W Dunnett. A multiple comparison procedure for comparing several treatments with a control.
Journal of the American Statistical Association , 50(272):1096{1121, 1955.
[16]Dena R. Cohen, Susan Todd, Walter M. Gregory, and Julia M. Brown. Adding a treatment arm to an
ongoing clinical trial: a review of methodology and practice. Trials , 16(1):179, dec 2015. ISSN 1745-6215.
doi: 10.1186/s13063-015-0697-y.
[17]Babak Choodari-Oskooei, Daniel J. Bratton, Melissa R. Gannon, Angela M. Meade, Matthew R. Sydes,
and Mahesh K.B. Parmar. Adding new experimental arms to randomised clinical trials: Impact on error
rates. Clinical Trials , 17(3):273{284, jun 2020. ISSN 1740-7745. doi: 10.1177/1740774520904346. URL
http://journals.sagepub.com/doi/10.1177/1740774520904346 .
[18]Jordan J. Elm, Yuko Y. Palesch, Gary G. Koch, Vanessa Hinson, Bernard Ravina, and Wenle Zhao.
Flexible Analytical Methods for Adding a Treatment Arm Mid-Study to an Ongoing Clinical Trial.
Journal of Biopharmaceutical Statistics , 22(4):758{772, jul 2012. ISSN 1054-3406. doi: 10.1080/10543406.
2010.528103. URL https://www.tandfonline.com/doi/full/10.1080/10543406.2010.528103 .
[19]Yixin Ren, Xiaoyun Li, and Cong Chen. Statistical considerations of phase 3 umbrella trials allowing
adding one treatment arm mid-trial. Contemporary Clinical Trials , 109(August):106538, oct 2021. ISSN
15517144. doi: 10.1016/j.cct.2021.106538. URL https://doi.org/10.1016/j.cct.2021.106538https:
//linkinghub.elsevier.com/retrieve/pii/S1551714421002743 .
[20]Maxine Bennett and Adrian P. Mander. Designs for adding a treatment arm to an ongoing clinical
trial. Trials , 21(1):251, dec 2020. ISSN 1745-6215. doi: 10.1186/s13063-020-4073-1. URL https:
//trialsjournal.biomedcentral.com/articles/10.1186/s13063-020-4073-1 .
[21]Haitao Pan, Xiaomeng Yuan, and Jingjing Ye. An optimal two-period multiarm platform design with
new experimental arms added during the trial. The New England Journal of Statistics in Data Science ,
pages 1{18, 2022. ISSN 2693-7166. doi: 10.51387/22-NEJSDS15.
[22]Christopher Jennison and Bruce W. Turnbull. Group Sequential Methods with Applications to Clinical
Trials . Chapman and Hall/CRC, sep 1999. ISBN 9780367805326. doi: 10.1201/9780367805326. URL
https://www.taylorfrancis.com/books/9781584888581 .
[23] Stephen Senn. The many modes of meta. Drug Information Journal , 34(2):535{549, 2000.
[24]Jelmer Ypma, Steven G. Johnson, and Aymeric Stamm. nloptr: R interface to nlopt, 2022. R package
version 2.0.3.
[25]Dieter Kraft. A software package for sequential quadratic programming. Forschungsbericht- Deutsche
Forschungs- und Versuchsanstalt fur Luft- und Raumfahrt , 1988.
[26]Eli M Roth, James M McKenney, Corinne Hanotin, Gaelle Asset, and Evan A Stein. Atorvastatin with
or without an antibody to pcsk9 in primary hypercholesterolemia. New England Journal of Medicine ,
367(20):1891{1900, 2012.
[27]Edward L Korn and Boris Freidlin. Time trends with response-adaptive randomization: The inevitability
of ineciency. Clinical Trials , 19(2):158{161, apr 2022. ISSN 1740-7745. doi: 10.1177/17407745211065762.
URL http://journals.sagepub.com/doi/10.1177/17407745211065762 .
15[28]Michael Proschan and Scott Evans. Resist the temptation of response-adaptive randomization. Clinical
Infectious Diseases , 71(11):3002{3004, 2020.
16...
17Supplementary material of “Optimal allocation strategies in
platform trials”
Marta Bofill Roig1, Ekkehard Glimm2, Tobias Mielke3, and Martin Posch∗1
1Section for Medical Statistics, Center for Medical Data Science, Medical University of
Vienna, Vienna
2Advanced Methodology and Data Science, Novartis Pharma AG, Basel
3Statistics and Decision Sciences, Janssen-Cilag GmbH
Contents
A Variance derivations 2
A.1 Variance for effect estimators using concurrent controls only . . . . . . . . . . . . . . . . . . . 2
A.2 Variance for the effect estimator using concurrent and non-concurrent controls . . . . . . . . 2
A.2.1 Effect estimator using concurrent and non-concurrent controls . . . . . . . . . . . . . . 3
A.2.2 Two-period trial . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
A.2.3 Three-period trial . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
B Additional simulation results 5
B.1 Sample sizes per period and arm . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
B.2 Results under the null hypothesis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6
B.3 Results for trials with time trends . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6
C Mathematica files 7
∗martin.posch@meduniwien.ac.at
1In this supplementary material, we provide the calculations of the variance estimators (Section A) and
additional results concerning the simulation study (Section B). Mathematica and R code to reproduce the
results are available at https://github.com/MartaBofillRoig/Allocation . However, for the reader’s
convenience, we also include the Mathematica files at the end of this document.
A Variance derivations
Consider the same notation used in Section 2 of the article and let ni,s, i= 0,1,2, s= 1,2,3 be the sample
sizes in arm i, period sof the platform trial design.
A.1 Variance for effect estimators using concurrent controls only
Consider the period-wise treatment effect estimators of the form
/hatwideθi=/summationdisplay
s=i,i+1wi,s·ˆθi,s
where ˆθi,s= ¯yi,s−¯y0,sis the treatment effect estimate in period sfor arm i(i= 1,2), where ¯ yi,sand ¯y0,s
are the sample means in period sfor experimental and control arms, and the weights are given by
w1,s=1
σ2
1,s
1
σ2
1,1+1
σ2
1,2and w2,s=1
σ2
2,s
1
σ2
2,2+1
σ2
2,3, (1.a)
where σ2
i,s= Var( ˆθi,s) denotes the variances of the estimates per period, and is given by σ2
i,s=σ2(1/ni,s+
1/n0,s).
Then, the variance of the estimator is then given by:
Var(/hatwideθi) =/summationdisplay
s=i,i+1w2
i,sσ2
i,s=/summationdisplay
s=i,i+1
1
σ2
i,s
1
σ2
i,i+1
σ2
i,i+1
2
σ2
i,s=/summationdisplay
s=i,i+11
σ2
i,s/parenleftig
1
σ2
i,i+1
σ2
i,i+1/parenrightig2=1
1
σ2
i,i+1
σ2
i,i+1
=σ2·/parenleftigg
1
1
ni,i+1
n0,i+1
1
ni,i+1+1
n0,i+1/parenrightigg−1
=σ2·/parenleftbiggni,in0,i
ni,i+n0,i+ni,i+1n0,i+1
ni,i+1+n0,i+1/parenrightbigg−1
=σ2
N·/parenleftbigg
ripi,ip0,i
pi,i+p0,i+ri+1pi,i+1p0,i+1
pi,i+1+p0,i+1/parenrightbigg−1
.
aspi,s=ni,s
rsNsandrs=Ns
N.
A.2 Variance for the effect estimator using concurrent and non-concurrent con-
trols
In this section, we first derive the expression of the effect estimators using concurrent and non-concurrent
controls and then give the variance expressions. Note that in what follows, the treatment effect estimator
for arm 1 uses concurrent and non-concurrent controls as well, as arm 2 does. However, in the case of arm 1,
non-concurrent controls are those patients allocated to the control in period 3. For the purpose of optimal
allocations in this paper, we are only interested in the estimator of arm 2, but we give here the expressions
of the estimator of arm 1 for completeness.
In Section A.2.1, we derive the expressions of the estimators and the corresponding variances when util-
ising non-concurrent controls together with concurrent controls. In Sections A.2.2 and A.2.3, we give the
expressions for the particular case of a platform trial with two-periods and three-periods, respectively. The
expressions given in the later sections are the ones we use in Section 4 of the manuscript.
2A.2.1 Effect estimator using concurrent and non-concurrent controls
We assume a linear model E(y) =Xθwhere θ= (µ1, µ2, µ3, θ1, θ2)′is the parameter vector with baseline
stagewise responses µsand treatment effects θi.Xis the design matrix and ythe vector of independent
observations with a constant variance σ2(without loss of generality, σ= 1).
The Gauss-Markov (best linear unbiased) estimator of θisˆθ= (X′X)−1X′y. It is best linear unbiased
in the sense that for any other estimate ˜θ=Aywith E(˜θ) =θ,Cov(˜θ)−Cov(ˆθ) is positive semidefinite
which in turn implies that the variance of any component of ˆθis at a minimum among these unbiased linear
estimates. We have Cov(ˆθ) =σ2(X′X)−1.
In the specific case here, the design matrix is
X=
1n0,10 0 0 0
1n1,10 0 1 n1,10
0 1 n0,20 0 0
0 1 n1,20 1 n1,20
0 1 n2,20 0 1 n2,2
0 0 1 n0,30 0
0 0 1 n2,30 1 n2,3

where 1xdenotes a vector of xones. Hence,
X′X=
N1 0 0 n1,1 0
0N2 0 n1,2 n2,2
0 0 N3 0 n2,3
n11n1,20n1,1+n1,2 0
0n2,2n2,3 0 n2,2+n2,3

where Nsis the sample size per period, that is, N1=n0,1+n1,1,N2=n0,2+n1,2+n2,2,N3=n0,3+n2,3.
We can use the technique of inverting block-partitioned matrices here. If we write
A=
N10 0
0N20
0 0 N3
,
C=/parenleftbiggn1,1+n1,2 0
0 n2,2+n2,3/parenrightbigg
,
and
B=
n1,10
n1,2n2,2
0n2,3
,
then, by this technique, we obtain
cov(/tildewideθ1,/tildewideθ2) =/parenleftbig
C−B′A−1B/parenrightbig−1=f−1·
n2,2+n2,3−n2
2,2
N2−n2
2,3
N3n1,2n2,2
N2
n1,2n2,2
N2n1,1+n1,2−n2
1,1
N1−n2
1,2
N2
 (1.b)
where f=/parenleftig
n1,1+n1,2−n2
1,1
N1−n2
1,2
N2/parenrightig
·/parenleftig
n2,2+n2,3−n2
2,2
N2−n2
2,3
N3/parenrightig
−/parenleftig
n1,2n2,2
N2/parenrightig2
.
Regarding the point estimates, it is possible to simplify to
/parenleftbigg/tildewideθ1
/tildewideθ2/parenrightbigg
=/parenleftbig
C−B′A−1B/parenrightbig−1/parenleftbigg
−B′A−1...I2/parenrightbigg
N1¯y.,1
N2¯y.,2
N3¯y.,3
n1,1¯y1,1+n1,2¯y1,2
n2,2¯y2,2+n1,2¯y2,3
= (1.c)
/parenleftbig
C−B′A−1B/parenrightbig−1/parenleftbiggn1,1(¯y1,1−¯y.,1) +n1,2(¯y1,2−¯y.,2)
n2,2(¯y2,2−¯y.,2) +n2,3(¯y2,3−¯y.,3)/parenrightbigg
3where ¯ yi,sis the pooled mean per arm and period, and ¯ y.,sis the pooled mean per period. Note, however,
that/tildewideθicannot, in general, be represented as a weighted average of stagewise treatment effect contrasts, i.e.
as/summationtext2
i=1/summationtext3
s=1wi,s·(¯yi,s−¯y0,s).
We focus on the treatment effect estimator for treatment 2 only, given that this is the arm in which we
use non-concurrent controls. Assume now that Ns=rsNis the sample size in period sandri,s=ni,s
Nis
the fraction of patients in arm i= 0,1,2 and period samong all patients such that rs=/summationtext
i∈Isri,sand
r1+r2+r3= 1. Var( /tildewideθ1) and Var( /tildewideθ2) are the diagonal of (1.b). With this notation, we can write the variance
as
Var(/tildewideθ2) =r1p1,1(1−p1,1) +r2p1,2(1−p1,2)
(r1p1,1(1−p1,1) +r2p1,2(1−p1,2)) (r3p2,3(1−p2,3) +r2p2,2(1−p2,2))−r2
2p2
1,2p2
2,2·1
N(1.d)
where pi,s=ri,s
rsis the proportion of patients in treatment group iof period s.
We assume that r1is fixed. Minimizing Var( /tildewideθi) is equivalent to maximizing Var( /tildewideθi)−1. Denoting by
qjs=pjs(1−pjs), we obtain
Var(/tildewideθ2)−1∝r3q23+r2q22−r2
2p2
12p2
22
r1q11+r2q12. (1.e)
A.2.2 Two-period trial
Consider a two-period trial, where arm 2 enters later and finishes at the same time that arm 1, as illustrated
in Figure 3 of the paper. The treatment effect estimator for treatment 2 using non-concurrent controls can
then be written as
/tildewideθ2=ˆθ2,2+ρ(ˆθ1,1−ˆθ1,2)
where
ρ=1
n0,2
1
n0,1+1
n0,2+1
n1,1+1
n1,2
The variance of the estimator /tildewideθ2is then
Var(˜θ2) = Var( ˆθ2,2) +ρ2Var(ˆθ1,1) +ρ2Var(ˆθ1,2)−2ρCov( ˆθ2,2,ˆθ1,2) =σ2
2,2+ρ2(σ2
1,1+σ2
1,2)−2ρσ2
n0,2
=σ2/parenleftbigg1
n2,2+1
n0,2/parenrightbigg
−2ρσ21
n0,2+ρ2σ2/parenleftbigg1
n1,1+1
n0,1+1
n1,2+1
n0,2/parenrightbigg
=σ2/parenleftbigg1
n2,2+1
n0,2/parenrightbigg
−2σ2·/parenleftig
1
n0,2/parenrightig2
1
n0,1+1
n0,2+1
n1,1+1
n1,2+σ2·/parenleftig
1
n0,2/parenrightig2
1
n0,1+1
n0,2+1
n1,1+1
n1,2
=σ2
1
n2,2+1
n0,2−/parenleftig
1
n0,2/parenrightig2
1
n0,1+1
n0,2+1
n1,1+1
n1,2

By taking into account pi,s=ni,s
rsNs, then:
Var(˜θ2) =σ2
N/parenleftigg
r2q2,2−r2
2p2
1,2p2
2,2
r1q1,1+r2q1,2/parenrightigg−1
(1.f)
4A.2.3 Three-period trial
Suppose now a three-period platform trial in which arm 2 enters later and arm 1 finishes before arm 2 does
(see Figure 1 in the paper for an illustration). The treatment effect estimator for comparing arm 2 against
control when using the model-based approaches is
/tildewideθ2=ω1,1(ˆy1,1−ˆy.,1) +ω1,2(ˆy1,2−ˆy.,2) +ω2,2(ˆy2,2−ˆy.,2) +ω2,3(ˆy2,3−ˆy.,3) (1.g)
where ˆ y.,sis the pooled mean per period, and where ωi,sare given by:
ω1,1=/parenleftig
n1,1(n0,1+n1,1)n1,2n2,2(n0,3+n2,3)/parenrightig
·/parenleftig
n1,1n1,2(n0,2n0,3n2,2+n0,3n2,2n2,3+n0,2(n0,3+n2,2)n2,3)
+n0,1(n0,3n1,1n1,2n2,2+ (n0,3n1,1n1,2+n1,1n1,2n2,2+n0,3(n1,1+n1,2)n2,2)n2,3
+n0,2(n1,1+n1,2)(n2,2n2,3+n0,3(n2,2+n2,3)))/parenrightig−1
ω1,2=/parenleftig
(n0,1+n1,1)n2
1,2n2,2(n0,3+n2,3)/parenrightig
·/parenleftig
n1,1n1,2(n0,2n0,3n2,2+n0,3n2,2n2,3+n0,2(n0,3+n2,2)n2,3) +
+n0,1(n0,3n1,1n1,2n2,2+ (n0,3n1,1n1,2+n1,1n1,2n2,2+n0,3(n1,1+n1,2)n2,2)n2,3
+n0,2(n1,1+n1,2)(n2,2n2,3+n0,3(n2,2+n2,3)))/parenrightig−1
ω2,2=/parenleftig
n2,2(n1,1n1,2(n0,2+n2,2) +n0,1(n1,1n1,2+n0,2(n1,1+n1,2) + (n1,1+n1,2)n2,2))(n0,3+n2,3)/parenrightig
·
·/parenleftig
n1,1n1,2(n0,2n0,3n2,2+n0,3n2,2n2,3+n0,2(n0,3+n2,2)n2,3) +
+n0,1(n0,3n1,1n1,2n2,2+ (n0,3n1,1n1,2+n1,1n1,2n2,2+n0,3(n1,1+n1,2)n2,2)n2,3+
+n0,2(n1,1+n1,2)(n2,2n2,3+n0,3(n2,2+n2,3)))/parenrightig−1
ω2,3=/parenleftig
(n1,1n1,2(n0,2+n2,2) +n0,1(n1,1n1,2+n0,2(n1,1+n1,2) + (n1,1+n1,2)n2,2))n2,3(n0,3+n2,3)/parenrightig
·
·/parenleftig
n1,1n1,2(n0,2n0,3n2,2+n0,3n2,2n2,3+n0,2(n0,3+n2,2)n2,3) +
+n0,1(n0,3n1,1n1,2n2,2+ (n0,3n1,1n1,2+n1,1n1,2n2,2+n0,3(n1,1+n1,2)n2,2)n2,3+
+n0,2(n1,1+n1,2)(n2,2n2,3+n0,3(n2,2+n2,3)))/parenrightig−1
The variance of the estimator /tildewideθ2is given in (1.d).
B Additional simulation results
B.1 Sample sizes per period and arm
In what follows, we describe the sample size distribution per period and arm according to each design
configuration and allocation strategy.
The considered designs are:
1. Design with one period only (that is, multi-arm design), and thus with sample sizes per period N1=N
andN2=N3= 0.
2. Design with two periods (arm 2 starts later, but arms 1 and 2 finish at the same time), assuming a
sample size of N1=N/4 in period 1 and N2= 3N/4 in period 2.
3. Design with three periods (arm 2 starts later and finishes after arm 1 does), where considering two
situations: N1=N2=N3=N/3, and N1=N/3N2= 2(N−N1)/3 and N3= (N−N1)/3.
where N= 92. The following tables depict the sample size per arm and period according to each design and
with respect to the allocation strategy.
5Table 1: Sample size distribution per arm and period according to the allocation strategy for a multi-arm
trial design (one-period design).
Period 1 Period 2 Period 3
Arm 2 31 0 0
Arm 1 31 0 0
Control 31 0 0
(a) One-to-onePeriod 1 Period 2 Period 3
Arm 2 27 0 0
Arm 1 27 0 0
Control 38 0 0
(b)√
kallocationPeriod 1 Period 2 Period 3
Arm 2 27 0 0
Arm 1 27 0 0
Control 38 0 0
(c) Optimal allocations
Table 2: Sample size distribution per arm and period according to the allocation strategy for a two-period
design where arm 2 starts later and finishes when arm 1 does, and with sample size of N1=N/4 in period
1 and N2= 3N/4 in period 2.
Period 1 Period 2 Period 3
Arm 2 0 23 0
Arm 1 12 23 0
Control 12 23 0
(a) One-to-onePeriod 1 Period 2 Period 3
Arm 2 0 20 0
Arm 1 12 20 0
Control 12 29 0
(b)√
kallocationPeriod 1 Period 2 Period 3
Arm 2 0 27 0
Arm 1 12 12 0
Control 12 30 0
(c) Optimal allocations
Table 3: Sample size distribution per arm and period according to the allocation strategy for a three-period
design where arm 2 starts later and finishes after arm 1 does, and with N1=N2=N3=N/3.
Period 1 Period 2 Period 3
Arm 2 0 10 16
Arm 1 16 10 0
Control 16 10 16
(a) One-to-onePeriod 1 Period 2 Period 3
Arm 2 0 9 16
Arm 1 16 9 0
Control 16 12 16
(b)√
kallocationPeriod 1 Period 2 Period 3
Arm 2 0 9 16
Arm 1 16 9 0
Control 16 12 16
(c) Optimal allocations
Table 4: Sample size distribution per arm and period according to the allocation strategy for a three-period
design where arm 2 starts later and finishes after arm 1 does, and with N1=N/3,N2= 2(N−N1)/3 and
N3= (N−N1)/3.
Period 1 Period 2 Period 3
Arm 2 0 14 10
Arm 1 16 14 0
Control 16 14 10
(a) One-to-onePeriod 1 Period 2 Period 3
Arm 2 0 12 10
Arm 1 16 12 0
Control 16 17 10
(b)√
kallocationPeriod 1 Period 2 Period 3
Arm 2 0 16 10
Arm 1 16 8 0
Control 16 17 10
(c) Optimal allocations
B.2 Results under the null hypothesis
In this section, we report the results of the simulations under the null hypothesis. In this case, we considered
means for the treatment arms equal to 4.94 as in the control group, and variances equal to 1. Table 5
summarizes the results. We can observe that the type 1 error is controlled in all considered scenarios.
B.3 Results for trials with time trends
In this section, we present the results of the case study for trials with time trends. We considered the designs
presented in the previous section, and the same parameter settings as in the paper: a total sample size of
N= 92, the mean in the control is 4 .94 with variance 1, and means equal to 5 .66 and variance 1 in the
treatment arms. In this simulation, however, we considered step-wise time trends. Specifically, the data are
6Table 5: Type 1 error (T1E) rates for each design according to the allocation strategy. Here r1andr2are the
proportion of patients allocated to periods 1 and 2, respectively; “one” denotes one-to-one allocation, “opt”
denotes optimal allocation and “sqrt” denotes the square root of kallocation; “T1E A i” is the estimated type
1 error when testing A iagainst control ( i= 1,2), and “CI Width A i” refers to the width of the confidence
interval for the treatment effect of arm A iagainst control.
Design r1 r2Allocation T1E T1E CI Width CI Width
A1 A2 A1 A2
1-period1.000 0.000 one 0.025 0.026 1.106 1.106
1.000 0.000 opt 0.025 0.026 1.099 1.100
1.000 0.000 sqrt 0.025 0.025 1.100 1.100
2-period0.250 0.750 one 0.025 0.025 1.006 1.006
0.250 0.750 opt 0.026 0.025 0.997 0.997
0.250 0.750 sqrt 0.025 0.025 0.997 0.997
3-period0.337 0.326 one 0.025 0.025 1.026 1.151
0.337 0.326 opt 0.025 0.025 1.084 1.095
0.337 0.326 sqrt 0.025 0.024 1.025 1.149
3-period0.337 0.446 one 0.025 0.025 0.947 1.173
0.337 0.446 opt 0.025 0.026 1.038 1.055
0.337 0.446 sqrt 0.025 0.026 0.938 1.156
generated according to the model
E(Yj) =η0+/summationdisplay
i=1,2θi·I(ij=i) +f(tj), (2.h)
where η0is the control response in period 1, θkis the treatment effect for arm k,f(·) represents the time
trend function and tjis the calendar time when patient jis enrolled in the trial, where f(j) =λI(j > N 1).
Here λrepresents the strength of the time trend, which is considered to be λ= 0.25 in the simulations.
In the following tables, we present the resulting power and type 1 error for each design and allocation
strategy. We can see that the results also hold for trials with time trends and that the type 1 error is
maintained.
C Mathematica files
The following Mathematica notebook files are now displayed:
•suppmat-CC.nb: Computation on designs with concurrent controls only.
•suppmat-NCC-case2.nb: Computations on case 2 using non-concurrent controls.
•suppmat-NCC-case3.nb: Computations on case 3 using non-concurrent controls.
Mathematica and R code files are also available at https://github.com/MartaBofillRoig/Allocation .
7Table 6: Power for each design according to the allocation strategy for a trial with stepwise time trends
(see (2.h) for the data generation). Here r1andr2are the proportion of patients allocated to periods 1 and
2, respectively; “one” denotes one-to-one allocation, “opt” denotes optimal allocation and “sqrt” denotes
the square root of kallocation; “Power A i” is the estimated type 1 error when testing A iagainst control
(i= 1,2), and “CI Width A i” and “Variance A i” refers to the width of the confidence interval and variance,
respectively, for the treatment effect of arm A iagainst control.
Design r1 r2Allocation Power Power CI Width CI Width
A1 A2 A1 A2
1-period1.000 0.000 one 0.799 0.796 1.105 1.106
1.000 0.000 opt 0.805 0.805 1.099 1.099
1.000 0.000 sqrt 0.805 0.804 1.100 1.099
2-period0.250 0.750 one 0.844 0.666 1.006 1.006
0.250 0.750 opt 0.772 0.759 0.997 0.997
0.250 0.750 sqrt 0.852 0.683 0.997 0.997
3-period0.337 0.326 one 0.717 0.721 1.027 1.151
0.337 0.326 opt 0.724 0.724 1.085 1.096
0.337 0.326 sqrt 0.726 0.725 1.025 1.150
3-period0.337 0.446 one 0.782 0.687 0.947 1.173
0.337 0.446 opt 0.737 0.727 1.038 1.055
0.337 0.446 sqrt 0.786 0.688 0.938 1.157
Table 7: Type 1 error (T1E) rates for each design according to the allocation strategy for a trial with stepwise
time trends (see (2.h) for the data generation). Here r1andr2are the proportion of patients allocated to
periods 1 and 2, respectively; “one” denotes one-to-one allocation, “opt” denotes optimal allocation and
“sqrt” denotes the square root of kallocation; “T1E A i” is the estimated type 1 error when testing A i
against control ( i= 1,2); “CI Width A i” and “Variance A i” refers to the width of the confidence interval
and variance, respectively, for the treatment effect of arm A iagainst control.
Design r1 r2Allocation T1E T1E CI Width CI Width
A1 A2 A1 A2
1-period1.000 0.000 one 0.025 0.024 1.105 1.105
1.000 0.000 opt 0.025 0.025 1.100 1.100
1.000 0.000 sqrt 0.025 0.025 1.099 1.100
2-period0.250 0.750 one 0.026 0.024 1.006 1.006
0.250 0.750 opt 0.025 0.025 0.997 0.997
0.250 0.750 sqrt 0.025 0.026 0.998 0.998
3-period0.337 0.326 one 0.024 0.024 1.027 1.151
0.337 0.326 opt 0.025 0.025 1.084 1.095
0.337 0.326 sqrt 0.025 0.024 1.026 1.150
3-period0.337 0.446 one 0.025 0.025 0.947 1.173
0.337 0.446 opt 0.025 0.025 1.038 1.055
0.337 0.446 sqrt 0.025 0.025 0.939 1.157
8Supplementary Material  of  “Optimal alloca-tion strategies in platform trials’’
Design with concurrent controls only
In this file, we provide the derivation of the optimal allocation for trials utilising concurrent controls 
only. In what follows, we focus on determining the optimal solutions for the Case 3 described in the 
paper. 
Note that Case 2 is a particular case of Case 3 when consider r3=0. By inspection of Figure 3 in the 
manuscript, one can see the decrease in variance compared to separate trials with respect to r2, 
and that the maximum variance reduction occurs for r1+r2=1, and thus for a two-period trial.
Case 3 (Section 3.3)
Set and simplify conditions
In[1]:= subst= {n11r1*N/2 , n01r1*N/2 ,
n12r2*N-n02-n22 , n03r3*N/2, n23r3*N/2};
substp= {n12r2*N*p12, n22r2*N*p22, n02r2*N*p02, r31-r1-r2};
Define terms to optimise. 
Note: sigma*term1^(-1)/N is the variance of the estimator of eﬀect 1 (analogously sigma*ter-
m2^(-1)/N for eﬀect 2). But since sigma and N are fixed, we simply work on term1 and term2 expres-
sions. 
In[3]:= term1=
FullSimplify[((n11*n01/ (n11+n01)) + (n12*n02/ (n12+n02))) /N/. subst/. substp]
Out[3]=r1
4+p02(-1+p02+p22)r2
-1+p22
In[4]:= term2=
FullSimplify[(n22*n02/ (n22+n02) /N) + (n23*n03/ (n23+n03) /N) /. subst/. substp]
Out[4]=1
4(1-r1-r2) +p02 p22 r2
p02+p22
In[5]:= constr=FullSimplify[term1-term2]
Out[5]=1
4-1+2 r1+r2+4 p02(-1+p02+p22)r2
-1+p22-4 p02 p22 r2
p02+p22In[6]:= e1=Solve[D[term2, p02]l D[constr, p02], l]
e2=Solve[D[term2, p22]l D[constr, p22], l]
Out[6]= l4p02 p22 r2
(p02+p22)2-p22 r2
p02+p22
-4 p02 r2
-1+p22-4(-1+p02+p22)r2
-1+p22-4 p02 p22 r2
(p02+p22)2+4 p22 r2
p02+p22
Out[7]= l4p02 p22 r2
(p02+p22)2-p02 r2
p02+p22
-4 p02 r2
-1+p22+4 p02(-1+p02+p22)r2
(-1+p22)2 -4 p02 p22 r2
(p02+p22)2+4 p02 r2
p02+p22
In[8]:= e3=e1〚1〛〚1〛〚2〛 e2〚1〛〚1〛〚2〛
Out[8]=4p02 p22 r2
(p02+p22)2-p22 r2
p02+p22
-4 p02 r2
-1+p22-4(-1+p02+p22)r2
-1+p22-4 p02 p22 r2
(p02+p22)2+4 p22 r2
p02+p224p02 p22 r2
(p02+p22)2-p02 r2
p02+p22
-4 p02 r2
-1+p22+4 p02(-1+p02+p22)r2
(-1+p22)2 -4 p02 p22 r2
(p02+p22)2+4 p02 r2
p02+p22
In[9]:= sol=Solve[e3,{p02}]〚3〛
Out[9]= p02-1+2 p22-2 p222
2(-1+p22)
The solution corresponds to the optimal allocation for p02 (Section 3.3 in the paper):In[10]:= FullSimplify[sol]
Out[10]= p021
2-2 p22-p22
Where the optimal solution for p22 can be obtained numerically by solving the following equation:
In[11]:= eq2=Assuming[{r2+r3>1/2, r2+r3<1, p22>0, p22<1},
FullSimplify[(term1-term2) /. sol]]
Out[11]=1
4-1+2 r1+(-2+p22(11+p22(-29+p22(49-4 p22(13+2(-4+p22)p22)))))r2
(-1+p22)3
In[12]:= soleq=Assuming[{p22>0, p22<1}, FullSimplify[Solve[(eq20), r2]]]
Out[12]= r2(-1+p22)3(-1+2 r1)
(-1+2 p22) (-2+p22(7+p22(-15+p22(19+2 p22(-7+2 p22)))))2    suppmat-CC.nbSupplementary Material  of  “Optimal alloca-tion strategies in platform trials’’
Design with concurrent and non-concurrent controls 
- Case 2
In this file, we provide the derivation of the optimal allocation for trials utilising concurrent and 
non-concurrent controls. Next, we focus on determining the optimal solutions for the Case 2 
described in the paper.
For simplicity of calculation, in this file we start optimising using a diﬀerent parametrization. We 
consider: r_{i,s} = n_{i,s} /N_s, where as before n_{i,s} is the sample size for arm i in the period s, and 
N_s is the total sample size in period s. At the end of the document we express the solutions in 
terms of p_{i,s} as in the paper. 
Set conditions
In[1]:= subst= {r11r1/2 , r01r1/2 , r02(1-r1) -r12-r22};
In[2]:= substp= {r12r2 p12, r22r2 p22, r02r2 p02, r31-r1-r2};
Define terms to optimise. 
In[3]:= term1=FullSimplify[(r11*r01/ (r11+r01)) + (r12*r02/ (r12+r02)) /. subst]
Out[3]=r1
4+r12+r122
-1+r1+r22
In[4]:= term2=FullSimplify[
(1/r22+1/r02- ((1/r02)^2/ (1/r01+1/r02+1/r11+1/r12)))^(-1) /. subst]
Out[4]=r22r12+4r12(-1+r12+r22) +r1(-1+4r12+r22)
r12+4(-1+r12)r12+r1(-1+4r12)
In[5]:= sol=Solve[term1term2, r12]〚3〛
Out[5]= r121
21-r1- 1-r1-4r22+4r1r22+4r222
In[6]:= term3=Simplify[term1/. sol]
Out[6]=r22-2+3r1+4r22-2 (1-2r22)2+r1(-1+4r22)
4(-1+r1+r22)In[7]:= derivative=FullSimplify[D[term3, r22]]
Out[7]=1
4(-1+r1+r22)2r22(-1+r1+r22) 4-4(-1+r1+2r22)
(1-2r22)2+r1(-1+4r22)-
r22-2+3r1+4r22-2 (1-2r22)2+r1(-1+4r22)+
(-1+r1+r22)-2+3r1+4r22-2 (1-2r22)2+r1(-1+4r22)
In[8]:= sol2=Solve[derivative0, r22];Solve :There may be values of the parameters for which some or all solutions are not valid.
In[9]:= sol22=Assuming[{r1>0, r1<1/2}, Simplify[sol2〚3〛]]
Out[9]= r221-r1+1
43(-1+r1) 9r12+6r1
-4+8+36r1-108r12+27r13+63r116-72r1+108r12-27r131/3+
-2+8+36r1-108r12+27r13+63
r116-72r1+108r12-27r131/32

8+36r1-108r12+27r13+63r116-72r1+108r12-27r131/3-
1
2-22
3+8(-1+r1)2+43r1
3-7r12-
(-1+r1)4-24r1+9r12
128+36r1-108r12+27r13+63r116-72r1+108r12-27r131/3-
1
12(-1+r1)8+36r1-108r12+27r13+63r116-72r1+108r12-27r131/3+
3(-1+r1)2r1
8+36r1-108r12+27r13+63r116-72r1+108r12-27r131/6
(-1+r1) 9r12+6r1-4+8+36r1-108r12+27r13+
63r116-72r1+108r12-27r131/3+-2+8+36r1-
108r12+27r13+63r116-72r1+108r12-27r131/32
2    suppmat-NCC-case2_corr.nbIn[10]:= CForm[sol22〚1〛〚2〛]
Out[10]//CForm=
1 - r1 + Sqrt(((-1 + r1)*(9*Power(r1,2) + 6*r1*(-4 + Power(8 + 36*r1 - 108*Power(r1,2)
              0.3333333333333333)) + Power(-2 + Power(8 + 36*r1 - 108*Power(r1,2) + 27*             0.3333333333333333),2)))/Power(8 + 36*r1 - 108*Power(r1,2) + 27*Power(r1,3    (4.*Sqrt(3)) - Sqrt(-7.333333333333333 + 8*Power(-1 + r1,2) + (43*r1)/3. - 7*Power
      ((-1 + r1)*(4 - 24*r1 + 9*Power(r1,2)))/
       (12.*Power(8 + 36*r1 - 108*Power(r1,2) + 27*Power(r1,3) + 6*Sqrt(3)*Sqrt(r1*(16 
      ((-1 + r1)*Power(8 + 36*r1 - 108*Power(r1,2) + 27*Power(r1,3) + 6*Sqrt(3)*Sqrt(r1      (Sqrt(3)*Power(-1 + r1,2)*r1*Power(8 + 36*r1 - 108*Power(r1,2) + 27*Power(r1,3) +       Sqrt((-1 + r1)*(9*Power(r1,2) + 6*r1*(-4 + Power(8 + 36*r1 - 108*Power(r1,2) + 27               0.3333333333333333)) + Power(-2 + Power(8 + 36*r1 - 108*Power(r1,2) + 27              0.3333333333333333),2))))/2.
In[11]:= sol22/.{r10.3, r20.7}
Out[11]= {r220.302281}
Next, we simplify the solution by defining terms a and b.
In[12]:= sol22a=FullSimplifysol22/.FullSimplify
8+36 r1-108 r12+27 r13+6 3 r116-72 r1+108 r12-27 r131/3
 a
Out[12]= r221-r1+1
43(-1+r1)9r12+6r1-4+8+9r1(4+3(-4+r1)r1) +
63r1(16-9r1(8+3(-4+r1)r1))1/3+-2+8+9r1(4+
3(-4+r1)r1) +6 3r1(16-9r1(8+3(-4+r1)r1))1/32
8+9r1(4+3(-4+r1)r1) +6 3r1(16-9r1(8+3(-4+r1)r1))1/3-
1
2-22
3+8(-1+r1)2+43r1
3-7r12-
(-1+r1) (4+3r1(-8+3r1))
128+9r1(4+3(-4+r1)r1) +6 3r1(16-9r1(8+3(-4+r1)r1))1/3-1
12
(-1+r1)8+9r1(4+3(-4+r1)r1) +6 3r1(16-9r1(8+3(-4+r1)r1))1/3+
3(-1+r1)2r1
8+9r1(4+3(-4+r1)r1) +6 3r1(16-9r1(8+3(-4+r1)r1))1/6
(-1+r1)9r12+6r1-4+8+9r1(4+3(-4+r1)r1) +6 3
r1(16-9r1(8+3(-4+r1)r1))1/3+-2+8+9r1(4+3(-4+
r1)r1) +6 3r1(16-9r1(8+3(-4+r1)r1))1/32
In[13]:= FullSimplify8+9 r1(4+3(-4+r1)r1) +6 3 r1(16-9 r1(8+3(-4+r1)r1))1/3
8+36 r1-108 r12+27 r13+6 3 r116-72 r1+108 r12-27 r131/3

Out[13]= 1suppmat-NCC-case2_corr.nb    3In[14]:= sol22a/.8+9 r1(4+3(-4+r1)r1) +6 3 r1(16-9 r1(8+3(-4+r1)r1))1/3a
Out[14]= r221-r1+(-1+r1)(-2+a)2+6(-4+a)r1+9r12
8+9r1(4+3(-4+r1)r1)+6 3r1(16-9r1(8+3(-4+r1)r1))1/3
43-
1
2-22
3-1
12a(-1+r1) +8(-1+r1)2+43r1
3-7r12-
(-1+r1) (4+3r1(-8+3r1))
128+9r1(4+3(-4+r1)r1) +6 3r1(16-9r1(8+3(-4+r1)r1))1/3+
3(-1+r1)2r1
8+9r1(4+3(-4+r1)r1) +6 3r1(16-9r1(8+3(-4+r1)r1))1/6
(-1+r1)(-2+a)2+6(-4+a)r1+9r12
In[15]:= r22a=1-r1+√(-1+r1)(-2+a)2+6(-4+a)r1+9 r12a 4 ×√3-
(1/2)√-(22/3) - (1/12)a(-1+r1) +8(-1+r1)2+
(43 r1) /3-7 r12- ((-1+r1) (4+3 r1(-8+3 r1))) / (12 a) +
√3(-1+r1)2r1(a^3)1/6 √(-1+r1)(-2+a)2+6(-4+a)r1+9 r12
Out[15]= 1-r1+(-1+r1)(-2+a)2+6(-4+a)r1+9r12
a
43-
1
2-22
3-1
12a(-1+r1) +8(-1+r1)2+43r1
3-7r12+
3a31/6(-1+r1)2r1
(-1+r1)(-2+a)2+6(-4+a)r1+9r12-(-1+r1) (4+3r1(-8+3r1))
12a
In[16]:= CForm[r22a]
Out[16]//CForm=
1 - r1 + Sqrt(((-1 + r1)*(Power(-2 + a,2) + 6*(-4 + a)*r1 + 9*Power(r1,2)))/a)/(4.*Sqrt   Sqrt(-7.333333333333333 - (a*(-1 + r1))/12. + 8*Power(-1 + r1,2) + (43*r1)/3. - 7*Power      (Sqrt(3)*Power(Power(a,3),0.16666666666666666)*Power(-1 + r1,2)*r1)/Sqrt((-1 + r1    2.4    suppmat-NCC-case2_corr.nbIn[17]:= FullSimplify[r22a]
Out[17]= 1-r1+(-1+r1)(-2+a)2+6(-4+a)r1+9r12
a
43-
1
2-22
3-1
12a(-1+r1) +8(-1+r1)2+43r1
3-7r12+
3a31/6(-1+r1)2r1
(-1+r1)(-2+a)2+6(-4+a)r1+9r12-(-1+r1) (4+3r1(-8+3r1))
12a
In[18]:= sol22ab=FullSimplifyr22a/.(-2+a)2+6(-4+a)r1+9 r12b
Out[18]=1
1212+ 3b(-1+r1)
a-12r1-
3-(-1+r1)-12 3 aa31/6b(-1+r1)r1+b4+8a+a2-12(2+a)r1+9r12
ab
In[19]:= sol22abs=FullSimplifyPowerExpandr22a/.(-2+a)2+6(-4+a)r1+9 r12b
Out[19]=1
1212+3b-1+r1
a-12r1-
3-(-1+r1)-12 3 a3/2-1+r1 r1+ b4+8a+a2-12(2+a)r1+9r12
ab
In[20]:= CForm[sol22ab]
Out[20]//CForm=
(12 + Sqrt(3)*Sqrt((b*(-1 + r1))/a) - 12*r1 - Sqrt(3)*Sqrt(-(((-1 + r1)*(-12*Sqrt(3)*              b*(4 + 8*a + Power(a,2) - 12*(2 + a)*r1 + 9*Power(r1,2))))/(a*b))))/12.
We compute the solution in terms of p22 by taking into account that p22=r22/(1-r1), as 1-r1=r2 in 
this case.
In[21]:= solp22=FullSimplify[sol22ab/ (1-r1)]
Out[21]=-12- 3b(-1+r1)
a+12r1+ 3-(-1+r1)-12 3 aa31/6b(-1+r1)r1+b4+8a+a2-12(2+a)r1+9r12
ab
12(-1+r1)
In[22]:= CForm[solp22]
Out[22]//CForm=
(-12 - Sqrt(3)*Sqrt((b*(-1 + r1))/a) + 12*r1 + Sqrt(3)*Sqrt(-(((-1 + r1)*(-12*Sqrt(3)*              b*(4 + 8*a + Power(a,2) - 12*(2 + a)*r1 + 9*Power(r1,2))))/(a*b))))/(12.Simplifying solution p22
First note that a>0 and b<0suppmat-NCC-case2_corr.nb    5In[23]:= 8+9 r1(4+3(-4+r1)r1) +6 3 r1(16-9 r1(8+3(-4+r1)r1))1/3/.{r10.3}
Out[23]= 2.72751
In[24]:= (-2+a)2+6(-4+a)r1+9 r12/.{r10.3, a2.727510816380422}
Out[24]= -0.951209
In[25]:= FullSimplify-12+12 r1
12(-1+r1)+FullSimplify
-3 b(-1+r1) /a+ 3 -(-1+r1)-12 3 aa31/6b(-1+r1)r1+b4+8 a+a2-12(2+a)r1+9 r12
a b
12(-1+r1)
Out[25]= 1+-b(-1+r1)
a+-(-1+r1)-12 3 aa31/6b(-1+r1)r1+b4+8a+a2-12(2+a)r1+9r12
ab
43(-1+r1)
In[26]:= solp22s=Assuming{a>0, b<0, r1<1, r1>0},
FullSimplify1+-b(-1+r1)
a+-(-1+r1)-12 3 aa31/6b(-1+r1)r1+b4+8 a+a2-12(2+a)r1+9 r12
a b
43(-1+r1)
Out[26]= 1+-b(-1+r1)
a+-(-1+r1)-12 3a3b(-1+r1)r1+b4+8a+a2-12(2+a)r1+9r12
ab
43(-1+r1)
In[27]:= solp22s2=1+-b- 12 3 a3b^(-1) (-1+r1)r1+4+8 a+a2-12(2+a)r1+9 r12
43 a(1-r1)
Out[27]= 1+-b- 4+8a+a2-12(2+a)r1+12 3a3(-1+r1)
br1+9r12
43a(1-r1)
In[28]:= CForm[solp22s2]
Out[28]//CForm=
1 + (Sqrt(-b) - Sqrt(4 + 8*a + Power(a,2) - 12*(2 + a)*r1 + 12*Sqrt(3)*Sqrt((Power(a,3In[29]:= solp22s/.{r10.3, a2.727510816380422`, b-0.9512085425647322`}
Out[29]= 0.43183
In[30]:= solp22s2/.{r10.3, a2.727510816380422`, b-0.9512085425647322`}
Out[30]= 0.43183
In[31]:= Assuming[ {a>0, b<0, r1<1, r1>0}, FullSimplify[solp22s/solp22]]
Out[31]= 1
Finally, to get the solution r12 (and hence p12), one needs to use the solution obtained for r22 and 
substitute it in the expression for r12 (sol).6    suppmat-NCC-case2_corr.nbIn[32]:= sol
Out[32]= r121
21-r1- 1-r1-4r22+4r1r22+4r222
In[33]:= solp22=FullSimplify[sol〚1〛〚2〛/ (1-r1) /.{r22p22* (1-r1)}]
Out[33]=-1+ (-1+4(-1+p22)p22(-1+r1)) (-1+r1) +r1
2(-1+r1)
In[34]:= solp22s=FullSimplifysolp22/.
p221+-b(1-r1) -(1-r1)-12 3 aa31/6-b(1-r1)r1+b4+8 a+a2-12(2+a)r1+9 r12
b
43 a(1-r1)
Out[34]=1
2+1
2(-1+r1)
(-1+r1) -1+1
123 a(-1+r1)b(-1+r1) - -1
b(-1+r1)-12 3 a
a31/6b(-1+r1)r1+b4+8a+a2-12(2+a)r1+9r12
-12a(-1+r1) + 3b(-1+r1) - -1
b(-1+r1)-12 3 aa31/6
b(-1+r1)r1+b4+8a+a2-12(2+a)r1+9r12suppmat-NCC-case2_corr.nb    7Supplementary Material  of  “Optimal alloca-tion strategies in platform trials’’
Design with concurrent and non-concurrent controls 
- Case 3
We first define the treatment eﬀect for arm 2 following the expressions presented in the supplemen-
tary material (see Section A.2). To do so, we define the matrices A, B, and C, and use equation (1.b) 
to to obtain point estimates
In[]:=nd1=n01+n11
nd2=n02+n12+n22
nd3=n03+n23
A= {{nd1, 0, 0},{0, nd2, 0},{0, 0, nd3}}
B= {{n11, 0},{n12, n22},{0, n23}}
Cm= {{n11+n12, 0},{0, n22+n23}}
Out[ ]=n01+n11
Out[ ]=n02+n12+n22
Out[ ]=n03+n23
Out[ ]={{n01+n11, 0, 0},{0, n02+n12+n22, 0},{0, 0, n03+n23}}
Out[ ]={{n11, 0},{n12, n22},{0, n23}}
Out[ ]={{n11+n12, 0},{0, n22+n23}}In[]:=M=FullSimplify[Inverse[Cm-Transpose[B].Inverse[A].B]]
Nm= {{n11*theta11+n12*theta12},{n22*theta22+n23*theta23}}
Collect[FullSimplify[M.Nm]〚2〛,{theta11, theta12, theta22, theta23}]
w11= (n11(n01+n11)n12 n22(n03+n23) ) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))
w12=(n01+n11)n122n22(n03+n23)
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))
w22=
(n22(n11 n12(n02+n22) +n01(n11 n12+n02(n11+n12) + (n11+n12)n22)) (n03+n23) ) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))
w23=
((n11 n12(n02+n22) +n01(n11 n12+n02(n11+n12) + (n11+n12)n22))n23(n03+n23) ) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))
sol=M.Nm
True===
FullSimplify[sol〚2〛〚1〛 w11*theta11+w12*theta12+w22*theta22+w23*theta23]
Out[ ]={{((n01+n11) (n03(n02+n12)n22+n03(n02+n12)n23+ (n02+n03+n12)n22 n23)) /
(n01 n03(n11 n12+n02(n11+n12))n22+
n01(n03 n11 n12+n11 n12 n22+n03(n11+n12)n22+n02(n11+n12) (n03+n22))n23+
n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23)),
((n01+n11)n12 n22(n03+n23)) / (n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))},
{((n01+n11)n12 n22(n03+n23)) / (n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23)))),
((n11 n12(n02+n22) +n01(n11 n12+n02(n11+n12) + (n11+n12)n22)) (n03+n23)) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))}}
Out[ ]={{n11 theta11+n12 theta12},{n22 theta22+n23 theta23}}2    suppmat-NCC-case3.nbOut[ ]=(n11(n01+n11)n12 n22(n03+n23)theta11) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23)))) +
(n01+n11)n122n22(n03+n23)theta12
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23)))) +
(n22(n11 n12(n02+n22) +n01(n11 n12+n02(n11+n12) + (n11+n12)n22))
(n03+n23)theta22) / (n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23)))) +
((n11 n12(n02+n22) +n01(n11 n12+n02(n11+n12) + (n11+n12)n22))
n23(n03+n23)theta23) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))
Out[ ]=(n11(n01+n11)n12 n22(n03+n23)) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))
Out[ ]=(n01+n11)n122n22(n03+n23)(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))
Out[ ]=(n22(n11 n12(n02+n22) +n01(n11 n12+n02(n11+n12) + (n11+n12)n22)) (n03+n23)) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))
Out[ ]=((n11 n12(n02+n22) +n01(n11 n12+n02(n11+n12) + (n11+n12)n22))n23(n03+n23)) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))suppmat-NCC-case3.nb    3Out[ ]={{((n01+n11) (n03(n02+n12)n22+n03(n02+n12)n23+ (n02+n03+n12)n22 n23)
(n11 theta11+n12 theta12)) / (n01 n03(n11 n12+n02(n11+n12))n22+
n01(n03 n11 n12+n11 n12 n22+n03(n11+n12)n22+n02(n11+n12) (n03+n22))n23+
n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23)) +
((n01+n11)n12 n22(n03+n23) (n22 theta22+n23 theta23)) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))},
{((n01+n11)n12 n22(n03+n23) (n11 theta11+n12 theta12)) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23)))) +
((n11 n12(n02+n22) +n01(n11 n12+n02(n11+n12) + (n11+n12)n22))
(n03+n23) (n22 theta22+n23 theta23)) /
(n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23) +
n01(n03 n11 n12 n22+ (n03 n11 n12+n11 n12 n22+n03(n11+n12)n22)n23+
n02(n11+n12) (n22 n23+n03(n22+n23))))}}
Out[ ]=True
Variance computation
To compute the variance of treatment eﬀect 2, first note
Var(theta2) = Var(w11*theta11+w12*theta12+w22*theta22+w23*theta23)4    suppmat-NCC-case3.nbIn[]:=theta11=n01/ (n01+n11) * (y11-y01);
theta12= (n02+n22) / (n02+n12+n22) *y12-
((n02/ (n02+n12+n22)) *y02+ (n22/ (n02+n12+n22)) *y22);
theta22= (n02+n12) / (n02+n12+n22) *y22-
((n02/ (n02+n12+n22)) *y02+ (n12/ (n02+n12+n22)) *y12);
theta23=n03/ (n03+n23) * (y23-y03);
expr=w11*theta11+w12*theta12+w22*theta22+w23*theta23;
Collect[FullSimplify[expr],{y01, y11, y02, y12, y22, y03, y23}];
expr01=FullSimplify[
(-n01 n03 n11 n12 n22-n01 n11 n12 n22 n23) / (n01 n03(n11 n12+n02(n11+n12))n22+
n01(n03 n11 n12+n11 n12 n22+n03(n11+n12)n22+n02(n11+n12) (n03+n22))n23+
n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23))];
expr02=FullSimplify[
(-n01 n02 n03 n11 n22-n01 n02 n03 n12 n22-n02 n03 n11 n12 n22-n01 n02 n11 n22 n23-
n01 n02 n12 n22 n23-n02 n11 n12 n22 n23) / (n01 n03(n11 n12+n02(n11+n12))n22+
n01(n03 n11 n12+n11 n12 n22+n03(n11+n12)n22+n02(n11+n12) (n03+n22))n23+
n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23))];
expr03=FullSimplify[
(-n01 n03 n11 n12 n23-n02 n03 n11 n12 n23-n03 n11 n12 n22 n23-n01 n03 n11(n02+n22)
n23-n01 n03 n12(n02+n22)n23) / (n01 n03(n11 n12+n02(n11+n12))n22+
n01(n03 n11 n12+n11 n12 n22+n03(n11+n12)n22+n02(n11+n12) (n03+n22))n23+
n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23))];
expr11=FullSimplify[
(n01 n03 n11 n12 n22+n01 n11 n12 n22 n23) / (n01 n03(n11 n12+n02(n11+n12))n22+
n01(n03 n11 n12+n11 n12 n22+n03(n11+n12)n22+n02(n11+n12) (n03+n22))n23+
n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23))];
expr12=FullSimplify[
(-n01 n03 n11 n12 n22-n01 n11 n12 n22 n23) / (n01 n03(n11 n12+n02(n11+n12))n22+
n01(n03 n11 n12+n11 n12 n22+n03(n11+n12)n22+n02(n11+n12) (n03+n22))n23+
n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23))];
expr22=FullSimplify[
(n02 n03 n11 n12 n22+n01 n03(n11 n12+n02(n11+n12))n22+n01 n02 n12 n22 n23+n02 n11
n12 n22 n23+n01 n11(n02+n12)n22 n23) / (n01 n03(n11 n12+n02(n11+n12))n22+
n01(n03 n11 n12+n11 n12 n22+n03(n11+n12)n22+n02(n11+n12) (n03+n22))n23+
n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23))];
expr23=FullSimplify[ (n02 n03 n11 n12 n23+n03 n11 n12 n22 n23+
n01 n03(n11 n12+n02(n11+n12) + (n11+n12)n22)n23) /
(n01 n03(n11 n12+n02(n11+n12))n22+
n01(n03 n11 n12+n11 n12 n22+n03(n11+n12)n22+n02(n11+n12) (n03+n22))n23+
n11 n12(n02 n03 n22+n03 n22 n23+n02(n03+n22)n23))];
FullSimplify[
Collect[FullSimplify[expr],{y01, y11, y02, y12, y22, y03, y23}]expr01*y01+
expr02*y02+expr03*y03+expr11*y11+expr12*y12+expr22*y22+expr23*y23];
Variance expression is then term2s*sigma^2/N, wheresuppmat-NCC-case3.nb    5In[]:=term2f=FullSimplify[expr01^2*y01+expr02^2*y02+expr03^2*y03+expr11^2*y11+
expr12^2*y12+expr22^2*y22+expr23^2*y23/.{y011/n01, y021/n02,
y031/n03, y111/n11, y121/n12, y221/n22, y231/n23}];
term2s=
FullSimplify[term2f/.{n01r01*Nt, n02r02*Nt, n03r03*Nt, n11r11*Nt,
n12r12*Nt, n22r22*Nt, n23r23*Nt}] *Nt;
Define terms to optimise 
In[]:=substp=
{r11r1 p11, r12r2 p12, r22r2 p22, r02r2 p02, r23r3 p23, r31-r1-r2};
In[]:=subst= {r11r1/2 , r01r1/2 , r23r3/2 , r03r3/2, r02r2-r12-r22};
term1=FullSimplify[(r11*r01/ (r11+r01)) + (r12*r02/ (r12+r02)) /. subst/. substp]
term2=FullSimplify[(1/term2s) /. subst/. substp]
Out[ ]=r1
4+p12(-1+p12+p22)r2
-1+p22
Out[ ]=r12+r1-1+-4(-1+p12)p12+ (1-2 p22)2r2+4 p12 r2
(-1+p12+r2+4(-1+p22)p22 r2+p12(-1+4 p22)r2)(-4 r1+16(-1+p12)p12 r2)
In[]:=substg= {r01r1-r11, r03r3-r23, r02r2-r12-r22};
termg1=
FullSimplify[(r11*r01/ (r11+r01)) + (r12*r02/ (r12+r02)) /. substg/. substp]
termg2=FullSimplify[(1/term2s) /. substg/. substp]
Out[ ]=p11(r1-p11 r1) +p12(-1+p12+p22)r2
-1+p22
Out[ ]=p22 r2(-((-1+p11)p11(-1+p22)r1) +p12(-1+p12+p22)r2)
(-1+p11)p11 r1+ (-1+p12)p12 r2+p23 r3 1+p23 r3
-1+r1+r2
Numerical example: optimisation  assuming balanced design in periods 1 and 3
In[]:=ex= {r10.1, r20.8, r30.1};
FindMinimum[{(-term1) /. ex, term1term2/. ex, p12>0, p22>0},
{{p12, r2/3/. ex},{p22, r2/3/. ex}}]
Out[ ]={-0.164091,{p120.303787, p220.289682}}
Optimisation (approach 1) - here we do not assume balanced design in periods 1 and 3 and 
thus also allocation rates in periods 1 and 3 are optimized
In[]:=ex= {r10.4, r20.4, r30.2};
FindMinimum[{(-termg1) /. ex, termg1termg2/. ex,
p12>0, p22>0, p11>0, p23>0, p11<1, p23<1},
{{p11, r1/2/. ex},{p12, r2/3/. ex},{p22, r2/3/. ex},{p23, r3/2/. ex}}]
Out[ ]={-0.144071,{p110.5, p120.153829, p220.457912, p230.5}}6    suppmat-NCC-case3.nbIn[]:=FindMinimum
{-termg1/. ex, termg1termg2/. ex, p12>0, p22>0, p11>0, p23>0, p11<1, p23<1},
p11,r1
2/. ex,p12,r2
3/. ex,p22,r2
3/. ex,p23,r3
2/. ex
Out[ ]={-0.144071,{p110.5, p120.153829, p220.457912, p230.5}}
In[]:=termg2
Out[ ]=p22 r2(-((-1+p11)p11(-1+p22)r1) +p12(-1+p12+p22)r2)
(-1+p11)p11 r1+ (-1+p12)p12 r2+p23 r3 1+p23 r3
-1+r1+r2
In[]:=p11,r1
2/. ex,p12,r2
3/. ex,p22,r2
3/. ex,p23,r3
2/. ex
Out[ ]={{p11, 0.2},{p12, 0.133333},{p22, 0.133333},{p23, 0.1}}
Note that we cannot find analytical solutions, but the numerical solutions satisfy that the optimal design follows a balanced design in periods 1 and 3.
Optimisation (approach 2) - assume balanced designs in periods 1 and 3
In[]:=constr=term1-term2;
In[]:=e1=FullSimplify[Solve[D[term1, p12]l D[constr, p12], l]]
e2=FullSimplify[Solve[D[term1, p22]l D[constr, p22], l]]
e3=e1〚1〛〚1〛〚2〛 e2〚1〛〚1〛〚2〛
Out[ ]=l (-1+2 p12+p22) (r1-4(-1+p12)p12 r2)2
(-1+2 p12+p22)r12-8 p122 p122+p12(-3+p22) - (-1+p22)1+p222r1 r2+
16 p122(-1+p12+p22)1+2 p122+p222-p12(3+p22)r22
Out[ ]=l p122(-r1+4(-1+p12)p12 r2)-p122r1+ (-1+p22)2(-1+2 p22)r1+
4 p12(-1+p12+p22)1+p122- (3+p12)p22+2 p222r2
Out[ ]=(-1+2 p12+p22) (r1-4(-1+p12)p12 r2)2
(-1+2 p12+p22)r12-8 p122 p122+p12(-3+p22) - (-1+p22)1+p222r1 r2+
16 p122(-1+p12+p22)1+2 p122+p222-p12(3+p22)r22 
p122(-r1+4(-1+p12)p12 r2)-p122r1+ (-1+p22)2(-1+2 p22)r1+
4 p12(-1+p12+p22)1+p122- (3+p12)p22+2 p222r2
In[]:=sol2=Solve[e3,{p12}];suppmat-NCC-case3.nb    7In[]:=solsim=Simplify[sol2〚7〛]
Out[ ]=p12
1
24(-1+p22)r2-43-6 p22+2 p222r2+2 ×21/31- 3r23-9 p22+6 p222r1+
3-12 p22+18 p222-12 p223+4 p224r2 -9 p222r1 r22+27 p223r1 r22-
18 p224r1 r22+18 p222r23-72 p223r23+108 p224r23-72 p225r23+16 p226r23+
r23-43-9 p22+6 p222r1+3-12 p22+18 p222-12 p223+4 p224r23+
p224r291-3 p22+2 p222r1-
29-36 p22+54 p222-36 p223+8 p224r221/3+
22/31+ 3-9 p222r1 r22+27 p223r1 r22-18 p224r1 r22+18 p222r23-
72 p223r23+108 p224r23-72 p225r23+16 p226r23+
r23-43-9 p22+6 p222r1+3-12 p22+18 p222-12 p223+4 p224r23+
p224r291-3 p22+2 p222r1-
29-36 p22+54 p222-36 p223+8 p224r221/3
In[]:=$Assumptions=p12>0 && p22>0 && Element[p12, Reals]&& Element[p22, Reals]
Out[ ]=p12>0 && p22>0 && p12∈ && p22∈ 
In[]:=Re[solsim]
Out[ ]=Rep12
1
24(-1+p22)r2-43-6 p22+2 p222r2+2 ×21/31- 3r23-9 p22+6 p222r1+
3-12 p22+18 p222-12 p223+4 p224r2 -9 p222r1 r22+27 p223r1 r22-
18 p224r1 r22+18 p222r23-72 p223r23+108 p224r23-72 p225r23+16 p226r23+
r23-43-9 p22+6 p222r1+3-12 p22+18 p222-12 p223+4 p224r23+
p224r291-3 p22+2 p222r1-
29-36 p22+54 p222-36 p223+8 p224r221/3+
22/31+ 3-9 p222r1 r22+27 p223r1 r22-18 p224r1 r22+18 p222r23-
72 p223r23+108 p224r23-72 p225r23+16 p226r23+
r23-43-9 p22+6 p222r1+3-12 p22+18 p222-12 p223+4 p224r23+
p224r291-3 p22+2 p222r1-
29-36 p22+54 p222-36 p223+8 p224r221/3
In[]:=sol2/. ex/. p220.23/0.8
Out[ ]={p12-0.207107},{p121.20711},{p12-0.196053},
{p120.908553},p120.866963-5.55112×10-17,
p12-0.185879-2.77556×10-17,p120.329662+1.11022×10-168    suppmat-NCC-case3.nbIn[]:=eq=FullSimplify[term1-term2]
Out[ ]=1
4r1+4 p12(-1+p12+p22)r2
-1+p22+
1
r1-4(-1+p12)p12 r2r12+r1-1+-4(-1+p12)p12+ (1-2 p22)2r2+
4 p12 r2(-1+p12+r2+4(-1+p22)p22 r2+p12(-1+4 p22)r2)
In[]:=eq3=FullSimplify[e3]
Out[ ]=(r1-4(-1+p12)p12 r2)p122-p122r1+ (-1+p22)2(-1+2 p22)r1+
4 p12(-1+p12+p22)1+p122- (3+p12)p22+2 p222r2+
((-1+2 p12+p22) (r1-4(-1+p12)p12 r2))
(-1+2 p12+p22)r12-8 p122 p122+p12(-3+p22) - (-1+p22)1+p222r1 r2+
16 p122(-1+p12+p22)1+2 p122+p222-p12(3+p22)r22 0
In[]:=NSolve[{eq0/. ex, eq3/. ex},{p12, p22}]
Out[ ]=p22-28 924.1+18 543.2, p12-0.249998+9.81706×10-7,
{p22-0.0311394+0.265623, p12-0.211592+0.0051594},
{p22-0.0311394-0.265623, p12-0.211592-0.0051594},
{p22-0.0311394+0.265623, p12-0.211592+0.0051594},
{p220.457912, p120.153829},{p220.457912, p120.153829},
{p220.7153+0.205041, p120.151828-0.155807},
{p220.7153-0.205041, p120.151828+0.155807},
{p221.84182, p121.94225},{p220.5, p120.5},{p220.5, p120.5},
{p220.117486-0.930047, p121.17003+0.720353},
{p220.117486+0.930047, p121.17003-0.720353},
{p221.59697, p12-0.816608}suppmat-NCC-case3.nb    9
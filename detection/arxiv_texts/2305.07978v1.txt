arXiv:2305.07978v1  [math.NA]  13 May 2023Noname manuscript No.
(will be inserted by the editor)
Network analysis with the aid of the path length matrix
Silvia Noschese ·Lothar Reichel
Abstract Let a network be represented by a simple graph Gwithnvertices. A common approach to
investigate properties of a network is to use the adjacency matrix A= [aij]n
i,j=1∈Rn×nassociated with
the graph G, whereaij>0 if there is an edge pointing from vertex vito vertex vj, andaij= 0 otherwise.
BothAand its positive integer powers reveal important properties of the graph. This paper proposes to
study properties of a graph Gby also using the path length matrix for the graph. The ( ij)thentry of the
path length matrix is the length of the shortest path from vertex vito vertex vj; if there is no path between
these vertices, then the value of the entry is ∞. Powers of the path length matrix are formed by using min-
plus matrix multiplication and are important for exhibiting properties o fG. We show how several known
measures of communication such as closeness centrality, harmonic centrality, and eccentricity are related to
the path length matrix, and we introduce new measuresof communic ation, such as the harmonic K-centrality
and global K-eﬃciency, where only (short) paths made up of at most Kedges are taken into account. The
sensitivity of the global K-eﬃciency to changes of the entries of the adjacency matrix also is considered.
Keywords network analysis, path length matrix, harmonic centrality, global e ﬃciency
Mathematics Subject Classiﬁcation (2010) 05C50, 15A16, 65F15
1 Introduction
An important characteristic of a network is how well communication c an ﬂow in it, i.e., how easy or
diﬃcult it is to reach one part of the network from another part by f ollowing edges. How well information
ﬂows through the whole network can be measured by the diameter o f the graph that represents the network
or by its global eﬃciency. Both these measures can be determined w ith the aid of the path length matrix
associatedwith the network.We will discussthese connectionsand introduce new measuresofcommunication
based on the path length matrix.
Silvia Noschese
Dipartimento di Matematica
SAPIENZA Universit` a di Roma
P.le Aldo Moro 5, 00185 Roma, Italy
E-mail: noschese@mat.uniroma1.it
Lothar Reichel
Department of Mathematical Sciences
Kent State University
Kent, OH 44242, USA
E-mail: reichel@math.kent.edu2 Silvia Noschese, Lothar Reichel
Let us introduce some notation and deﬁnitions that will be used thro ughout this paper. A network
is represented by a graph. A weighted graph G=/an}bracketle{tV,E,W/an}bracketri}htconsists of a set of nodesorvertices V=
{v1,v2,...,v n}, a set of edgesE={e1,e2,...,e m}that connect the vertices, and a set of weights W=
{aij}n
i,j=1; the weights aijare the entries of the adjacency matrix A= [aij]n
i,j=1associated with the graph
G; see below. An edge is said to be directedif it starts at a vertex viand ends at a vertex vj, and is denoted
bye(vi→vj). An edge between the vertices viandvjis said to be undirected when the pair of vertices is
unordered and the weights aijandajiare positive and equal. An undirected egde between the vertices vi
andvjis denoted by e(vi↔vj). A graph with only undirected edges is said to be undirected ; otherwise the
graph is directed. Asimple graph is a graph without multiple edges or self-loops. In particular, this implie s
that the diagonal entries of the adjacency matrix for the graph v anish. This work considers simple graphs.
Theadjacency matrix A= [aij]n
i,j=1∈Rn×nfor a weighted graph Gis determined by the weights aijof
the graph with aij>0 if there is an edge e(vi→vj) inG. If there is no edge e(vi→vj) inG, thenaij= 0. For
anunweighted graph , all positive entries aijofAequal one. A sequence of kedges (not necessarily distinct)
such that {e(v1→v2),e(v2→v3),...,e(vk→vk+1)}form awalk. Ifvk+1=v1, then the walk is said to be
closed. A sequence of distinct edges such that {e(v1→v2),e(v2→v3),...,e(vk→vk+1)}form apath. The
lengthof a path is given by the sum of all weights of the edges in the path. (I n the unweighted case, the sum
of all weights of the edges in a path of length kisk.) For further discussions on networks and graphs; see [8,
14].
To construct the path length matrix associated with the network, we will make use of min-plus matrix
multiplication , i.e., matrix multiplication in the tropical algebra [12]:
C=A⋆B: cij= min
h=1,2,...,n{aih+bhj},1≤i,j≤n,
whereA,B,C∈Rn×n. We denote by A1,⋆= [a(1,⋆)
ij]n
i,j=1∈Rn×nthe matrix obtained by setting to ∞the
vanishing oﬀ-diagonal entries of the adjacency matrix Aassociated with the graph Gunder consideration.
Fork >1, thekthmin-plus power ofA1,⋆is given by
Ak,⋆= [a(k,⋆)
ij]n
i,j=1∈Rn×n: a(k,⋆)
ij= min
h=1,2,...,n{a(k−1,⋆)
ih+a(1,⋆)
hj}.
Notice that the matrix Ak,⋆gives vertex distances using paths of at most kedges. In detail, the entry a(k,⋆)
ij,
withi/ne}ationslash=j, represents the length of the shortest path fromvitovjmade up of at most kedges. The diagonal
entries of Ak,⋆are zero by deﬁnition. One has a(k,⋆)
ij=∞if every path from vitovjis made up of more than
kedges, or if there is no path from vitovj.
Thediameter of a graph Gis the maximal length dGof the shortest path between any distinct vertices of
the graph and provides a measure of how easy it is for the vertices o f the graph to communicate. One has
dG= max
1≤i,j≤na(n−1,⋆)
ij. (1)
Indeed, the entry a(n−1,⋆)
ijof the matrix An−1,⋆= [a(n−1,⋆)
ij]n
i,j=1yields the length of the shortest path from
vitovj. We will refer to An−1,⋆as thepath length matrix . Note that the triangle inequality holds for the
entries of a path length matrix. Speciﬁcally,
a(n−1,⋆)
ij≤a(n−1,⋆)
ih+a(n−1,⋆)
hj,1≤i,j≤n.
Consider an unweighted connected graph Gwith associated adjacency matrix A∈Rn×n. Recall that the
diameter of Gis the maximal number of edges in the shortest path between all pair s of distinct vertices of
the graph. Given the vertices viandvj, there is an integer /hatwidek, 1≤/hatwidek < n, such that
a(n−1,⋆)
ij=···=a(/hatwidek+1,⋆)
ij=a(/hatwidek,⋆)
ij=/hatwidekNetwork analysis with the aid of the path length matrix 3
since the graph is connected, whereas for 1 ≤h </hatwidek, one has a(h,⋆)
ij=∞. Thus, information provided by the
path length matrix An−1,⋆includes information about all powers Ak,⋆for 1≤k < n−1.
Letviandvjbe distinct vertices in a weighted graph. Then there is an integer /hatwidek, 1≤/hatwidek < n−1, such
that
a(n−1,⋆)
ij≤ ··· ≤a(/hatwidek+1,⋆)
ij≤a(/hatwidek,⋆)
ij<∞
and, for 1 ≤h </hatwidek,a(h,⋆)
ij=∞. Thus, as in the unweighted case, information provided by the path length
matrixAn−1,⋆reﬁnes information given by the powers Ak,⋆for 1≤k < n−1. However, the information of
the minimal number of steps required to reach vertex vjfrom vertex viis lost.
As mentioned above, the path length matrix may be constructed by evaluating the min-plus powers of
A1,⋆n−2 times; here A1,⋆is obtained from the adjacency matrix Aby setting all zero oﬀ-diagonal entries
to∞. The following MATLAB function, with the adjacency matrix Afor a graph and the level = n−1
as input arguments, returns the path length matrix associated wit h the adjacency matrix A. The function
implementsthedynamicprogrammingBellmann-Fordalgorithmforsolv ingthewell-known“all-pairsshortest
path problem”. The algorithm requires O(n2m) arithmetic ﬂoating point operations (ﬂops), where nis the
number of vertices and mis the number of edges of the graph; if the graph is undirected, the n the cost of
the algorithm is halved. Notice that the function can be applied to det ermine shortest paths in a weighted
graph having positive or negative weights.
1:function pathlength matrix(A,level)
2:n= size(A,1);
3:fori= 1 :ndo
4: forj= 1 :ndo
5: ifA(i,j) = 0 and i/negationslash=jthen
6: A(i,j) = inf;
7: end if
8: end for
9:end for
10:B=A;
11:C= inf(n);
12:forcount = 1 : level −1do
13: fori= 1 :ndo
14: forj= 1 :ndo
15: ifj/negationslash=ithen
16: fork= 1 :ndo
17: ifB(k,j)/negationslash= inf and k/negationslash=jthen
18: C(i,j) = min( C(i,j),A(i,k)+B(k,j));
19: end if
20: end for
21: end if
22: end for
23: end for
24: A=C;
25: fori= 1 :ndo
26: A(i,i) = 0;
27: end for
28:end for
29:return Path length matrix;
30:end function
In line 2 of the function Pathlength matrix, the function call size(A,1) yields the order of the matrix
A∈Rn×n; in line 6, the matrix entry A(i,j) is set to ∞. Similarly, in line 11, Cis deﬁned as an n×nmatrix4 Silvia Noschese, Lothar Reichel
with all entries equal to ∞. If the graph is unweighted and connected, then the above MATLA B function
can be modiﬁed by introducing a break before the last end for when there is no entry ∞. The diameter of
the graph then is count+1.
For both weighted and unweighted graphs, also when the graph is no t connected, the above MATLAB
function with argument level = K, where 1 < K < n , computes AK,⋆, i.e., the matrix of the distances
between any distinct vertices of the graph using paths with at most Kedges. We note that the triangle
inequality might not hold for the entries of AK,⋆and some entries of this matrix may have the value ∞.
We will see how the matrix An−1,⋆associated with a connected graph Gsheds light on the communication
within the network determined by the graph. In fact, as a measure of the ease of communication in the graph,
we like to use the average inverse geodesic length of G(i.e., itsglobal eﬃciency , cf. Section 3) instead of the
maximum geodesic length of G(i.e., its diameter). To this end, we introduce the reciprocal path length matrix
An−1,⋆,−1= [a(n−1,⋆,−1)
ij ]n
i,j=1obtained by replacing the oﬀ-diagonal entries of the path length ma trix by
their reciprocals, i.e.,
a(n−1,⋆,−1)
ij = 1/a(n−1,⋆)
ij,1≤i,j≤n,
where 1/∞is identiﬁed with 0.
We are interested in determining the shortest paths that use at mo stKedges. We therefore also consider
thereciprocal K-path length matrix AK,⋆,−1= [a(K,⋆,−1)
ij]n
i,j=1, witha(K,⋆,−1)
ij= 1/a(K,⋆)
ij. Thus, the entry
a(K,⋆,−1)
ijvanishes if a(K,⋆)
ij=∞. Note that the same would happen if K=n−1, in case the graph G
that determines the adjacency matrix Ais not connected. The matrix AK,⋆,−1allows us to deﬁne the global
K-eﬃciency ofG; see Section 3.
Inordertoenhancecommunicationusingpathswith atmost Kedges,with 1 < K < n ,i.e., toincreasethe
globalK-eﬃciency of the graph associated with the adjacency matrix A, we select edge weights by analyzing
centralitypropertiesofthe verticesofthe graphand, ifcomputa tionally feasible, the spectral propertiesofthe
reciprocal K-pathlength matrix AK,⋆,−1. In detail, if K≪nand the (sparse)non-negativereciprocal K-path
length matrix AK,⋆,−1is irreducible, then we apply the Perron-Frobenius theory by followin g the approach
in [4,7]. In our context, the choice of weights is dictated by the analy sis of the sensitivity to perturbations in
A.
Applications of our approach include city planning and information tra nsmission. As for disease propaga-
tion, a recent research study of the Zhejiang City Planning Center (China) pointed out a strong connection
between the spread of the Covid-19 epidemic and the shape of the c ity. Cities with a radial structure (such
as Milan) have good internal connections due to the capillarity of the public transport system - buses, trams,
subways, and trains. This dynamic made citizens of such cities more v ulnerable to the arrival of the Covid-19
virus: the incidence of infections compared to the number of inhabit ants was generally larger in cities with a
radial urban structure than in cities without this structure, due t o the good communication of the people in
cities with radial urban structure.
This paper is organized as follows: Section 2 analyzes diﬀerences and similarities of powers and tropical
powersofthe adjacencymatrix for undirected and unweighted gr aphs.Section 3 reviews well-knownmeasures
that can be easily computed by means of the path length matrix and in troduces novel ones. In Section 4
we present two algorithms that determine which edge-weight should be changed in order to boost global
eﬃciency. Changing the edge weights may entail widening streets or increasing the number of trams on a
route, decreasing travel times on a highway by increasing the trav el speed, or decreasing the waiting time for
trams on a route. Finally, numerical tests are reported in Section 5 and concluding remarks can be found in
Section 6.Network analysis with the aid of the path length matrix 5
2 Powers versus tropical powers
Consider an undirected and unweighted simple graph Gwith adjacency matrix A∈Rn×n. Then the entry
a(k)
ijof the matrix Ak= [a(k)
ij]n
i,j=1∈Rn×ncounts the number of walks of length kbetween the vertices vi
andvj. Amatrix function based on the powers Akthat is analytic at the origin, and vanishes there, can be
deﬁned by a formal Maclaurin series
f(A) =∞/summationdisplay
k=1ckAk, (2)
where we for the moment ignore the convergence properties of th is series. Usually long walks are considered
lessimportant than shortwalks,because information ﬂowsmore ea silythrough shortwalksthan throughlong
ones. Therefore matrix functions applied in network analysis gener ally have the property that 0 ≤ck+1≤ck
for allk≥1. The most common matrix function used in network analysis is the ma trix exponential; see [5,
6,8,9,10] for discussions and illustrations. We prefer to use the t he modiﬁed matrix exponential
exp0(A) := exp( A)−I,
whereIdenotes the identity matrix, because the ﬁrst term in the Maclaurin series of exp( A) has no natural
interpretation in the context of network modeling. For the modiﬁed matrix exponential, we have ck= 1/k!,
and the series (2) converges for any adjacency matrix A.
Thecommunicability between distinct vertices viandvj,i/ne}ationslash=j, is deﬁned by
[exp0(A)]ij=∞/summationdisplay
k=1a(k)
ij
k!;
see [8] for the analogous deﬁnition based on exp( A). The communicability accounts for all possible routes of
communication between the vertices viandvjin the network deﬁned by the adjacency matrix A, and assigns
a larger weight to shorter walks than to longer ones. The larger the value of [exp0(A)]ij, the better is the
communicability between the vertices viandvj.
Remark 1 Notice that even if there exists an integer /hatwidek, 1≤/hatwidek < n−1, such that a(/hatwidek)
ij>0, one may have
a(/hatwidek+1)
ij= 0. Information provided by An−1does not include information provided by all Ahfor 1≤h < n−1.
This is one of the reasons for the interest in the matrix functions ex p0(A) and exp( A).
It is straightforward to show the following result.
Proposition 1 Let/hatwidek,1≤/hatwidek < n, be the smallest integer power such that a(/hatwidek)
ij=p >0, that is to say,
a(h)
ij= 0,∀h </hatwidek, a(/hatwidek)
ij=p.
Then/hatwidekis the length of the shortest path that connects viandvj, i.e.,
a(h,⋆)
ij=∞,∀h </hatwidek, a(h,⋆)
ij=/hatwidek,∀h≥/hatwidek,
andpis the number of shortest paths that connect viandvj.
Example 1 In view of Proposition 1, the information provided by both the path le ngth matrix and a suitable
power of the adjacency matrix is of interest. Consider the undirec ted and unweighted graphs G1andG2
depicted in Figures 1-2. The adjacency matrices of these graphs a re
A1=
0 0 1 1 1
0 0 1 1 1
1 1 0 0 0
1 1 0 0 0
1 1 0 0 0
, A 2=
0 0 1
0 0 1
1 1 0
.6 Silvia Noschese, Lothar Reichel
v1 v3 v2v4
v5
Fig. 1GraphG1in Example 1.
v1 v3 v2
Fig. 2GraphG2in Example 1.
For both graphs, the shortest path between the vertices v1andv2has length 2. However, in G1there
are three shortest paths that connect v1andv2, while there is only one in G2. Thus, there is surely better
communication between these vertices in G1than inG2, even though this information is not provided by the
path length matrices for these graphs. The path length matrices a re
A4,⋆
1=
0 2 1 1 1
2 0 1 1 1
1 1 0 2 2
1 1 2 0 2
1 1 2 2 0
, A2,⋆
2=
0 2 1
2 0 1
1 1 0
. (3)
On the other hand, the second powers of the above adjacency ma trices are
A2
1=
3 3 0 0 0
3 3 0 0 0
0 0 2 2 2
0 0 2 2 2
0 0 2 2 2
, A2
2=
1 1 0
1 1 0
0 0 2
.
Remark 2 For weighted graphs, the interpretation of the entry a(k)
ijof the matrix Akhas to be modiﬁed.
Indeed,a(k)
ijyields the sum of all products of all weights of the edges in the walks o f length kbetween the
verticesviandvj. (In the unweighted case, any product of all weights of the edges in a walk is 1.) Remark 1
holds true, while Proposition 1 does not.Network analysis with the aid of the path length matrix 7
3 Measures that depend on the path length matrix
Let for now the graph Gbe undirected.
3.1 Closeness centrality
Let the graph Gbe connected. Then the reciprocal of the sum of all lengths of the shortest paths starting
from vertex vi,
ci=1
/summationtext
j/negationslash=ia(n−1,⋆)
ij= [An−1,⋆1i]−1,
where1i∈Rndenotes the vector with all zero entries except for the ithentry, which is one, is referred to as
thecloseness centrality ofviinG; see, e.g., [2]. This measure gives a large value to vertices that have small
shortest path distances to the other vertices of the graph.
3.2 The radius and center of a network
The maximumlengthoverallshortestpathsstartingfromvertex viin aweightedorunweightedconnected
graphG, that is to say,
ei= max
j/negationslash=ia(n−1,⋆)
ij,
is commonly referred to as the eccentricity of the vertex vi. The diameter may be seen as the maximum
eccentricity among the vertices of the network. The radius rGofGis the minimum eccentricity of a vertex.
One has
rG= min
imax
j/negationslash=ia(n−1,⋆)
ij.
It is shown in [3] that
rG≤dG≤2rG.
A vertex is said to be centralif its eccentricity is equal to the radius of the graph. The centerof the graph
is the set of all central vertices; see, e.g., [8].
3.3 Average shortest path length
The average shortest path length of a weighted or unweighted con nected graph Gcomputed over all
possible pairs of vertices in the network [2] is given by
aG=1
n(n−1)/summationdisplay
i,j/negationslash=ia(n−1,⋆)
ij=1
n(n−1)1TAn−1,⋆1,
where1∈Rndenotes the vector with all entries one. Let the graph Gbe unweighted and be formed by a path
ofnvertices. Then the largest average shortest path length is aG= (n+ 1)/3. IfaGscales logarithmically
withn, thenGdisplays the “small-world phenomenon”; see, e.g., [8].8 Silvia Noschese, Lothar Reichel
GdGrGaGeG
G1221.400.80
G2211.330.83
Table 1 Example 2. Diameter, radius, average shortest path length, and global eﬃciency of the graphs G1andG2depicted in
Figures 1-2. Note that the average shortest path length of G2is maximal; indeed, ( n+1)/3 = 1.33.
3.4 Harmonic centrality and global eﬃciency
Theeﬃciency of a path between any two vertices of a weighted or unweighted gra phGis deﬁned as the
inverse of the length of the path. The sum of the inverses of the len gth of all shortest paths starting from
vertexvi, i.e., the sum of the eﬃciencies of all shortest paths starting from vi,
hi=/summationdisplay
j/negationslash=i[a(n−1,⋆)
ij]−1, (4)
is referred to as the harmonic centrality ofvi; see, e.g., [2]. The latter measure gives a large centrality to
verticesvithat have small shortest path distances to the other vertices of the graph. Harmonic centrality
will play a central role in our analysis. We deﬁne the h-centerof a graph as the set of all vertices with the
largest harmonic centrality.
If the graph is connected, then the average shortest path eﬃcie ncy over all possible pairs of vertices, also
known as the average inverse geodesic length , is referred to as the global eﬃciency of the graph [2]:
eG=1
n(n−1)/summationdisplay
i,j/negationslash=i[a(n−1,⋆)
ij]−1. (5)
Finally, we remark that in the context of molecular chemistry, the su m of reciprocals of distances between
all pairs of vertices of an undirected and unweighted connected gr aph is known as the Harary index and the
reciprocal path length matrix An−1,⋆,−1is referred to as the Harary matrix [17].
Remark 3 The measures (4) and (5) can be especially useful when the networ k has more than one connected
component, because inﬁnite distances do not contribute to these “harmonic” averages.
Example 2 As an illustration of the abovemeasures, consider again the graphs G1andG2of Example 1. Table
1 reports the diameter, radius, average shortest path length, a nd global eﬃciency of these graphs. Notice
that the center of G1is given by the set of all vertices and the center of G2is made up of the vertex v3, only.
Theh-center of G1is formed by the vertices v1andv2, and the h-center of G2is given by the vertex v3, only.
Table 2 shows the eccentricity, harmonic centrality, and closeness centrality of all the vertices of G1andG2.
All the measures in this example are computed by using the path lengt h matrices (3).
vi(G1)eihici
123.500.20
223.500.20
323.000.17
423.000.17
523.000.17vi(G2)eihici
121.500.33
221.500.33
312.000.50
Table 2 Example 2. Eccentricity, harmonic centrality, and closene ss centrality of the vertices of G1(left table) and of G2(right
table).Network analysis with the aid of the path length matrix 9
3.5 Harmonic K-centrality and global K-eﬃciency
When one considersshortest paths that aremade up of at most Kedges, the matrix AK,⋆,−1takes the role
of the reciprocal path length matrix An−1,⋆,−1. We are in a position to introduce the harmonic K-centrality
of the vertex vi. It is given by
hK
i=/summationdisplay
j/negationslash=i[a(K,⋆)
ij]−1.
TheglobalK-eﬃciency of a graph Gis deﬁned by
eK
G=1
n(n−1)/summationdisplay
i,j/negationslash=i[a(K,⋆)
ij]−1.
The set of all vertices of a graph Gwith the largest harmonic K-centrality is referred to as the hK-centerof
the graph.
3.6 Out-centrality versus in-centrality
Let the graph Gbe directed. Then the above centrality measures (closeness, ecc entricity, harmonic cen-
trality, and harmonic K-centrality) determine the importance of a vertex vjby taking into account the paths
that start at vj. These measures therefore may be considered measures of out- centrality. One also may be
interested in measuring the importance of a vertex vjby considering the paths that end at it, that is to say
by measuring the in-centrality of vj. This can be achieved by replacing the path length matrix An−1,⋆in
the measures mentioned by its transpose. This allows us to introduc e the measures closeness in-centrality ,
in-eccentricity ,harmonic in-centrality , andharmonic Kin-centrality . These measures are deﬁned as
cin
j=1
/summationtext
i/negationslash=ja(n−1,⋆)
ij, ein
j= max
i/negationslash=ja(n−1,⋆)
ij, hin
j=/summationdisplay
i/negationslash=j[a(n−1,⋆)
ij]−1, hKin
j=/summationdisplay
i/negationslash=j[a(K,⋆)
ij]−1.
We also deﬁne the in-radius ofG,
rin
G= min
jmax
i/negationslash=ja(n−1,⋆)
ij.
Finally, the vertex vjis said to be in-central if its in-eccentricity equals the in-radius of the graph. The
hKin-centerof a graph Gis the set of all vertices with the largest harmonic Kin-centrality. The notions of
hKin-center and hKout-center will be of interest in the sequel.
4 Enhancing network communication
The diameter of a weighted or unweighted graph provides a measure of how easy it is for the vertices of
the graph to communicate. When graphs are used as models for com munication networks, the diameter plays
an important role in the performance analysis and cost optimization. A simple way to decrease the diameter
of a graph so that information can be transmitted more easily betwe en vertices of the graph [4] is to decrease
the weight of an edge that belongs to all maximal shortest paths, if feasible.
Example 3 Consider the graph G2in Example 1. The edge e(v2↔v3) belongs to the maximal shortest
path and is a bridge, that is its removal would make the vertex v2unreachable and the perturbed graph ˜G2
disconnected. In detail, the edge e(v2↔v3) belongs to the shortest path between the vertices v1andv2,
which is the only shortest path of length dG. Thus, decreasing the weight of the edge e(v2↔v3) decreases10 Silvia Noschese, Lothar Reichel
vi(˜G2)eihici
11.501.670.40
21.502.670.50
31.003.000.67
Table 3 Example 3. Eccentricity, harmonic centrality, and closene ss centrality of the vertices of ˜G2.
both the averageshortest path length and the diameter of the gr aph. Speciﬁcally, if one decreases the weights
a23anda32from 1 to 0 .5, one obtains the matrices
˜A2=
0 0 1
0 0 0.5
1 0.5 0
,˜A2,⋆
2=
0 1.5 1
1.5 0 0.5
1 0.5 0
.
The perturbed graph ˜G2has diameter d˜G2= 1.5, radius r˜G2= 1, average shortest path length a˜G2= 1, and
global eﬃciency e˜G2= 1.22. The eccentricity, harmonic centrality, and closeness centralit y of the vertices of
the graph ˜G2are reported in Table 3.
4.1 Increasing the global K-eﬃciency
We propose two approaches to increase the global eﬃciency of a ne twork.
4.1.1 The function eKG1
Letfornowthegraph Gbedirected.Theﬁrstapproachisbasedontheobservationthatt hemostimportant
vertices with respect to the global K-eﬃciency live in the vertex subsets hKout-center and hKin-center of the
graph. These vertices may be interpreted as important intermedia ries, that quickly collect information from
many vertices and quickly broadcast it to many others vertices. In deed, strengthening an existing connection
from a vertex of the hKin-center to a vertex of the hKout-center is likely to strengthen their communicability
by having new shorter paths with at most Ksteps that exploit these connections. This is likely to increase
the global K-eﬃciency more than strengthening an existing connection betwee n vertices with lower harmonic
Kin- andKout-centrality. Here we consider graphs whose edge weights represe nt travel times or waiting times.
Hence, strengthening is achieved by decreasing appropriate weights.
We construct the perturbed adjacency matrix
˜A=A+γh1,h21h11T
h2,withγh1,h2=−ah1,h2/2, (6)
If the graph is undirected, the above approach simpliﬁes, because thehKout- andhKin-centers coincide.
Hence, the idea is to strengthen the connection between vertices with the largest harmonic K-centrality. The
perturbed adjacency matrix ˜Awill be
˜A=A+γh1,h2(1h11T
h2+1h21T
h1). (7)
TheMATLABfunctioneKG1describesthenecessarycomputations .Theoperator==inline5ofthefunction
eKG1 stands for logical equal to, and the symbol ./in line 6 denotes element-wise division. The function call
sum(M) for a matrix M∈Rn×ncomputes a row vector m∈Rn, whosejthcomponent is the sum of the
entries of the jthcolumn; the function call sum(M,2) for a matrix M∈Rn×ncomputes a column vector,
whoseithentry is the sum of the elements of row iofM. The blip in line 8 denotes transposition, and the
operator .∗in line 11 stands for vector-vector element-wise product.Network analysis with the aid of the path length matrix 11
1:function eKG1(A,ﬂagsym,K);
2:n= size(A,1);
3:P= pathlength matrix(A,K);
4:Pr=P;
5:Pr(Pr== inf) = 0;
6:Pr(Pr >0) = 1./Pr(Pr >0);
7:Hin= sum(Pr);
8:H= sum(Pr,2)′;
9: eKG = 1 /(n(n−1))sum( H);
10: [ ∼,h] = max( Hin);
11: [ ∼,k] = max( H.∗A(h,:));
12:A(h,k) =A(h,k)/2;
13:ifﬂagsym then
14: A(k,h) =A(h,k);
15:end if
16:return A, eKG;
17:end function
4.1.2 The function eKG2
Assume for now that the graph Gis directed. If computing the Perronroot ρKand the unique positive left
and right eigenvectors of unit norm (the Perron vectors) of the r eciprocal K-path length matrix AK,⋆,−1is
not computationally feasible orif this matrix is not irreducible, then on e can use the function eKG1.However,
ifAK,⋆,−1is irreducible and its left and right Perron vectors xK= (xK,i) andyK= (yK,i) can be computed,
then these vectors determine the Wilkinson perturbation WK=yKxT
K; see [20, Section 2]. Following [7], to
induce the maximal perturbation in ρK, one chooses the indices ( h1,h2) such that WK(h1,h2) is the largest
entry ofWKandA(h1,h2)>0, i.e., the indices of the largestentry of the Wilkinson perturbation “ projected”
onto the zero-structure of A; see, e.g. [15]. Thus,
(h1,h2) :xK,h2yK,h1= (yKxT
K)h1,h2= max
i,j:A(i,j)>0(WK)i,j.
As in function eKG1, one strengthens the edge e(vh1→vh2) by halving its weight. The perturbed adjacency
matrix then is given by (6).
When the graph Gis undirected, the left and right Perron vectors coincide and the pe rturbed adjacency
matrix is constructed as in (7). The outlined approach is implemented by the MATLAB function eKG2. We
recall that the function abs(v) of a vector v, used in the function eKG2, returns a vector, whose components
are the absolute value of the components of v. The expression sum(sum(Pr)) on line 7 sums all entries of
the matrix Pr. The operator .∗on line 20 denotes the Hadamard product of two matrices; the entr ies of
the matrix A >0 are one if the corresponding entry of Ais positive; they are zero otherwise. The function
ind2subdetermines the equivalent subscript values corresponding to a give n single index into an array.
We expect the global K-eﬃciency to increase the most when decreasing the edge-weight t hat makes the
Perron root ρKchange the most. The perturbation of the Perron root generate d by the function eKG2 typi-
cally is larger than the perturbation determined by the function eKG 1. The diﬀerence in these perturbations
is analogous to the diﬀerence between considering the most importa nt vertex in a graph the one with the
largest degree and the one with maximal eigenvector centrality.
Remark 4 Both functions eKG1 and eKG2 maximize lower bounds for the global K-eﬃciency of the network.
Consider for the sake of clarity the undirected case. Let hKdenote the vector of the harmonic K-centralities
of the vertices of the graph. Its 1-norm is the sum in the numerato r of the global K-eﬃciency, and its ∞-norm12 Silvia Noschese, Lothar Reichel
1:function eKG2(A,ﬂagsym,K)
2:n= size(A,1);
3:P= pathlength matrix(A,K);
4:Pr=P;
5:Pr(Pr== inf) = 0;
6:Pr(Pr >0) = 1./Pr(Pr >0);
7: eKG = 1 /(n(n−1))sum(sum( Pr));
8:ifnot ﬂagsym then
9: [ X,D,Y] = eig(Pr);
10: [ ρ,ind] = max(abs(diag( D)));
11: x=X(:,ind);
12: y=Y(:,ind)
13:else
14: [ X,D] = eig(Pr);
15: [ ρ,ind] = max(abs(diag( D)));
16: x=X(:,ind);
17: y=x;
18:end if
19:W=yx′;
20:W=W.∗(A >0);
21: [ ∼,lin] = max( W(:));
22: [ h,k] = ind2sub([ n,n],lin);
23:A(h,k) =A(h,k)/2;
24:ifﬂagsym then
25: A(k,h) =A(h,k);
26:end if
27:return A, eKG
28:end function
is what function eKG1 is maximizing. Indeed, one has
n(n−1)eG=/bardblhK/bardbl1≥ /bardblhK/bardbl∞=/bardblAK,⋆,−1/bardbl∞≥ρK.
Remark 5 The Perron root is bounded from below and from above by the minimal and maximal entries of
hK, respectively. We have
min
i/summationdisplay
j/negationslash=i[a(K,⋆)
ij]−1≤ρK≤max
i/summationdisplay
j/negationslash=i[a(K,⋆)
ij]−1=/bardblhK/bardbl∞. (8)
Indeed, one has
1TAK,⋆,−1xK=1TρKxK=ρK/bardblxK/bardbl1
and
1TAK,⋆,−1xK=xT
KAK,⋆,−11=n/summationdisplay
i=1(xK,i/summationdisplay
j/negationslash=i[a(K,⋆)
ij]−1),
so that one obtains (8) by observing that
min
i/summationdisplay
j/negationslash=i[a(K,⋆)
ij]−1/bardblxK/bardbl1≤ρK/bardblxK/bardbl1≤max
i/summationdisplay
j/negationslash=i[a(K,⋆)
ij]−1/bardblxK/bardbl1.
Example 4 We apply the functions eKG1 and eKG2 to the graphs of Example 1. Fo r neither graph, there is
a unique “best choice” to report.Network analysis with the aid of the path length matrix 13
First consider the graph G1in Example 1. Then A2,⋆
1=A3,⋆
1=A4,⋆
1. We let K= 2 and obtain
A2,⋆,−1
1=
0 0.5 1 1 1
0.5 0 1 1 1
1 1 0 0 .5 0.5
1 1 0.5 0 0.5
1 1 0.5 0.5 0
.
The vector h2of harmonic 2-centralities is h2= [3.5,3.5,3,3,3]T, while the Perron vector x2is given by
x2= [0.47,0.47,0.43,0.43,0.43]T. This tells us that the vertices v1andv2are the most important ones in
the sense of both harmonic centrality and eigenvector centrality. Indeed, these vertices are the only ones
that are connected by paths of minimal length with three vertices. Thus, they are well connected. However,
A1(1,2) = 0.
Both functions eKG1 and eKG2 give ( h1,h2) = (1,3), and yield the matrix
˜A1=
0 0 0.5 1 1
0 0 1 1 1
0.5 1 0 0 0
1 1 0 0 0
1 1 0 0 0
,
eventhough other choicesof existing edgesare equallyvalid. The glo bal2-eﬃciency e2
˜G1of˜A1is 0.95;compare
with the global 2-eﬃciency e2
G1= 0.80 ofA1. We remark that a perturbation of another existing edge would
have led to the same increase of the global 2-eﬃciency.
Consider the graph G2in Example 1. One has
A2,⋆,−1
2=
0 0.5 1
0.5 0 1
1 1 0
.
The vector of harmonic 2-centralities is h2= [1.5,1.5,2]T, while the Perron vector is given by x2=
[0.54,0.54,0.64]T. Both functions eKG1 and eKG2 yield ( h1,h2) = (3,1), even though the choice ( h1,h2) =
(3,2) is equally valid and gives the matrix
˜A2=
0 0 0.5
0 0 1
0.5 1 0
.
The global 2-eﬃciency of ˜A2ise2
˜G2= 1.22, while the global 2-eﬃciency of the matrix A2ise2
G2= 0.83. The
diameter associated with the graph determined by ˜A2is only 1.5, while the diameter of the graph associated
withA2is 2. The choice ( h1,h2) = (3,2), which was considered in Example 3, gives the same results.
5 Numerical tests
The numerical tests reported in this section have been carried out using MATLAB R2022b on a 3 .2 GHz
Intel Core i7 6 core iMac. The Perron root and left and right Perron vectors for small to moderately sized
graphs can easily be evaluated by using the MATLAB function eig. For large-scale graphs these quantities
can be computed by the MATLAB function eigsor by the two-sided Arnoldi algorithm, introduced by Ruhe
[18] and improved by Zwaan and Hochstenbach [21].14 Silvia Noschese, Lothar Reichel
Example 5 Consider the adjacency matrix for the network Air500in [1]. This data set describes ﬂight con-
nections for the top 500 airports worldwide based on total passen ger volume. The ﬂight connections between
airports are for the year from 1 July 2007 to 30 June 2008. The net work is represented by a directed un-
weighted connected graph with 500 vertices and 24009 directed ed ges. The vertices of the network are the
airports and the edges represent direct ﬂight routes between tw o airports.
The path lengthmatrix A5,⋆=A499,⋆yields the diameterandthe radiusofthe graph5 and3,respectively .
The information provided by the vector of the harmonic centralities and the Perron vector for the reciprocal
path length matrix A5,⋆,−1is the same as the one given by the vector of harmonic K-centralities and the
Perron vector for AK,⋆,−1withK= 2; cf. Table 4. Therefore, the perturbation that increases the global
K-eﬃciency the most also will enhance the global eﬃciency the most. T he information provided by Table
4 suggests that the number of ﬂights from the Frankfurt FRA Airp ort (vertex v161) to the JFK Airport in
New York (vertex v224) should be doubled in order to half the wait time between these ﬂights . Doubling the
number of ﬂights corresponds to halving the weight for the corres ponding edge.
K(h1,h2)eK
GeK
˜G
5(161,224)0.4839 0.4856
4(161,224)0.4839 0.4855
3(161,224)0.4791 0.4807
2(161,224)0.3604 0.3606
Table 4 Example 5. Indices chosen by the functions eKG1 and eKG2 and t he global K-eﬃciency of both the given graph, G,
and the perturbed graph, ˜G, forK= 2,3,4,5.
Example 6 This example considers an undirected unweighted connected graph Gthat represents the German
highway system network Autobahn . The graph is available at [1]. Its 1168 vertices are German locations and
its 1243 edges represent highway segments that connect them.
LetAbe the adjacency matrix associated with G. The path length matrix A62,⋆=A1167,⋆shows that the
diameter and the radius of Gare 62 and 34, respectively, whereas its global eﬃciency equals 6 .7175·10−2.
One notices that there is only one shortest path of length 62, which connects the vertices v116andv1154. The
diameter of the graph can be decreased by halving the weight of the edgesa120,116anda116,120(since the
graph is undirected), because this is the unique edge that connect s the vertex v116to the other vertices of
the graph.
LetˆAdenote the perturbed adjacency matrix and ˆGthe corresponding graph. The global eﬃciency of
ˆGis 6.7177·10−2and the diameter is 61 .5. We turn to the application of the functions eKG1 and eKG2 to
increasingthe global eﬃciency. Table 5 reports the global K-eﬃciency (for severalvalues of K) of the graph ˜G
associated with the adjacency matrix ˜Aobtained by halving both entries ah1,h2andah2,h2ofA, computed by
the function eKG1. Table 6 shows the global K-eﬃciency (for several values of K) of the graph ˜Gassociated
with the adjacencymatrix ˜A, computed by the function eKG2.Also in this example, the informatio n provided
by the vector of harmonic centralities and the Perron vector for t he reciprocal path length matrix A62,⋆,−1is
exactly the same information that is provided by the vector of harm onicK-centralities and the Perron vector
forAK,⋆,−1withK≥4. We note that the latter vectors are less expensive to determine than the former. The
information provided by both tables suggests that one should doub le the width of the highway that connects
the cities of Duisburg (vertex v219) and Krefeld (vertex v565) to half the travel time. These cities are 10 miles
apart. Doubling the width corresponds to halving the weight associa ted with the corresponding edge.Network analysis with the aid of the path length matrix 15
K(h1,h2) eK
GeK
˜G
62(219,565)6.7175·10−26.7559·10−2
52(219,565)6.7166·10−26.7550·10−2
42(219,565)6.6965·10−26.7349·10−2
32(219,565)6.5105·10−26.5485·10−2
22(219,565)5.5674·10−25.6024·10−2
12(219,565)2.8426·10−22.8621·10−2
5(219,565)7.9991·10−38.0304·10−3
4(219,565)6.1823·10−36.2019·10−3
3(219,217)4.6017·10−34.6112·10−3
2(219,217)3.2082·10−33.2124·10−3
Table 5 Example 6. Indices chosen by function eKG1 and global K-eﬃciency of both Gand˜G, forK= 2,3,4,5 and for
K= 12 : 10 : 62.
K(h1,h2) eK
GeK
˜G
62(565,219)6.7175·10−26.7559·10−2
52(565,219)6.7166·10−26.7550·10−2
42(565,219)6.6965·10−26.7349·10−2
32(565,219)6.5105·10−26.5485·10−2
22(565,219)5.5674·10−25.6024·10−2
12(565,219)2.8426·10−22.8621·10−2
5(565,219)7.9991·10−38.0304·10−3
4(565,219)6.1823·10−36.2019·10−3
3(267,219)4.6017·10−34.6111·10−3
2(693,543)3.2082·10−33.2136·10−3
Table 6 Example 6. Indices chosen by function eKG2 and global K-eﬃciency of both Gand˜G, forK= 2,3,4,5 and for
K= 12 : 10 : 62.
6 Concluding remarks
The adjacency matrix of a graph is a well-known tool for studying pr operties of a network deﬁned by the
graph. The path length matrix associated with a graph also sheds ligh t on properties of the network, but so
far has not received much attention. A review of measures that ca n be deﬁned in terms of the path length
matrix is provided, and new such measures are introduced. The sen sitivity of the transmission of information
to perturbations of the entries of the adjacency matrix is investig ated.
Data availability statement
Data sharing not is applicable to this article as no new datasets were g enerated during the current study.
Conﬂict of interest
The authors declare that they have no conﬂict of interest.
Funding
There is no funding available.16 Silvia Noschese, Lothar Reichel
Authors’ contributions
All author contributed equally to the paper.
References
1.Dynamic Connectome Lab - Data Sets .https://sites.google.com/view/dynamicconnectomelab
2. A. Barrat, M. Barthelemy, and A. Vespignani, Dynamical processes on complex networks , Cambridge University Press,
Oxford, 2008.
3. J. Clark and D. A. Holton, A First Look at Graph Theory , World Scientiﬁc, Singapore, 1991.
4. O. De la Cruz Cabrera, J. Jin, S. Noschese, and L. Reichel, Communication in complex networks , Appl. Numer. Math., 172
(2022), pp. 186–205.
5. O. De la Cruz Cabrera, M. Matar, and L. Reichel, Analysis of directed networks via the matrix exponential , J. Comput.
Appl. Math., 355 (2019), pp. 182–192.
6. O. De la Cruz Cabrera, M. Matar, and L. Reichel, Edge importance in a network via line graphs and the matrix ex ponential ,
Numer. Algorithms, 83 (2020), pp. 807–832.
7. S. El-Halouy, S. Noschese, and L. Reichel, Perron communicability and sensitivity of multilayer netw orks, Numer. Algo-
rithms, 92 (2023), pp. 597–617.
8. E. Estrada, The Structure of Complex Networks: Theory and Applications , Oxford University Press, Oxford, 2011.
9. E. Estrada and J. A. Rodriguez-Velazquez, Subgraph centrality in complex networks , Phys. Rev. E, 71 (2005), Art. 056103.
10. C. Fenu, L. Reichel, and G. Rodriguez, SoftNet: A package for the analysis of complex networks , Algorithms, 15 (2022),
Art. 296.
11. R. L. Graham and H. O. Pollak, On the addressing problem for loop switching , The Bell System Technical Journal, 50
(1971), pp. 2495–2519.
12. G. L. Litvinov, Maslov dequantization, idempotent and tropical mathemati cs: A brief introduction , J. Math. Sci., 140 (2007),
pp. 426–444.
13. M. E. J. Newman, Analysis of weighted networks , Phys. Rev E, 70 (2004), Art. 056131.
14. M. E. J. Newman, Networks: An Introduction , Oxford University Press, Oxford, 2010.
15. S. Noschese and L. Pasquini, Eigenvalue condition numbers: Zero-structured versus tra ditional, J. Comput. Appl. Math.,
185 (2006), pp. 174–189.
16. S. Noschese and L. Reichel, Estimating and increasing the structural robustness of a ne twork, Numer. Linear Algebra Appl.,
29 (2022), Art. e2418.
17. D. Plavsic, S. Nikolic, N. Trinajstic, and Z. Mihalic, On the Harary index for the characterization of chemical gra phs, J.
Math. Chem., 12 (1993), pp. 235–250.
18. A. Ruhe, The two-sided Arnoldi algorithm for nonsymmetric eigenval ue problems , Matrix Pencils, eds. B. K˚ agstr¨ om and
A. Ruhe, Springer, Berlin, 1983, pp. 104–120.
19. A. Taylor and D.J. Higham, A Controllable Test Matrix Toolbox for MATLAB , ACM Trans. Math. Software, 35 (2009),
pp. 26:1-26:17.
20. J. H. Wilkinson, Sensitivity of eigenvalues II , Util. Math., 30 (1986), pp. 243–286.
21. I. N. Zwaan and M. E. Hochstenbach, Krylov-Schur-type restarts for the two-sided Arnoldi meth od, SIAM J. Matrix Anal.
Appl., 38 (2017), pp. 297–321.
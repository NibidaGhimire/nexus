arXiv:2303.11438v1  [cs.AI]  13 Mar 2023Minimizing Fuzzy Interpretations in Fuzzy Description Log ics by
Using Crisp Bisimulations
Linh Anh Nguyen
Institute of Informatics, University of Warsaw, Banacha 2, 02-0 97 Warsaw, Poland,
Email:nguyen@mimuw.edu.pl
Faculty of Information Technology, Nguyen Tat Thanh University, Ho Chi Minh City, Vietnam
Abstract
The problem of minimizing ﬁnite fuzzy interpretations in fuzzy descrip tion logics (FDLs) is
worth studying. For example, the structure of a fuzzy/weighted social network can be treated as
a fuzzy interpretation in FDLs, where actors are individuals and act ions are roles. Minimizing
the structure of a fuzzy/weighted social network makes it more c ompact, thus making network
analysis tasks more eﬃcient. In this work, we study the problem of m inimizing a ﬁnite fuzzy
interpretation in a FDL by using the largest crisp auto-bisimulation. T he considered FDLs use the
Baaz projection operator and their semantics is speciﬁed using an a bstract algebra of fuzzy truth
values, which can be any linear and complete residuated lattice. We pr ovide an eﬃcient algorithm
with a complexity of O((mlogl+n) logn) for minimizing a given ﬁnite fuzzy interpretation I,
wherenis the size of the domain of I,mis number of nonzero instances of atomic roles of Iand
lis the number of diﬀerent fuzzy values used for instances of atomic roles ofI. We prove that
the fuzzy interpretation returned by the algorithm is minimal among the ones that preserve fuzzy
TBoxes and ABoxes under certain conditions.
Keywords: fuzzy description logic, bisimulation, minimization.
1 Introduction
Two states xandx′in two automata are bisimilar if the following three conditi ons are satisﬁed:
i)xis an accepting state iﬀ x′is an accepting state; ii) if there is a σ-transition (i.e., a transition
caused by an action σ) fromxto a state y, then there must also be a σ-transition from x′to a state y′
such that yandy′are bisimilar; iii) and vice versa. Similarly, two possible worldsxandx′in two
Kripke models are bisimilar if the following three conditio ns are met: i) a proposition (an atomic
formula) is true at xiﬀ it is true at x′; ii) if a possible world yis accessible from xvia a relation σ,
then there must exist a possible world y′accessible from x′via the relation σsuch that yandy′are
bisimilar; iii) and vice versa. The bisimilarity relation d eﬁned in this way is maximal by its nature.
If we deﬁne a bisimulation Zin a similar way by replacing a phrase like “ xandx′are bisimilar” with
“Z(x,x′) holds”, then Zis not required to be maximal. Thus, the bisimilarity relati on is the largest
bisimulation.
The bisimilarity relation between states of the same automa ton (respectively, possible worlds in
the same Kripke model), also known as the largest auto-bisim ulation, is an equivalence relation. If
two states in a ﬁnite automaton are bisimilar, we can merge th em to reduce the size of the automaton.
However, merging each group of bisimilar states in a ﬁnite au tomaton does not result in a minimal
automaton. This is because preserving only the recognized l anguage requires a stronger reduction to
make a ﬁnite automaton minimal in the general case. On the oth er hand, bisimilarity-based merging
can be used to minimize a Kripke model while preserving the se t of all formulas that are true in all
possible worlds of the model.
Description logics are logical formalisms used for represe nting and reasoning about terminolog-
ical knowledge [1]. They are variants of modal logics, where interpretations, individuals, concepts
1and roles take the place of Kripke models, possible worlds, f ormulas and accessibility relations, re-
spectively. In essence, a concept is interpreted as a set of i ndividuals and a role is interpreted as
a binary relation between individuals. A knowledge base in a description logic usually consists of
a TBox (Terminological Box) and an ABox (Assertional Box), w here the TBox is a set of axioms
about concepts and roles, while the ABox is a set of assertion s about individuals.
In practice, data may be vague or fuzzy and we can use fuzzy des cription logics (FDLs) [2, 3]
instead of description logics. The semantics of the basic co ncept constructors ∃R.C and∀R.C (exis-
tential and universal restrictions), which correspond to t he modal formulas /a\}bracke⊔le{⊔R/a\}bracke⊔ri}h⊔Cand [R]Cin modal
logics, are deﬁned in FDLs using the fuzzy operators /varotimesand⇒, respectively (see Section 2.2). Other
fuzzy operators such as /varoplusand/varominusmay also be used to deﬁne the semantics of other concept const ruc-
tors. Initially, FDLs were mostly studied using the Zadeh fa mily of fuzzy operators. Nowadays, FDLs
are usually studied using a t-norm /varotimeson the unit interval [0 ,1] and its corresponding residuum ⇒,
where the G¨ odel family of fuzzy operators typically provid es the simplest case. More general settings
for FDLs may use residuated lattices [4–6] or so-called alge bras of fuzzy truth values [7].
In this work, we consider the problem of minimizing a ﬁnite fu zzy interpretation in a FDL by
using the largest/greatest auto-bisimulation. There are t he following related questions:
1. What class of FDLs is considered?
2. How can we minimize a ﬁnite fuzzy interpretation in the giv en FDL? How can we do this
eﬃciently? What is the complexity of the algorithm?
3. With regard to what criteria is the resulting fuzzy interp retation minimal? What are logical
properties of the minimized fuzzy interpretation?
1.1 Related Work
There are two kinds of bisimulations, crisp andfuzzy , for fuzzy modal logics and FDLs (see [6–9]).
Restricting to the case of using the G¨ odel family of fuzzy op erators on the unit interval [0 ,1], logical
characterizations of crisp bisimulations between fuzzy Kr ipke models or fuzzy interpretations in
FDLs are expressed in a logical language with involutive neg ation or the Baaz projection operator.
When moving to residuated lattices, the use of the Baaz proje ction operator is more suitable [6].
Crisp bisimulations have been studied for fuzzy transition systems [10–13], weighted automata [14],
Heyting-valued modal logics [15], fuzzy/many-valued moda l logics [8, 16, 17] and FDLs [7, 9]. Fuzzy
bisimulations have been studied for fuzzy automata [18–20] , weighted/fuzzy social networks [21,22],
fuzzy modal logics [6,8] and FDLs [9].
In the preprint [23], together with a coauthor we designed an eﬃcient algorithm with a complexity
ofO((mlogl+n) logn) for computing the crisp partition that corresponds to the l argest crisp bisim-
ulation of a given ﬁnite fuzzy labeled graph, where n,mandlare the number of vertices, the number
of nonzero edges and the number of diﬀerent fuzzy degrees of ed ges of the input graph, respectively.
We also provided an algorithm with a complexity of O((mlogm+n) logn) for a similar problem for
the setting with counting successors, which corresponds to the case with qualiﬁed number restrictions
in description logics and graded modalities in modal logics . In [24], we gave an eﬃcient algorithm
with a complexity of O((mlogl+n) logn) for computing the fuzzy partition that corresponds to
the greatest fuzzy auto-bisimulation of a ﬁnite fuzzy label ed graph under the G¨ odel semantics. We
introduced and used a novel notion of a fuzzy partition, whic h is deﬁned only for ﬁnite sets w.r.t.
the G¨ odel t-norm.
For the background, recall that Hopcroft [25] gave an eﬃcien t algorithm with a complexity of
O(nlogn) for minimizing states in a crisp deterministic ﬁnite autom aton, Paige and Tarjan [26] gave
an eﬃcient algorithm with a complexity of O((m+n) logn) for computing the coarsest crisp partition
of a ﬁnite crisp graph.
1.2 Motivation
First, the problem of minimizing ﬁnite fuzzy interpretatio ns in FDLs is worth studying. For example,
the structure of a fuzzy/weighted social network can be trea ted as a fuzzy interpretation in FDLs,
2where actors are individuals and actions are roles. Minimiz ing the structure of a fuzzy/weighted
social network makes it more compact, thus making network an alysis tasks more eﬃcient. Second,
despite the fact that bisimulations have been studied for fu zzy modal logics and fuzzy/weighted social
networks [8,21,22], we are not aware of works devoted to mini mizing fuzzy Kripke models or using the
largest/greatest bisimulation to minimize the structure o f a fuzzy/weighted social network. Third,
as discussed below, the results of the earlier works [9,27] o n minimizing a ﬁnite fuzzy interpretation
in a FDL by using the largest/greatest bisimulation have a qu ite restrictive scope.
The work [27] concerns the problem of minimizing a ﬁnite fuzz y interpretation in a FDL under
the G¨ odel semantics by using the greatest fuzzy auto-bisim ulation. The minimization is done by
taking the quotient fuzzy interpretation w.r.t. the fuzzy e quivalence relation that is the greatest
fuzzy auto-bisimulation. While the minimality w.r.t. the p reservation of fuzzy TBoxes has been
proved for a general case, the minimality w.r.t. the preserv ation of fuzzy ABoxes has been proved
only for a very restrictive case where the universal role is u sed, and it does not hold for the general
case. The work [27] does not provide any algorithm for comput ing the quotient fuzzy interpretation.
Section 6 of the work [9] speciﬁes how to minimize a ﬁnite fuzz y interpretation in a FDL that
uses the G¨ odel family of fuzzy operators on the unit interva l [0,1] together with involutive negation.
The minimization is done by taking the quotient fuzzy interp retation w.r.t. the equivalence relation
that is the largest crisp auto-bisimulation. The minimalit y is proved w.r.t. certain criteria like
the preservation of fuzzy TBoxes and ABoxes. The setting wit h involutive negation is essential
and corresponds to the crispness of the largest auto-bisimu lation. The work [9] has the following
limitations:
•It does not consider other algebras of fuzzy truth values lik e the unit interval [0 ,1] with another
t-norm (e.g., product or /suppress Lukasiewicz) or complete residua ted lattices. Logical properties of
minimized fuzzy interpretations are formulated and proved in [9] only for FDLs that use the
G¨ odel family of fuzzy operators on the unit interval [0 ,1] together with involutive negation.
•The quotient fuzzy interpretation w.r.t. the equivalence r elation that is the largest crisp auto-
bisimulation is deﬁned in [9] only theoretically. The work [ 9] does not provide any algorithm
for computing it. The naive algorithm a usual reader can come up with for the computation is
not eﬃcient.
It is desirable to generalize the results of [9, Section 6] fo r a larger class of FDLs, especially w.r.t.
the semantics, and to provide an eﬃcient algorithm for the mi nimization task.
1.3 Our Contributions
In this work, by exploiting the results of [7] on logical char acterizations of crisp bisimulations in
FDLs we generalize the results of [9, Section 6] for a large cl ass of FDLs fALCΦwith the Baaz
projection operator. The semantics of the considered FDLs i s speciﬁed by using an abstract algebra
of fuzzy truth values /a\}bracke⊔le{⊔L,≤,/varotimes,/varoplus,⇒,/varominus,△,0,1/a\}bracke⊔ri}h⊔such that /a\}bracke⊔le{⊔L,≤/a\}bracke⊔ri}h⊔is a linear complete lattice with 0
and 1 as the least and greatest elements, /a\}bracke⊔le{⊔L,/varotimes,1/a\}bracke⊔ri}h⊔is a commutative monoid, /varotimesis increasing w.r.t.
both the arguments, ⇒is decreasing w.r.t. the ﬁrst argument and increasing w.r.t . the second one,
with (x⇒y) = 1 iﬀ x≤y, and△is the Baaz projection operator (i.e., △x= 1 ifx= 1, and
△x= 0 otherwise). In comparison with residuated lattices [4, 5 ], an algebra of fuzzy truth values
is required to be complete and linear, but /varotimesand⇒are not required to form an adjoint pair.1
Besides, such an algebra also contains the binary operator /varoplusand the unary operators /varominusand△,
with no assumptions about /varoplusand/varominus. The considered FDLs fALCΦextend the basic description
logicALC with fuzzy truth values, the concept constructor C→Dand the features speciﬁed by
Φ⊆ {△ ,◦,⊔r,∗, ?,I,U,O}, with△ ∈ Φ, where △andOdenote the Baaz projection operator and
nominal, respectively, as concept constructors, while the remaining symbols denote role constructors:
sequential composition ( ◦), union ( ⊔r), reﬂexive-transitive closure ( ∗), test (?), inverse role ( I) and
universal role ( U).
1Operators /varotimesand⇒form an adjoint pair if, for every x,y,z∈L,x/varotimesy≤ziﬀx≤(y⇒z).
3We prove that, for Ibeing a ﬁnite fuzzy interpretation and I/∼Φthe quotient fuzzy interpretation
ofIw.r.t. the equivalence relation that is the largest crisp Φ- auto-bisimulation of I,
1. if (1⇒x) =xand (y/varoplusz= 0 iﬀy=z= 0), for all fuzzy truth values x,yandz, thenI/∼Φis
a minimal fuzzy interpretation that validates the same set o f fuzzy TBox axioms in fALCΦas
I;
2. if there are individual names and either U∈Φ orIis connected w.r.t. Φ, then:2
(a)I/∼Φis a minimal fuzzy interpretation Φ-bisimilar to I,
(b)I/∼Φis a minimal fuzzy interpretation that validates the same se t of fuzzy assertions of
the form C(a)⊲⊳ pinfALCΦasI, where⊲⊳∈ {≥,>,≤,<}andpis a fuzzy truth value.
The premises of the ﬁrst assertion hold, e.g., when L= [0,1],/varotimesis a t-norm, ⇒is its residuum and /varoplus
is the corresponding s-norm. For the second assertion, it is usual to assume that there are individual
names, but the premise U∈Φ is not a light assumption. If U /∈Φ and we want to minimize Iw.r.t.
the criteria 2a and 2b, then we can ﬁrst delete from Iall individuals unreachable from the named
individuals via roles of fALCΦ, to obtain a fuzzy interpretation I′, and then take I′/∼Φ.
Apart from the above mentioned results, which are a generali zation of the results of [9, Section 6],
we also provide an eﬃcient algorithm with a complexity of O((mlogl+n) logn) for computing the
quotient fuzzy interpretation I/∼ΦfromI, wherenis the size of the domain of I,mis number of
nonzero instances of atomic roles of Iandlis the number of diﬀerent fuzzy values used for instances
of atomic roles of I. It is based on the algorithm developed recently by us and a co author in the
preprint [23] for computing the crisp partition that corres ponds to the largest crisp bisimulation of
a given ﬁnite fuzzy labeled graph.
1.4 The Structure of This Work
The rest of this work is structured as follows. In Section 2, w e recall deﬁnitions and existing results
that are needed for this work. In Section 3, we specify how to m inimize ﬁnite fuzzy interpretations
and prove logical properties of the minimized fuzzy interpr etations. In Section 4, we present our
algorithm for the minimization task. We conclude this work i n Section 5.
2 Preliminaries
In this section, we present basic deﬁnitions related to alge bras of fuzzy truth values, FDLs and
crisp bisimulations for FDLs by recalling them from [7]. We a lso present some results of [7] or their
consequences, which are exploited in the further part of thi s work.
2.1 Algebras of Fuzzy Truth Values
Analgebra of fuzzy truth values is deﬁned in [7] as a tuple /a\}bracke⊔le{⊔L,≤,/varotimes,/varoplus,⇒,/varominus,△,0,1/a\}bracke⊔ri}h⊔such that /a\}bracke⊔le{⊔L,≤/a\}bracke⊔ri}h⊔
is a linear complete lattice with 0 and 1 as the least and great est elements, /varotimes,/varoplusand⇒are binary
operators and /varominusand△are unary operators on Lwith the following axioms:
x/varotimesy=y/varotimesx (1)
x/varotimes(y/varotimesz) = (x/varotimesy)/varotimesz (2)
x/varotimes1 =x (3)
x/varotimesy≤z/varotimestifx≤zandy≤t (4)
(x⇒y)≤(z⇒t) ifz≤xandy≤t (5)
(x⇒y) = 1 iﬀx≤y (6)
△x=/braceleftbigg1 ifx= 1,
0 otherwise.(7)
2Iis connected w.r.t. Φ if all of its individuals are reachable from the named individuals via roles of fALCΦ.
4Thus,/a\}bracke⊔le{⊔L,/varotimes,1/a\}bracke⊔ri}h⊔is a commutative monoid, /varotimesis increasing w.r.t. both the arguments, ⇒is de-
creasing w.r.t. the ﬁrst argument and increasing w.r.t. the second argument and has an important
property of residual implications, and △is the Baaz projection operator [8,28].
WhenLis the interval [0 ,1], a binary operator /varotimesonLwith the properties (1)-(4) is called a
t-norm , and if /varotimesis a left-continuous t-norm, then the binary operator ⇒onLdeﬁned by ( x⇒y) =
sup{z|z/varotimesx≤y}is called the residuum of/varotimes. Every residuum has the properties (5) and (6).
The continuous t-norms /varotimesnamed after G¨ odel, Goguen (also known as product) and /suppress Luka siewicz are
listed in Table 1 together with their corresponding s-norms /varoplusand residua ⇒.
G¨ odel Product /suppress Lukasiewicz
x/varotimesy min{x,y} x·y max{0,x+y−1}
x/varoplusy max{x,y}x+y−x·y min{1,x+y}
x⇒y/braceleftbigg1 ifx≤y
yotherwise/braceleftbigg1 ifx≤y
y/x otherwisemin{1,1−x+y}
Table 1: Popular t-norms, s-norms and residua.
From now on, let /a\}bracke⊔le{⊔L,≤,/varotimes,/varoplus,⇒,/varominus,△,0,1/a\}bracke⊔ri}h⊔be an arbitrary algebra of fuzzy truth values. Let the
operators <,≥and>onLbe deﬁned in the usual way w.r.t. ≤.
Proposition 2.1 ( [7, Proposition 1]) The following properties hold for all x,y∈L:
x/varotimesy≤xandx/varotimesy≤y (8)
ifx= 0ory= 0, thenx/varotimesy= 0 (9)
ifx/varotimesy >0, thenx >0andy >0 (10)
x/varotimesy= 1iﬀx=y= 1. (11)
For a ﬁnite set Γ = {x1,...,x n} ⊆Lwithn≥0, deﬁne/circlemultiplytextΓ =x1/varotimes···/varotimesxn/varotimes1.
Afuzzy subset of a setXis a function f:X→L. Iffis a fuzzy subset of Xandx∈X, thenf(x)
means the fuzzy degree in which xbelongs to the subset. For {x1,...,x n} ⊆Xand{a1,...,an} ⊂L,
we write {x1:a1, . . . ,xn:an}to denote the fuzzy subset fofXsuch that f(xi) =aifor 1≤i≤n
andf(x) = 0 for x∈X\{x1,...,x n}.
2.2 Fuzzy Description Logics
LetRdenote a set of role names ,Ca set ofconcept names , andIa set ofindividual names . Assume
that they are pairwise disjoint. Let Φ be an arbitrary subset of{△,◦,⊔r,∗, ?,I,U,O}such
that△ ∈ Φ. Elements of Φ denote the additional features included in t he FDL fALCΦdeﬁned
below. In comparison with [7], we exclude unqualiﬁed/quali ﬁed number restrictions and the concept
constructor ∃r.Self .
Abasic role w.r.t. Φ is either a role name r∈Ror its inverse r−in the case I∈Φ.
Roles andconcepts of the FDL fALCΦare deﬁned inductively as follows:
•ifr∈R, thenris a role of fALCΦ,
•ifRis a role of fALCΦ, then
–if∗belongs to Φ, then R∗is a role of fALCΦ,
–ifIbelongs to Φ, then R−(the inverse of R) is a role of fALCΦ,
•ifRandSare roles of fALCΦ, then
–if◦belongs to Φ, then R◦Sis a role of fALCΦ,
–if⊔rbelongs to Φ, then R⊔Sis a role of fALCΦ,
•ifCis a concept of fALCΦand ? belongs to Φ, then C? is a role of fALCΦ,
5UI(x,y) = 1
(R−)I(x,y) =RI(y,x)
(R⊔S)I(x,y) = max {RI(x,y),SI(x,y)}
(R◦S)I(x,y) = sup {RI(x,z)/varotimesSI(z,y)|z∈∆I}
(R∗)I(x,y) = sup {/circlemultiplytext{RI(xi,xi+1)|0≤i < n} |
n≥0, x0,...,x n∈∆I,x0=x, xn=y}
(C?)I(x,y) = (ifx/\e}a⊔io\slash=ythen 0 else CI(x))
pI(x) =p
{a}I(x) = (ifx/\e}a⊔io\slash=aIthen 0 else 1)
(△C)I(x) =△(CI(x))
(¬C)I(x) =/varominus(CI(x))
(C⊓D)I(x) =CI(x)/varotimesDI(x)
(C⊔D)I(x) =CI(x)/varoplusDI(x)
(C→D)I(x) = (CI(x)⇒DI(x))
(∀r.C)I(x) = inf{rI(x,y)⇒CI(y)|y∈∆I}
(∃r.C)I(x) = sup {rI(x,y)/varotimesCI(y)|y∈∆I}.
Figure 1: The meaning of complex roles and concepts in a fuzzy interpretation I.
•ifU∈Φ, thenU(the universal role) is a role of fALCΦ,
•ifp∈L, thenpis a concept of fALCΦ,
•ifA∈C, thenAis a concept of fALCΦ,
•ifCandDare concepts of fALCΦandRis a role of fALCΦ, then△C,¬C,C⊓D,C⊔D,
C→D,∀R.C and∃R.C are concepts of fALCΦ,
•ifO∈Φ anda∈I, then{a}is a concept of fALCΦ.
We use letters randsto denote role names, RandSto denote roles, AandBto denote concept
names,CandDto denote concepts, and aandbto denote individual names.
Given a ﬁnite set Γ = {C1,...,C n}of concepts, we deﬁne/bigsqcapΓ =C1⊓...⊓Cn⊓1.
Afuzzy interpretation is a pairI=/a\}bracke⊔le{⊔∆I,·I/a\}bracke⊔ri}h⊔, where ∆Iis a non-empty set, called the domain , and
·Iis theinterpretation function , which maps each individual name ato an element aI∈∆I, each
concept name Ato a function AI: ∆I→L, and each role name rto a function rI: ∆I×∆I→L.
It isﬁnite if ∆I,C,RandIare ﬁnite. The interpretation function ·Iis extended to complex roles
and concepts as shown in Figure 1, for x,y∈∆I.
Ifx,y∈∆IandrI(x,y)>0 (respectively, rI(x,y) = 0), then we say that /a\}bracke⊔le{⊔x,y/a\}bracke⊔ri}h⊔is anonzero
instance (respectively, zero-instance ) of the role r. We say that concepts CandDareequivalent ,
denoted by C≡D, ifCI=DIfor every fuzzy interpretation I.
Example 2.2 Let≤be the usual order on L= [0,1] and let C={A},R={r}andI=∅. Consider
the fuzzy interpretation Iillustrated and speciﬁed below:
a: 1
b: 0.6 c: 0.90.8 0.5
0.7
∆I={a,b,c},AI={a: 1, b: 0.6, c: 0.9}andrI={/a\}bracke⊔le{⊔a,b/a\}bracke⊔ri}h⊔: 0.8,/a\}bracke⊔le{⊔a,c/a\}bracke⊔ri}h⊔: 0.5,/a\}bracke⊔le{⊔b,c/a\}bracke⊔ri}h⊔: 0.7}. Denote
r+=r∗◦r. We have:
6G¨ odel Product /suppress Lukasiewicz
(∃r.A)I(a) 0.6 0.48 0.4
(∀r.A)I(a) 0.6 0.75 0.8
(∃r+.A)I(a) 0.7 0.504 0.4
(∀r+.A)I(a) 0.6 0.75 0.8
Afuzzy assertion infALCΦhas the form C(a)⊲⊳ p,R(a,b)⊲⊳ p,a.=bora/\e}a⊔io\slash.=b, whereCis a
concept of fALCΦ,Ris a role of fALCΦ,⊲⊳∈ {≥,>,≤,<}andp∈L. Afuzzy ABox infALCΦis a
ﬁnite set of fuzzy assertions in fALCΦ.
Afuzzy TBox axiom infALCΦhas the form ( C⊑D)✄p, whereCandDare concepts of fALCΦ,
✄∈ {≥,>}andp∈L. Afuzzy TBox infALCΦis a ﬁnite set of fuzzy TBox axioms in fALCΦ.
The satisfaction relation I |=ϕ(Ivalidates ϕ), where Iis a fuzzy interpretation and ϕis a TBox
axiom or a fuzzy assertion, is deﬁned as follows:
I |= (C⊑D)✄piﬀ (C→D)I(x)✄pfor allx∈∆I,
I |=C(a)⊲⊳ p iﬀCI(aI)⊲⊳ p,
I |=R(a,b)⊲⊳ p iﬀRI(aI,bI)⊲⊳ p,
I |=a.=b iﬀaI=bI,
I |=a/\e}a⊔io\slash.=b iﬀaI/\e}a⊔io\slash=bI.
A fuzzy interpretation Iis amodel of a fuzzy TBox T, denoted by I |=T, ifI |=ϕfor allϕ∈ T.
Similarly, Iis amodel of a fuzzy ABox A, denoted by I |=A, ifI |=ϕfor allϕ∈ A.
2.3 Crisp Bisimulations for Fuzzy Description Logics
Given fuzzy interpretations IandI′, a relation Z⊆∆I×∆I′is called a ( crisp ) Φ-bisimulation
between IandI′if the following conditions hold for every x,y∈∆I,x′,y′∈∆I′,A∈C,r∈R,
a∈I, and every basic role Rw.r.t. Φ, where →,∧and↔are the usual crisp logical connectives:
Z(x,x′)→AI(x) =AI′(x′), (12)
[Z(x,x′)∧(RI(x,y)>0)]→ ∃y′∈∆I′[(RI(x,y)≤RI′(x′,y′))∧Z(y,y′)], (13)
[Z(x,x′)∧(RI′(x′,y′)>0)]→ ∃y∈∆I[(RI′(x′,y′)≤RI(x,y))∧Z(y,y′)]; (14)
ifO∈Φ, then
Z(x,x′)→(x=aI↔x′=aI′); (15)
ifU∈Φ, then
Z/\e}a⊔io\slash=∅ → ∀x∈∆I∃x′∈∆I′Z(x,x′), (16)
Z/\e}a⊔io\slash=∅ → ∀x′∈∆I′∃x∈∆IZ(x,x′). (17)
Note that the deﬁnition of Φ-bisimulations does not depend o n whether the elements of {◦,⊔r,
∗, ?}belong to Φ. It depends on whether I∈Φ via basic roles w.r.t. Φ.
A Φ-auto-bisimulation of a fuzzy interpretation Iis a Φ-bisimulation between Iand itself.
Example 2.3 Let≤be the usual order on L= [0,1] and let C={A},R={r}andI={a}.
Consider the fuzzy interpretations IandI′speciﬁed below and illustrated in Figure 2.
•∆I={u,v,w},aI=u,AI={u:1,v:0.5,w:0.5},
rI={/a\}bracke⊔le{⊔u,v/a\}bracke⊔ri}h⊔:0.7,/a\}bracke⊔le{⊔u,w/a\}bracke⊔ri}h⊔:0.9,/a\}bracke⊔le{⊔v,v/a\}bracke⊔ri}h⊔:0.6,/a\}bracke⊔le{⊔v,w/a\}bracke⊔ri}h⊔:0.8,/a\}bracke⊔le{⊔w,v/a\}bracke⊔ri}h⊔:0.8};
•∆I′={u′,v′},aI′=u′,AI′={u:1,v:0.5},rI′={/a\}bracke⊔le{⊔u′,v′/a\}bracke⊔ri}h⊔:0.9,/a\}bracke⊔le{⊔v′,v′/a\}bracke⊔ri}h⊔:0.8}.
Let{△} ⊆ Φ⊆ {△,◦,⊔r,∗,?,U,O}. It is straightforward to check that Z={/a\}bracke⊔le{⊔u,u′/a\}bracke⊔ri}h⊔,/a\}bracke⊔le{⊔v,v′/a\}bracke⊔ri}h⊔,/a\}bracke⊔le{⊔w,v′/a\}bracke⊔ri}h⊔}
is the largest Φ-bisimulation between IandI′. /squaresolid
7I
u:1
v:0.5 w:0.50.7 0.9
0.8
0.8
0.6I′
u′:1
v′:0.50.9
0.8
Figure 2: An illustration for Example 2.3.
Proposition 2.4 ( [7, Proposition 5]) LetI,I′andI′′be fuzzy interpretations.
1.{/a\}bracke⊔le{⊔x,x/a\}bracke⊔ri}h⊔ |x∈∆I}is aΦ-auto-bisimulation of I.
2. IfZis aΦ-bisimulation between IandI′, thenZ−1is aΦ-bisimulation between I′andI.
3. IfZ1is aΦ-bisimulation between IandI′, andZ2is aΦ-bisimulation between I′andI′′, then
Z1◦Z2is aΦ-bisimulation between IandI′′.
4. IfZis a set of Φ-bisimulations between IandI′, then/uniontextZis also a Φ-bisimulation between I
andI′.
Corollary 2.5 ( [7, Corollary 6]) For any fuzzy interpretation I, the largest Φ-auto-bisimulation
ofIexists and is an equivalence relation.
LetIandI′be fuzzy interpretations and let x∈∆Iandx′∈∆I′. We write x∼Φx′to denote
that there exists a Φ-bisimulation Zbetween IandI′such that Z(x,x′) holds. We also write x≡Φx′
to denote that CI(x) =CI′(x′) for all concepts CoffALCΦ. Ifx∼Φx′, then we say that xandx′
are Φ-bisimilar . IfI/\e}a⊔io\slash=∅and there exists a Φ-bisimulation Zbetween IandI′such that Z(aI,aI′)
holds for all a∈I, then we say that IandI′are Φ-bisimilar and write I ∼ΦI′.
The work [7] provides results on invariance of concepts unde r bisimulations and the Hennessy-
Milner property of bisimulations. They are formulated for “ witnessed” and “modally saturated”
fuzzy interpretations. For a special case, where the consid ered fuzzy interpretations are ﬁnite, they
imply the following theorem.
Theorem 2.6 (cf. [7, Corollary 17]) LetIandI′be ﬁnite fuzzy interpretations and let x∈∆I
andx′∈∆I′. Thenx≡Φx′iﬀx∼Φx′.
Corollary 2.7 (cf. [7, Corollary 18]) Suppose I/\e}a⊔io\slash=∅and letIandI′be ﬁnite fuzzy interpreta-
tions. Then, IandI′areΦ-bisimilar iﬀ aI≡ΦaI′for alla∈I.
This corollary follows from Theorem 2.6 and the fourth asser tion of Proposition 2.4.
A fuzzy interpretation Iis said to be Φ -connected if, for every x∈∆I, there exist a∈I,
x0,...,x n∈∆Iand basic roles R1,...,R nw.r.t. Φ such that x0=aI,xn=xandRI
i(xi−1,xi)>0
for all 1≤i≤n.
A fuzzy TBox or ABox is invariant under Φ-bisimilarity between ﬁnite fuzzy interpretations if,
for every ﬁnite fuzzy interpretations IandI′that are Φ-bisimilar, Iis a model of the box iﬀ so is I′.
The three following propositions are special cases of Propo sitions 11–13 of [7]. We present full
proofs for them, as the latter are provided in [7] without pro ofs.
Proposition 2.8 IfU∈Φ, then all fuzzy TBoxes in fALCΦare invariant under Φ-bisimilarity
between ﬁnite fuzzy interpretations.
8Proof. Suppose U∈Φ and let IandI′be ﬁnite fuzzy interpretations that are Φ-bisimilar. It is
assumed here that I/\e}a⊔io\slash=∅. LetTbe a fuzzy TBox in fALCΦand suppose I |=T. Let (C⊑D)✄p
be a fuzzy TBox axiom from Tand letx′∈∆I′. To prove that I′|=T, we need to show that
(C→D)I′(x′)✄p. LetZbe a Φ-bisimulation between IandI′such that Z(aI,aI′) holds for all
a∈I. Thus,Z/\e}a⊔io\slash=∅. By Condition (17), there exists x∈∆Isuch that Z(x,x′) holds. By Theorem 2.6,
it follows that ( C→D)I(x) = (C→D)I′(x′). SinceI |=T, we have that ( C→D)I(x)✄p. Hence,
(C→D)I′(x′)✄p. /squaresolid
Proposition 2.9 LetTbe a fuzzy TBox in fALCΦand letIandI′be ﬁnite fuzzy interpretations
that are Φ-bisimilar. If both IandI′areΦ-connected, then I |=TiﬀI′|=T.
Proof. Suppose both IandI′are Φ-connected. We prove that, if I |=T, thenI′|=T. The
converse is similar and omitted. Suppose I |=T. Let (C⊑D)✄pbe an arbitrary fuzzy TBox
axiom of Tand letx′∈∆I′. We need to show that ( C→D)I′(x′)✄p. SinceI′is Φ-connected,
there exists a∈I,x′
0,...,x′
n∈∆I′and basic roles R1,...,R nw.r.t. Φ such that x′
0=aI′,x′
n=x′
andRI′
i(x′
i−1,x′
i)>0 for all 1 ≤i≤n. Letx0=aIand letZbe a Φ-bisimulation between Iand
I′such that Z(bI,bI′) holds for all b∈I. For each ifrom 1 to n, sinceZ(xi−1,x′
i−1) holds and
RI′(x′
i−1,x′
i)>0, by Condition (14), there exists xi∈∆Isuch that Z(xi,x′
i) holds. Let x=xn.
Thus,Z(x,x′) holds. Since I |=T, we have ( C→D)I(x)✄p. SinceZ(x,x′) holds, by Theorem 2.6,
(C→D)I′(x′) = (C→D)I(x)✄p, which completes the proof. /squaresolid
Proposition 2.10 LetAbe a fuzzy ABox in fALCΦ. IfO∈ΦorAconsists of only fuzzy assertions
of the form C(a)⊲⊳ p, thenAis invariant under Φ-bisimilarity between ﬁnite fuzzy interpretations.
Proof. Suppose that O∈Φ orAconsists of only fuzzy assertions of the form C(a)⊲⊳ p. LetIand
I′be ﬁnite fuzzy interpretations. Suppose that I ∼ΦI′andI |=A. Letϕ∈ A. We need to show
thatI′|=ϕ. LetZbe a Φ-bisimulation between IandI′such that Z(aI,aI′) holds for all a∈I.
•Caseϕ= (a.=b) : Since I |=A, we have aI=bI. SinceI ∼ΦI′, we have aI∼ΦaI′. Since
aI=bI, by Condition (15), it follows that aI′=bI′. Therefore, I′|=ϕ.
•Caseϕ= (a/\e}a⊔io\slash.=b) is similar to the above one.
•Caseϕ= (C(a)⊲⊳ p) : Since I |=A,CI(aI)⊲⊳ p. SinceI ∼ΦI′, we have aI∼ΦaI′. By
Theorem 2.6, it follows that CI′(aI′) =CI(aI)⊲⊳ p. Hence, I′|=ϕ.
•Caseϕ= (R(a,b)✄p), with✄∈ {≥,>}: Without loss of generality, we assume that either
p >0 or✄is>. SinceI |=A,RI(aI,bI)✄p. By [7, Lemma 9], there exists y′∈∆I′such that
Z(bI,y′) holds and RI′(aI′,y′)✄p. Consider C={b}. SinceZ(bI,y′) holds, by Theorem 2.6,
CI′(y′) =CI(bI) = 1. Thus, y′=bI′andI′|=ϕ.
•Caseϕ= (R(a,b)✁p), with✁∈ {≤,<}: For a contradiction, suppose I′/\e}a⊔io\slash|=ϕ. Thus,
RI′(aI′,bI′)✄p, where✄is/\e}a⊔io\slash✁. Similarly to the above case, we can derive that I |= (R(a,b)✄p),
which contradicts I |=ϕ. /squaresolid
3 Minimizing Finite Fuzzy Interpretations: Logical Proper ties
In [9, Section 6] together with coauthors we provided result s on how to minimize a fuzzy interpretation
w.r.t. certain logical criteria expressed in FDLs extended with involutive negation under the G¨ odel
semantics. The minimization is done by taking the quotient f uzzy interpretation w.r.t. the equivalence
relation that is the largest crisp Φ-auto-bisimulation. Ap art from that deﬁnition, the main results
of [9, Section 6] provide logical properties of such minimiz ed fuzzy interpretations. In this section,
we generalize those results for the FDLs fALCΦwith△ ∈ Φ over an arbitrary algebra of fuzzy
9I
u:1
v:0.5 w:0.50.7 0.9
0.8
0.8
0.6I/∼Φ
{u}:1
{v,w}:0.50.9
0.8
Figure 3: An illustration for Example 3.2.
truth values. Deﬁnition 3.1, Lemma 3.3, Corollary 3.4, as we ll as the assertion 2a of Theorem 3.6
and the assertion 1 of Corollary 3.7 given in this section are direct reformulations of the results
of [9, Section 6] and are not contributions of the current wor k. They depend only on the deﬁnition
of crisp bisimulations, but not on the considered FDLs. On th e other hand, Corollary 3.5, the
assertions 1 and 2b of Theorem 3.6 and the assertion 2 of Corol lary 3.7 depend on the considered
FDLs, which diﬀer from the FDLs studied in [9] in two essential aspects: the Baaz projection operator
is used instead of involutive negation and an arbitrary alge bra of fuzzy truth values is used instead
of the G¨ odel structure. They are our contributions for this section.
Given a ﬁnite fuzzy interpretation I, by∼Φ,Iwe denote the binary relation on ∆Isuch that, for
x,x′∈∆I,x∼Φ,Ix′iﬀx∼Φx′. We call it the Φ -bisimilarity relation of I. By Proposition 2.4, it
is the largest Φ-auto-bisimulation of I. By Theorem 2.6, it is an equivalence relation on ∆I.
Deﬁnition 3.1 Given a ﬁnite fuzzy interpretation I, thequotient fuzzy interpretation I/∼ΦofI
w.r.t. the equivalence relation ∼Φ,Iis speciﬁed as follows:3
•∆I/∼Φ={[x]∼Φ,I|x∈∆I}, where [ x]∼Φ,Iis the equivalence class of xw.r.t.∼Φ,I,
•aI/∼Φ= [aI]∼Φ,Ifora∈I,
•AI/∼Φ([x]∼Φ,I) =AI(x) forA∈Candx∈∆I,
•rI/∼Φ([x]∼Φ,I,[y]∼Φ,I) = sup{rI(x,y′)|y′∈[y]∼Φ,I}forr∈Randx,y∈∆I. /squaresolid
Observe the following:
•For every A∈C,x∈∆Iandx′∈[x]∼Φ,I,AI(x) =AI(x′). This follows from Condition (12).
•For every r∈R,x,y∈∆Iandx′∈[x]∼Φ,I,
sup{rI(x,y′)|y′∈[y]∼Φ,I}= sup{rI(x′,y′)|y′∈[y]∼Φ,I}.
This follows from Conditions (13) and (14), when ∼Φ,Iis used as Z.
Therefore, Deﬁnition 3.1 is well speciﬁed.
Example 3.2 Let≤be the usual order on L= [0,1] and let C={A},R={r}andI={a}.
Reconsider the fuzzy interpretation Ispeciﬁed in Example 2.3. It is redisplayed in Figure 3. Let
{△} ⊆ Φ⊆ {△,◦,⊔r,∗,?,U,O}. It is straightforward to check that {/a\}bracke⊔le{⊔u,u/a\}bracke⊔ri}h⊔,/a\}bracke⊔le{⊔v,v/a\}bracke⊔ri}h⊔,/a\}bracke⊔le{⊔w,w/a\}bracke⊔ri}h⊔,/a\}bracke⊔le{⊔v,w/a\}bracke⊔ri}h⊔,
/a\}bracke⊔le{⊔w,v/a\}bracke⊔ri}h⊔}is the largest Φ-auto-bisimulation of I. Consider I/∼Φ. We have ∆I/∼Φ={{u},{v,w}},
aI/∼Φ={u},AI/∼Φ={{u}: 1,{v,w}: 0.5}andrI/∼Φ={/a\}bracke⊔le{⊔{u},{v,w}/a\}bracke⊔ri}h⊔: 0.9,/a\}bracke⊔le{⊔{v,w},{v,w}/a\}bracke⊔ri}h⊔: 0.8}.
The fuzzy interpretation I/∼Φis illustrated in Figure 3. It is isomorphic to the fuzzy inte rpretation
I′speciﬁed in Example 2.3 and illustrated in Figure 2. /squaresolid
3We write I/∼Φinstead of I/∼Φ,Ifor simplicity.
10Lemma 3.3 LetIbe a ﬁnite fuzzy interpretation and Z={/a\}bracke⊔le{⊔x,[x]∼Φ,I/a\}bracke⊔ri}h⊔ |x∈∆I}be a subset of
∆I×∆I/∼Φ. Then,Zis aΦ-bisimulation as well as a (Φ∪{U})-bisimulation between IandI/∼Φ.
Proof. We need to prove Conditions (12)–(14), Condition (15) when O∈Φ, and Conditions (16)
and (17) regardless of whether U∈Φ, forI′=I/∼Φ.
•Condition (12) directly follows from Deﬁnition 3.1.
•Consider Condition (13) and assume that Z(x,x′) holds and RI(x,y)>0. We have x′= [x]∼Φ,I.
Takey′= [y]∼Φ,I. By Deﬁnition 3.1, RI(x,y)≤RI/∼Φ([x]∼Φ,I,[y]∼Φ,I) =RI′(x′,y′). Clearly,
Z(y,y′) holds.
•Consider Condition (14) and assume that Z(x,x′) holds and RI′(x′,y′)>0. We have x′=
[x]∼Φ,I. SinceIis ﬁnite, by Deﬁnition 3.1, RI/∼Φ([x]∼Φ,I,y′) = max{RI(x,y)|y∈y′}. Hence,
there exists y∈y′⊆∆Isuch that RI/∼Φ([x]∼Φ,I,y′) =RI(x,y), which means RI′(x′,y′) =
RI(x,y). Clearly, Z(y,y′) holds.
•Consider Condition (15) for the case O∈Φ and assume that Z(x,x′) holds. We have x′=
[x]∼Φ,I. Ifx=aI, then by Deﬁnition 3.1, x′= [x]∼Φ,I= [aI]∼Φ,I=aI′. Conversely, if
x′=aI′, thenx∼Φ,IaIand, by Condition (15) with Z,x′andI′replaced by ∼Φ,I,aIandI,
respectively, we can derive that x=aI.
•Condition (16) holds because we can take x′= [x]∼Φ,I.
•Condition (17) holds because we can take any x∈x′. /squaresolid
Corollary 3.4 LetIbe a ﬁnite fuzzy interpretation and suppose I/\e}a⊔io\slash=∅. Then,IandI/∼Φare both
Φ-bisimilar and (Φ∪{U})-bisimilar.
This corollary immediately follows from Lemma 3.3.
Corollary 3.5 LetIbe a ﬁnite fuzzy interpretation, Ta fuzzy TBox and Aa fuzzy ABox in fALCΦ.
Then:
1.I |=TiﬀI/∼Φ|=T,
2. ifO∈ΦorAconsists of only fuzzy assertions of the form C(a)⊲⊳ p, thenI |=AiﬀI/∼Φ|=A.
Proof. Without loss of generality, assume that I/\e}a⊔io\slash=∅. By Corollary 3.4, IandI/∼Φare both
Φ-bisimilar and (Φ ∪{U})-bisimilar.
By Proposition 2.8, all fuzzy TBoxes in fALCΦare invariant under (Φ ∪{U})-bisimilarity between
ﬁnite fuzzy interpretations. Hence, I |=TiﬀI/∼Φ|=T.
For the second assertion, suppose that O∈Φ orAconsists of only fuzzy assertions of the form
C(a)⊲⊳ p. By Proposition 2.10, Ais invariant under Φ-bisimilarity between ﬁnite fuzzy inte rpreta-
tions. Hence, I |=AiﬀI/∼Φ|=A. /squaresolid
The minimality in the following theorem is deﬁned using the o rder in which fuzzy interpretations
are compared w.r.t. the sizes of their domains.
Theorem 3.6 LetIbe a ﬁnite fuzzy interpretation.
1. If (1⇒x) =xand (y/varoplusz= 0iﬀy=z= 0), for all x,y,z∈L, thenI/∼Φis a minimal fuzzy
interpretation that validates the same set of fuzzy TBox axio ms infALCΦasI.
2. IfI/\e}a⊔io\slash=∅and either U∈ΦorIis connected w.r.t. Φ, then:
(a)I/∼Φis a minimal fuzzy interpretation Φ-bisimilar to I,
11(b)I/∼Φis a minimal fuzzy interpretation that validates the same se t of fuzzy assertions of
the form C(a)⊲⊳ pinfALCΦasI.
The premises of the ﬁrst assertion hold, e.g., when L= [0,1],/varotimesis a t-norm, ⇒is its residuum
and/varoplusis the corresponding s-norm.
Proof. Without loss of generality, assume that I/\e}a⊔io\slash=∅. By Corollaries 3.4 and 3.5, I/∼Φvalidates the
same set of fuzzy TBox axioms in fALCΦasI, is Φ-bisimilar to I, and validates the same set of
fuzzy assertions of the form C(a)⊲⊳ pinfALCΦasI. We only need to justify its minimality.
SinceIis ﬁnite, I/∼Φis also ﬁnite. Let ∆I/∼Φ={v1,...,vn}, wherev1,...,vnare pairwise
distinct and vi= [xi]∼Φ,Iwithxi∈∆I, for 1≤i≤n. By Lemma 3.3, xi∼Φvifor all 1≤i≤n. Let
iandjbe arbitrary indices such that 1 ≤i,j≤nandi/\e}a⊔io\slash=j. We have xi/\e}a⊔io\slash∼Φxj. Sincexi∼Φviand
xj∼Φvj, by Theorem 2.6, it follows that vi/\e}a⊔io\slash≡Φvj. Therefore, there exists a concept Ci,joffALCΦ
such that CI/∼Φ
i,j (vi)/\e}a⊔io\slash=CI/∼Φ
i,j (vj). LetDi,j=△(Ci,j→CI/∼Φ
i,j (vi)) ifCI/∼Φ
i,j (vi)< CI/∼Φ
i,j (vj), and
Di,j=△(CI/∼Φ
i,j (vi)→Ci,j) otherwise (i.e., when CI/∼Φ
i,j (vi)> CI/∼Φ
i,j (vj)). By (6) and (7), we have
DI/∼Φ
i,j(vi) = 1 and DI/∼Φ
i,j(vj) = 0. Let Di=Di,1⊓...⊓Di,i−1⊓Di,i+1⊓...⊓Di,n. By Proposition 2.1,
DI/∼Φ
i(vi) = 1 and DI/∼Φ
i(vj) = 0. Let E=D1⊔...⊔DnandEi=D1⊔...⊔Di−1⊔Di+1⊔...⊔Dn.
Consider the ﬁrst assertion and assume that (1 ⇒x) =xandy/varoplusz= 0 iﬀy=z= 0, for all
x,y,z∈L. The fuzzy interpretation I/∼Φvalidates the fuzzy TBox axiom (1 ⊑E)>0 but does
not validate (1 ⊑Ei)>0 for any 1 ≤i≤n. Any other fuzzy interpretation with such properties
must have at least nelements in the domain. That is, I/∼Φis a minimal fuzzy interpretation that
validates the same set of fuzzy TBox axioms in fALCΦasI.
Consider the second assertion of the theorem and suppose tha t eitherU∈Φ orIis connected
w.r.t. Φ. Let Z={/a\}bracke⊔le{⊔x,[x]∼Φ,I/a\}bracke⊔ri}h⊔ |x∈∆I}. By Lemma 3.3, Zis a Φ-bisimulation between IandI/∼Φ.
•Consider the assertion 2a of the theorem and let I′be a ﬁnite fuzzy interpretation Φ-bisimilar
toI. There exists a Φ-bisimulation Z′between I′andIsuch that Z′(aI′,aI) holds for all
a∈I. LetZ′′=Z′◦Z. By Proposition 2.4, Z′′is a Φ-bisimulation between I′andI/∼Φ.
Furthermore,
Z′′(aI′,aI/∼Φ) holds for all a∈I. (18)
–Consider the case where Iis connected w.r.t. Φ. Thus, I/∼Φis also connected w.r.t. Φ.
By Condition (14) with I,I′andZreplaced by I′,I/∼ΦandZ′′, respectively, it follows
from (18) that, for every 1 ≤i≤n, there exists ui∈∆I′such that Z′′(ui,vi) holds.
–Consider the case where U∈Φ. Since I/\e}a⊔io\slash=∅, by (18) and Condition (17) with I,I′andZ
replaced by I′,I/∼ΦandZ′′, respectively, for every 1 ≤i≤n, there exists ui∈∆I′such
thatZ′′(ui,vi) holds.
Thus,ui∼Φvifor all 1 ≤i≤n. By Theorem 2.6, it follows that ui≡Φvifor all 1 ≤i≤n.
Sincevi/\e}a⊔io\slash≡Φvjfor anyi/\e}a⊔io\slash=j, it follows that ui/\e}a⊔io\slash≡Φujfor anyi/\e}a⊔io\slash=j. Therefore the cardinality
of ∆I′is greater than or equal to n.
•Consider the assertion 2b of the theorem and let I′be a ﬁnite fuzzy interpretation that validates
the same set of fuzzy assertions of the form C(a)⊲⊳ pinfALCΦasI. Thus,aI′≡ΦaIfor all
a∈I. By Corollary 2.7, I′andIare Φ-bisimilar. By the assertion 2a proved above, it follow s
that the cardinality of ∆I′is greater than or equal to n. /squaresolid
Given a fuzzy interpretation I, we say that an individual x∈∆Iis Φ-reachable (from a named
individual) if there exist a∈I,x0,...,x n∈∆Iand basic roles R1,...,R nw.r.t. Φ such that x0=aI,
xn=xandRI
i(xi−1,xi)>0 for all 1 ≤i≤n.
Corollary 3.7 Suppose U /∈ΦandI/\e}a⊔io\slash=∅. LetIbe a ﬁnite fuzzy interpretation and I′the fuzzy in-
terpretation obtained from Iby deleting from the domain all Φ-unreachable individuals and restricting
the interpretation function accordingly. Then:
121.I′/∼Φis a minimal fuzzy interpretation Φ-bisimilar to I,
2.I′/∼Φis a minimal fuzzy interpretation that validates the same se t of fuzzy assertions of the
formC(a)⊲⊳ pinfALCΦasI.
This corollary follows from Theorem 3.6, Propositions 2.4 a nd 2.10 and the observations that I′
is connected w.r.t. Φ and Φ-bisimilar to Iby using the Φ-bisimulation {/a\}bracke⊔le{⊔x,x/a\}bracke⊔ri}h⊔ |x∈∆I′}.
4 An Eﬃcient Algorithm for Minimizing Finite Fuzzy Interpre ta-
tions
In the preprint [23], together with a coauthor we gave an eﬃci ent algorithm for computing the
partition that corresponds to the largest crisp bisimulati on of a given ﬁnite fuzzy labeled graph. Its
complexity is of order O((mlogl+n) logn), where n,mandlare the number of vertices, the number
of nonzero edges and the number of diﬀerent fuzzy degrees of ed ges of the input graph, respectively.
In this section, we ﬁrst recall related notions deﬁned in [23 ] and that algorithm, and then exploit it
to create a new algorithm with the same complexity order that , given a ﬁnite fuzzy interpretation I
and{△} ⊆ Φ⊆ {△ ,◦,⊔r,∗, ?,I,U,O}, computes the quotient fuzzy interpretation I/∼Φ, which
has been proved to be minimal and equivalent to Iw.r.t. certain criteria.
Afuzzy labeled graph , called a fuzzy graph for short, is a structure G=/a\}bracke⊔le{⊔V,E,Label,ΣV,ΣE/a\}bracke⊔ri}h⊔,
whereVis a set of vertices, Σ V(respectively, Σ E) is a set of vertex labels (respectively, edge labels),
E:V×ΣE×V→Lis a fuzzy set of labeled edges, and Label :V→(ΣV→L) is a function that
labels vertices. It is ﬁnite if all the sets V, ΣVand Σ Eare ﬁnite. If E(x,r,y )>0 (respectively,
E(x,r,y ) = 0), then /a\}bracke⊔le{⊔x,y/a\}bracke⊔ri}h⊔is called a nonzero r-edge (respectively, zero-r-edge ) ofG. Forx∈V,
r∈ΣEandY⊆V, we denote E(x,r,Y ) ={E(x,r,y )|y∈Y}.
In this section, let G=/a\}bracke⊔le{⊔V,E,Label,ΣV,ΣE/a\}bracke⊔ri}h⊔be a ﬁnite fuzzy graph. We will use P,QandSto
denote partitions of V,XandYto denote non-empty subsets of V, andrto denote an edge label
from Σ E. ByP0we denote the partition of Vthat corresponds to the equivalence relation
{/a\}bracke⊔le{⊔x,x′/a\}bracke⊔ri}h⊔ ∈V2|Label (x) =Label (x′) and sup E(x,r,V ) = supE(x′,r,V ) for allr∈ΣE}.
We say that Pis areﬁnement ofQif, for every X∈P, there exists Y∈Qsuch that X⊆Y.
In that case we also say that Qiscoarser thanP. By this deﬁnition, every partition is a reﬁnement
of itself. Given a reﬁnement Pof a partition Q, a block Y∈Qiscompound w.r.t.Pif there exists
X∈Psuch that X⊂Y.
A non-empty binary relation Z⊆V×Vis called a crisp auto-bisimulation ofG, or abisimulation
ofGfor short, if the following conditions hold (for all possibl e values of the free variables):
Z(x,x′)→Label (x) =Label (x′) (19)
[Z(x,x′)∧(E(x,r,y )>0)]→ ∃y′[(E(x,r,y )≤E(x′,r,y′))∧Z(y,y′)] (20)
[Z(x,x′)∧(E(x′,r,y′)>0)]→ ∃y[(E(x′,r,y′)≤E(x,r,y ))∧Z(y,y′)], (21)
where→and∧denote the usual crisp logical connectives.
The largest bisimulation of a fuzzy graph exists and is an equ ivalence relation. By the partition
that corresponds to the largest bisimulation of Gwe mean the partition of Vthat corresponds to the
equivalence relation being the largest bisimulation of G.
We say that Xisstable w.r.t. /a\}bracke⊔le{⊔Y,r/a\}bracke⊔ri}h⊔(andG) if supE(x,r,Y ) = supE(x′,r,Y ) for allx,x′∈X.
A partition Pisstable w.r.t. /a\}bracke⊔le{⊔Y,r/a\}bracke⊔ri}h⊔(andG) if every X∈Pis stable w.r.t. /a\}bracke⊔le{⊔Y,r/a\}bracke⊔ri}h⊔. Next,Pisstable
(w.r.t.G) if it is stable w.r.t. /a\}bracke⊔le{⊔Y,r/a\}bracke⊔ri}h⊔for allY∈Pandr∈ΣE.
For∅ ⊂Y′⊂Y, bysplit(X,/a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔) we denote the coarsest partition of Xsuch that each of
its blocks is stable w.r.t. both /a\}bracke⊔le{⊔Y′,r/a\}bracke⊔ri}h⊔and/a\}bracke⊔le{⊔Y\Y′,r/a\}bracke⊔ri}h⊔. We also deﬁne
split(P,/a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔) =/uniondisplay
{split(X,/a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔)|X∈P}.
13Algorithm 1: ComputeBisimulation
Input: a ﬁnite fuzzy graph G=/a\}bracke⊔le{⊔V,E,Label,ΣV,ΣE/a\}bracke⊔ri}h⊔.
Output: the partition that corresponds to the largest bisimulation ofG.
1letP=P0andQr={V}for allr∈ΣE;
2ifP={V}then return P;
3whilethere exists r∈ΣEsuch that Qr/\e}a⊔io\slash=Pdo
4 choose such an rand a compound block Y∈Qrwith respect to P;
5 choose a block Y′∈Psuch that Y′⊂Yand|Y′| ≤ |Y|/2;
6P:=split(P,/a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔);
7 reﬁneQrby replacing YwithY′andY\Y′;
8returnP;
Clearly, this set is the coarsest reﬁnement of Pthat is stable w.r.t. both /a\}bracke⊔le{⊔Y′,r/a\}bracke⊔ri}h⊔and/a\}bracke⊔le{⊔Y\Y′,r/a\}bracke⊔ri}h⊔.
Algorithm 1 (on page 14) was designed by us and a coauthor [23] for computing the partition that
corresponds to the largest bisimulation of G. It exploits the fact that Pis the partition that corre-
sponds to the largest bisimulation of Giﬀ it is the coarsest stable reﬁnement of P0[23, Lemma 3.2].
The algorithm is explained in [23] as follows. It starts with initializing PtoP0. IfPis a singleton, then
Pis stable and the algorithm returns it as the result. Otherwi se, the algorithm repeatedly reﬁnes P
to make it stable as follows. The algorithm maintains a parti tionQrofV, for each r∈ΣE, such that
Pis a reﬁnement of QrandPis stable with respect to /a\}bracke⊔le{⊔Y,r/a\}bracke⊔ri}h⊔for allY∈Qr. If at some stage Qr=P
for allr∈ΣE, thenPis stable and the algorithm terminates with that P. The variables Qrare
initialized to {V}for allr∈ΣE. In each iteration of the main loop, the algorithm chooses Qr/\e}a⊔io\slash=P,
Y∈QrandY′∈Psuch that Y′⊂Yand|Y′| ≤ |Y|/2, then it replaces Pwithsplit(P,/a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔)
and replaces YinQrwithY′andY\Y′. In this way, the chosen Qris reﬁned (and Pmay also be
reﬁned), so the loop will terminate after a number of iterati ons. The condition |Y′| ≤ |Y|/2 reﬂects
the idea “process the smaller half (or a smaller component) ﬁ rst” from Hopcroft’s algorithm [25] and
Paige and Tarjan’s algorithm [26]. Without using it the algo rithm still terminates with a correct
result, but the condition is essential for reducing the comp lexity order.
Example 4.1 LetG=/a\}bracke⊔le{⊔V,E,Label,ΣV,ΣE/a\}bracke⊔ri}h⊔be the fuzzy graph identical to the fuzzy interpreta-
tionsIspeciﬁed in Example 4.1, with Σ V={A}, ΣE={r},V={u,v,w},Label (u)(A) = 1,
Label (v)(A) =Label (w)(A) = 0.5 andE={/a\}bracke⊔le{⊔u,r,v/a\}bracke⊔ri}h⊔: 0.7,/a\}bracke⊔le{⊔u,r,w/a\}bracke⊔ri}h⊔: 0.9,/a\}bracke⊔le{⊔v,r,v/a\}bracke⊔ri}h⊔: 0.6,/a\}bracke⊔le{⊔v,r,w/a\}bracke⊔ri}h⊔: 0.8,
/a\}bracke⊔le{⊔w,r,v/a\}bracke⊔ri}h⊔:0.8}. To increase the readability, we recall the illustration be low.
u:1
v:0.5 w:0.50.7 0.9
0.8
0.8
0.6
Let’s consider the run of Algorithm 1 for G. After executing the statement 1, we have P=
{{u},{v,w}}andQr={{u,v,w}}. Consider the ﬁrst iteration of the “while” loop. After exe-
cuting the statement 5 we have Y={u,v,w}andY′={u}. The statement 6 does not make any
change to P, but the statement 7 makes Qrequal to P. Thus, the loop terminates after the ﬁrst
iteration and the partition returned by the algorithm is {{u},{v,w}}. /squaresolid
It is proved in [23] that Algorithm 1 is correct. The work [23] also speciﬁes how to implement
Algorithm 1 so that its complexity is of the mentioned order O((mlogl+n) logn). The implemen-
tation uses data structures that allow us to get sup E(x,r,Y ) in time O(logl) for every x,y∈Vand
14Algorithm 2: MinimizeFuzzyInterpretation
Input: a ﬁnite fuzzy interpretation Iand{△} ⊆ Φ⊆ {△,◦,⊔r,∗,?,I,U,O}.
Output: the quotient fuzzy interpretation I/∼Φ.
1construct a fuzzy graph G=/a\}bracke⊔le{⊔V,E,Label,ΣV,ΣE/a\}bracke⊔ri}h⊔such that:
ifO /∈Φ, then Σ V=C, else Σ V=C∪I;
ifI /∈Φ, then Σ E=R, else Σ E=R∪{r−|r∈R};
V= ∆I;
E(x,R,y ) =RI(x,y), forx,y∈VandR∈ΣE;
Label (x)(A) =AI(x), forx∈VandA∈C;
Label (x)(a) = (ifx=aIthen 1 else 0), for x∈Vanda∈I, whenO∈Φ;
2execute Algorithm 1 for Gand letPbe the obtained partition;
3letJbe the fuzzy interpretation speciﬁed as follows:
∆J=P;
fora∈I,aJis the block of Pthat contains aI;
forA∈CandX∈P,AJ(X) =AI(x) for an arbitrary x∈X;
forr∈Randx,y∈∆IwithrI(x,y)>0,rJ(X,Y ) = supE(x,r,Y ),
whereXandYare the blocks of Pthat contain xandy, respectively;
forr∈RandX,Y∈P, ifrJ(X,Y ) is not set above, then rJ(X,Y ) = 0;
4returnJ;
r∈ΣEwithE(x,r,y )>0, where Yis the block of the resulting partition Pwithy∈Yandlis the
number of diﬀerent fuzzy degrees of edges of the input graph.4The data structures also allow us to
get in constant time the block of the resulting partition tha t contains a given vertex x∈V, as well
as an element of a given block of the resulting partition.
Algorithm 2 (on page 15) is our algorithm for computing the qu otient fuzzy interpretation I/∼Φ
for a given ﬁnite fuzzy interpretation Iand{△} ⊆ Φ⊆ {△,◦,⊔r,∗,?,I,U,O}. It ﬁrst constructs
a fuzzy graph G=/a\}bracke⊔le{⊔V,E,Label,ΣV,ΣE/a\}bracke⊔ri}h⊔that corresponds to Iw.r.t. Φ. In particular, V= ∆I,
each concept name Ais used as a vertex label, with Label (x)(A) =AI(x) forx∈V, and ifO∈Φ,
then each individual name ais also used as a vertex label, with Label (x)(a) set to the truth value
ofx=aIforx∈V. Similarly, each role name ris used as an edge label, with E(x,r,y ) =rI(x,y)
forx,y∈V, and ifI∈Φ, then the inverse r−of each role name ris also used as an edge label,
withE(x,r−,y) =rI(y,x) forx,y∈V. Next, Algorithm 1 is executed to compute the partition
Pthat corresponds to the largest bisimulation of G. Then, the fuzzy interpretation Jintended
for the result I/∼Φis speciﬁed as follows: each block of Pforms (identiﬁes) an element of ∆J; for
each individual name a,aJis the block of Pthat contains aI; for each concept name Aand each
X∈∆J,AJ(X) =AI(x) for an arbitrary x∈X; for each role name rand each X,Y∈∆J,
rJ(X,Y ) = supE(x,r,Y ) for an arbitrary x∈X. SincePis stable, the mentioned values AI(x)
and supE(x,r,Y ) are independent from the choice of x∈X, and the ﬁrst element of the block X
can be taken as x. For the representation of J, we keep only nonzero instances of roles. This means
that, for X,Y∈∆J, the information about rJ(X,Y ) (in the form of a pair /a\}bracke⊔le{⊔Y,rJ(X,Y )/a\}bracke⊔ri}h⊔in a list
involved with X, called the adjacency list of X) is kept only if rJ(X,Y )>0.
Example 4.2 Let≤be the usual order on L= [0,1] and let C=∅,R={r}andI={o}. Consider
the fuzzy interpretation Ithat is illustrated in the top left corner of Figure 4 and spec iﬁed by:
∆I={a,b,c,d,e,a 2,b2,b3},oI=a,rI={/a\}bracke⊔le{⊔a,b/a\}bracke⊔ri}h⊔: 0.8,/a\}bracke⊔le{⊔a2,b2/a\}bracke⊔ri}h⊔: 0.8,/a\}bracke⊔le{⊔a2,b3/a\}bracke⊔ri}h⊔: 0.8,/a\}bracke⊔le{⊔b,c/a\}bracke⊔ri}h⊔: 0.7,/a\}bracke⊔le{⊔b,d/a\}bracke⊔ri}h⊔: 1,
/a\}bracke⊔le{⊔c,e/a\}bracke⊔ri}h⊔: 1,/a\}bracke⊔le{⊔d,e/a\}bracke⊔ri}h⊔: 1,/a\}bracke⊔le{⊔e,d/a\}bracke⊔ri}h⊔: 1,/a\}bracke⊔le{⊔b2,b2/a\}bracke⊔ri}h⊔: 1,/a\}bracke⊔le{⊔b3,b3/a\}bracke⊔ri}h⊔: 1}. Consider the following cases of Φ in comparison
with Ψ = {△,◦,⊔r,∗,?,U}.
•Case Φ = Ψ: Consider the execution of Algorithm 2 for Iand Φ. Let G=/a\}bracke⊔le{⊔V,E,Label , ΣV,
ΣE/a\}bracke⊔ri}h⊔be the fuzzy graph constructed by the statement 1. We have Σ V=∅, ΣE={r},V= ∆I
4Ifeis the edge /angbracketleftx,r,y/angbracketrightwithE(x,r,y)>0, then sup E(x,r,Y) =e.blockEdge .maxKey().
15a(o) I
b c
d e0.8
0.7
1 1
1
1a2
b2 b30.8 0.8
1 1{a}(o)J3
{b} { c}
{d} { e}0.8
0.7
1 1
1
1{a2}
{b2,b3}0.8
1
J1 {a,a2}(o)
{b,b2,b3,c,d,e}0.8
1J2{a}(o){a2}
{b,b2,b3,c,d,e}0.8 0.8
1
Figure 4: An illustration for Example 4.2.
andE={/a\}bracke⊔le{⊔x,r,y/a\}bracke⊔ri}h⊔:p|x,y∈V,p=rI(x,y)}. Executing Algorithm 1 for G, the initialization
setsP=P0={{a,a2},{b,b2,b3,c,d,e}}andQr={V}. The ﬁrst iteration of the “while” loop
of Algorithm 1 uses Y=VandY′={a,a2}. It does not change P, but reﬁnes QrtoP. Thus,
the loop terminates after the ﬁrst iteration. Let’s denote u={a,a2}andv={b,b2,b3,c,d,e}.
Then, the partition returned by Algorithm 1 is P={u,v}. The fuzzy interpretation Jspeciﬁed
by the statement 3 of Algorithm 2 has ∆J=P,oJ=uandrJ={/a\}bracke⊔le{⊔u,v/a\}bracke⊔ri}h⊔: 0.8,/a\}bracke⊔le{⊔v,v/a\}bracke⊔ri}h⊔: 1}. It is
illustrated as J1in the bottom left corner of Figure 4.
•Case Φ = Ψ ∪{O}: Consider the execution of Algorithm 2 for Iand Φ. Let G=/a\}bracke⊔le{⊔V,E,Label ,
ΣV, ΣE/a\}bracke⊔ri}h⊔be the fuzzy graph constructed by the statement 1. We have Σ V={o}, ΣE={r},V=
∆I,E={/a\}bracke⊔le{⊔x,r,y/a\}bracke⊔ri}h⊔:p|x,y∈V,p=rI(x,y)},Label (a)(o) = 1 and Label (x)(o) = 0 for x∈V\
{a}. Executing Algorithm 1 for G, the initialization sets P=P0={{a},{a2},{b,b2,b3,c,d,e}}
andQr={V}. The ﬁrst iteration of the “while” loop of Algorithm 1 uses Y=Vand either
{a}or{a2}forY′. Assume that it uses Y′={a}. Thus, it does not change P, but reﬁnes
Qrto{{a},{a2,b,b2,b3,c,d,e}}. The second iteration of the “while” loop of Algorithm 1
usesY={a2,b,b2,b3,c,d,e}andY′={a2}. It does not change P, but reﬁnes QrtoP.
Thus, the loop terminates after the second iteration. Let’s denoteu={a},u2={a2}and
v={b,b2,b3,c,d,e}. Then, the partition returned by Algorithm 1 is P={u,u2,v}. The
fuzzy interpretation Jspeciﬁed by the statement 3 of Algorithm 2 has ∆J=P,oJ=uand
rJ={/a\}bracke⊔le{⊔u,v/a\}bracke⊔ri}h⊔: 0.8,/a\}bracke⊔le{⊔u2,v/a\}bracke⊔ri}h⊔: 0.8,/a\}bracke⊔le{⊔v,v/a\}bracke⊔ri}h⊔: 1}. It is illustrated as J2in the bottom right corner of
Figure 4.
•Case Φ = Ψ ∪{I}: Consider the execution of Algorithm 2 for Iand Φ. Let G=/a\}bracke⊔le{⊔V,E,Label ,
ΣV, ΣE/a\}bracke⊔ri}h⊔be the fuzzy graph constructed by the statement 1. We have Σ V=∅, ΣE={r,r−},
V= ∆IandE={/a\}bracke⊔le{⊔x,r,y/a\}bracke⊔ri}h⊔:p,/a\}bracke⊔le{⊔y,r−,x/a\}bracke⊔ri}h⊔:p|x,y∈V,p=rI(x,y)}. Executing Algorithm 1
forG, the initialization sets P=P0={{a,a2},{b},{c},{b2,b3,d,e}}andQr=Qr−={V}.
One of the possible runs of the “while” loop of Algorithm 1 has subsequent iterations with the
eﬀects described below.
1.Pdoes not change by splitting w.r.t. /a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔, whereY=VandY′={a,a2}.Qris
reﬁned to {{a,a2},{b,b2,b3,c,d,e}}.
162.Pis split w.r.t. /a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔, whereY={b,b2,b3,c,d,e}andY′={b}, into{{a},{a2},
{b},{b2,b3,d,e},{c}}.Qris reﬁned to {{a,a2},{b},{b2,b3,c,d,e}}.
3.Pdoes not change by splitting w.r.t. /a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔, whereY={a,a2}andY′={a}.Qris
reﬁned to {{a},{a2},{b},{b2,b3,c,d,e}}.
4.Pdoes not change by splitting w.r.t. /a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔, whereY={b2,b3,c,d,e}andY′={c}.
Qris reﬁned to {{a},{a2},{b},{b2,b3,d,e},{c}}.
5.Pis split w.r.t. /a\}bracke⊔le{⊔Y′,Y,r−/a\}bracke⊔ri}h⊔, whereY=VandY′={a2}, into{{a},{a2},{b},{b2,b3},
{c},{d,e}}.Qr−is reﬁned to {{a,b,b2,b3,c,d,e},{a2}}.
6.Pis split w.r.t. /a\}bracke⊔le{⊔Y′,Y,r−/a\}bracke⊔ri}h⊔, whereY={a,b,b2,b3,c,d,e}andY′={b}, into{{a},{a2},
{b},{b2,b3},{c},{d},{e}}.Qr−is reﬁned to {{a,b2,b3,c,d,e},{a2},{b}}.
7.Pdoes not change by splitting w.r.t. /a\}bracke⊔le{⊔Y′,Y,r−/a\}bracke⊔ri}h⊔, where Y={a,b2,b3,c,d,e}and
Y′={c}.Qr−is reﬁned to {{a,b2,b3,d,e},{a2},{b},{c}}.
8.Pdoes not change by splitting w.r.t. /a\}bracke⊔le{⊔Y′,Y,r−/a\}bracke⊔ri}h⊔, whereY={a,b2,b3,d,e}andY′={a}.
Qr−is reﬁned to {{a},{a2},{b},{b2,b3,d,e},{c}}.
9.Pdoes not change by splitting w.r.t. /a\}bracke⊔le{⊔Y′,Y,r−/a\}bracke⊔ri}h⊔, whereY={b2,b3,d,e}andY′={e}.
Qr−is reﬁned to {{a},{a2},{b},{b2,b3,d},{c},{e}}.
10.Pdoes not change by splitting w.r.t. /a\}bracke⊔le{⊔Y′,Y,r−/a\}bracke⊔ri}h⊔, whereY={b2,b3,d}andY′={d}.Qr−
is reﬁned to {{a},{a2},{b},{b2,b3},{c},{d},{e}}.
11.Pdoes not change by splitting w.r.t. /a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔, whereY={b2,b3,d,e}andY′={e}.Qr
is reﬁned to {{a},{a2},{b},{c},{b2,b3,d},{e}}.
12.Pdoes not change by splitting w.r.t. /a\}bracke⊔le{⊔Y′,Y,r/a\}bracke⊔ri}h⊔, whereY={b2,b3,d}andY′={d}.Qr
is reﬁned to {{a},{a2},{b},{c},{b2,b3},{d},{e}}.
After the 12th iteration, we have Qr=Qr−=Pand the “while” loop of Algorithm 1 terminates.
The partition returned by Algorithm 1 is P={{a},{a2},{b},{c},{b2,b3},{d},{e}}. The
fuzzy interpretation Jspeciﬁed by the statement 3 of Algorithm 2 has ∆J=P,oJ={a}and
rJ={/a\}bracke⊔le{⊔{x},{y}/a\}bracke⊔ri}h⊔:p|x,y∈ {a,b,c,d,e }, p=rI(x,y)>0}∪
{/a\}bracke⊔le{⊔{a2},{b2,b3}/a\}bracke⊔ri}h⊔:0.8,/a\}bracke⊔le{⊔{b2,b3},{b2,b3}/a\}bracke⊔ri}h⊔:1}.
It is illustrated as J3in the top right corner of Figure 4.
•Case Φ = Ψ ∪{I,O}: Executing Algorithm 2 for Iand Φ results in the same partition as in
the above case, which is illustrated as J3in the top right corner of Figure 4. /squaresolid
Lemma 4.3 LetG=/a\}bracke⊔le{⊔V,E,Label,ΣV,ΣE/a\}bracke⊔ri}h⊔be the fuzzy graph constructed during the run of Algo-
rithm 2 for a ﬁnite fuzzy interpretation Iand{△} ⊆ Φ⊆ {△,◦,⊔r,∗,?,I,U,O}. Then, a reﬂexive
binary relation Z⊆∆I×∆Iis aΦ-auto-bisimulation of Iiﬀ it is a bisimulation of G.
Proof. LetZbe a reﬂexive binary relation on ∆I.
Consider the left-to-right implication and suppose Zis a Φ-auto-bisimulation of I. We prove
thatZis a bisimulation of Gby showing that it satisﬁes Conditions (19)-(21). Since Zis a Φ-auto-
bisimulation of I, it satisﬁes Conditions (12)-(14) and (15) (when O∈Φ) forI′=I. Condition (20)
directly follows from Condition (13) for I′=I, while Condition (21) directly follows from Con-
dition (14) for I′=I. Consider Condition (19) and suppose Z(x,x′) holds. By Conditions (12)
and (15) for I′=I,AI(x) =AI(x′) for allA∈C, and when O∈Φ,x=aIiﬀx′=aI, for alla∈I.
Therefore, Label (x) =Label (x′) and Condition (19) holds.
Consider the right-to-left implication and suppose Zis a bisimulation of G. We prove that Z
is a Φ-auto-bisimulation of Iby showing that it satisﬁes Conditions (12)-(17) for I′=I(in the
corresponding cases speciﬁed by Φ). Since Zis a bisimulation of G, it satisﬁes Conditions (19)-(21)
for allr∈ΣE, which can be s−fors∈RwhenI∈Φ. Conditions (12)-(14) for I′=Idirectly follow
from Conditions (19)-(21), respectively. When O∈Φ, Condition (15) for I′=Idirectly follows
from Condition (19). When U∈Φ, Conditions (16) and (17) for I′=Idirectly follow from the
assumption that Zis reﬂexive. /squaresolid
17Theorem 4.4 Algorithm 2 is correct and can be implemented to run in time of the order O((mlogl+
n) logn)when zero-instances of roles are not explicitly stored, whe ren=|∆I|,mis number of nonzero
instances of atomic roles of Iandlis the number of diﬀerent fuzzy values used for instances of a tomic
roles ofI. The sizes of C,RandIare assumed to be constants.
Proof. LetIbe a ﬁnite fuzzy interpretation and let {△} ⊆ Φ⊆ {△,◦,⊔r,∗,?,I,U,O}. LetJbe
the fuzzy interpretation returned by Algorithm 2 for Iand Φ. We prove that J=I/∼Φ. LetGbe
the fuzzy graph and Pthe partition (of ∆I) constructed during the run of the algorithm. By the
construction of JandI/∼Φ, it is suﬃcient to prove that Pis the partition that corresponds to the
equivalence relation ∼Φ,I. Since Algorithm 1 is correct [23, Theorem 3.6], Pis the partition that
corresponds to the largest bisimulation of G. By Lemma 4.3, it follows that Pis the partition that
corresponds to the equivalence relation ∼Φ,I(the largest Φ-auto-bisimulation of I).
Letn,mandlbe the values mentioned in the theorem. Clearly, nis the number of vertices of
G,mor 2mis the number of nonzero edges of G(depending on whether I∈Φ), andlis the number
of diﬀerent fuzzy degrees of edges of G. Furthermore, the construction of GfromIcan be done in
timeO(m+n), when zero-edges of Gare not explicitly stored. Consider the step 2 of Algorithm 2 .
As mentioned before, the work [23] has speciﬁed how to implem ent Algorithm 1 so that its time
complexity is O((mlogl+n) logn). The implementation uses data structures that allow us to g et
supE(x,r,Y ) in time O(logl) for every x,y∈Vandr∈ΣEwithE(x,r,y )>0, where Yis the
block of Pwithy∈Y. The data structures also allow us to get in constant time the block of the
resulting partition that contains a given vertex x∈V, as well as an element of a given block of the
resulting partition. These facts imply that, when zero-ins tances of roles are not explicitly stored,
the construction of JfromPand the related data structures can be done in time O(n+mlogl).
Summing up, Algorithm 2 can be implemented to run in time O((mlogl+n) logn). /squaresolid
We have implemented Algorithm 2 in Python [29] appropriatel y so that its complexity order is
O((mlogl+n) logn). We have tested the correctness of the obtained program by i mplementing also a
naive algorithm for the same problem and comparing their run s on many randomly generated inputs.
Examples like 4.1 and 4.2 can be checked by using the program [ 29] with the options “verbose” and
“with compound names”.
5 Conclusions
The results of [9, Section 6] on minimizing ﬁnite fuzzy inter pretations in FDLs are formulated and
proved only for the case of using the G¨ odel family of fuzzy op erators on the unit interval [0 ,1] together
with involutive negation. Besides, that work does not provi de any algorithm for the minimization
task. In this article, we have generalized the results of [9, Section 6] for a much larger class of FDLs.
Namely, the considered FDLs use the Baaz projection operato r instead of involutive negation and
their semantics is speciﬁed by using an abstract algebra of f uzzy truth values, which can be any
linear and complete residuated lattice. Furthermore, we ha ve provided an eﬃcient algorithm with
a complexity of O((mlogl+n) logn) for computing the quotient fuzzy interpretation I/∼Φfrom a
given ﬁnite fuzzy interpretation I, wherenis the size of the domain of I,mis number of nonzero
instances of atomic roles of Iandlis the number of diﬀerent fuzzy values used for instances of at omic
roles ofI. We have proved that I/∼Φis minimal among the ones that preserve fuzzy TBoxes and
ABoxes under certain conditions.
The considered class of FDLs is rich, as it allows various rol e constructors as well as nominals (a
concept constructor). However, to increase the simplicity , we did not consider (qualiﬁed/unqualiﬁed)
number restrictions nor the concept constructor ∃r.Self . In [30, 31], Divroodi and Nguyen studied
the problem of minimizing crisp interpretations in descrip tion logics also for the cases with number re-
strictions and/or the concept constructor ∃r.Self . They introduced the notion of a QS-interpretation
that allows “multi-edges” and keeps information about “sel f-edges” (where “edge” is understood as
an instance of a role). Minimizing fuzzy interpretations in FDLs with number restrictions and/or
the concept constructor ∃r.Self can be done by using fuzzy QS-interpretations and exploitin g the
results of the recent works [7,23].
18We have focused on minimizing a ﬁnite fuzzy interpretation i n a FDL with the Baaz projection
operator by using the largest crisp auto-bisimulation. The problem of minimizing a ﬁnite fuzzy
interpretation in a FDL without the Baaz projection operato r (and involutive negation) by using the
greatest fuzzy auto-bisimulation, as in [27] but for a more g eneral semantics (e.g., using any linear
and complex residuated lattice), is more challenging and re mains as future work.
References
[1] F. Baader, D. Calvanese, D. McGuinness, D. Nardi, P. Pate l-Schneider (Eds.), Description Logic
Handbook, Cambridge University Press, 2002.
[2] F. Bobillo, M. Cerami, F. Esteva, ´A. Garc´ ıa-Cerda˜ na, R. Pe˜ naloza, U. Straccia, Fuzzy desc ription
logics, in: Handbook of Mathematical Fuzzy Logic, Volume 3, Vol. 58 of Studies in Logic,
Mathematical Logic and Foundations, College Publications , 2015, pp. 1105–1181.
[3] S. Borgwardt, R. Pe˜ naloza, Fuzzy description logics - A survey, in: Proceedings of SUM’2017,
Vol. 10564 of LNCS, Springer, 2017, pp. 31–45.
[4] P. H´ ajek, Metamathematics of Fuzzy Logics, Kluwer Acad emic Publishers, 1998.
[5] R. Bˇ elohl´ avek, Fuzzy Relational Systems: Foundation s and Principles, Kluwer, 2002.
[6] L. Nguyen, Logical characterizations of fuzzy bisimula tions in fuzzy modal logics over residuated
lattices, Fuzzy Sets Syst. 431 (2022) 70–93. doi:10.1016/j.fss.2021.08.009 .
[7] L. Nguyen, N. Nguyen, Logical characterizations of cris p bisimulations in fuzzy description logics,
IEEE Transactions on Fuzzy Systems (2022). doi:10.1109/TFUZZ.2022.3198853 .
[8] T.-F. Fan, Fuzzy bisimulation for G¨ odel modal logic, IE EE Trans. Fuzzy Systems 23 (6) (2015)
2387–2396. doi:10.1109/TFUZZ.2015.2426724 .
[9] L. Nguyen, Q.-T. Ha, N. Nguyen, T. Nguyen, T.-L. Tran, Bis imulation and bisimilarity for
fuzzy description logics under the G¨ odel semantics, Fuzzy Sets and Systems 388 (2020) 146–178.
doi:10.1016/j.fss.2019.08.004 .
[10] Y. Cao, G. Chen, E. Kerre, Bisimulations for fuzzy-tran sition systems, IEEE Trans. Fuzzy
Systems 19 (3) (2011) 540–552. doi:10.1109/TFUZZ.2011.2117431 .
[11] Y. Cao, S. Sun, H. Wang, G. Chen, A behavioral distance fo r fuzzy-transition systems, IEEE
Trans. Fuzzy Systems 21 (4) (2013) 735–747. doi:10.1109/TFUZZ.2012.2230177 .
[12] H. Wu, Y. Chen, T. Bu, Y. Deng, Algorithmic and logical ch aracterizations of bisimula-
tions for non-deterministic fuzzy transition systems, Fuz zy Sets Syst. 333 (2018) 106–123.
doi:10.1016/j.fss.2017.02.008 .
[13] H. Wu, Y. Deng, Logical characterizations of simulatio n and bisimulation for fuzzy transition
systems, Fuzzy Sets Syst. 301 (2016) 19–36. doi:10.1016/j.fss.2015.09.012 .
[14] N. Damljanovi´ c, M. ´Ciri´ c, J. Ignjatovi´ c, Bisimulations for weighted automa ta
over an additively idempotent semiring, Theor. Comput. Sci . 534 (2014) 86–100.
doi:10.1016/j.tcs.2014.02.032 .
[15] P. Eleftheriou, C. Koutras, C. Nomikos, Notions of bisi mulation for Heyting-valued modal lan-
guages, J. Log. Comput. 22 (2) (2012) 213–235. doi:10.1093/logcom/exq005 .
[16] M. Marti, G. Metcalfe, Expressivity in chain-based mod al logics, Arch. Math. Log. 57 (3-4)
(2018) 361–380. doi:10.1007/s00153-017-0573-4 .
19[17] D. Diaconescu, Modal equivalence and bisimilarity in m any-valued modal logics with
many-valued accessibility relations, Fundam. Informatic ae 173 (2-3) (2020) 177–189.
doi:10.3233/FI-2020-1920 .
[18] M. ´Ciri´ c, J. Ignjatovi´ c, N. Damljanovi´ c, M. Ba˘ sic, Bisimu lations for fuzzy automata, Fuzzy Sets
and Systems 186 (1) (2012) 100–139. doi:10.1016/j.fss.2011.07.003 .
[19] S. Stanimirovi´ c, I. Mici´ c, M. ´Ciri´ c, Approximate bisimulations for fuzzy automata
over complete Heyting algebras, IEEE Trans. Fuzzy Syst. 30 ( 2) (2022) 437–447.
doi:10.1109/TFUZZ.2020.3039968 .
[20] L. Nguyen, Fuzzy simulations and bisimulations betwee n fuzzy automata,
International Journal of Approximate Reasoning 155 (2023) 113–131.
doi:https://doi.org/10.1016/j.ijar.2023.02.002 .
[21] T. Fan, C. Liau, Logical characterizations of regular e quivalence in weighted social networks,
Artif. Intell. 214 (2014) 66–88. doi:10.1016/j.artint.2014.05.007 .
[22] J. Ignjatovi´ c, M. ´Ciri´ c, I. Stankovi´ c, Bisimulations in fuzzy social netwo rk analysis, in: Proceed-
ings of IFSA-EUSFLAT-15, Atlantis Press, 2015.
[23] L. Nguyen, D. Tran, Computing crisp bisimulations for f uzzy structures (2023).
URLhttps://arxiv.org/abs/2010.15671v3
[24] L. Nguyen, Computing the fuzzy partition correspondin g to the greatest fuzzy auto-bisimulation
of a fuzzy graph-based structure under the G¨ odel semantics , Information Sciences (2023).
doi:https://doi.org/10.1016/j.ins.2023.02.029 .
[25] J. Hopcroft, An nlognalgorithm for minimizing states in a ﬁnite automaton, Avail -
able atftp://reports.stanford.edu/pub/cstr/reports/cs/tr/7 1/190/CS-TR-71-190.pdf
(1971).
[26] R. Paige, R. Tarjan, Three partition reﬁnement algorit hms, SIAM J. Comput. 16 (6) (1987)
973–989. doi:10.1137/0216062 .
[27] L. Nguyen, N.-T. Nguyen, Minimizing interpretations i n fuzzy description logics under the G¨ odel
semantics by using fuzzy bisimulations, Journal of Intelli gent and Fuzzy Systems 37 (6) (2019)
7669–7678. doi:10.3233/JIFS-179371 .
[28] M. Baaz, Inﬁnite-valued G¨ odel logics with 0-1-projec tions and relativizations, in: G¨ odel’96:
Logical foundations of mathematics, computer science and p hysics—Kurt G¨ odel’s legacy, 1996,
pp. 23–33.
[29] L. Nguyen, An implementation in Python of the agorithm p rovided in the current paper, Avail-
able atwww.mimuw.edu.pl/ ~nguyen/Minimization2023 (2023).
[30] A. Divroodi, L. Nguyen, On bisimulations for descripti on logics, Information Sciences 295 (2015)
465–493. doi:10.1016/j.ins.2014.10.022 .
[31] A. Divroodi, Bisimulation equivalence in description logics and its applications, Ph.D. thesis,
University of Warsaw (2015).
20
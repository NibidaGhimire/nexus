Multilevel Optimization for Policy Design
with Agent-Based Epidemic Models
Jan-Hendrik Niemann1,2, Samuel Uram1, Sarah Wolf1, Nataša
Djurdjevac Conrad2, and Martin Weiser2
1Department of Mathematics and Computer Science, Freie Universität Berlin, Germany,
2Zuse Institute Berlin, Germany∗
March 22, 2023
Abstract
Epidemiological models can not only be used to forecast the course of a pandemic
like COVID-19, but also to propose and design non-pharmaceutical interventions such
as school and work closing. In general, the design of optimal policies leads to nonlinear
optimization problems that can be solved by numerical algorithms. Epidemiological
models come in diﬀerent complexities, ranging from systems of simple ordinary diﬀer-
ential equations (ODEs) to complex agent-based models (ABMs). The former allow a
fast and straightforward optimization, but are limited in accuracy, detail, and parame-
terization, while the latter can resolve spreading processes in detail, but are extremely
expensive to optimize. We consider policy optimization in a prototypical situation mod-
eled as both ODE and ABM, review numerical optimization approaches, and propose
a heterogeneous multilevel approach based on combining a ﬁne-resolution ABM and a
coarse ODE model. Numerical experiments, in particular with respect to convergence
speed, are given for illustrative examples.
Keywords: Agent-based models, multilevel optimization, epidemiological modeling, inter-
ventions, gradient approximation, transmission dynamics
1 Introduction
The global COVID-19 pandemic has highlighted as never before the need for mathematical
modeling to forecast infection spreading and assess consequences of various non-pharma-
ceutical interventions taken to counter it, such as closing of schools, social distancing rules,
∗This research has been funded by the Deutsche Forschungsgemeinschaft (DFG, German Research
Foundation) under Germany’s Excellence Strategy MATH +: The Berlin Mathematics Research
Center (EXC-2046/1, project ID: 390685689). Email: {niemann,natasa.conrad,weiser}@zib.de ,
sarah.wolf@fu-berlin.de ,usamuelsunadh@gmail.com
1arXiv:2304.02281v1  [math.OC]  5 Apr 2023or travel restrictions. Such intervention policies have diﬀerent direct costs as well as so-
cial or economic impacts, and diﬀer in their eﬀectiveness with respect to various objectives
(e.g., minimizing the expected number of deaths or the number of new infections in a given
time window), and in their negative side eﬀects. While policy making must take into account
many quantitatively poorly understood aspects, and therefore cannot rely solely on mathe-
matical models of infection spreading, model-based policy optimization can be an important
decision support tool. For example, optimization may reveal policies or combinations of poli-
cies that were not obvious from common sense alone, or that may avoid assumed trade-oﬀs
or produce unexpected beneﬁts.
Models used to study epidemics range from deterministic compartmental models based
on deterministic ordinary diﬀerential equations (ODEs) such as the well-known Kermack–
McKendrick SIR model (considering population fractions of susceptible, infected, and re-
covered individuals) to spatially resolved stochastic agent-based models (ABMs) [28, 8, 44],
which describe the dynamics of infection as arising from a large number of discrete interac-
tions between agents in complex interaction networks embedded in a common environment.
Each modeling approach has its own trade-oﬀs. On the one hand, ODE models are com-
putationally inexpensive and easy to understand and analyze, so a variety of mathematical
methods and tools are readily available for their analysis. On the other hand, as aggregate
models, ODE models provide coarse rather than detailed forecasts of infection dynamics that
do not allow for uncertainty estimates of the forecasts, and policy measures are diﬃcult to
translate into changes in model parameterization. Models based on stochastic diﬀerential
equations (SDEs) can serve as a means to quantify uncertainty. However, these are often
still compartmental models with the same drawbacks.
In contrast, complex ABMs allow for the representation of locally adapted policies and the
analysis of their consequences in terms of spatial (e.g., neighborhood, city, region), compart-
mental (e.g., children, students, workers, retirees), or sectoral (e.g., medical, educational,
retail) dimensions, and thus provide much more detailed forecasts, including uncertainty
quantiﬁcation. This makes ABMs attractive for policy design, especially for locally adapted
policy design in complex environments. The main drawback is that it is computationally
expensive to simulate realistic ABMs. Also, the models are inherently stochastic, requir-
ing the simulation of several to many samples to obtain a reliable answer. Perhaps most
importantly, mathematical formulation (and hence analysis) is still the exception (for some
examples see [24, 23, 4, 14, 22, 33]) rather than the rule. While ABMs are widely used in
various scientiﬁc disciplines such as sociology, economics, or geography, the focus is mostly
on computer simulations.
Optimal control is about ﬁnding a control (usually a time-dependent function) for a dy-
namic system and a given time window in such a way that an objective function is optimized,
often under given constraints. Numerical methods for solving complex and nonlinear opti-
mization problems are well established. Optimal control and stability analysis of determin-
istic ODE epidemic models to support policy design has a long tradition [46], but is still an
active area of research, e.g., for tuberculosis [31] or HIV [15]. Most recently, optimal control
has been used to study COVID-19. In [35], robust optimal control and polynomial chaos ex-
pansion are used to ﬁnd optimal vaccination strategies under uncertainty about compliance
with social distancing and testing strategies. In further works, e.g., [45, 9, 27], the eﬀects
of non-pharmaceutical interventions such as diﬀerent lockdown scenarios are studied using
optimal control.
2In contrast, mathematical optimization of ABMs faces signiﬁcant challenges. Basic con-
cepts necessary for optimization, such as derivatives, are not well-deﬁned due to the discrete
nature of the steps and decisions made by agents in most ABMs. A recent idea to circum-
vent this is internal smoothing [2]. Adjoint concepts for discontinuous option pricing [16]
may also provide a direction for future research. However, most of the approaches used so
far avoid the consideration of derivatives in the ABM altogether, for example, by applying
genetic algorithms directly to an ABM [40, 29], or by relegating the optimization problem
to another model that approximates the ABM. This may be a reduced ABM, derived for ex-
ample by coarsening the spatial resolution of the underlying one [36], so that again heuristic
algorithms are applied for optimization. In most cases, an “equation-based” or “system-level”
model is used, for which optimization methods exist. The choice of such a coarser model is
based on what is already available for similar phenomena, including diﬀerence or ordinary
and partial diﬀerential equations. Alternatively, a simple functional form is chosen and pa-
rameters are ﬁtted to the ABM output (see [1] and references therein). The optimal controls
for the reduced model are then lifted back to the ABM.
In this paper, we apply a multilevel approach that approximates the original ABM at
the ﬁne level with a deterministic ODE at the coarse level, using the well-known epidemic
SIR model. Multilevel methods exploit the computationally cheaper optimization of coarser
models to reduce the optimization eﬀort in a more detailed “ﬁne” model. However, the
perspective taken is not that of ﬁnding optimal interventions for infectious diseases such as
COVID-19, but that of numerical optimization, since ﬁnding optimal interventions is the
subject of a political and societal debate that we do not intend to enter in this article.
To minimize a given (prototypical and exemplary) objective, we consider derivatives and
descent along them. In the (stochastic) ABM, where exact derivatives cannot be obtained
due to its inherent discontinuity, we work with the numerical approximation of derivatives
by ﬁnite diﬀerences. In the multilevel approach presented here, the combination of coarse
and ﬁne levels is iterative: a coarse-level ODE model is used to generate trial steps for
descent directions in the ﬁne-level ABM. This step must then pass an acceptance test to
ensure descent of the objective with high conﬁdence.
The remainder is organized as follows. In Section 2, we introduce three epidemiologi-
cal models and investigate their quantitative relation. In particular, we present a classical
SIR-type ODE and an associated homogeneous ABM represented as a Markov jump process
as stylized examples. As a third model, we brieﬂy present a detailed, community-speciﬁc,
and geographically referenced ABM developed by [18] as a less stylized, more realistic ex-
ample. Policy optimization is considered in Section 3, where we consider policy deﬁnition
and realization, as well as the formulation of an optimization objective, in a simple, pro-
totypical situation. We brieﬂy review state-of-the-art optimization algorithms suitable for
ODEs and ABMs and discuss their computational complexity. We then introduce a hetero-
geneous multilevel optimization approach that combines a ﬁne-resolution ABM and a coarse
ODE approximation to speed up convergence. These algorithms, and in particular their
relative computational eﬃciency, are investigated in Section 4 using numerical examples of
the transmission dynamics of SARS-CoV-2. Open questions and future work are discussed
in Section 5.
32 Epidemiological Models
This section introduces terms and notation for the type of epidemiological models we use,
namely models based on deterministic ODEs in Section 2.1 and stochastic ABMs in Sec-
tion 2.2. The relation and agreement of these types of models are discussed in Section 2.3.
2.1 Deterministic ODE Models
Mathematical models based on ODEs are commonly used to simulate epidemic spread on a
macro-scale of a fully mixed population, e.g., a city or a country. These models separate the
populationintodiﬀerentcompartments(thereforeoftenreferredtoas compartmental models )
and count only the proportions of individuals belonging to each compartment. Compart-
ments can, for example, be based on the infection status or demographics or both. In this
paper, we consider so-called SIR models [8] and divide the population into two age groups:
adults and children (compartments denoted by subscript aorc, respectively). Separation
into age groups has proven beneﬁcial due to diﬀerent infection rates, see, e.g., [41] for the
case of SARS-CoV-2. Individuals who have not yet been infected belong to the susceptible
compartment S, for2f a;cg. With a certain infection rate r!, for;2f a;cg, indi-
viduals from Scan get infected by an individual from Iand move to the compartment I.
An infection is caused by interactions of the type S+I!I+I, which are referred to as
second-order interactions since two individuals are involved. This notation stems from the
chemical context, where it indicates a transition of two particles of the given types to two
particles with the new types on the right-hand side of the arrow. Individuals in the group
Irecover with rate rand move to the compartment Rdue to the ﬁrst-order reaction
I!R. The system of ODEs describing this model is given by
_Sa= Sa(ra!aIa+rc!aIc)
_Sc= Sc(rc!cIc+ra!cIa)
_Ia=Sa(ra!aIa+rc!aIc) raIa
_Ic=Sc(rc!cIc+ra!cIa) rcIc
_Ra=raIa
_Rc=rcIc(1)
Obviously, the sum of the groups S+I+Ris conserved over time, such that Ris
often omitted because of redundancy. If it is needed, it can be computed from SandIas
R=N S I, whereNdenotes the fraction of individuals of the respective age group.
In the following, when we do not distinguish between age groups, we will refer to the number
of susceptible S=Sa+Sc, infectedI=Ia+Ic, and recovered individuals R=Ra+Rc,
such thatS+I+R= 1. A numerical solution of ODE (1) with parameter choices given
in Table 1 is shown in Figure 1 (a). For an introduction to mathematical methods for this
kind of models we refer the reader to [13].
Remark 2.1. For the case of a varying population of size N, the infection rate r!is
given byr!= r=N, where rdenotes the (population-independent) infection rate. In
the literature, r!is occasionally also referred to as transmission rate ortransmission
4(a)
0 10 20 30 40 50
Time [days]0.00.20.40.60.8Fraction of agentsSa
Ia
RaSc
Ic
Rc (b)
0 10 20 30 40 50
Time [days]0.00.20.40.60.8Fraction of agents
Figure 1: (a) Numerical solution of the ODE (1) and (b) aggregated trajectory of a single
simulation of GERDA given identical initial conditions divided into adults (solid lines) and
children (dashed lines) for parameters given in Table 1.
coeﬃcient , while ris referred to as infection rate . For the sake of better readability, we
continue to use the term infection rate for both rates whenever it is clear from the context.
Remark 2.2. There exist a variety of diﬀerent deterministic models based on diﬀerential
equations for describing epidemic spreading, for example, ODEs extending the basic SIR
model by additional compartments such as hospitalization [30, 47] or models based on delay
diﬀerential equations [12].
2.2 Stochastic Agent-Based Models
The numbers of susceptible, infected, and recovered individuals and their evolution over time
can also be computed using an ABM. Often, individuals in the population not only hold an
infection status, but are explicitly represented and characterized by, for example, their daily
activities in certain locations, as well as other relevant characteristics such as their age or
sex.
In simulations, infection events occur with given probabilities whenever an infected and
(at least one) susceptible agent meet. The so-called contact network arises from the places
where agents meet, such as work places, schools, or public transport. For each simulation,
at each time step t, the numbers S(t),I(t), andR(t)are obtained by counting agents in
each infection status. Given the probabilistic nature of infection events (and possibly further
elements of the ABM, e.g., agents randomly departing from their activity schedules), these
numbersarerandomvariables. Usually, manysimulationsareperformedinordertocompute
statisticalmoments, inparticularmeanandstandarddeviation, whicharetakenintoaccount
when forecasting the spread of an infection.
52.2.1 Example 1 – The Georeferenced Demographic Agent-Based Model
As our ﬁrst example, we consider the individualized GEoReferenced Demographic Agent-
based model (GERDA) for the transmission of SARS-CoV-2 and the disease dynamics of
COVID-19[18]. Thismodelusesdetailedlocationdata(includinghomes,workplaces,schools
and public places) and a synthetic population of agents with realistic daily schedules to sim-
ulate contacts between people in the given locations and the resulting probabilistic infection
events. From this point of view, it can be called a heterogeneous ABM. The disease pro-
gression of infected agents is modeled in detail with rates and times, e.g., for transition to
diagnosed, hospitalized, ICU, and recovered or deceased states, depending on the agents’
age group. The model has been used with data for several towns (e.g., Tepoztlán (Mexico),
Zikhron Ya’akov (Israel), Heinsberg (Germany)). In this work we use the data calibrated for
the German municipality of Gangelt, where a well-studied COVID-19 outbreak occurred in
early 2020. Based on this model, diﬀerent types of pharmaceutical and non-pharmaceutical
interventions have been analyzed, such as diﬀerent scenarios of lockdown and reopening, or
diﬀerent vaccination rates and strategies in a population. For further details see [18].
We simplify the observation of the disease dynamics computed by GERDA to the basic
SIR structure described in Section 2.1 by aggregating the diﬀerent subclasses of infected
agents, assuming that all infected agents recover. Additionally, agents are grouped by age,
i.e., children (age 0 to 18 years) and adults (19 +). Figure 1 (b) shows such an aggregated
trajectory in terms of numbers of susceptible, infected and recovered adults and children for
a single simulation of GERDA.
2.2.2 Example 2 – A Homogeneous ABM
In addition to GERDA, we present another ABM for modeling the spread of an infectious
disease, but at a coarser level of detail. We assume two homogeneous groups of agents, i.e.,
adults and children, and that the contact network is complete, i.e., any agent can be infected
by any other agent at any time. Thus, we call it a homogeneous ABM and use the shorthand
notation H/ABM to refer to it. Homogeneity allows tracking only the number of agents per
compartment, making the evaluation several orders of magnitude faster than for GERDA.
We represent the H/ABM as a Markov jump process that builds on the identical ﬁrst- and
second-order reactions as the ODE model (1). We wish to make explicit the character of
an ABM and therefore write the infection rates r!, for;2f a;cg, as in Remark 2.1 for
a population of size N. Additionally, since in GERDA agents can lose their immunity, we
introduce a third transition R!S, i.e., recovered individuals from group Rmove to the
compartment Sand become susceptible again. We assume that this happens independently
of the age group with rate r, for2]0;1[. Thus, the H/ABM represents an SIRS model.
Note that in this work the ODE model and the H/ABM share the same parameters.
TheH/ABMcanbesimulatedusingGillespie’sstochasticsimulationalgorithm[17], which
constructs exact realizations of the H/ABM in continuous time. Furthermore, assuming
convergence of r!forN!1, it can be be shown that the N-scaled Markov jump process
given by the H/ABM converges to a frequency-based process, which can be given either by
an ordinary or by a stochastic diﬀerential equation, see [26] for details. For example, setting
= 0, the H/ABM converges for N!1to an ODE of type (1).
62.3 Model Agreement
The ODE model and ABM are supposed to describe the same phenomenon, though at
diﬀerent levels of detail. While many parameters in an ABM can, at least in principle, be
measured or observed, e.g., frequencies of people meeting, the six ODE parameters r!
andr(again, for;2f a;cg) are not directly related to measurable physical quantities. A
reasonable parameterization is necessarily based on the agreement of ODE predictions with
reality, where “reality” can refer to real-world data of infected people or to predictions of a
diﬀerent model taken as a reference (in this work GERDA). We are interested in the latter
case and therefore ﬁt the parameters r!andrin the sense of L2similarity between the
ODE and GERDA results for a ﬁxed number of agents N0.
A least-squares approach leads to the optimization problem
min
r!;rZT
0
V 1
I;a(IODE
a IABM
a)2+V 1
I;c(IODE
c IABM
c)2
dt; (2)
whereIABM
is computed as a mean of a set of GERDA simulations due to its stochastic
nature, and the sample variances VI;of the respective infected age groups serve as weighting
factors for the ﬁt. In Figure 2 we show the result, obtained by using a nonlinear least-squares
solver (an in-built MATLAB solver) for problem (2). The GERDA data is estimated from
1000independentsimulationsgiventheparametersinTable1. ForcomparabilityofGERDA
and the H/ABM, we parameterize the H/ABM using the parameters obtained from (2).
Remark 2.3. The attentive reader will notice in Figure 2 the undulating trajectories of the
GERDA model for susceptible and infected agents, especially in the adult age group. This is
due to the fact that the timescale in the GERDA model is measured in hours with diﬀerent
amounts of infection events during night and day.
3 Policy Optimization
When using epidemiological models not only to forecast the spread of infections but also
to design favorable policies, three elements are needed in addition to a reliable model: 1) a
design space of policies aﬀecting the model dynamics, e.g., by changing parameters, 2) an
objective to be minimized, and 3) optimization algorithms. In the following, we will discuss
these aspects on the example of the models introduced above.
3.1 Policies
It is well known that the spread of infectious diseases can be inﬂuenced not only by phar-
maceutical interventions, such as medical treatment or vaccination, but also by non-phar-
maceutical interventions, such as social distancing or lockdowns to reduce physical contact
between individuals. For our discussion, we consider two time-dependent controls us;uw:
[0;T]![0;1]as examples representing policies for closing schools and workplaces, or home
oﬃce for those jobs where work can be done at home, respectively. More precisely, the value
ofus(t)refers to the fraction of children not going to school at time t, i.e.,us(t) = 0stands
for the policy that no schools are closed and us(t) = 1indicates that all schools are closed.
Analogously, the control uw(t)is the fraction of workplaces closed. We denote u= [us;uw]>
70 10 20 30 40 50
Time [days]0.00.10.20.30.40.50.60.70.8Fraction of agentsSa
Ia
RaSc
Ic
RcFigure 2: Solution of the ﬁtted ODE system (1) (black, solid lines) compared to expected
aggregatedtrajectoryofGERDA(meanover1000independentsimulations,samplestandard
deviation indicated as shaded areas) for parameters given in Table 1.
to refer to the combination of controls. The controls are assumed to be piece-wise constant
on a time grid 0 =t0< ::: < t m=Tto reﬂect the fact that policy changes take some
time to be implemented and that continuously changing policies would be complicated to
communicate and follow. Consequently, the admissible set of policies
U=fu: [0;T]![0;1]2j8i2f1;:::;mg:uj]ti 1;ti[= constg;
of dimension nu= 2mis isomorphic to [0;1]2mRnusuch that any control can be rep-
resented by nuscalar control values. Policies aﬀect the simulated spread of infection by
changing the ODE (H/ABM) parameters or, in case of GERDA, by changing the agents’
schedules (e.g., staying home instead of going to school). Thus, identical policies must be
implemented in diﬀerent ways depending on the model used.
3.1.1 Implementing Policies in the ODE
In the ODE model presented in Section 2.1, infection rates are determined by the properties
of the virus and the population. Additionally, we assume that they depend on the controls
usanduw. For the infection rates within one age group r!, for2f a;cg, we assume
quadratic dependence on the fraction of individuals going to work or school since an infection
8event can only occur when two individuals meet, i.e.,
ra!a=raa(1 uw)2; r c!c=rcc(1 us)2:
Here, the parameters raaandrccare independent of the policies. Quadratic dependency is
widely used for general second-order interactions [3], but is obviously highly simplistic for
epidemiological modeling as, for example, it neglects possible infections outside schools and
workplaces. Similarly, we assume the infection rates between age groups r!to depend on
the controls as well, though with impact reduced by a factor of one half since many such
infections will only happen within families, i.e.,
rc!a=ra!c=rac(1 uw=2)(1 us=2):
The recovery rates rare assumed to be independent of the controls.
Remark 3.1. Due to its strong similarity in terms of modeling, the policies for the H/ABM
are implemented analogously to the ODE model. For example, using ~r:=rN0, the
propensity function that characterizes the infection of an adult by an adult including the
policy is given by
~ra!a=~raa
N(1 uw)2;
whereNis the population size used for the H/ABM. The propensity functions ~rc!cand
~rc!a= ~ra!cfollow equivalently.
3.1.2 Implementing Policies in GERDA
In contrast to the ODE model, in the GERDA model, where contacts between agents are
explicitly modeled, policies do not aﬀect the probability of infection, but the frequency of
those contacts. Temporary closure of the workplace or order to home oﬃce is done by
randomly selecting adults in a ratio equal to the control value uw(t)and changing their
schedules so that they stay home. Analogously, at the rate us(t), children stay at home
instead of going to school. We assume that an adult from the same household must also be
home to supervise children under the age of 13. With a high share of school closures but
open workplaces, this leads to an implicit home oﬃce obligation for the supervisors involved
(i.e., usually the parents). This results in a signiﬁcant reduction in interactions between
agents, which in turn leads to fewer infections and a slower spread of the disease. However,
this eﬀect is not reﬂected by the controls, since they represent only government-mandated
interventions.
Remark 3.2. As a reminder, the intervention polices discussed in this paper are for illustra-
tive purposes only. Further or other policies could be taken, for example, a ban on visiting
public places, wearing a mask, contact tracing and isolation, or vaccination.
3.2 Objective
For the models and policies introduced in the previous sections, we deﬁne a simple example
of an objective that nevertheless raises interesting optimization questions. We assume that
the general aim of pandemic policy management is to reduce the number Iof infected people
9while minimizing the economic and social costs of the interventions. Let us break down this
assumption.
The ﬁrst aim is reﬂected in the health objective
ch(u) =ZT
t=0(I(t)=N+ exp(10(I(t) Imax)=N)) dt;
where the number of infected agents I(t)depends implicitly on the control uvia the ABM or
ODE model, respectively. The ﬁrst term represents the negative impact of infections, which
grows approximately linearly with the number of infected people, assuming, for example,
that the number of people requiring medical treatment is a ﬁxed fraction of the infected.
The second term represents the social impact, which grows drastically as soon as the health
care system’s capacity to treat those infected who become seriously ill is exhausted. This is
formulated in terms of a threshold of infected Imax, again assuming that a ﬁxed fraction of
infected agents become seriously ill.
Both controls incur direct costs, interpreted as economic impact cwfor home oﬃce and
social impact csfor school closure. The economic impact becomes +1when the home oﬃce
rate approaches an upper bound umax
w<1, reﬂecting the fact that not all jobs can be stopped
or done from home. Thus, we deﬁne the second aim cwby
cw(u) =ZT
0 log(umax
w uw(t)) dt:
We further assume that the social impact of school closures depends quadratically on the
fraction of schools closed, i.e.,
cs(u) =ZT
0us(t)2dt:
Combining these three aims with weights as;aw>0, we deﬁne our objective
J(u):=ch(u) +ascs(u) +awcw(u): (3)
Note that a common factor for all three terms does not aﬀect the minimizer, so that we can
normalize the weight for chto one.
If the number of infected is computed using any time stepping method for solving the SIR
initial value problem (1), see, e.g., [13], the objective (3) can be evaluated directly using
numerical integration. We refer to this as JODE. For an ABM involving randomness, the
number of infected is a stochastic process. Each simulation yields a diﬀerent trajectory for
the number of infected. In this case, we refer to (3) as JABM, and deﬁne the actual objective
as the expectation
E[JABM(u)]: (4)
To evaluate (4), a simple Monte Carlo integration
E[JABM(u)]1
nnX
i=1JABM(u)i=:En[JABM(u)] (5)
based on samples JABM(u)ican be used. The accuracy of this unbiased estimate is given in
terms of its standard deviation as
(En[JABM(u)])n(JABM(u))pn(6)
10with the sample variance
2
n(JABM(u))1
n 1nX
i=1(JABM(u)i En[JABM(u)])2:
The well-known slow convergence of Monte Carlo methods of order O(n 1=2)requires a large
number of expensive ABM simulations for a faithful evaluation of the objective. Variance
reduction methods such as control variates, quasi-Monte Carlo sequences, or hierarchical
Monte Carlo methods are popular approaches to reduce the numerator in (6) and thus the
sampling error [6]. Unfortunately, they are intrusive by requiring a joint probability space
underlying the diﬀerent random variables used, and thus a carefully designed use of random
number generators for sampling. This is diﬃcult to achieve for complex ABMs designed
from scratch, and virtually impossible for existing ABMs. Thus, in general, one has to rely
on the simple Monte Carlo evaluation (5).
3.3 ODE Optimization
For an ODE model, the policy optimization problem
min
u2UJODE(u)
is a classical optimal control problem, for which several well-studied numerical solution
approaches exist, see, e.g., [5, 37]. We will brieﬂy sketch a simple and straightforward, but
for sure not the most eﬃcient, minimization algorithm, which is summarized in Algorithm 1.
We apply a projected gradient method with line search, where Uis the set of admissible
controls, i.e., in our case the unit cube in Rnu. The idea is to go downhill in direction of
the steepest descent, which is the negative gradient direction  rJODE(u)in line 3. This
may, however, point to the outside of Uifuk2@U. Outward pointing components, for
i2f1;:::;n ug, are set to zero by the projection
PU(x;y)i=(
0;(yi= 0^xi<0)_(yi= 1^xi>0)
xi;otherwise
to the admissible set U. This search direction skis followed downhill for some step size ,
conceptually the largest step size that 1) satisﬁes a constant bound 0and admissibility
(uk):= maxfajuk+ask2Ugin line 4, and 2) satisﬁes the Armijo rule of suﬃcient
decrease,
JODE(uk+sk)JODE(uk) +c1rJODE(uk)sk (7)
in line 5. The latter ensures that at least a certain fraction c12]0;1[of the descent
promised by the ﬁrst-order Taylor approximation of the objective is realized. Algorithm 1
uses a simple backtracking line search in line 6, i.e., the step size for movement in the
given direction starts large and is decreased (here halved) until the observed decrease in the
objective function is considered suﬃcient. It therefore can select step sizes that can be up
to a factor of two smaller than conceptually desired. The most eﬃcient way to compute
the gradientrJODE(u)in line 3 is to solve the adjoint equations associated with the ODE
system (1) and JODE. Writing (1) compactly as
_y=f(y;u); y = [Sa;Sc;Ia;Ic]>;
11Algorithm 1: Basic steepest descent algorithm
1Inputu02U,0>0,c12]0;1[
2fork= 0;:::;K do
3computesk=PU( rJODE(uk);uk)
4= minf0;(uk)g
5whileArmijo condition (7)violated do
6==2
7uk+1=uk+sk
8Outputu?=uK
wherewemaysafelyneglecttherecoveredcompartments,theadjointequationistheterminal
value problem
 _=fy(y;u)>+JODE
y(y)>; (T) = 0;
where the simulated trajectory y, i.e., the numerically approximated ODE solution, enters
as data. Then, the gradient is given by
rJODE(u) =ZT
0fu(y;u)>dt:
The adjoint equation can be derived from the chain rule using a trivial but clever rearrange-
ment of terms. For more details we refer to [20].
Algorithm 1 converges, usually at a linear rate, to a stationary point, usually a local
minimizer, under rather mild regularity assumptions of JODE. Its asymptotic convergence
rate deteriorates with growing condition number of the Hessian of JODE, i.e., the ratio
of largest and smallest eigenvalue. Preconditioning, i.e., replacing rJODEbyB 1rJODE
with some approximation B(JODE)00of the Hessian, can improve the convergence speed
signiﬁcantly,butconstructingeﬀectiveandcomputationallycheappreconditioners B 1isnot
trivial. For details and more sophisticated algorithms we refer to the nonlinear optimization
literature [34].
3.4 ABM Optimization
Solving the policy optimization problem for realistic epidemiological ABMs such as the ones
presented in Section 2.2, i.e.,
min
u2UE[JABM(u)];
is much more diﬃcult than solving it for the ODE model due to three major challenges:
(i) ABMs are much more complex, involving thousands of agents, and they often simulate
the agents’ activities with a higher time resolution, whereas ODE models often only
represent the average population and thus omit the vast majority of details that ABMs
provide (see Remark 2.3). As a result, computing a single ABM trajectory is orders
of magnitude more expensive.
(ii) ABMs are inherently stochastic, such that many independent simulations are required
to approximate the objective with suﬃcient accuracy.
12(iii) ABMs are inherently discontinuous due to the discrete decisions of the agents. Thus,
single ABM trajectories are not diﬀerentiable with respect to the control u, so that
eﬃcient adjoint gradient computation, as possible for ODE models, is not directly
available.
Therefore, for the time being, ABM optimization must rely on objective samples alone,
inferring descent directions from noisy objective evaluations. We brieﬂy discuss gradient
approximation in Section 3.4.1, followed by inexact gradient methods in Section 3.4.2.
3.4.1 Gradient Approximation
For approximating directional derivatives of the objective E[JABM(u)]in direction v2Rnu,
we use ﬁnite diﬀerences
rE[JABM(u)]>v(2h) 1 
En[JABM(u+hv)] En[JABM(u hv)]
=1
2hnnX
i=1 
JABM(u+hv)i JABM(u hv)i
=:rhEn[JABM(u)]>v (8)
for smallh > 0. Using the unit vectors v=ekfork= 1;:::;n u, the complete gradient
vector can be obtained. The approximation error is of order
krE[JABM(u)] rhEn[JABM(u)]k=O
h2+
hpn
;
which requires a careful choice of sample size nof ordern=O(h 6)to balance discretization
and sampling error. Using
rh;kJABM(u)i:= (2h) 1(JABM(u+hek)i JABM(u hek)i);
whereekis thek-th unit vector, in the estimator
(Vn)kl=1
n 1nX
i=1 
rh;kJABM(u)i rhE[JABM(u)]k 
rh;lJABM(u)i rhE[JABM(u)]l
for the sample covariance Vn2Rnunu, the sample mean standard deviation
(rhJABM(u)) =p
kVnk=n;
provides an a posteriori error estimate for the gradient evaluation. Here, kkrefers to the
2-norm. A relative accuracy >0of the approximate gradient rhEn[JABM(u)], i.e.,
krE[JABM(u)] rhEn[JABM(u)]k<krhEn[JABM(u)]k; (9)
can be ensured with high probability if nis chosen such that 2krhEn[JABM(u)]k. If
applicable, variance reduction methods can be used to reduce the sample mean standard
deviationand thus the sampling error. For example, correlated sampling uses the same
random number generator seeds for evaluating JABM(u hv)iandJABM(u+hv)iin (8),
13which leads to the two values being increasingly correlated for h!0and therefore to an
expected error order of
krE[JABM(u)] rhEn[JABM(u)]k=O 
h2+ 1=pn
:
If this increased correlation actually is realized by the ABM, the required number nof
samples is reduced signiﬁcantly to O(h 4). Moreover, if the policy change vaﬀects only
policies after some time tv>0, the trajectories corresponding to u hvandu+hvcoincide
on[0;tv]and can be simulated just once using a checkpoint-restart ability of the ABM, if
present.
3.4.2 Inexact Gradient Descent
Unlike for the (deterministic) ODE optimization, the exact steepest descent direction is not
available when minimizing the stochastic ABM objective (4). Nevertheless, descent methods
stillconvergeasbeforeifsuﬃcientlocaldecreasecanbeachieved, i.e., ifthedescentcondition
g>s c0kgkkskholds for some c0>0, where we write g:=rE[JABM(u)]for the exact
gradient and s:= rhEn[JABM(u)] gfor the search direction.
A suﬃciently small relative error <1=2of the computed steepest descent direction, i.e.,
ks+gkksk, guaranteesthat sisadescentdirection, sinceby kgk=kg+s sk(1 )ksk
it holds that
g>s=g>( g+s+g) kgk(1 )ksk+kgkksk  (1 2)kgkksk:
In particular, choosing = 1=4in (9) yields c0= 1=2and thus guarantees at least half of
the local progress compared to exact steepest descent. Since  s>g(1 +)ksk2(using
Cauchy–Schwarz) yields
 (1 +)c1ksk2c1s>g;
the Armijo condition (7) is implied by
E[JABM(u+s)] E[JABM(u)] (1 +)c1ksk2:
When evaluating the objective with absolute sampling errors e2as in (6), we obtain
E[JABM(u+s)] E[JABM(u)]En[JABM(u+s)] En[JABM(u)] + 2e:
Choosingec1ksk2, the Armijo condition is satisﬁed with high conﬁdence if the accep-
tance test
En[JABM(u+s)] En[JABM(u)] (1 + 3)c1ksk2(10)
is passed for the trial step s.
Algorithm2convergessimilarlytotheexactgradientdescenttoastationarypoint, usually
a local minimizer. However, it is computationally expensive due to the large number of
samples required to compute approximate gradients (line 3) and for the line search (line 5).
Remark 3.3. An alternative is stochastic gradient descent, where instead of averaging gra-
dient samples as in (8) and then taking an inexact gradient step, the gradient averaging
can be done implicitly on the ﬂy, by taking suﬃciently small steps in the direction of a
single or an average of a few samples. This is known as ﬁnite diﬀerence based stochastic
14Algorithm 2: Basic inexact gradient descent algorithm
1Inputu02U,0>0,c12]0;1[
2fork= 0;:::;K do
3computesk=PU( rhEn[JABM(uk)];uk)with relative accuracy <1=2
4= minf0;(uk)g
5whileacceptance test (10)failsdo
6==2
7uk+1=uk+sk
8Outputu?=uk
Algorithm 3: Basic multilevel optimization
1Inputu02U,0>0
2fork= 0;:::;K do
3computesk=PU( rhEn[JABM(uk)];uk)with relative accuracy <1=2
4=0
5repeat
6uk= arg min
u2(U uk)\] ;[nuJODE(uk+u) (sk+rJODE(uk))>u
7==2
8untilacceptance test (11);
9uk+1=uk+uk
10Outputu?=uk
approximation or Kiefer–Wolfowitz algorithm [25], a variant of which is given in the supple-
mentary material. Its convergence rate is in general sublinear. Several improvements have
been proposed, such as simultaneous perturbation gradient approximation [42] reducing the
eﬀort of gradient sampling from O(nu)toO(1). For an overview of improved stochastic
gradient descent approaches we refer to [10, 7]. However, even with these improvements, the
convergence is sublinear, requiring many iterations.
3.5 Multilevel Optimization
Nonlinear multilevel or multigrid optimization approaches such as MG/OPT [32] or recur-
sive multilevel trust region (RMTR) [19] exploit the computationally cheap optimization of
coarser models to generate trial steps that can make much more progress than possible with
Taylor approximations of the ﬁne model by respecting the underlying nonlinear structures.
In the case of an ABM as ﬁne model, a well-matched ODE model as given in Section 2.1
can serve as a coarse model, with the advantage of being computationally extremely cheap.
Algorithm 3 implements a basic multilevel optimization algorithm. Here, it is restricted to
only two levels JABMandJODE.
The two main diﬀerences to the inexact gradient descent algorithm are the use of a coarse
model for computing the trial step instead of taking the negative gradient direction, and by
restricting the trial step to an l1trust region within the nu-dimensional box Uof admissible
15policies instead of performing a line search. For minimizing the coarse ODE model in line 6,
the deterministic steepest descent algorithm (Algorithm 1) is a viable option. Compared to
evaluating ABM gradients, the solution of an ODE optimization problem incurs negligible
computational cost.
In order to guarantee convergence, the step suggested by optimizing the coarse model
must lead to a suﬃcient decrease of the ﬁne objective as required by the Armijo type condi-
tion (10) for some trust region radius >0. More precisely, the acceptance test (10), which
reformulates for the multilevel optimization scheme to
En[JABM(u+uk)] En[JABM(u)] (1 + 3)c1u>
ks (11)
withec1u>
ks, needs to be fulﬁlled. This can be ensured if the coarse model is ﬁrst-order
consistent, i.e., its gradient coincides with the ﬁne model gradient at the current iterate uk,
which is achieved by adding the linear correction  (sk+rJODE(uk))>uin line 6. Even
then, the computed step does not have to lead to a decrease of the ﬁne objective JABM
since the coarse and ﬁne model are diﬀerent. A backtracking line search is not guaranteed
to solve this issue since in highly nonlinear problems the step ukdoes not necessarily
have to be a descent direction. Instead, the minimization of the coarse model is restricted
to a neighborhood of the current iterate uk. Using the l1neighborhood uk+ ] ;[nu
and intersecting it with the admissible region Uleads to the same type of box-constrained
optimization subproblem as before. For suﬃciently small  > 0, a reduction of JABMis
ensured by ﬁrst-order consistency. Note that the selection of the trust region radius in
Algorithm 3 is deliberately simple. For more eﬃcient update strategies we refer to [11].
Alsonotethateveryiterationofthemultilevelalgorithmisaboutasexpensiveasoneofthe
inexact gradient descent algorithm. An acceleration of optimization by multilevel schemes
can only be accomplished by reducing the number of iterations until meeting the desired
accuracy. In the early iteration phase, much larger – and therefore fewer – steps can be taken
if the coarse model captures the global nonlinear structure of the ﬁne objective well, and
much better than a ﬁrst- or second-order Taylor model does. In the later phase, the coarse
model’s Hessian acts as a preconditioner for the steepest descent method on the ﬁne model.
A good agreement of both models’ Hessians improves the asymptotic convergence rate on
ill-conditioned problems and avoids the “zig-zagging” that slows down gradient methods
applied to general ill-conditioned problems.
Algorithm 3 can be extended from two-levels to a true recursive multilevel scheme by
solving the coarse model subproblem in line 6 not by a simple gradient method, but by
minimizing some even coarser model. However, due to the extreme diﬀerence in computa-
tional eﬀort between agent-based and ODE models, the use of coarser ODE models does
not promise any beneﬁt. In contrast, the use of a hierarchy of ﬁne ABM, coarse ABM, SDE
models, and ODE models is an interesting perspective, which, however, we will not explore
in this work.
4 Numerical Examples
In this section, we present the results of using the optimization techniques for ABMs intro-
ducedintheprevioussectionforthegivenexampleobjective. InSection4.1, weparameterize
the models. We then compare the multilevel optimization (MLO) algorithm (Algorithm 3)
16Table 1: Parameters used for the model simulations. Here, the infection rates rdenote
the control independent parameters rfor the ODE and ~rfor the H/ABM, respectively.
Note that the number of agents for the GERDA model is subject to random changes with
each newly generated world.
Model
Parameter GERDA ODE H/ABM
TimeT[hours] 1176 1176 1176
Number of agents N 1091 – 1091
Initially infected Ia(0) 5 5/1091 5
Initially infected Ic(0) 0 0 0
World Gangelt (reduced) – –
General infectivity 0.175 – –
General interaction frequency 1 – –
Infection rate raa – 1:025210 121:118510 9
Infection rate rac – 4:880410 45:324610 1
Infection rate rcc – 6:148210 136:707710 10
Recovery rate ra – 4:214810 24:214810 2
Recovery rate rc – 4:342710 24:342710 2
Immunity loss  – – 0.2
with the inexact gradient descent (IGD) algorithm (Algorithm 2), and show the optimization
results corresponding to our examples GERDA and the H/ABM in Sections 4.2 and 4.3.
4.1 Parameterization
In order to anchor the examples in some empirical orders of magnitude, we considered ﬁgures
relating to the beginning of the pandemic in Germany, as the model example focuses on the
German municipality of Gangelt. In each experiment we consider a time frame of seven
weeks, i.e., T= 1 176hours. We consider piecewise constant policies of diﬀerent durations,
i.e., control time grid size.
According to [38], who analyze intensive care unit loads for Berlin, Madrid and Lombardy,
the fraction of infected in Berlin that needed intensive care in the ﬁrst wave of the pandemic
was 6 %. We use this number as an approximation for Germany and hence Gangelt. With
a number of intensive care beds of around 32000 in Germany1, if 6 % of the infected should
not exceed this number, the maximum of infected that could be allowed would be around
530000 persons, which corresponds to about 0.6 % of the population of about 83 million.
As not all intensive care beds can be allocated to COVID-19 patients since there are other
reasons for needing such a bed, we reduce this number to 0.5 %. The weights given to the
costs of home oﬃce and home schooling versus the weight given to the number of infected
are subject of a societal or political debate that we do not intend to enter here. As this
1From mid April 2020, intensive care beds had to be registered with a central agency. In the second half of
April, the numbers of beds registered ranged around this value, see the daily reports for this time span
under [39].
17Table 2: Parameters used for the optimization algorithms.
Parameter
Fraction of descent c1 0.1
Maximum trust region radius 0 0.5
Maximum ﬁnite diﬀerencing step size hmax 0.1
Accuracy 0.25
Health care system’s capacity threshold Imax 0:005N
Threshold economic impact umax
w 0.81
Initialu0 0nu
Weightsas=aw 1
point is important but beyond the scope of this paper, we reiterate that the chosen objective
function serves as an example for the development of optimization methods. Therefore, an
example is deﬁned rather than opting for a multicriteria analysis that would leave the choice
of weights up to a potential user of the results obtained. Thus, we set as=aw= 1.
For the upper bound on the fraction of work that can be done at home, we choose an
educated guess of umax
w= 0:81, based on the following considerations. According to [21], the
share of oﬃce jobs is below 36.7 %, but a lockdown can also aﬀect non-oﬃce jobs, e.g., sales
or industrial employees, or employees in the service sector. On the other hand, there are
jobs that even in a lockdown cannot be closed down or moved to home oﬃce. We consider
the examples of workers in the health care system (5.7 million employed), food sales (552200
employed), as well as police and ﬁre departments (1.7 million, all numbers from [43]). These
sum to about 8.5 million, representing about 17.5 % of the approximately 45 million people
employed in Germany. To account for further cases not included here, we increase this
number to 19 %, meaning that the economic costs explode when approaching 81 % of work
not done at the workplaces.
All parameters relevant to the models are summarized in Table 1, while the parameters
relevant to the optimization algorithms are summarized in Table 2. Every algorithm is
started from u0= 0nu, where 0nudenotes a vector of length nuwith zeros only.
4.2 Optimal Policies for the H/ABM
Due to the very long runtime of GERDA (a single simulation with the parameters given
in Table 1 takes approximately 30 seconds on a laptop), a detailed numerical analysis of
the algorithms would not be justiﬁable for this model. Therefore, in the following, we
use the H/ABM introduced in Section 2.2.2 that has a strongly reduced computational
cost to compare the multilevel algorithm with the inexact gradient descent algorithm. As
a termination criterion, we choose either 15 iterations or when the sample size nof the
objective estimate (5) or gradient estimate (8) is more than one million samples, whichever
comes ﬁrst.
First, we present the policies computed by Algorithms 2 and 3 for two diﬀerent cases:
constant policies that do not change for the entire time horizon of seven weeks, and piece-
wise constant policies that change every 168 hours (i.e., weekly changing). Figure 3 shows
the computed policies as well as the corresponding expected time course of the H/ABM for a
180 10 20 30 40 50
Time [days]0.00.20.40.60.8Fraction of agentsSa
Ia
RaSc
Ic
Rc(a)
0 10 20 30 40 50
Time [days]0.00.20.40.60.81.0Control u(t)
us(t)
uw(t) (b)
0 10 20 30 40 50
Time [days]0.00.20.40.60.8Fraction of agentsSa
Ia
RaSc
Ic
Rc
(c)
0 10 20 30 40 50
Time [days]0.00.20.40.60.81.0Control u(t)
us(t)
uw(t) (d)
Figure 3: Expected time courses of the H/ABM and corresponding optimal policies com-
puted using the multilevel algorithm (solid) compared to the policies computed using the
inexact gradient descent algorithm (dashed) for constant and weekly changing policies.
time frame of 7 weeks. The solid line represents the solution of the multilevel algorithm and
the dashed line represents the solution of the inexact gradient descent algorithm. Since both
solutions are qualitatively similar, we expect qualitatively similar results in the expected
time course for continuity reasons. Both for constant and piece-wise constant policies, the
share of home schooling is fairly high, while the share of home oﬃce is quite low. For the
piece-wise constant policy, the share of home oﬃce is close to zero after the ﬁrst week, but
at the expense of home schooling. Independently from the policy chosen, the expected time
course of the H/ABM is almost identical, with infections increasing only towards the end of
the simulation.
Next,wetakealookatthepaththatbothalgorithmsaretaking. Figure4showstheMonte
Carlo evaluation of En[JABM(u)]forn= 100andu= [us;uw]>2R2, i.e., constant policies.
Note that an explicit approximation as done here is only possible for nu= 2. Fornu>2it
190.0 0.2 0.4 0.6 0.8
uw0.00.20.40.60.81.0usIGD MLO
20040060080010001200(a)
0.0 0.2 0.4 0.6 0.8
uw0.00.20.40.60.81.0usMLO
40060080010001200 (b)
Figure 4: Monte Carlo evaluations En[JABM(u)]forn= 100andu= [us;uw]>2Rnuwith
nu= 2, i.e., the policies are constant for the entire simulation time T, and optimization path
given by iterates ukcomputed using the multilevel and inexact gradient descent algorithms.
The objective JABMin Figure (a) is evaluated for the H/ABM and in Figure (b) for the
GERDA model. For nu= 2it can be seen clearly that both objectives have diﬀerent
minimizers.
becomes computationally (and visually) infeasible. We see that, as expected, the multilevel
algorithm is initially superior to the inexact gradient descent and takes more advantageous
steps towards the minimizer u?ofJABM. This is because it respects the underlying nonlinear
structures of H/ABM, which the inexact gradient descent algorithm cannot do. The ﬁrst
step of the inexact gradient descent algorithm is just barely still admissible. As it continues,
the objectives JABMcomputed by the algorithms descend, however, at diﬀerent rates. When
approaching the optimum, the changes with respect to u?get less pronounced (cf. Figure 5).
Especially the inexact gradient descent algorithm slows down signiﬁcantly and barely makes
progress. This can also be seen in Figure 6, which shows the convergence. We deﬁne the
error as
err:=jE[JABM(uk)] E[JABM(u?)]j;
whereu?denotes the true minimizer of JABMandukthe current iterate. The true minimizer
u?is unknown and can only be approximated. Thus, we set u?=uMLO
kmax, whereuMLO
kmaxdenotes
the ﬁnal iterate using the multilevel algorithm algorithm since it can be shown that JABM
is locally convex (cf. Figure 4 (a)) and that ukmaxuIGD
kmaxholds. The ﬁgures conﬁrm that
in both cases the multilevel algorithm outperforms the inexact gradient descent algorithm
in the early phase. In the later phase the increasing number of ABM simulations is driven
by the choice of e, which controls the number nrequired for the estimates of E[JABM(u)]to
pass the acceptance test with high conﬁdence (cf. Sections 3.4.2 and 3.5). Figure 7, which
shows the cumulative sum of ABM simulations, illustrates this very well. It also shows that
both algorithms become expensive at about the same rate.
200200400I(t)
0.00.51.0k= 0us(t)
uw(t)
−0.50.0
0.00.51.0k= 2
−0.20.0
0.00.51.0k= 4
−0.50−0.250.00
0.00.51.0k= 6
−0.050.000.05
0.00.51.0k= 8
−0.10.0
0.00.51.0k= 10
0 20 400100I(t)
0 20 400.00.51.0k= 12
Time [days]Control u(t)Change of Ik(t)Figure 5: Expectednumber(red/solid)andstandarddeviation(red/shadedarea)ofinfected
agentsI(t) =Ia(t) +Ic(t)for the corresponding policies at iteration k. Expected relative
change (black/solid) and standard deviation (gray/shaded area) to the iteration k 2(i.e.,
the previous ﬁgure). Data estimated from 10000 H/ABM simulations.
212.5 5.0 7.5 10.0 12.5
Iteration k100101102103errMLO
IGD(a)
104106108
No. ABM simulations100101102103errMLO
IGD (b)
2.5 5.0 7.5 10.0 12.5
Iteration k10−1100101102103errMLO
IGD
(c)
104105106107
No. ABM simulations10−1100101102103errMLO
IGD (d)
Figure 6: Convergence of the multilevel and inexact gradient descent algorithms with re-
specttothenumberofiterationsandnumberofABMsimulationsfor(a-b)constantand(c-d)
piece-wise constant policies, i.e., weekly changing.
4.3 Optimal Policies for GERDA
We now consider the GERDA model introduced in Section 2.2.1. To handle the massive
computational eﬀort, we use a reduced version of the municipality of Gangelt with about
1000 agents. In this way, one agent in GERDA is roughly equivalent to 10 people in the
real world (as of December 2021). This allows computing objectives and gradient estimates
as in Section 3.4 for large nin reasonable time on a high performance computer.
Now, we present the results for GERDA computed by the multilevel optimization algo-
rithm for the same two scenarios, i.e., constant and weekly changing policies. Figure 8
shows the optimal policies for both scenarios. As for the H/ABM, the the diﬀerence in the
eﬀects of constant and piece-wise constant policies on the trajectories are rather negligible
for GERDA. However, despite appropriately adjusted parameterization of the two models
(cf. Section 2.3), we notice that the minimizers u?
H/ABMandu?
GERDAare diﬀerent; com-
220 5 10 15
Iteration k02468No. ABM simulations×107
MLO
IGD(a)
0 5 10 15
Iteration k0.00.51.01.5No. ABM simulations×107
MLO
IGD (b)
Figure 7: Number of ABM evaluations for the H/ABM with (a) constant controls and (b)
piece-wise constant controls, precisely weekly changing controls. It can be clearly seen that
the multilevel algorithm performs better than the inexact gradient descent algorithm at
the beginning in terms of the number of iterations. In the further course, both algorithms
become expensive at about the same rate.
pare the solutions shown in Figures 4 or 8. More precisely, in both scenarios the policies
u= [us;uw]>are higher, especially the share of home oﬃce uw. Remarkably, for the weekly
changing scenario, there is an extreme jump in both policies in the second week of approxi-
mately 80 percentage points. The “delay” of one week and the subsequent jump are due to
the incubation period modeled in GERDA. In the model this results in low values for the
policies; in the real world, with infection rates in the low double digits, a hard lockdown in
the ﬁrst seven days as shown in Figure 3 for the H/ABM could lead to resentment or even
noncompliance from the public. In the further course, both policies are steadily scaled back.
The policies calculated for GERDA are more in line with what was implemented by many
governments in early 2020. This shows the need to optimize detailed ABMs directly, since
coarser models – even well-ﬁtted ABMs – seem to exhibit a crucial loss of information.
The GERDA model computations emphasize the need for an eﬃcient algorithm that
quicklygetsclosetoasolution: WhilefortheH/ABMtheinexactgradientdescentalgorithm
is a viable option, it is not for GERDA. Here, the multilevel optimization approach is more
eﬃcient, although it also requires approximately 1.2 million GERDA simulations after the
third iteration step. However, it comes with a signiﬁcant reduction from JABM(u0)1 189
toJABM(u3)157after three iterations.
In the later phase, the agreement of the Hessian matrices of the ﬁne and coarse models
dominates the asymptotic convergence. Table 3 summarizes theoretical and experimental
convergence rates for diﬀerent coarse models acting as preconditioner. For the case nu= 2,
the theoretical convergence rates were obtained by computing the condition numbers of
the Hessian matrices Hof a two-dimensional polynomial ﬁt of degree ﬁve of the objective
JABMover the entire feasible optimization domain Ufor the respective models. For the
casenu= 4, we used a local four-dimensional quadratic polynomial ﬁt of JABMin an"-
230 10 20 30 40 50
Time [days]0.00.20.40.60.8Fraction of agentsSa
Ia
RaSc
Ic
Rc(a)
0 10 20 30 40 50
Time [days]0.00.20.40.60.81.0Control u(t)
us(t)
uw(t) (b)
0 10 20 30 40 50
Time [days]0.00.20.40.60.8Fraction of agentsSa
Ia
RaSc
Ic
Rc
(c)
0 10 20 30 40 50
Time [days]0.00.20.40.60.81.0Control u(t)us(t)
uw(t) (d)
Figure 8: Expected time courses of GERDA and corresponding optimal policies computed
using the Multilevel Optimization Algorithm 3 for constant and weekly changing policies.
Note that compared to the policies shown in Figure 3 for the H/ABM, the policies for
GERDA propose a much stricter lockdown.
environmentaround u?. Inallcasesthepreconditionedproblemleadstoafasterconvergence.
The results are conﬁrmed by the convergence plots (cf. also Figure 6 for the H/ABM).
5 Conclusion
We presented a heterogeneous multilevel optimization approach combining a ﬁne-level ABM
with a coarse-level ODE to ﬁnd exemplary non-pharmaceutical interventions in epidemic
policy design. We compared this method with state-of-the-art algorithms applicable to our
optimization problem. The multilevel optimization algorithm is expected to be faster with
respect to the number of iterations as it (i) captures the nonlinear structures better than
a ﬁrst- order second-order Taylor model in the early iteration, see Section 3.5, and (ii) a
24Table 3: Theoretical and experimental convergence rates for the Multilevel Optimization
Algorithm 3 for constant policies, i.e., nu= 2andT= 1 176, and 25 days constant policies,
i.e.,nu= 4andT= 1 200. The empirical convergence rate ODE, ﬁne is obtained using the
ODE model as coarse-level and the H/ABM and GERDA, respectively, as ﬁne-level models.
Fine model
H/ABM GERDA H/ABM
Dimension nu 2 2 4
Condition (H 1
ODEHﬁne)3.0300 116.8909 21.9801
(H 1
H/ABMHﬁne)– 7.0511 –
(Hﬁne) 35.1841 235.8803 131.8860
Convergence rate ODE 0.5037 0.9830 0.9130
H/ABM – 0.7516 –
ﬁne 0.9447 0.9916 0.9850
Experimental convergence rate ODE, ﬁne 0.7433 0.1934 0.6854
well-matched coarse model serves as preconditioner and thus reduces “zig-zagging” slowing
down gradient methods, see Table 3.
However, the theoretical speedup of the multilevel optimization algorithm compared to
the inexact gradient descent algorithm is mostly compensated by the exploding number of
samples needed for a high conﬁdence in the descent direction the closer the current iterate
gets to the true minimizer, see Figure 7. This is also the main bottleneck for the inexact
gradient descent algorithm. In the initial phase, though, the superiority of the multilevel
optimization algorithm is apparent, as it leads to solutions that may already be suﬃcient in
a real-world scenario, since the mathematical optimum need not or cannot be reached.
Additionally, we showed that the optimal policies obtained using directly the ABM diﬀer
drastically from one using the the stylized SIR-type ODE model or H/ABM (see Figures 4
or 8), which suggests that using detailed ABMs directly for the design of optimal policies
is necessary for good results. The above optimization framework can be applied not only
to epidemiological models, for ﬁnding optimal pharmaceutical and non-pharmaceutical in-
terventions, but to any ABM where appropriate and meaningful controls can be found and
applied and suitable reduced models are available. Future research will address the eﬃcient
gradient approximation of stochastic dynamical systems such as ABMs.
Data Availability
The data that support the ﬁndings of this study are generated based on the models given in
Section 2 and do not use any external data. The algorithms are implemented in MATLAB
and Python and can be found at https://github.com/Henningston/MLoptABM .
25References
[1] G. An, B. G. Fitzpatrick, S. Christley, P. Federico, A. Kanarek, R. Miller Neilan,
M. Oremland, R. Salinas, R. Laubenbacher, and S. Lenhart. Optimization and Control
of Agent-Based Models in Biology: A Perspective. Bulletin of Mathematical Biology ,
79:63–87, 2017.
[2] P. Andelﬁnger. Diﬀerentiable Agent-Based Simulation for Gradient-Guided Simulation-
BasedOptimization. In Proceedings of the 2021 ACM SIGSIM Conference on Principles
of Advanced Discrete Simulation , SIGSIM-PADS ’21, page 27–38, New York, NY, USA,
2021. Association for Computing Machinery.
[3] P. Atkins and J. de Paula. Atkins’ Physical Chemistry . Oxford University Press, 2008.
[4] S. Banisch, R. Lima, and T. Araújo. Agent Based Models and Opinion Dynamics as
Markov Chains. Social Networks , 34:549–561, 2012.
[5] J. T. Betts. Practical Methods for Optimal Control and Estimation Using Nonlinear
Programming . SIAM, 2010.
[6] Z. Botev and A. Ridder. Variance Reduction , pages 1–6. American Cancer Society,
2017.
[7] L. Bottou, F. E. Curtis, and J. Nocedal. Optimization Methods for Large-Scale Machine
Learning. SIAM Rev. , 60(2):223–311, 2018.
[8] F. Brauer. Mathematical epidemiology: Past, present, and future. Infectious Disease
Modelling , 2:113–127, 2017.
[9] A. Charpentier, R. Elie, M. Laurière, and V.-C. Tran. COVID-19 pandemic control:
balancing detection policy and lockdown intervention under ICU sustainability. Math-
ematical Modelling of Natural Phenomena , 15:57, November 2020.
[10] M. Chau and M. C. Fu. An Overview of Stochastic Approximation. In M. C. Fu, editor,
Handbook of Simulation Optimization , pages 149–178. Springer, 2015.
[11] A. R. Conn, N. I. M. Gould, and P. L. Toint. Trust-Region Methods . SIAM, 2000.
[12] L. Dell’Anna. Solvable delay model for epidemic spreading: the case of Covid-19 in
Italy.Scientiﬁc Reports , 10, 2020.
[13] P. Deuﬂhard and F. A. Bornemann. Scientiﬁc Computing with Ordinary Diﬀerential
Equations . Texts in Applied Mathematics, vol. 42. Springer, New York, 2ndedition,
2002.
[14] N.DjurdjevacConrad, L.Helfmann, J.Zonker, S.Winkelmann, andC.Schütte. Human
mobilityandinnovationspreadinginancienttimes: Astochasticagent-basedsimulation
approach. EPJ Data Science , 7(1):24, 2018.
[15] S. Duwal, S. Winkelmann, C. Schütte, and M. von Kleist. Optimal Treatment Strategies
in the Context of ‘Treatment for Prevention’ against HIV-1 in Resource-Poor Settings.
PLOS Computational Biology , 11(4):1–30, 04 2015.
26[16] C. P. Fries. Stochastic Algorithmic Diﬀerentiation of (Expectations of) Discontinu-
ous Functions (Indicator Functions). International Journal of Computer Mathematics ,
0(0):1–23, 2021.
[17] D. T. Gillespie. A general method for numerically simulating the stochastic time evo-
lution of coupled chemical reactions. Journal of Computational Physics , 22(4):403–434,
1976.
[18] B. Goldenbogen, S. O. Adler, O. Bodeit, J. A. H. Wodke, X. Escalera-Fanjul, A. Kor-
man, M. Krantz, L. Bonn, R. Morán-Torres, J. E. L. Haﬀner, M. Karnetzki, I. Maintz,
L. Mallis, H. Prawitz, P. S. Segelitz, M. Seeger, R. Linding, and E. Klipp. Control of
COVID-19 Outbreaks under Stochastic Community Dynamics, Bimodality, or Limited
Vaccination. Advanced Science , 9(23):2200088, 2022.
[19] S. Gratton, A. Sartenaer, and P. L. Toint. Recursive Trust-Region Methods for Multi-
scale Nonlinear Optimization. SIAM Journal on Optimization , 19(1):414–444, 2008.
[20] A. Griewank and A. Walther. Evaluating derivatives: principles and techniques of
algorithmic diﬀerentiation . SIAM, Philadelphia, 2008.
[21] A. Hammermann and M. Voigtländer. Bürobeschäftigte in Deutschland. Vierteljahress-
chrift zur empirischen Wirtschaftsforschung, Jg. 47 Institut der deutschen Wirtschaft
IW-Trends 3/2020, 2020.
[22] L. Helfmann, N. Djurdjevac Conrad, A. Djurdjevac, S. Winkelmann, and C. Schütte.
From interacting agents to density-based modeling with stochastic PDEs. Communica-
tions in Applied Mathematics and Computational Science , 16(1):1 – 32, 2021.
[23] F. Hinkelmann, D. Murrugarra, A. S. Jarrah, and R. Laubenbacher. A Mathemati-
cal Framework for Agent Based Models of Complex Biological Networks. Bulletin of
Mathematical Biology , 2011.
[24] L.R.Izquierdo, S.S.Izquierdo, J.M.Galan, andJ.I.Santos. TechniquestoUnderstand
Computer Simulations: Markov Chain Analysis. Journal of Artiﬁcial Societies and
Social Simulation , 12(1), 2009.
[25] J. Kiefer and J. Wolfowitz. Stochastic Estimation of the Maximum of a Regression
Function. Annals of Mathematical Statistics , 23(3):462–466, 1952.
[26] T. G. Kurtz. Strong approximation theorems for density dependent Markov chains.
Stochastic Processes and their Applications , 6(3):223–240, 1978.
[27] T. Lazebnik and S. Bunimovich-Mendrazitsky. The Signature Features of COVID-19
Pandemic in a Hybrid Mathematical Model – Implications for Optimal Work-School
Lockdown Policy. Advanced Theory and Simulations , 4(5):2000298, 2021.
[28] M. Marathe and N. Ramakrishnan. Recent Advances in Computational Epidemiology.
IEEE Intelligent Systems , 28(4):96–101, 2013.
27[29] R.Miikkulainen, O.Francon, E.Meyerson, X.Qiu, D.Sargent, E.Canzani, andB.Hod-
jat. From Prediction to Prescription: Evolutionary Optimization of Nonpharmaceutical
Interventions in the COVID-19 Pandemic. IEEE Transactions on Evolutionary Com-
putation, 25(2):386–401, 2021.
[30] S. Moore, E. M. Hill, L. Dyson, M. J. Tildesley, and M. J. Keeling. Modelling optimal
vaccinationstrategyforSARS-CoV-2intheUK. PLOS Computational Biology ,17(5):1–
20, 05 2021.
[31] D. Moualeu, M. Weiser, R. Ehrig, and P. Deuﬂhard. Optimal control for a tuberculosis
model with undetected cases in Cameroon. Communications in Nonlinear Science and
Numerical Simulation , 20(3):986–1003, 2015.
[32] S. G. Nash. A multigrid approach to discretized optimization problems. Optimization
Methods and Software , 14(1-2):99–116, 2000.
[33] J.-H. Niemann, S. Winkelmann, S. Wolf, and C. Schütte. Agent-based modeling: Pop-
ulation limits and large timescales. Chaos: An Interdisciplinary Journal of Nonlinear
Science, 31(3):033140, 2021.
[34] J. Nocedal and S. Wright. Numerical Optimization . Springer, 2006.
[35] A. Olivares and E. Staﬀetti. Robust optimal control of compartmental models in epi-
demiology: Application to the COVID-19 pandemic. Communications in Nonlinear
Science and Numerical Simulation , 111:106509, 2022.
[36] M. Oremland and R. Laubenbacher. Optimization of Agent-Based Models: Scaling
MethodsandHeuristicAlgorithms. Journal of Artiﬁcial Societies and Social Simulation ,
17(2):6, 2014.
[37] A. V. Rao. A survey of numerical methods for optimal control. Advances in the Astro-
nautical Sciences , 135(1):497–528, 2009.
[38] M. Ritter, D. V. M. Ott, F. Paul, J.-D. Haynes, and K. Ritter. COVID-19: a simple
statistical model for predicting intensive care unit load in exponential phases of the
disease.Scientiﬁc reports , 11(518), 2021.
[39] Robert Koch Institut. Epidemiologischer Steckbrief zu SARS-CoV-2 und
COVID-19. https://www.rki.de/DE/Content/InfAZ/N/Neuartiges_Coronavirus/
Situationsberichte/Archiv_2020_tab.html , 2020.
[40] S. Schutte. Optimization and Falsiﬁcation in Empirical Agent-Based Models. Journal
of Artiﬁcial Societies and Social Simulation , 13(1):2, 2010.
[41] J. She, L. Liu, and W. Liu. COVID-19 epidemic: Disease characteristics in children.
Journal of Medical Virology , 92(7):747–754, 2020.
[42] J. C. Spall. Multivariate Stochastic Approximation Using a Simultaneous Perturbation
Gradient Approximation. IEEE Transactions on Automatic Control , 37(3):332–341,
1992.
28[43] Statistisches Bundesamt. Employees by industry. https://www.
destatis.de/DE/Themen/Arbeit/Arbeitsmarkt/Erwerbstaetigkeit/Tabellen/
arbeitnehmer-wirtschaftsbereiche.html , 2021.
[44] M.Tracy, M.Cerdá, andK.M.Keyes. Agent-BasedModelinginPublicHealth: Current
Applications and Future Directions. Annual Review of Public Health , 39:77–94, 2018.
[45] S. Ullah and M. Altaf Khan. Modeling the impact of non-pharmaceutical interventions
on the dynamics of novel coronavirus with optimal control analysis with a case study.
Chaos, Solitons & Fractals , 139:110075, 2020.
[46] K. Wickwire. Mathematical models for the control of pests and infectious diseases: A
survey.Theoretical Population Biology , 11(2):182–238, 1977.
[47] H. Wulkow, T. O. F. Conrad, N. Djurdjevac Conrad, S. A. Müller, K. Nagel, and
C. Schütte. Prediction of Covid-19 spreading and optimal coordination of counter-
measures: From microscopic to macroscopic models to Pareto fronts. PLOS ONE ,
16(4):1–29, 04 2021.
29Supplementary Material
Stochastic Gradient Descent
Gradient averaging can be done implicitly on the ﬂy by taking suﬃciently small steps in the
direction of a single or average of a few samples. This is known as ﬁnite diﬀerence based
stochastic approximation or Kiefer–Wolfowitz algorithm [25]. For the purpose of illustration,
we give a rather basic scheme shown in Algorithm 4, where Udenotes a projection to the
admissibleset U. Withadecreasingstepsize c=kforsomeﬁxed c>0, theiterationconverges
almost surely to a local minimizer u. Note that a sample size n>1for gradient estimation,
known as mini-batch , leads to faster convergence in terms of iterations, though not sample
number, and allows for embarrassingly parallel evaluation of rE[JABM(uk)], which makes
larger sample sizes attractive on current computer systems. With an optimal balance of
sampling and discretization error, i.e., h=O(k 1=6), a convergence rate of O(k 1=3)is
obtained. Using improvements such as iterate averaging as in Algorithm 4, an improved
convergence rate of O(k 1=2)can be obtained. Nevertheless, even with these improvements
the convergence is sublinear, such that many samples are required.
Algorithm 4: Basic mini-batch Kiefer–Wolfowitz algorithm with iterate averaging
1Inputc>0,u02U,n1,K1,p<0,h0>0
2fork= 0;:::;K do
3hk=kph0
4uk= U 
uk 1 c
krhkEn[JABM(uk 1)]
5Outputu=1
KPK
k=1uk
30
Increased accuracy of the two-point correlation function at no extra cost
Martin Kerscher
Ludwig–Maximilians Universt¨ at M¨ unchen,
Fakult¨ at f¨ ur Physik, Schellingstr. 4, D-80799 M¨ unchen
martin.kerscher@lmu.de
January 11, 2024
Using the pair-count implementaion from the Corrfunc package we
show that with a low discrepency sequence we can calculate the
two-point correlation function more accurately than with random
points at no extra computational cost.
1 Introduction
The Corrfunc package (Sinha & Garrison, 2020; Sinha
& Garrison, 2019) offers one of the fastest implementa-
tion of pair-counts and is frequently used for calculating
the two-point correlation function for large-scale-structure
statistics in cosmology. We illustrate how one can com-
bine the conceptual improvements suggested by Kerscher
(2022) with the blazingly fast pair-counts from Corrfunc1.
With this approach we are increasing the numerical accu-
racy of the pair-counts and we are reducing the systematic
error in calculations of the two-point correlation function.
The two-point correlation function of the galaxy distribu-
tion is often used to constrain models of structure and
galaxy formation and to estimate parameters of cosmolog-
ical models. Observations give us the positions of galaxies
in space. The two-point density
ϱ2(x1,x2) =ϱ2(1 +ξ(|x1−x2|)) (1)
is the probability of finding two galaxies at x1andx2,
where ϱis the number density and ξ(r) is the two-point
correlation function. In a homogeneous and isotropic point
process ξ(r) only depends on the separation r=|x1−
x2|. We use estimators to determine ξ(r) from a galaxy
catalogue within a finite domain W⊂R3. In cosmology
estimators based on random point sets are most commonly
used. These rely on the data–data DD, data–random DR,
and random–random RRpair-counts.
With DRandRRone performs a Monte-Carlo integration
using random points (Kerscher, 2022, 1999). Replacing
these random point sets with a low-discrepancy sequence
of points results in a quasi Monte-Carlo integration. This
leads to an improved scaling of the error that is almost
proportional to 1 /Nq, where Nqis the number of points
from this low-discrepancy sequence.
In Sec. 2 we give the relevant definitions, in Sec. 3 we il-
lustrate the preferable properties of the quasi Monte-Carlo
integration with a numerical example, and in Sec. 4 we pro-
vide details on the implementation2and give some further
comments.
1https://github.com/manodeep/Corrfunc
2seehttps://github.com/makerscher/corracc for the code.2 Pair-counts and estimators
Given the data points {xi},i= 1, . . . , N within the ob-
servational window xi∈Wthe
DD(r) =1
N2NX
i=1NX
j=1,j ̸=i1[r,r+δ](|xi−xj|) (2)
is the normalised number of data–data pairs with a dis-
tance of r=|xi−xj|in the interval [ r, r+δ]. The indi-
cator function 1Aof the set Ais defined as 1A(q) = 1 if
q∈Aand 0 for q /∈A. Now we consider Nrrandom points
{ri},ri∈W,i= 1, . . . , N rwithin the same sample geom-
etryWas the data and define the normalised number of
data-random pairs
DR(r) =1
NN rNX
i=1NrX
j=11[r,r+δ](|xi−rj|), (3)
and similarly
RR(r) =1
Nr2NrX
i=1NrX
j=1,j ̸=i1[r,r+δ](|ri−rj|), (4)
the normalised number of random–random pairs. The
Landy & Szalay (1993) estimator is then given by
bξ(r) =DD(r)−2DR(r) +RR(r)
RR(r). (5)
As an alternative to the random points we consider a low
discrepancy sequence of points. We use two distinct low
discrepancy sequence {qi}and{si}, with qi,si∈W,i=
1, . . . , N q(see also D´ avila-Kurb´ an et al. 2021). With one
sequence {qi}we can define DQin full analogy to DR. To
define QQwe need both sequences,
QQ(r) =1
Nq2NqX
i=1NqX
j=11[r,r+δ](|qi−sj|). (6)
QQis the quasi Monte-Carlo integration scheme, and cor-
respondingly, RRis the standard Monte-Carlo integration
scheme for the same six-dimensional volume integral (see
1arXiv:2401.05942v1  [astro-ph.CO]  11 Jan 2024eq. (15) and (16) in Kerscher 2022). Now we are set to de-
fine a Landy & Szalay (1993) type estimator using a low
discrepancy sequence instead of random points:
bξqmc(r) =DD(r)−2DQ(r) +QQ(r)
QQ(r). (7)
3 Comparison
For the comparison of bξandbξqmcwe choose the example
data set gals Mr19.ff from the Corrfunc distribution as
our test data set3. This simulated galaxy sample is inside
a rectangular box, and we can calculate the exact refer-
ence value Ξ( r) for the Landy & Szalay (1993) estima-
tor in this simple window (Kerscher, 2022). We generate
M= 500 random point sets and also 500 randomized low-
discrepancy sets and calculate bξ(l)andbξ(l)
qmcfor each of
thel= 1, . . . , M point sets. We use the same number of
points Nr=Nqranging from 104to 107. To quantify the
deviation from the exact value Ξ( r) we use
σqmc(Nq, r)2=1
M2MX
l=1
bξ(l)
qmc(r)−Ξ(r)2
. (8)
and similarly σ(Nr, r)2.
In the following figures we compare the estimated standard
errors σ(Nr, r) and σqmc(Nq, r). We see that with bξqmcwe
gain accuracy in all the situations. For small radii the
estimated σcan be reduced by a factor of 2-3 using a
low discrepancy sequence (see Fig. 1). Unfortunately the
scaling of σqmcwith Nqis only slightly steeper than the
scaling of σwith Nrin the standard estimator. Hence for
small radii the gain in accuracy is not really convincing.
As can be seen from Fig. 2 this changes on large scales. By
using a low discrepancy sequence we gain accuracy up to
a factor of 10. To obtain a factor of 10 in accuracy with
random points requires 100 times the number of random
points. The error for the standard estimator using random
points σ(Nr, r) scales proportional to 1 /p
(Nr), whereas
the error σqmc(Nq, r) for a low-discrepancy sequence is al-
most proportional to 1 /Nq. The implementation of bξqmc
follows closely the implementation of the standard Landy
& Szalay (1993) estimator bξ(see also the next section).
For the same number of points we expect a similar run-
time. For a more examples and a detailed comparison of
run-times see Kerscher (2022).
3https://github.com/manodeep/Corrfunc/blob/master/
theory/tests/data/gals_Mr19.ff
2 4 6 8 10 12 14
r [Mpc]104
103
102
101
100, qmc
10k
100k1M
10M
104105106107
Nr, Nq104
103
102
101
, qmc
radius range: [3.0, 4.0] Mpc
standard LS
quasi MCFigure 1: In the top plot we show the estimated error
σqmc(Nq, r) (solid line, quasi MC) and σ(Nr, r) (dashed
line, standard) for different radii depending on the num-
ber of points used. In the lower plot we show the scaling
of the error with the number of points for one radius
range. The two dotted lines are proprtional to 1 /√
N
and 1 /N.
20 40 60 80 100
r [Mpc]105
104
103
102
, qmc
10k
100k1M
10M
104105106107
Nr, Nq105
104
103
, qmc
radius range: [90.0, 95.0] Mpc
standard LS
quasi MC
Figure 2: The same quantities as in Fig. 1 are shown for
larger radii.
24 Some notes
The code: We provide a sample implementation4to il-
lustrate how one can use the pair-count functions as pro-
vided in Corrfunc with the low discrepancy sequences
from SciPy. For calculating the auto- or cross-correlation
function of point sets the package Corrfunc provides the
function Corrfunc.theory.DD . We use this function to
calculate DD,RR,DR,DQandQQ.
To generate random points we use the random number
generator from NumPy (Harris et al., 2020). To generate
low discrepancy sequences we use the function Halton as
provided in SciPy scipy.stats.qmc (starting with version
≥1.7.0 , Virtanen et al. 2020). This function allows us to
generate randomised Halton sequences (see Owen 2017,
Owen & Rudolf 2021).
Special care has to be taken in the calculation of QQ.
As one can see from eq. (6) we need two distinct low dis-
crepancy sequences (see also eq. (15) and (16) in Kerscher
2022). We start with a six dimensional Halton sequence
inside W×Wand split it into two three dimensional se-
quences.
Exact Ξ(r) As already mentioned the DR,RRand also
DQ,QQare (quasi) Monte-Carlo schemes for special vol-
ume integrals which can be expressed in geometrical terms
for a box (Kerscher, 2022, 1999). We use these terms to
calculate the exact estimator Ξ( r) for a box. Still a numer-
ical integration remains to be performed. We are using the
integration routine quad from scipy.integration . This
calculation can take up to several hours, but for the com-
parison we only need this once.
Beyond a box For more general sampling areas we are
not able to calculate the exact reference value Ξ( r). Hence
we have to compare to the empirical mean
ξ(Nq, r) =1
MMX
l=1bξ(l)
qmc(r), (9)
and calculate the sample error
bσqmc(Nq, r)2=1
M2MX
l=1
bξ(l)
qmc(r)−ξ(Nq, r)2
.(10)
In the comparions in Sect. 3 we also calculated bσqmcand
saw that it is almost indistinguishable from σqmc. Hence
we expect that bσqmcis also a good proxy for the expected
error σqmcin more general situations. This allows the
quantification of systematic errors for a window Wbeyond
a box.
The periodic box: We compared the bξqmc(r) andbξ(r)
for data in a box, which we saw as an example for more
general windows W. Hence we ignored the fact that the
data came from a simulation with periodic boundaries.
Estimating ξ(r) from data with periodic boundaries is
much simpler. The pair-counts DD(r) have to be calcu-
lated respecting the periodic boundary conditions which
4https://github.com/makerscher/corracccan be done also with Corrfunc.theory.DD . The geomet-
ric factors for the estimation of ξ(r) are well known and
specifically simple. If we assume a quadratic box [0 , L]3
with periodic boundaries we get
bξper(r) =L3
4π
3((r+δ)3−r3)DD(r)−1 (11)
More details are given in Appendix A.1 of Kerscher (2022).
No random or low discrepancy point set appears, only the
pair-counts DD(r) are used, see also Corrfunc.theory.xi .
A special DRandDQ Kerscher (2022) suggests a spe-
cial scheme for calculating DRandDQbased on ideas of
Rivolo (1986). Since this requires a different algorithm
than the pair-counts we do not cover it here. Together
with another (slower) pair-count implementation such a
special DR,DQimplementation is provided at the follow-
ing link5.
References
D´ avila-Kurb´ an, F., S´ anchez, A. G., Lares, M., & Ruiz,
A. N. 2021, Mon. Not. Roy. Astron. Soc., 506, 4667
Harris, C. R., Millman, K. J., van der Walt, S. J., et al.
2020, Nature, 585, 357
Kerscher, M. 1999, Astron. Astrophys., 343, 333
Kerscher, M. 2022, Astron. Astrophys., 666, A181
Landy, S. D. & Szalay, A. S. 1993, ApJ, 412, 64
Owen, A. B. 2017, arXiv e-prints, arXiv:1706.02808
Owen, A. B. & Rudolf, D. 2021, SIAM Rev., 63(2), 360
Rivolo, A. R. 1986, ApJ, 301, 70
Sinha, M. & Garrison, L. 2019, in Software Challenges
to Exascale Computing, ed. A. Majumdar & R. Arora
(Singapore: Springer Singapore), 3–20
Sinha, M. & Garrison, L. H. 2020, MNRAS, 491, 3022
Virtanen, P., Gommers, R., Oliphant, T. E., et al. 2020,
Nature Methods, 17, 261
5https://homepages.physik.uni-muenchen.de/ ~Martin.
Kerscher/software/accuratexi/
3
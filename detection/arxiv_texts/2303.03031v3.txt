The Computational Landscape of Autonomous
Mobile Robots: The Visibility Perspective
Archak Das[0000−0002−1630−3052], Satakshi Ghosh[0000−0003−1747−4037], Avisek
Sharma[0000−0001−8940−392X], Pritam Goswami[0000−0002−0546−3894], and
Buddhadeb Sau[0000−0001−7008−6135]
Department of Mathematics, Jadavpur University, Kolkata, India
{archakdas.math.rs, satakshighosh.math.rs, aviseks.math.rs,
pritamgoswami.math.rs, buddhadeb.sau }@jadavpuruniversity.in
Abstract. Consider a group of autonomous mobile computational en-
tities called robots. The robots move in the Euclidean plane and op-
erate according to synchronous Look -Compute -Move cycles. The com-
putational capabilities of the robots under the four traditional models
{OBLOT ,FST A ,FCOM ,LUMI} have been extensively investi-
gated both when the robots had unlimited amount of energy and when
the robots were energy-constrained.
In both the above cases, the robots had full visibility. In this paper, this
assumption is removed, i.e., we assume that the robots can view up to a
constant radius Vrfrom their position (the Vris same for all the robots)
and, investigates what impact it has on its computational capabilities.
We first study whether the restriction imposed on the visibility has any
impact at all, i.e., under a given model and scheduler does there exist
any problem which cannot be solved by a robot having limited visibility
but can be solved by a robot with full visibility. We find that the answer
to the question in general turns out to be positive. Finally, we try to get
an idea that under a given model, which of the two factors, V isibility or
Synchronicity is more powerful and conclude that a definite conclusion
cannot be drawn.
Keywords: Mobile Robots ·Limited Visibility ·Look-Compute-Move ·
Robots with Lights
1 Introduction
In this paper, we consider systems of autonomous ,anonymous ,identical and
homogenous computational entities called robots moving and operating in the
Euclidean plane. The robots are viewed as points and they operate according to
the traditional Look -Compute -Move (LCM ) cycles in synchronous rounds. In
Look phase robots take a snapshot of the space, in the Compute phase the robots
execute its algorithm using the snapshot as input, then move to the computed
destination in Move phase. The robots are collectively able to perform some
tasks and solve some problems.arXiv:2303.03031v3  [cs.DC]  3 Oct 20232 A. Das, S. Ghosh, A. Sharma, P. Goswami, and B. Sau
In recent times, exhaustive investigation has also been done [2, 8] about
the issues of memory persistence andcommunication capability , have on the
solvability of a problem and computational capability of a system. In light of
these facts, four models have been identified and investigated, OBLOT ,LUMI ,
FST A andFCOM .
In the most common model OBLOT , in the addition to standard assumptions
ofanonymity anduniformity , the robots are silent , i.e., without explicit means
of communication, and oblivious , i.e., they have no persistent memory to record
information of previous cycles.
The other model which is generally considered as antithesis to OBLOT
model, is the LUMI model first formally defined in [4, 5], where the robots
have both persistent memory and communication, although it must be noted
that the remembering or communicating can be done only in limited capacity,
i.e., the robots can remember or communicate finite number of bits.
Two new models have been introduced in [7] by eliminating one of the
two capabilities of LUMI model, in each case. These two models are FST A
andFCOM . InFST A model the communication capability is absent while in
FCOM model the robots do not have persistent memory. In [8] these models
have been considered to investigate the question is it better to remember or to
communicate ?.
In this work we consider another factor, i.e., visibility , which helps to in-
vestigate the matter from a different angle and is of interest from both theo-
retical and practical point of view. If Mdenotes a model and σis a sched-
uler then traditionally Mσdenotes a model Munder scheduler σ. Here M ∈
{OBLOT ,FST A ,FCOM ,LUMI} andσ∈ {FSY NCH, SSY NCH }. We here
define Mσ
Vdenotes a model Munder scheduler σand visibility state V. Here
V ∈ {F .V.,L.V.}. Here F.V.denotes the full visibility model and L.V.denotes
the limited visibility model. In limited visibility model, each robot can view upto
a constant radius of their position and the initial visibility graph is connected.
All the works done till now had given the full visibility power to the robots.
So we try to answer a number of questions,
–Does restriction on visibility have a significant impact on the computational
power of a model? In other words, is any problem which is solvable in full
visibility model, solvable in limited visibility model also?
–If the answer to the second question mentioned above is no, then can the
impairment be always adjusted by minor adjustments, i.e., by keeping the
model intact but by making the scheduler more powerful?
–If the answer to the above question is also no, then what are the cases where
the lack of full visibility can be compensated? Can all the cases be classified?
We have shown the answer to the first question is no, e.g., we have proved
thatFST AF
L.V.<FST AF
F.V.. This result turns out to be true for all the four
models {OBLOT ,FST A ,FCOM ,LUMI} . After we got answer to our first
question, we tried to answer our second question. A definite answer to the sec-
ond question shall give us some insight about whether any one of the two pa-
rameters of visibility andsynchronicity have any precedence over the other.Title Suppressed Due to Excessive Length 3
But as we shall see this does not happen. For e.g., we got the result that
FCOMF
L.V.⊥ FCOMS
F.V., which effectively shows that both the capabilities
are important, and deficiency in one of the parameter cannot be compensated
by making the other parameter stronger. In the process, we have defined a new
problem EqOsc which we have shown to be unsolvable unless the scheduler is
fully synchronous, but solvable if the scheduler is fully synchronous, even under
limited visibility in FST A andFCOM models. The third question as of now,
yet remains unanswered, and subject to further investigations.
The results presented in this paper gives a whole new insight to the parameter
of visibility and its relevance relative to the parameter of synchronicity, one that
requires exhaustive analysis, even beyond the amount of investigation that had
been done in this paper.
1.1 Related Work
Investigations regarding the computational power of robots under synchronous
schedulers was done by the authors Flocchini et. al. in [8]. Main focus of the
investigation in this work was which of the two capabilities was more important:
persistent memory orcommunication . In the course of their investigation they
proved that under fully synchronous scheduler communication is more powerful
than persistent memory. In addition to that, they gave a complete exhaustive
map of the relationships among models and schedulers.
In [2], the previous work of characterizing the relations between the robot
models and three type of schedulers was continued. The authors provided a more
refined map of the computational landscape for robots operating under fully
synchronous and semi-synchronous schedulers, by removing the assumptions on
robots’ movements of rigidity and common chirality . Further authors establish
some preliminary results with respect to asynchronous scheduler.
The previous two works considered that the robots was assumed to have
unlimited amounts of energy. In [3], the authors removed this assumption and
started the study of computational capabilities of robots whose energy is limited,
albeit renewable. In these systems, the activated entities uses all its energy to ex-
ecute an LCM cycle and then the energy is restored after a period of inactivity.
They studied the impact that memory persistence and communication capabili-
ties have on the computational power of such robots by analyzing the computa-
tional relationship between the four models {OBLOT ,FST A ,FCOM ,LUMI}
under the energy constraint. They provided a full characterization of this re-
lationship. Among the many results they proved that for energy-constrained
robots, FCOM is more powerful than FST A .
In all the three above mentioned works, the robots had full visibility. A robot
uses its visibility power in the Look phase of the LCM cycle to acquire informa-
tion about its surroundings, i.e., position and lights (if any) of other robots. The
biggest drawback of full visibility assumption is that it is not practically feasible.
So, recently some of the authors [1,6,9,10] have considered limited visibility. For
example, in [6] they considered that the robots can see up to a fixed radius V4 A. Das, S. Ghosh, A. Sharma, P. Goswami, and B. Sau
from it. So it was important to study the power of different robot models under
limited visibility.
1.2 Our Contributions
LetMX
Vdenote a model Munder scheduler Xwith visibility V. Here M ∈
{OBLOT ,FST A ,FCOM ,LUMI} ,X ∈ {F ,S}, here FandSdenotes
FSY NCH andSSY NCH schedulers respectively, and V ∈ {F .V.,L.V.}.AB
C≥
DE
Fdenotes that the model A, under scheduler Band visibility Cis computation-
ally not weaker than the model Dunder scheduler Eand visibility F,AB
C>DE
F
denotes that the model Aunder scheduler Band visibility Cis computationally
more powerful than the model Dunder scheduler Eand visibility F,AB
C≡ DE
F
denotes that the model Aunder scheduler Band visibility Cis computationally
equivalent to the model Dunder scheduler Eand visibility FandAB
C⊥ DE
F
denotes that the model Aunder scheduler Band visibility Cis computationally
incomparable with the model Dunder scheduler Eand visibility F.
We first examine the computational relationship under a constant model and
scheduler between limited and full visibility conditions. We find that in both fully
synchronous and semi-synchronous cases, a model under full visibility is strictly
more powerful than a model under limited visibility. We get the following results:
1.OBLOTF
F.V.>OBLOTF
L.V.
2.FST AF
F.V.>FST AF
L.V.
3.FCOMF
F.V.>FCOMF
L.V.
4.LUMIF
F.V.>LUMIF
L.V.
5.OBLOTS
F.V.>OBLOTS
L.V.
6.FST AS
F.V.>FST AS
L.V.
7.FCOMS
F.V.>FCOMS
L.V.
8.LUMIS
F.V.>LUMIS
L.V.
We then examine the computational relationship between the four models
{OBLOT ,FST A ,FCOM ,LUMI} under limited visibility between fully syn-
chronous and semi-synchronous schedulers. We find that under limited visibility
conditions each of the three models are more powerful under fully synchronous
scheduler.
9.OBLOTF
L.V.>OBLOTS
L.V.
10.FST AF
L.V.>FST AS
L.V.
11.FCOMF
L.V.>FCOMS
L.V.
12.LUMIF
L.V.>LUMIS
L.V.
Together with the three results mentioned immediately above, we also get an
idea which of the capabilities, visibility orsynchronicity is more powerful. From
the previous results we generally conclude that MS
L.V.<MS
F.V.andMS
L.V.<
MF
L.V.. If we can prove that MF
L.V.≥ MS
F.V., then it shall imply that by making
the scheduler stronger, the limitation in visibility can be compensated. Similarly
if we can prove that MS
F.V.≥ MF
L.V., then it shall imply that by giving completeTitle Suppressed Due to Excessive Length 5
visibility, the weakness in terms of scheduler can be compensated. But after our
detailed investigation it has been revealed that neither of the above cases happen
and in general MF
L.V.⊥ MS
F.V.. Specifically the results are:
13.OBLOTF
L.V.⊥ OBLOTS
F.V.
14.FST AF
L.V.⊥ FST AS
F.V.
15.FCOMF
L.V.⊥ FCOMS
F.V.
16.LUMIF
L.V.⊥ LUMIS
F.V.
1.3 Paper Organization
In Section 2 we define the computational model, visibility models and the other
technical preliminaries. In Sections 3, we discuss the computational relationships
between the four models, OBLOT ,FCOM ,FST A andLUMI models respec-
tively, subject to variations in synchronicity and visibility. In Section 4, we try
to compare the strength of the capabilities of synchronicity andvisibility . In
Section 5 we present the conclusion.
2 Model and Technical Preliminaries
2.1 The Basics
In this paper we consider a team R={r0, . . . , r n}of computational entities
moving and operating in the Euclidean Plane R2, which are viewed as points
and called robots . The robots can move freely and continuously in the plane.
Each robot has its own local coordinate system and it always perceives itself
at its origin; there might not be consistency between these coordinate systems.
The robots are identical : they are indistinguishable by their appearance and
they execute the same protocol, and they are autonomous , i.e., without any
central control.
The robots operate in Look−Compute −Move (LCM ) cycles. When acti-
vated a robot executes a cycle by performing the following three operations:
1.Look : The robots activate its sensors to obtain a snapshot of the positions
occupied by the robots according to its co-ordinate system.
2.Compute : The robot executes its algorithm using the snapshot as input. The
result of the computation is a destination point.
3.Move : The robot moves to the computed destination. If the destination is
the current location, the robot stays still.
All robots are initially idle. The amount of time to complete a cycle is as-
sumed to be finite, and the Look is assumed to be instantaneous. The robots may
not have any agreement in terms of their local coordinate system. By chirality ,
we mean the robots agree on the same circular orientation of the plane, or in
other words they agree on ”clockwise” direction. In our paper, we do not assume
the robots to have a common sense of chirality.6 A. Das, S. Ghosh, A. Sharma, P. Goswami, and B. Sau
2.2 The Computational Models
There are four basic robot models which are considered in literature, they are
namely, {OBLOT ,FST A ,FCOM ,LUMI} .
In the most common, OBLOT , the robots are silent : they have no explicit
means of communication; furthermore they are oblivious : at the start of the
cycle, a robot has no memory of observations and computations performed in
previous cycles.
In the most common model, LUMI , each robot ris equipped with a persis-
tent visible state variable Light [r], called light , whose values are taken from a
finite set Cof states called colors (including the color that represents the initial
state when the light is off). The colors of the lights can be set in each cycle by
rat the end of its Compute operation. A light is persistent from one compu-
tational cycle to the next: the color is not automatically reset at the end of a
cycle; the robots are otherwise oblivious, forgetting all other information from
previous cycles. In LUMI , the Look operation produces a colored snapshot; i.e.,
it returns the set of pairs ( position ,color ) of the robots. Note that if |C|= 1,
then the light is not used; this case corresponds to the OBLOT model.
It is sometimes convenient to describe a robot ras having k≥1 lights,
denoted r.light 1, . . . , r.light k, where the values of r.light iare from a finite set
of colors Ci, and to consider Light [r] as a k-tuple of variables; clearly, this
corresponds to rhaving a single light that usesQk
i=1|Ci|colors.
The lights provide simultaneously persistent memory and direct means of
communication, although both limited to a constant number of bits per cycle.
Two sub-models of LUMI have been defined and investigated , each offering
only one of these two capabilities.
In the first model, FST A , a robot can only see the color of its own light;
that is, the light is an internal one and its color merely encodes an internal
state. Hence the robots are silent , as in OBLOT , but are finite -state . Observe
that a snapshot in FST A is same as in OBLOT .
In the second model, FCOM , the lights external : a robot can communicate
to the other robots through its colored light but forgets the color of its own light
by the next cycle; that is, robots are finite -communication but are oblivious .
A snapshot in FCOM is like in LUMI except that, for the position xwhere
the robot rperforming the Look is located, Light [r] is omitted from the set of
colors present at x.
In all the above models, a configuration C (t) at time tis the multi-set of
thenpairs of the ( x), where ciis the color of robot riat time t.
2.3 The Schedulers
With respect to the activation schedule of the robots, and the duration of
their Look -Compute -Move cycles, the fundamental distinction is between the
asynchronous andsynchronous settings.Title Suppressed Due to Excessive Length 7
In the asynchronous setting (ASYNCH), there is no common notion of time,
each robot is activated independently of others, the duration of each phase is
finite but unpredictable and might be different cycles.
In the synchronous setting (SSYNCH), also called semi-synchronous, time
is divided into discrete intervals, called rounds ; in each round some robots are
activated simultaneously, and perform their LCM cycle in perfect synchroniza-
tion.
A popular synchronous setting which plays an important role is the fully -
synchronous setting (FSYNCH) where every robot is activated in every round;
the is, the activation scheduler has no adversarial power.
In all two settings, the selection of which robots are activated at a round is
made by an adversarial scheduler , whose only limit is that every robot must
be activated infinitely often (i.e., it is fair scheduler). In the following, for all
synchronous schedulers, we use round and time interchangeably.
2.4 The Visibility Models
In our work we do comparative analysis of computational models with robots
having full andlimited visibility. In full visibility model, denoted as F.V., the
robots have sensorial devices that allows it to observe the positions of the other
robots in its local co-ordinate system.
Inlimited visibility model, denoted as L.V., a robot can only observe upto a
fixed distance Vrfrom it. Suppose, rp(t) denote the position of a robot rat the
beginning of round t. Then we define the circle with center at rp(t) and radius
Vrto be the Circle of V isibility ofrat round t. Here the radius Vris same for
all the robots. The result of Look operation in round twill be the position of
the robots and lights(if any) of the robots inside the circle of visibility.
We now define the V isibility Graph ,G= (V, E) of a configuration. Let C
be a given configuration. Then all the robot positions become the vertices of G
and we say an edge exists between any two vertices if and only if the robots
present there can see each other. The necessary condition for the problems we
have defined in the paper is that the V isibility Graph of the initial configuration
must be connected.
2.5 Some Important Definitions
We define our computational relationships similar to that of [8]. Let M=
{OBLOT ,FST A ,FCOM ,LUMI} be the robot models under investigation,
the set of activation schedulers be S={FSY NCH, ASY NCH }and the set of
visibility models be V={F.V.,L.V.}.
We denote by Rthe set of all teams of robots satisfying the core assumptions
(i.e., they are identical, autonomous, and operate in LCM cycles), and R∈ R
a team of robots having identical capabilities (e.g., common coordinate system,
persistent storage, internal identity, rigid movements etc.). By Rn⊂Rwe denote
the set of all teams of size n.8 A. Das, S. Ghosh, A. Sharma, P. Goswami, and B. Sau
Byproblem we mean a task where a fixed number of robots have to form
some configuration or configurations (which may be a function of time) subject
to some conditions, within a finite amount of time.
Given a model M∈ M , a scheduler S∈ S, visibility V∈ V, and a team of
robots R∈ R, letTask (M, S, V ;R) denote the set of problems solvable by Rin
M, with visibility Vand under adversarial scheduler S.
LetM,N∈ M ,S1,S2∈ SandV1,V2∈ V. We define the relationships be-
tween model Mwith visibility V1under scheduler S1and model Nwith visibility
V2under scheduler S2:
–computationally not less powerful (MS1
V1≥NS2
V2), if∀R∈ R we have
Task (M, S 1;R)⊇Task (N, S 2;R);
–computationally more powerful (MS1
V1> NS2
V2), ifMS1
V1≥NS2
V2and∃R∈ R
such that Task (M, S 1, V1;R)\Task (N, S 2, V2;R)̸=∅;
–computationally equivalent (MS1
V1≡NS2
V2), ifMS1
V1≥NS2
V2andMS1
V1≤NS2
V2;
–computationally orthogonal or incomparable , (MS1
V1⊥NS2
V2), if∃R1, R2∈ R
such that Task (M, S 1, V1;R1)\Task (N, S 2, V2;R1)̸=∅andTask (N, S 2, V2;R2)
\Task (M, S 1, V1;R2)̸=∅.
For simplicity of notation, for a model M∈ M , let MFandMSdenote
MFsynchandMSsynch, respectively; and let MF
V(R) and MS
V(R) denote the
setsTask (M, FSY NCH, V ;R) and Task (M, SSY NCH, V ;R), respectively.
2.6 Some Fundamental Comparisons
Trivially,
1.LUMI ≥ FST A ≥ OBLOT andLUMI ≥ FCOM ≥ OBLOT , when the
V isibility andSynchronicity is fixed.
2.FSYNCH ≥ SSYNCH ≥ ASYNCH when the model and V isibility is
fixed.
3.F.V.≥ L.V.when the model and Synchronicity is fixed.
3 ANGLE EQUALIZATION PROBLEM
Definition 1. Problem Angle Equalization (AE) : Suppose four robots r1,
r2,r3andr4are placed in positions A,B,CandDrespectively, as given in
Configuration (I). The line ABmakes an acute angle θ1with BCand the line
CDmakes an acute θ2withBC. Here θ1< θ2<90◦.
The robots must form the Configuration (II) without any collision. The robots
r2andr3must remain fixed in their positions.
3.1 Algorithm for AEproblem in OBLOTS
F.V
Under full visibility conditions, each robot can see all the robot locations in the
plane. Now each robot can uniquely identify its position in the plane. ThereforeTitle Suppressed Due to Excessive Length 9
Fig. 1: Configuration (I) of Problem
AE
Fig. 2: Configuration (II) of Problem
AE
Fig. 3: Visibility Range Gap
whenever the robot r1is activated, it will move to the position A′such that the
∠A′BE=θ2. The rest of the robots will not move. After the robot r1moves
all the robots can perceive that Configuration (II) is obtained and henceforward
there will be no further movement of the robots. Hence the problem is solved.
Lemma 1. ∀R∈ R 4,AE∈ OBLOTS
F.V.
Corollary 1. ∀R∈ R 4,AE∈ OBLOTF
F.V.
Proof. Follows from Lemma 1.10 A. Das, S. Ghosh, A. Sharma, P. Goswami, and B. Sau
Corollary 2. ∀R∈ R 4,AE∈ FST AS
F.V.
Proof. Follows from Lemma 1.
Corollary 3. ∀R∈ R 4,AE∈ FST AF
F.V.
Proof. Follows from Corollary 1.
Corollary 4. ∀R∈ R 4,AE∈ FCOMS
F.V.
Proof. Follows from Lemma 1.
Corollary 5. ∀R∈ R 4,AE∈ FCOMF
F.V.
Proof. Follows from Corollary 1.
Corollary 6. ∀R∈ R 4,AE∈ LUMIS
F.V.
Proof. Follows from Lemma 1.
Corollary 7. ∀R∈ R 4,AE∈ LUMIF
F.V.
Proof. Follows from Corollary 1.
3.2 Impossibility of Solving AEProblem in Limited Visi-
bility Model
Lemma 2. ∃R∈ R 4,AE̸∈ LUMIF
L.V..
Proof. Let there exists an Algorithm Ato solve the problem in LUMIF
L.V..
If Configuration (II) has to be formed from Configuration (I) then the robot r1
must know the value of the angle it has to form. If r1has to move to the position
A′such that the ∠A′BE=θ2, then the robot r1must know the position of two
robots r3andr4respectively in the initial configuration, i.e., the positions Cand
Drespectively. Unless the position Cis known, the robot r1cannot perceive that
it has to form the angle with respect to the extended line of the line segment.
And unless it knows the position D, it cannot perceive the value θ2that it
has to form. But if Vr=BC+ϵ, then it is not possible for the robot r1to
see them from the initial configuration. Also according the requirement of the
problem the robots r2andr3cannot move. Therefore to solve the problem r1
must move. Now, if r1has to move, unless r1performs the required move to form
Configuration (II) in one move, it has to move preserving the angle θ1. This is
because r1does not know the fact that θ1< θ2. The argument holds for r4. And
we have already seen that the initial configuration does not give the required
information to form Configuration (II) in one move.
Now the only way the robot r1can move preserving the angle, is by moving
along the line segment AB. Now note that if r1reaches B, the angle becomes
0. Also as collisions are not allowed the robot r1cannot cross B. Similarly, the
robot r3can only move along line segment CDand it cannot cross the positionTitle Suppressed Due to Excessive Length 11
C. Now, by moving along the line segments ABandCDrespectively, however
much the two robots r1andr4may come closer to BandCrespectively, the
adversary may choose the value of ϵin such a way that the position Cis outside
the visibility range of r1andBis outside the visibility range of r2. Note that the
robots r2andr3cannot see r4andr1respectively, therefore it is also unknown
to them which robot should perform the required move to form Configuration
(II). Though r2andr3can measure the angles θ1andθ2respectively. It is not
possible to store the value of the angles with finite number of lights. Hence the
problem cannot be solved.
From Lemma 2 follows:
Corollary 8. ∃R∈ R 4,AE̸∈ LUMIS
L.V.
Corollary 9. ∃R∈ R 4,AE̸∈ FST AF
L.V.
Corollary 10. ∃R∈ R 4,AE̸∈ FST AS
L.V.
Proof. Follows from Corollary 8
Corollary 11. ∃R∈ R 4,AE̸∈ FCOMF
L.V.
Corollary 12. ∃R∈ R 4,AE̸∈ FCOMS
L.V.
Proof. Follows from Corollary 8
Corollary 13. ∃R∈ R 4,AE̸∈ OBLOTF
L.V.
Corollary 14. ∃R∈ R 4,AE̸∈ OBLOTS
L.V.
Proof. Follows from Corollary 8
We get the following results:
Theorem 1. OBLOTF
F.V.>OBLOTF
L.V.
Proof. From Corollary 1 and Corollary 13.
Theorem 2. OBLOTS
F.V.>OBLOTS
L.V.
Proof. From Lemma 1 and Corollary 14.
Theorem 3. FST AF
F.V.>FST AF
L.V.
Proof. From Corollary 3 and Corollary 9.
Theorem 4. FST AS
F.V.>FST AS
L.V.
Proof. From Corollary 2 and Corollary 10.
Theorem 5. FCOMF
F.V.>FCOMF
L.V.
Proof. From Corollary 5 and Corollary 11.12 A. Das, S. Ghosh, A. Sharma, P. Goswami, and B. Sau
Theorem 6. FCOMS
F.V.>FCOMS
L.V.
Proof. From Corollary 4 and Corollary 12.
Theorem 7. LUMIF
F.V.>LUMIF
L.V.
Proof. From Corollary 7 and Lemma 2.
Theorem 8. LUMIS
F.V.>LUMIS
L.V.
Proof. From Corollary 6 and Corollary 8.
4 Equivalent Oscillation Problem
Definition 2. Problem Equivalent Oscillation (EqOsc) : Let three robots
r1,r2andr3be initially placed at three points B,AandCrespectively. AB=
AC=d. Let B′,C′be points collinear on the line such that AB′=AC′=2d
3.
The robots r1andr3have to change their positions from BtoB′and back to
B,CtoC′and back to Crespectively, while always being equidistant from r2,
i.e.,A(Equidistant Condition).
More formally speaking, if there is a round tsuch that the robots r1andr3
is at BandCrespectively, then there must must exist a round t′> t, such that
r1andr3is at B′andC′respectively. Similarly if at round t′,r1andr3is at
B′andC′respectively, then there must exist a round t′′> t′, such that r1and
r3is at BandCrespectively (Oscillation Condition).
Fig. 4: Illustration of EqOsc problem
We prove that this problem is not solvable in LUMIS
F.V..
Lemma 3. ∃R∈ R 3,EqOsc ̸∈ LUMIS
F.V..
Proof. Let the the robots r1,r3be able to successfully execute the movements
satisfying the conditions of the problem till round t. Let at the beginning of
round t+ 1 the robots r1andr3be at the points BandCrespectively. So next
the robots r1andr3must move to the points B′,C′respectively. Note that the
robots must move together or otherwise the equidistant condition is not satisfied.Title Suppressed Due to Excessive Length 13
From round t+ 1 we activate only one of the terminal robots alternatively. Let
at rounds t+1,t+3,t+5,......., the robot r1is activated and let at rounds t+2,
t+ 4,t+ 6,......, the robot r3is activated.
Now whenever r1orr3makes a movement(when they are activated) the
equidistant condition is violated. If neither r1norr3makes any movement in-
definitely then the oscillating condition is violated.
The problem cannot be solved in LUMIS
F.V..
From Lemma 3 following result naturally follows,
Corollary 15. ∃R∈ R 3,EqOsc ̸∈ FST AS
F.V.and,∃R∈ R 3,EqOsc ̸∈
FCOMS
F.V..
4.1 Solution of problem Equivalent Oscillation in FST AF
L.V.
We now give an algorithm to solve the problem in FST AF
L.V.. The pseudocode
of the algorithm is given below.
Algorithm 1: Algorithm AlgEOSTA for Problem EqOsc executed by
each robot rinFST AF
L.V.
1d= distance from the closer robot;
2A= Position of the middle robot;
3ifnot a terminal robot then
4 Remain static
5else
6 ifLight = Off or Light = F then
7 Light←N
8 Move to a point Don the line segment such that AD=2d
3
9 else
10 Light←F
11 Move to a point Don the line segment such that AD=3d
2
Description and Correctness of AlgEOSTA Let the three robots r1,r2
andr3be at B,A, and Crespectively. Here Vr> AB , and Vr> AC , but
Vr< BC . So there are three robots among which there is one robot which can
see two other robots except itself, we call this robot the middle robot . The other
two robots can see only one other robot except itself. We call each of these two
robots terminal robot . The terminal robots are initially at a distance Dfrom
the middle robot. Whenever a robot is activated it can understand whether it
is a terminal or a middle robot. Now, each of the robots save a light which is
initially saved to Off. If a robot perceives that it is a middle robot it does not
do anything. If it is a terminal robot and its light is set to Off orF, it changes
its light to Nand moves closer a distance two-third of the present distance from
the middle robot, and if its light is set to N, it changes its light to Fand moves
further to a distance 1 .5 times of the present distance from the middle robot.
As we consider a fully synchronous system both the terminal robots execute the
nearer and further movement alternatively together, and hence our problem is
solved.
Hence we get the following result:14 A. Das, S. Ghosh, A. Sharma, P. Goswami, and B. Sau
Lemma 4. ∀R∈ R 3,EqOsc ∈ FST AF
L.V..
Theorem 9. FST AF
L.V.>FST AS
L.V.
Proof. By Corollary 15 the problem cannot be solved in FST AS
L.V., and, trivially
FST AF
L.V.≥ FST AS
L.V..
Theorem 10. FST AF
L.V.⊥ FST AS
F.V.
Proof. By Corollary 15 and Lemma 4, EqOsc cannot be solved in FST AS
F.V.
but can be solved in FST AF
L.V..
Similarly, by Corollary 9 and 2 AEcannot be solved in FST AF
L.V.but can
be solved in FST AS
F.V.. Hence the result.
4.2 Solution of problem Equivalent Oscillation in FCOMF
L.V.
We now give an algorithm to solve the problem in FCOMF
L.V.. The pseudocode
of the algorithm is given below.
Algorithm 2: Algorithm AlgEOCOM for Problem EqOsc executed
by each robot rinFCOMF
L.V.
1d= distance from the closer robot;
2A= Position of the middle robot;
3ifnot a terminal robot then
4 Remain static
5 ifVisible light = NIL orFAR then
6 Light←FAR
7 else if Visible light = NEAR then
8 Light←NEAR
9else
10 ifVisible light = NIL or Visible light = NEAR then
11 Light←NEAR
12 Move to a point Don the line segment such that AD=2d
3
13 else if Visible light = FAR then
14 Light←FAR
15 Move to a point Don the line segment such that AD=3d
2
Description and Correctness of AlgEOCOM Let the three robots r1,r2
andr3be at B,A, and Crespectively. Here Vr> AB , and Vr> AC , but
Vr< BC . So there are three robots among which there is one robot which can
see two other robots except itself, we call this robot the middle robot . The other
two robots can see only one other robot except itself. We call each of these
two robots terminal robot . Whenever a robot is activated it can understand
whether it is a terminal or a middle robot. Now, each of the robots has a light
which is initially saved to NIL . If a robot perceives that it is a middle robot
it can see the lights of the two terminal robots. If it perceives the lights of the
terminal robots to be set to NIL orFAR , it sets its own light to FAR . And if
it perceives the lights of the terminal robots to be set to NEAR , it sets its own
light to NEAR . The middle robot only changes its light but does not change its
position. If it is a terminal robot it can only see the light of the middle robot.Title Suppressed Due to Excessive Length 15
If the light of the middle robot is set to NIL orNEAR , the terminal robot
changes its light to NEAR and moves closer to a distance which is two-third
of the present distance from the middle robot. And if the light of the middle
robot is set to FAR , it changes its light to FAR and moves away to a distance
1.5 times the present distance from the middle robot. As we consider a fully
synchronous system both the terminal robots execute the nearer and further
movement alternatively together, and hence our problem is solved.
Hence we get the following result:
Lemma 5. ∀R∈ R 3,EqOsc ∈ FCOMF
L.V..
Theorem 11. FCOMF
L.V.>FCOMS
L.V.
Proof. By Corollary 15 the problem cannot be solved in FCOMS
L.V., and, triv-
iallyFCOMF
L.V.≥ FCOMS
L.V.. Hence our theorem.
Theorem 12. FCOMF
L.V.⊥ FCOMS
F.V.
Proof. By Corollary 15 and Lemma 5, EqOsc cannot be solved in FCOMS
F.V.
but can be solved in FCOMF
L.V..
Similarly, by Corollary 11 and 4 AEcannot be solved in FCOMF
L.V.but can
be solved in FCOMS
F.V.. Hence the result.
4.3 Similar deductions in OBLOT andLUMI
Theorem 13. OBLOTF
L.V.⊥ OBLOTS
F.V.
Proof. We have proved that the problem AEcannot be solved in OBLOTF
L.V.
but can be solved in OBLOTS
F.V..
Now we consider the problem Rendezvous which was proved to be impossible
inOBLOTS
F.V.in [11]. Now we claim that in our model the problem is possible
to solve in OBLOTF
L.V.. This is because in our model we assume the visibility
graph of the robots in the initial configuration to be connected. Now when there
are only two robots in the initial configuration this means, all the robots in the
initial configuration can see each other. Hence in this case the problem reduces to
OBLOTFmodel. Now it is well known that rendezvous problem is solvable in
this model, as the robots just move to the mid-point of the line segment joining
them. Hence the result.
Theorem 14. OBLOTF
L.V>OBLOTS
L.V.
Proof. Trivially OBLOTF
L.V≥ OBLOTS
L.V.and by Theorem 13 the problem
Rendezvous is solvable in OBLOTF
L.Vbut not in OBLOTS
L.V..
Lemma 6. ∀R∈ R 3,EqOsc ∈ LUMIF
L.V..
Proof. From Lemma 4 and 5.
Theorem 15. LUMIF
L.V.⊥ LUMIS
F.V.
Proof. By Lemma 2 and Corollary 7 the problem AEcannot be solved in
LUMIF
L.V.but can be solved in LUMIS
F.V..
By Lemma 3 and 6 , the problem EqOsc cannot be solved in LUMIS
F.V.but
can be solved in LUMIF
L.V.. Hence, the result.16 A. Das, S. Ghosh, A. Sharma, P. Goswami, and B. Sau
5 Conclusion
In this paper we have initiated the analysis of computational capabilities of
mobile robots having limited visibility. We have considered all the four models
{OBLOT ,FST A ,FCOM ,LUMI} , we have more or less exhaustively analyzed
the possible relationships when the model is fixed. But a huge amount of inter-
esting questions still remains to be solved. The possible future directions are:
1. Cross-model relationships under limited visibility conditions
2. The computational relationships when the scheduler is asynchronous.
References
1. Ando, H., Oasa, Y., Suzuki, I., Yamashita, M.: Distributed memoryless point
convergence algorithm for mobile robots with limited visibility. IEEE Trans.
Robotics Autom. 15(5), 818–828 (1999). https://doi.org/10.1109/70.795787 ,
https://doi.org/10.1109/70.795787
2. Buchin, K., Flocchini, P., Kostitsyna, I., Peters, T., Santoro, N., Wada, K.: Au-
tonomous mobile robots: Refining the computational landscape. In: IEEE In-
ternational Parallel and Distributed Processing Symposium Workshops, IPDPS
Workshops 2021, Portland, OR, USA, June 17-21, 2021. pp. 576–585. IEEE
(2021). https://doi.org/10.1109/IPDPSW52791.2021.00091 ,https://doi.org/
10.1109/IPDPSW52791.2021.00091
3. Buchin, K., Flocchini, P., Kostitsyna, I., Peters, T., Santoro, N., Wada, K.: On
the computational power of energy-constrained mobile robots: Algorithms and
cross-model analysis. In: Parter, M. (ed.) Structural Information and Commu-
nication Complexity - 29th International Colloquium, SIROCCO 2022, Pader-
born, Germany, June 27-29, 2022, Proceedings. Lecture Notes in Computer
Science, vol. 13298, pp. 42–61. Springer (2022). https://doi.org/10.1007/
978-3-031-09993-9_3 ,https://doi.org/10.1007/978-3-031-09993-9_3
4. Das, S., Flocchini, P., Prencipe, G., Santoro, N., Yamashita, M.: The power of
lights: Synchronizing asynchronous robots using visible bits. In: 2012 IEEE 32nd
International Conference on Distributed Computing Systems, Macau, China, June
18-21, 2012. pp. 506–515. IEEE Computer Society (2012). https://doi.org/10.
1109/ICDCS.2012.71 ,https://doi.org/10.1109/ICDCS.2012.71
5. Das, S., Flocchini, P., Prencipe, G., Santoro, N., Yamashita, M.: Autonomous
mobile robots with lights. Theor. Comput. Sci. 609, 171–184 (2016). https://
doi.org/10.1016/j.tcs.2015.09.018 ,https://doi.org/10.1016/j.tcs.2015.
09.018
6. Flocchini, P., Prencipe, G., Santoro, N., Widmayer, P.: Gathering of asyn-
chronous robots with limited visibility. Theor. Comput. Sci. 337(1-3), 147–
168 (2005). https://doi.org/10.1016/j.tcs.2005.01.001 ,https://doi.org/
10.1016/j.tcs.2005.01.001
7. Flocchini, P., Santoro, N., Viglietta, G., Yamashita, M.: Rendezvous with constant
memory. Theor. Comput. Sci. 621, 57–72 (2016). https://doi.org/10.1016/j.
tcs.2016.01.025 ,https://doi.org/10.1016/j.tcs.2016.01.025
8. Flocchini, P., Santoro, N., Wada, K.: On memory, communication, and syn-
chronous schedulers when moving and computing. In: Felber, P., Friedman, R.,Title Suppressed Due to Excessive Length 17
Gilbert, S., Miller, A. (eds.) 23rd International Conference on Principles of Dis-
tributed Systems, OPODIS 2019, December 17-19, 2019, Neuchˆ atel, Switzerland.
LIPIcs, vol. 153, pp. 25:1–25:17. Schloss Dagstuhl - Leibniz-Zentrum f¨ ur Infor-
matik (2019). https://doi.org/10.4230/LIPIcs.OPODIS.2019.25 ,https://doi.
org/10.4230/LIPIcs.OPODIS.2019.25
9. Goswami, P., Sharma, A., Ghosh, S., Sau, B.: Time optimal gathering of myopic
robots on an infinite triangular grid. In: Devismes, S., Petit, F., Altisen, K., Luna,
G.A.D., Anta, A.F. (eds.) Stabilization, Safety, and Security of Distributed Systems
- 24th International Symposium, SSS 2022, Clermont-Ferrand, France, November
15-17, 2022, Proceedings. Lecture Notes in Computer Science, vol. 13751, pp. 270–
284. Springer (2022). https://doi.org/10.1007/978-3-031-21017-4_18 ,https:
//doi.org/10.1007/978-3-031-21017-4_18
10. Poudel, P., Sharma, G.: Time-optimal gathering under limited visibility with
one-axis agreement. Inf. 12(11), 448 (2021). https://doi.org/10.3390/
info12110448 ,https://doi.org/10.3390/info12110448
11. Suzuki, I., Yamashita, M.: Distributed anonymous mobile robots: Formation of
geometric patterns. SIAM J. Comput. 28(4), 1347–1363 (1999). https://doi.org/
10.1137/S009753979628292X ,https://doi.org/10.1137/S009753979628292X
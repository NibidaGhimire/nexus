arXiv:2304.12871v1  [math.LO]  25 Apr 2023Network Satisfaction Problems Solved by k-Consistency
Manuel Bodirsky (Manuel.Bodirsky@tu-dresden.de)
Simon Kn¨ auer (Simon.Knaeuer@tu-dresden.de)
Institut f¨ ur Algebra, TU Dresden, 01062 Dresden, Germany
April 26, 2023
Abstract
We show that the problem of deciding for a given ﬁnite relation algebra Awhether
the network satisfaction problem for Acan be solved by the k-consistency procedure,
for some k∈N, is undecidable. For the important class of ﬁnite relation algebras
Awith a normal representation, however, the decidability of this pro blem remains
open. We show that if Ais symmetric and has a ﬂexible atom, then the question
whether NSP( A) can be solved by k-consistency, for some k∈N, is decidable (even
in polynomial time in the number of atoms of A). This result follows from a more
general suﬃcient condition for the correctness of the k-consistency procedure for ﬁnite
symmetric relation algebras. In our proof we make use of a result of Alexandr Kazda
about ﬁnite binary conservative structures.
1 Introduction
Manycomputational problemsinqualitative temporalandsp atial reasoningcanbephrased
asnetwork satisfaction problems (NSPs) forﬁnite relation algebras . Such a network con-
sists of a ﬁnite set of nodes, and a labelling of pairs of nodes by elements of the relation
algebra. In applications, such a network models some partia l (and potentially inconsistent)
knowledge that we have about some temporal or spatial conﬁgu ration. The computational
task is to replace the labels by atomsof the relation algebra such that the resulting net-
work has an embedding into a representation of the relation a lgebra. In applications, this
embeddingprovides a witness that the inputconﬁguration is consistent (a formal deﬁnition
of relation algebras, representations, and the network sat isfaction problem can be found in
Section 2.1). The computational complexity of the network s atisfaction problem depends
on the ﬁxed ﬁnite relation algebra, and is of central interes t in the mentioned applica-
tion areas. Relation algebras have been studied since the 40 ’s with famous contributions
1of Tarski [ Tar48], Lyndon [ Lyn50], McKenzie [ McK66,McK70], and many others, with
renewed interest since the 90s [ HH01a,HH01b,Hir96,HH02,D¨ un05,Bod18,BK21].
One of the most prominent algorithms for solving NSPs in poly nomial time is the
so-called path consistency procedure . The path consistency procedure has a natural gener-
alisation to the k-consistency procedure , for some ﬁxed k≥3. Such consistency algorithms
have a number of advantages: e.g., they run in polynomial tim e, and they are one-sided
correct, i.e., if they reject an instance, then we can besurethat the instance is unsatisﬁable.
Because of these properties, consistency algorithms can be used to prune the search space
in exhaustive approaches that are used if the network consis tency problem is NP-complete.
Thequestionforwhattemporalandspatialreasoningproble msthek-consistencyprocedure
provides a necessary and suﬃcient condition for satisﬁabil ity is among the most important
research problems in the area [ RN07,BJ17]. The analogous problem for so-called constraint
satisfaction problems (CSPs) was posed by Feder and Vardi [ FV99] and has been solved for
ﬁnite-domain CSPs by Barto and Kozik [ BK14]. Their result also shows that for a given
ﬁnite-domain template, the question whether the correspon ding CSP can be solved by the
k-consistency procedure can be decided in polynomial time.
In contrast, we show that there is no algorithm that decides f or a given ﬁnite relation
algebraAwhether NSP( A) can be solved by the k-consistency procedure, for some k∈N.
The question is also undecidable for every ﬁxed k≥3; in particular, there is no algorithm
that decides whether NSP( A) can be solved by the path consistency procedure. Our proof
relies on results of Hirsch [ Hir99] and Hirsch and Hodkinson [ HH01a]. The proof also
shows that Hirsch’s Really Big Complexity Problem (RBCP; [ Hir96])is undecidable. The
RBCP asks for a description of those ﬁnite relation algebras Awhose NSP can be solved
in polynomial time.
Many of the classic examples of relation algebras that are us ed in temporal and spatial
reasoning, such as the point algebra, Allen’s Interval Alge bra, RCC5, RCC8, have so-called
normal representations , which are representations that are particularly well-beh aved from
a model theory perspective [ Hir96,BJ17,Bod18]. The importance of normal representa-
tions combined with our negative results for general ﬁnite r elation algebras prompts the
question whether solvability of the NSP by the k-consistency procedure can at least be
characterised for relation algebras Awith a normal representation. Our main result is a
suﬃcient condition that implies that NSP( A) can be solved by the k-consistency procedure
(Theorem 4.4). The condition can be checked algorithmicall y for a given A. Moreover, for
symmetric relation algebras with a ﬂexible atom, which form a large subclass of the class
of relation algebras with a normal representation, our cond ition provides a necessary and
suﬃcient criterion for solvability by k-consistency (Theorem 5.2). We prove that the NSP
for every symmetric relation algebra with a ﬂexible atom tha t cannot be solved by the
k-consistency procedure is already NP-complete. Finally, f or symmetric relation algebras
with a ﬂexible atom our tractability condition can even be ch ecked in polynomial time for
a given relation algebra A(Theorem 6.2).
In our proof, we exploit a connection between the NSP for rela tion algebras Awith a
2normal representation and ﬁnite-domain constraint satisf action problems. In a next step,
this allows us to use strong results for CSPs over ﬁnite domai ns. There are similarities
between the fact that the set of relations of a representatio n ofAis closed under taking
unions on the one hand, and so-called conservative ﬁnite-domain CSPs [Bul03,Bar11,
Bul11,Bul16] on the other hand; in a conservative CSP the set of allowed co nstraints in
instances of the CSP contains all unary relations. Thecompl exity of conservative CSPs has
been classiﬁed long before the solution of the Feder-Vardi D ichotomy Conjecture [ FV99,
Bul17,Zhu17,Zhu20]. Moreover, there are particularly elegant descriptions o f when a
ﬁnite-domain conservative CSP can be solved by the k-consistency procedure for some
k∈N(see, e.g., Theorem 2.17 in [ Bul11]). Our approach is to turn the similarities into
a formal correspondence so that we can use these results for ﬁ nite-domain conservative
CSPs to prove that k-consistency solves NSP( A). A key ingredient here is a contribution
of Kazda [ Kaz15] about conservative binaryCSPs.
2 Preliminaries
Asignature τis a set of function or relation symbols each of which has an as sociated ﬁnite
arityk∈N. Aτ-structure Aconsists of a set Atogether with a function fA:Ak→Afor
every function symbol f∈τof aritykand a relation RA⊆Akfor every relation symbol
R∈τof arityk. The set Ais called the domain of A. LetAandBbeτ-structures. The
(direct) product C=A×Bis theτ-structure where
•A×Bis the domain of C;
•for every relation symbol Qof arityn∈Nand every tuple (( a1,b1),...,(an,bn))∈
(A×B)n, we have that (( a1,b1),...,(an,bn))∈QCif and only if ( a1,...,a n)∈QA
and (b1,...,bn)∈QB;
•for every function symbol Qof arityn∈Nand every tuple
((a1,b1),...,(an,bn))∈(A×B)n, we have that
QC((a1,b1),...,(an,bn)) := (QA(a1,...,a n),QB(b1,...,bn)).
We denote the (direct) product A×AbyA2. Thek-fold product A×··· ×Ais deﬁned
analogously and denoted by Ak. Structures with a signature that only contains function
symbols are called algebras and structures with purely relational signature are called re-
lational structures . Since we do not deal with signatures of mixed type in this art icle, we
will use the term structure for relational structures only.
2.1 Relation Algebras
Relation algebras are particular algebras; in this section we recall their deﬁ nition and state
some of their basic properties. We introduce properrelation algebras, move on to abstract
3relationalgebras, andﬁnallydeﬁnerepresentationsofrel ation algebras. Foranintroduction
to relation algebras we recommend the textbook by Maddux [ Mad06].
Proper relation algebras are algebras whose domain is a set o f binary relations over a
common domain, and which are equipped with certain operatio ns on binary relations.
Deﬁnition 2.1. LetDbe a set and Ra set of binary relations over Dsuch that
(R;∪,¯,0,1,Id,˘,◦)is an algebra with operations deﬁned as follows:
1.0 :=∅,
2.1 :=/uniontextR,
3.Id :={(x,x)|x∈D},
4.a∪b:={(x,y)|(x,y)∈a∨(x,y)∈b},
5.¯a:= 1\a,
6.˘a:={(x,y)|(y,x)∈a},
7.a◦b:={(x,z)| ∃y∈D: (x,y)∈aand (y,z)∈b},
fora,b∈ R. Then(R;∪,¯,0,1,Id,˘,◦)is called a proper relation algebra.
The class of all proper relation algebras is denoted by PA. Ab stract relation algebras
are a generalisation of proper relation algebras where the d omain does not need to be a set
of binary relations.
Deﬁnition 2.2. An(abstract) relation algebra Ais an algebra with domain Aand sig-
nature{∪,¯,0,1,Id,˘,◦}such that
1. the structure (A;∪,∩,¯,0,1), with∩deﬁned by x∩y:=(¯x∪¯y), is a Boolean algebra,
2.◦is an associative binary operation on A, called composition ,
3. for all a,b,c,∈A:(a∪b)◦c= (a◦c)∪(b◦c),
4. for all a∈A:a◦Id =a,
5. for all a∈A:˘˘a=a,
6. for all a,b∈A:˘x= ˘a∪˘bwherex:=a∪b,
7. for all a,b∈A:˘x=˘b◦˘awherex:=a◦b,
8. for all a,b,c∈A:¯b∪(˘a◦((a◦b)) =¯b.
4We denote the class of all relation algebras by RA. Let A= (A;∪,¯,0,1,Id,˘,◦) be a
relation algebra. By deﬁnition, ( A;∪,∩,¯,0,1) is a Boolean algebra andtherefore induces a
partial order ≤onA, which is deﬁned by x≤y:⇔x∪y=y. Note that for proper relation
algebras this ordering coincides with the set-inclusion or der. The minimal elements of this
order in A\{0}are called atoms. The set of atoms of Ais denoted by A0. Note that for
the ﬁnite Boolean algebra ( A;∪,∩,¯,0,1) each element a∈Acan be uniquely represented
as the union ∪(or “join”) of elements from a subset of A0. We will often use this fact and
directly denote elements of the relation algebra Aby subsets of A0.
By item 3. in Deﬁnition 2.2 the values of the composition oper ation◦inAare com-
pletely determined by the values of ◦onA0. This means that for a ﬁnite relation algebra
the operation ◦can be represented by a multiplication table for the atoms A0.
An algebra with signature τ={∪,¯,0,1,Id,˘,◦}with corresponding arities 2, 1, 0,
0, 0, 1, and 2 that is isomorphic to some proper relation algeb ra is called representable .
The class of representable relation algebras is denoted by R RA. Since every proper relation
algebra and therefore also every representable relation al gebra satisﬁes the axioms from
the previous deﬁnition we have PA ⊆RRA⊆RA. A classical result of Lyndon [ Lyn50]
states that there exist ﬁnite relation algebras A∈RA that are not representable; so the
inclusions above are proper. If a relation algebra Ais representable then the isomorphism
to a proper relation algebra is usually called the representation of A.
We will be interested in the model-theoretic behavior of set s of relations which form
the domain of a proper relation algebra, and therefore consi der relational structures whose
relations are precisely the relations of a proper relation a lgebra. If the set of relations of
a relational structure Bforms a proper relation algebra which is a representation of some
abstract relation algebra A, then it will be convenient to also call Ba representation of A.
Deﬁnition 2.3. LetA∈RA. Arepresentation of Ais a relational structure Bsuch that
•Bis anA-structure, i.e., the elements of Aare binary relation symbols of B;
•The map a/mapsto→aBis an isomorphism between the abstract relation algebra Aand the
proper relation algebra (R;∪,¯,0,1,Id,˘,◦)with domain R:={aB|a∈A}.
Recall that the set of atoms of a relation algebra A= (A;∪,¯,0,1,Id,˘,◦) is denoted
byA0. The following deﬁnitions are crucial for this article.
Deﬁnition 2.4. A tuple(x,y,z)∈(A0)3is called an allowed triple (of A)ifz≤x◦y.
Otherwise, (x,y,z)is called a forbiddentriple(of A); in this case z∪x◦y= 1. We say that
a relational A-structure Binduces a forbidden triple (from A)if there exist b1,b2,b3∈B
and(x,y,z)∈(A0)3such that x(b1,b2),y(b2,b3)andz(b1,b3)hold inBand(x,y,z)is a
forbidden triple of A.
Note that a representation of Aby deﬁnition does not induce a forbidden triple. A
relationR⊆A3is called totally symmetric if for every bijection π:{1,2,3} → {1,2,3}we
5have
(a1,a2,a3)∈R⇒(aπ(1),aπ(2),aπ(3))∈R.
The following is an immediate consequence of the deﬁnition o f allowed triples.
Remark 2.5. The set of allowed triples of a symmetric relation algebra Ais totally sym-
metric.
2.2 The Network Satisfaction Problem
In this section we present computational decision problems associated with relation alge-
bras. We ﬁrst introduce the inputs to these decision problem s, so-called A-networks.
Deﬁnition 2.6. LetAbe a relation algebra. An A-network ( V;f)is a ﬁnite set Vtogether
with a partial function f:E⊆V2→A, whereEis the domain of f. AnA-network (V;f)
issatisﬁable in a representation BofAif there exists an assignment s:V→Bsuch that
for all(x,y)∈Ethe following holds:
(s(x),s(y))∈f(x,y)B.
AnA-network (V;f)issatisﬁable if there exists a representation BofAsuch that (V;f)
is satisﬁable in B.
With these notions we can deﬁne the network satisfaction pro blem.
Deﬁnition 2.7. The(general) network satisfaction problem for a ﬁnite relation algebra
A, denoted by NSP(A), is the problem of deciding whether a given A-network is satisﬁable.
In the following we assume that for an A-network ( V;f) it holds that f(V2)⊆A\{0}.
Otherwise, ( V;f) is not satisﬁable. Note that every A-network ( V;f) can be viewed as an
A-structure Con the domain V: for allx,y∈Vin the domain of fanda∈Athe relation
aC(x,y) holds if and only if f(x,y) =a.
It is well-known that for relation algebras A1andA2the direct product A1×A2is
also a relation algebra (see, e.g., [ HH02]). We will see in Lemma 2.9 that the direct product
of representable relation algebras is also a representable relation algebra.
Deﬁnition 2.8. LetA1andA2be representable relation algebras. Let B1andB2be
representations of A1andA2with disjoint domains. Then the union representation of the
direct product A1×A2is the(A1×A2)-structure B1⊎B2on the domain B1⊎B2with the
following deﬁnition for all (a1,a2)∈A1×A2:
(a1,a2)B1⊎B2:=aB1
1∪aB2
2.
6The following well-known lemma establishes a connection be tween products of relation
algebras and union representations (see, e.g., Lemma 7 in [ CH04] or Lemma 3.7 in [ HH02]);
it states that union representations are indeed representa tions. We present the proof in
Appendix A.1 to give the reader a sense of the deﬁnition of uni on representations. Union
representations will be the key object in our undecidabilit y proof for Hirsch’s Really Big
Complexity Problem.
Lemma 2.9. LetA1andA2be relation algebras. Then the following holds:
1. IfB1andB2are representations of A1andA2with disjoint domains, then B1⊎B2
is a representation of A1×A2.
2. IfBis a representation of A1×A2, then there exist representations B1andB2of
A1andA2such that Bis isomorphic to B1⊎B2.
The following result uses Lemma 2.9 to obtain reductions bet ween diﬀerent network
satisfaction problems. A similar statement can be found in L emma 7 from [ CH04], however
there the assumption on representability of the relation al gebrasAandBis missing. Note
that without this assumption the statement is not longer tru e. Consider relation algebras
AandBsuch that NSP( A) is undecidable and Bdoes not have a representation. Then
A×Bdoes also not have a representation (see Lemma 2.9) and hence NSP(A×B) is
trivial. We observe that the undecidable problem NSP( A) cannot have a polynomial-time
reduction to the trivial problem NSP( A×B).
Lemma 2.10. LetA,B∈RRAbe ﬁnite. Then there exists a polynomial-time reduction
fromNSP(A)toNSP(A×B).
Proof.Consider the following polynomial-time reduction from NSP (A) to NSP( A×B).
We map a given A-network ( V;f) to the ( A×B)-network ( V;f′) wheref′is deﬁned by
f′(x,y) := (f(x,y),0). This reduction can be computed in polynomial time.
Claim 1. If(V;f)issatisﬁablethen( V;f′)isalsosatisﬁable. Let Abearepresentation
ofAin which ( V;f) is satisﬁable and let Bbe an arbitrary representation of B. By
Lemma 2.9, the structure A⊎Bis a representation of A×B. Moreover, the deﬁnition of
union representations (Deﬁnition 2.8) yields that the ( A×B)-network ( V;f′) is satisﬁable
inA⊎B.
Claim 2. If (V;f′) is satisﬁable then ( V;f) is satisﬁable. Assume that ( V;f′) is
satisﬁable in some representation CofA×B. By item 2 in Lemma 2.9 we get that Cis
isomorphic to A⊎B, whereAandBare representations of AandB. It again follows from
the deﬁnition of union representations that ( V;f) is satisﬁable in the representation Aof
A.
This shows the correctness of the polynomial-time reductio n from NSP( A) to NSP( A×
B) and ﬁnishes the proof.
72.3 Normal Representations and Constraint Satisfaction Pr oblems
We consider a subclass of RRA introduced by Hirsch in 1996. Fo r relation algebras A
from this class, NSP( A) corresponds naturally to a constraint satisfaction probl em. In the
following let Abe in RRA. We call an A-network ( V;f)closed(transitively closed in the
work by Hirsch [ Hir97]) iffis total and for all x,y,z∈Vit holds that
•f(x,x)≤Id,
•f(x,y) = ˘afora=f(y,x),
•f(x,z)≤f(x,y)◦f(y,z).
It is called atomicif the range of fonly contains atoms from A.
Deﬁnition 2.11 (from [Hir96]).LetBbe a representation of A. ThenBis called
•fully universal , if every atomic closed A-network is satisﬁable in B;
•square, if1B=B2;
•homogeneous , if for every isomorphism between ﬁnite substructures of Bthere exists
an automorphism of Bthat extends this isomorphism;
•normal, if it is fully universal, square and homogeneous.
We now investigate the connection between NSP( A) for a ﬁnite relation algebra with a
normal representation Band constraint satisfaction problems. Let τbe a ﬁnite relational
signature and let Bbe a (ﬁnite or inﬁnite) τ-structure. Then the constraint satisfaction
problem for B, denoted by CSP( B), is the computational problem of deciding whether a
ﬁnite input structure Ahas a homomorphism to B. The structure Bis called the template
of CSP(B).
Consider the following translation which associates to eac hA-network ( V;f) anA-
structure Cas follows: the set Vis the domain of Cand (x,y)∈C2is in a relation aCif
and only if ( x,y) is in the domain of fandf(x,y) =aholds. For the other direction let
Cbe anA-structure with domain Cand consider the A-network ( C;f) with the following
deﬁnition: for every x,y∈C, if (x,y) does not appear in any relation of Cwe leave f(x,y)
undeﬁned, otherwise let a1(x,y),...,a n(x,y) be all atomic formulas that hold in C. We
compute in Athe element a:=a1∩···∩anand deﬁne f(x,y) :=a.
The following theorem is based on the natural 1-to-1 corresp ondence between A-
networks and A-structures; it subsumes the connection between network sa tisfaction prob-
lems and constraint satisfaction problems.
Proposition 2.12 (Proposition 1.3.16 in [ Bod12], see also [ BJ17,Bod18]).LetA∈RRA
be ﬁnite. Then the following holds:
8◦Id<>
IdId<>
<<<1
>>1>
Figure 1: Multiplication table of the point algebra P.
1.Ahas a representation Bsuch that NSP(A)andCSP(B)are the same problem up
to the translation between A-networks and A-structures.
2. IfAhas a normal representation Bthe problems NSP(A)andCSP(B)are the same
up to the translation between A-networks and A-structures.
Usually, normal representations of relation algebras are i nﬁnite relational structures.
This means that the transfer from NSPs to CSPs from Propositi on 2.12 results in CSPs
over inﬁnite templates, as in the following example.
Example 2.13. Consider the point algebra P. The set of atoms of PisP0={Id,<,>}.
The composition operation ◦on the atoms is given by the multiplication table in Figure 1.
The table completely determines the composition operation ◦on all elements of P. Note
that the structure P:= (Q;∅,<,>,=,≤,≥,/\e}atio\slash=,Q2)is the normal representation of P
and therefore NSP(P)andCSP(P)are the same problems up to the translation between
networks and structures.
2.4 The Universal-Algebraic Approach
We introduce in this section the study of CSPs via the univers al-algebraic approach.
2.4.1 Polymorphisms
Letτbe a ﬁnite relational signature. A polymorphism of aτ-structure Bis a homomor-
phismffromBktoB, for some k∈Ncalled the arity off. We write Pol( B) for the set
of all polymorphisms of B. The set of polymorphisms is closed under composition, i.e. , for
alln-aryf∈Pol(B) ands-aryg1,...,gn∈Pol(B) it holds that f(g1,...,gn)∈Pol(B),
wheref(g1,...,gn) is a homomorphism from BstoBdeﬁned as follows
f(g1,...,gn)(x1,...,x s) :=f(g1(x1,...,x s),...,gn(x1,...,x s)).
Ifr1,...,rn∈Bkandf:Bn→Bann-ary operation, then we write f(r1,...,rn)
for thek-tuple obtained by applying fcomponent-wise to the tuples r1,...,rn. We say
thatf:Bn→Bpreserves ak-ary relation R⊆Bkif for all r1,...,rn∈Rit holds that
9f(r1,...,rn)∈R. We want to remark that the polymorphisms of Bare precisely those
operations that preserve all relations from B.
A ﬁrst-order τ-formula ϕ(x1,...,x n) is called primitive positive (pp) if it has the form
∃xn+1,...,x m(ϕ1∧···∧ϕs)
whereϕ1,...,ϕ sare atomic τ-formulas, i.e., formulas of the form R(y1,...,yl) forR∈τ
andyi∈ {x1,...,x m}, of the form y=y′fory,y′∈ {x1,...,x m}, or of the form ⊥. We
say that a relation Risprimitively positively deﬁnable over Aif there exists a primitive
positive τ-formula ϕ(x1,...,x n) such that Ris deﬁnable over Abyϕ(x1,...,x n). The
following result puts together polymorphisms and primitiv e positive logic.
Proposition 2.14 ([Gei68], [BKKR69 ]).LetBbe aτ-structure with a ﬁnite domain.
Then the set of primitive positive deﬁnable relations in Bis exactly the set of relations
preserved by Pol(B).
2.4.2 Atom Structures
In this section we introduce for every ﬁnite A∈RA an associated ﬁnite structure, called
theatom structure ofA. IfAhas a fully universal representation, then there exists a
polynomial-time reduction from NSP( A) to the ﬁnite-domain constraint satisfaction prob-
lem CSP( A0) (Proposition 2.16). Hence, this reduction provides polyn omial-time algo-
rithms to solve NSPs, whenever the CSP of the associated atom structure can be solved in
polynomial-time. For a discussion of the atom structure and related objects we recommend
Section 4 in [ BK22].
Deﬁnition 2.15. Theatom structure of A∈RAis the ﬁnite relational structure A0with
domainA0and the following relations:
•for every x∈Athe unary relation xA0:={a∈A0|a≤x},
•the binary relation EA0:={(a1,a2)∈A2
0|˘a1=a2},
•the ternary relation RA0:={(a1,a2,a3)∈A3
0|a3≤a1◦a2}.
Note that A0has all subsets of A0as unary relations and that the relation RA0consists
of the allowed triples of A∈RRA. We say that an operation preserves the allowed triples
if it preserves the relation RA0.
Proposition 2.16 ([BK21,BK22]).LetBbe a fully universal representation of a ﬁnite
A∈RRA. Then there is a polynomial-time reduction from CSP(B)toCSP(A0).
102.4.3 Conservative Clones
LetBbe a ﬁnite τ-structure. An operation f:Bn→Bis called conservative if for all
x1,...,x n∈Bit holds that f(x1,...,x n)∈ {x1,...,x n}. The operation clone Pol( B)
isconservative if every f∈Pol(B) is conservative. We call a relational structure B
conservative if Pol(B) is conservative.
Remark 2.17. LetA0be the atom structure of a ﬁnite relation algebra A. Every f∈
Pol(A0)preserves all subsets of A0, and is therefore conservative. Hence, Pol(A0)is con-
servative.
This remark justiﬁes our interest in the computational comp lexity of certain CSPs
where the template has conservative polymorphisms. Their c omplexity can be studied via
universal algebraic methods as we will see in the following. We start with some deﬁnitions.
An operation f:B3→Bis called
•amajority operation if∀x,y∈B.f(x,x,y) =f(x,y,x) =f(y,x,x) =x;
•aminority operation if∀x,y∈B.f(x,x,y) =f(x,y,x) =f(y,x,x) =y.
An operation f:Bn→B, forn≥2, is called
•acyclic operation if∀x1,...,x n∈B.f(x1,...,x n) =f(xn,x1,...,x n−1);
•aweak near-unanimity operation if
∀x,y∈B.f(x,...,x,y ) =f(x,...,x,y,x ) =...=f(y,x,...,x );
•aSiggers operation ifn= 6 and ∀x,y∈B.f(x,x,y,y,z,z ) =f(y,z,x,z,x,y ).
The following terminology was introduced by Bulatov and has proven to be extremely
powerful, especially in the context of conservative clones .
Deﬁnition 2.18 ([Bul03,Bul11]).A pair(a,b)∈B2is called a semilattice edge if there
existsf∈Pol(B)of arity two such that f(a,b) =b=f(b,a) =f(b,b)andf(a,a) =a.
We say that a two-element set {a,b} ⊆Bhas a semilattice edge if(a,b)or(b,a)is a
semilattice edge.
A two-element subset {a,b}ofBis called a majority edge if neither (a,b)nor(b,a)is
a semilattice edge and there exists an f∈Pol(B)of arity three whose restriction to {a,b}
is a majority operation.
A two-element subset {a,b}ofBis called an aﬃne edge if it is not a majority edge, if
neither(a,b)nor(b,a)is a semilattice edge, and there exists an f∈Pol(B)of arity three
whose restriction to {a,b}is a minority operation.
11IfS⊆Band (a,b)∈S2is a semilattice edge then we say that ( a,b)is a semilattice
edge onS. Similarly, if {a,b} ⊆Sis a majority edge (aﬃne edge) then we say that {a,b}
is amajority edge on S(aﬃne edge on S).
The main result about conservative ﬁnite structures and the ir CSPs is the following
dichotomy, ﬁrstproved by Bulatov, 14 years beforethe proof of the Feder-Vardi conjecture.
Theorem 2.19 ([Bul03]; see also [ Bar11,Bul11,Bul16]).LetBbe a ﬁnite structure with
a ﬁnite relational signature such that Pol(B)is conservative. Then precisely one of the
following holds:
1.Pol(B)contains a Siggers operation; in this case, CSP(B)is in P.
2. There exist distinct a,b∈Bsuch that for every f∈Pol(B)(n)the restriction of fto
{a,b}nis a projection. In this case, CSP(B)is NP-complete.
Note that this means that Pol( B) contains a Siggers operation if and only if for all two
elements a,b∈Bthe set{a,b}is a majority edge, an aﬃne edge, or there is a semilattice
edge on{a,b}.
2.5 The k-Consistency Procedure
We present in the following the k-consistency procedure. It was introduced in [ ABD07] for
ﬁnite structures and extended to inﬁnite structures in seve ral equivalent ways, for example
in terms of Datalog programs, existential pebble games, and ﬁnite variable logics [ BD13].
Also see [ MNPW21 ] for recent results about the power of k-consistency for inﬁnite-domain
CSPs.
Letτbe a ﬁnite relational signature and let k,l∈Nwithk < land letBbe a ﬁxed
τ-structures with ﬁnitely many orbits of l-tuples. We deﬁne B′to be the expansion of B
by all orbits of n-tuples for every n≤l. We denote the extended signature of B′byτ′.
LetAbe an arbitrary ﬁnite τ-structure. A partiall-decoration of Ais a setgof atomic
τ′-formulas such that
1. the variables of the formulas from gare a subset of Aand denoted by Var( g),
2.|Var(g)| ≤l,
3. theτ-formulas in ghold inA, where variables are interpreted as domain elements of
A,
4. the conjunction over all formulas in gis satisﬁable in B′.
A partial l-decoration gofAis called maximal if there exists no partial l-decoration
hofAwith Var( g) = Var( h) such that g/subsetnoteqlh. We denote the set of maximal partial
l-decorations of AbyRl
A. Note that a ﬁxed ﬁnite set of at most lvariables, there are only
12ﬁnitely many partial l-decorations of A, because Bhas by assumption ﬁnitely many orbits
ofl-tuples. Since this set is constant and can be precomputed, t he setRl
Acan be computed
eﬃciently. Then the ( k,l)-consistency procedure for Bis the following algorithm.
Algorithm 1: (k,l)-consistency procedure for B
Input:A ﬁniteτ-structure A.
1compute H:=Rl
A.
2repeat
3For every f∈ Hwith Var( f)≤kand every U⊆Awith|U| ≤l−k, if there
does not exist g∈ Hwithf⊆gandU⊆Dom(g), then remove ffromH.
4untilHdoes not change
5ifHis empty then
6returnReject.
7else
8returnAccept.
SinceRl
Ais of polynomial size (in the size of A) and the ( k,l)-consistency procedure
removes in step 3. at least one element from Rl
Athe algorithm has a polynomial run
time. The ( k,k+ 1)-consistency procedure is also called k-consistency procedure . The
(2,3)-consistency procedure is called path consistency procedure .1
Deﬁnition 2.20. LetBbe a relation τ-structure as deﬁned before. Then the (k,l)-
consistency procedure for Bsolves CSP( B)if the satisﬁable instances of CSP(B)are
precisely the accepted instances of the (k,l)-consistency procedure.
Remark 2.21. LetAbe a relation algebra with a normal representation B. We will in
the following say that the k-consistency procedure solves NSP(A)if it solves CSP(B). This
deﬁnition is justiﬁed by the correspondence of NSPs and CSPs f rom Theorem 2.12.
Theorem 2.22 ([KKVW15 ]).LetBbe a ﬁnite τ-structure. Then the following statements
are equivalent:
1. There exist k∈Nsuch that the k-consistency procedure solves CSP(B).
2.Bhas a3-ary weak near-unanimity polymorphism fand a4-ary weak near-unanimity
polymorphism gsuch that: ∀x,y,z∈B. f(y,x,x) =g(y,x,x,x).
LetA0be the atom structure of a relation algebra Awith a normal representation
B. We ﬁnish this section by connecting the solvability of CSP( A0) byk-consistency (or
1Some authors also call it the strong path consistency algorithm , because some forms of the deﬁnition of
the path consistency procedure are only equivalent to our de ﬁnition of the path consistency procedure if B
has a transitive automorphism group.
13its characterization in terms of polymorphims from the prev ious proposition) with the
solvability of CSP( B) byk-consistency. By Remark 2.21 this gives a criterion for the
solvability of NSP( A) by the k-consistency procedure.
Thefollowing theorem is from [ MNPW21 ] buildingon ideas from [ BM18]. We present it
here in a speciﬁc formulation that already incorporates a co rrespondence between polymor-
phisms of the atom structure and canonical operations. For m ore details see [ BK21,BK22].
Theorem 2.23 ([MNPW21 ]).LetBbe a normal representation of a ﬁnite relation al-
gebraAandA0the atom structure A. IfPol(A0)contains a 3-ary weak near-unanimity
polymorphism fand a4-ary weak near-unanimity polymorphism gsuch that
∀x,y,z∈B. f(y,x,x) =g(y,x,x,x),
thenNSP(A)is solved by the (4,6)-consistency algorithm.
3 The Undecidability of RBCP, CON, and PC
In order to view RBCP as a decision problem, we need the follow ing deﬁnitions. Let FRA
be the set of all relation algebras Awith domain P({1,...,n}).
Deﬁnition 3.1 (RBCP).We deﬁne the following subsets of FRA:
•RBCPdenotes the set such that NSP(A)is in P.
•RBCPcdenotesFRA\RBCP.
•CONdenotes the set such that NSP(A)is solved by k-consistency for some k∈N.
•PCdenotes the set such that NSP(A)is solved by path consistency.
The following theorem is our ﬁrst result. Note that this can b e seen as a negative
answer to Hirsch’s Really Big Complexity Problem [ Hir96].
Theorem 3.2. RBCPis undecidable, CONis undecidable, and PCis undecidable.
In our undecidability proofs we reducefrom thefollowing we ll-known undecidable prob-
lem for relation algebras [ HH01a].
Deﬁnition 3.3 (Rep).LetRepbe the computational problem of deciding for a given A∈
FRAwhetherAhas a representation.
In our proof we also use the fact that there exists U∈FRA such that NSP( U) is
undecidable [ Hir99]. Note that U∈Rep since the network satisfaction problem for non-
representable relation algebras is trivial and therefore d ecidable.
14Proof of Theorem 3.2. We reduce the problem Rep to RBCPc. Consider the following
reduction f: FRA→FRA. For a given A∈FRA, we deﬁne f(A) :=A×U.
Claim 1. IfA∈Rep then f(A)∈RBCPc. IfAis representable, then A×Uis
representable by the ﬁrst part of Lemma 2.9. Then there is a po lynomial-time reduction
fromNSP( U) toNSP( A×U) byLemma2.10. Thisshows that NSP( A×U) isundecidable,
and hence f(A) is in RBCPc.
Claim 2. IfA∈FRA\Rep then f(A)∈RBCP. If Ais not representable, then
A×Uis not representable by the second part of Lemma 2.9, and henc e NSP(A×U) is
trivial and in P, and therefore in RBCP.
Clearly,fis computable (even in polynomial time). Since Rep is undeci dable [HH01a],
this shows that RBCPc, and hence RBCP, is undecidable as well. The proof for CON and
PC is analogous; all we need is the fact that NSP( U)/∈CON and NSP( U)/∈PC.
4 Tractability via k-Consistency
We provide in this section a criterion that ensures solvabil ity of NSPs by the k-consistency
procedure (Theorem 4.4). A relation algebra Ais called symmetric if all its elements are
symmetric, i.e., ˘ a=afor every a∈A. We will see in the following that the assumption on
Ato be symmetric will simplify the atom structure A0ofA, which has some advantages
in the upcoming arguments.
Deﬁnition 4.1. LetAbe a ﬁnite symmetric relation algebra with set of atoms A0. We
say that Aadmits a Siggers behavior if there exists an operation s:A6
0→A0such that
1.spreserves the allowed triples of A,
2.∀x1,...,x 6∈A0. s(x1,...,x 6)∈ {x1,...,x 6},
3.ssatisﬁes the Siggers identity: ∀x,y,z∈A0. s(x,x,y,y,z,z ) =s(y,z,x,z,x,y ).
Remark 4.2. We mention that if Ahas a normal representation B, thenAadmits a
Siggers behavior if and only if Bhas a pseudo-Siggers polymorphism which is canonical
with respect to Aut(B); see [BM18].
We say that a ﬁnite symmetric relation algebra Ahas all1-cyclesif for every a∈A0
the triple ( a,a,a) is allowed. Details on the notion of cycles from the relatio n algebra per-
spective can be found in [ Mad06]. The relevance of the existence of 1-cycles for constraint
satisfaction comes from the following observation.
Lemma 4.3. LetAbe a ﬁnite symmetric relation algebra with a normal represen tationB
that has a binary injective polymorphism. Then Ahas all1-cycles.
15Proof.Letibea binary injective polymorphismof Band leta∈A0bearbitrary. Consider
x1,x2,y1,y2∈Bsuch that aB(x1,x2) andaB(y1,y2). The application of ion the tuples
(x1,x1,x2) and (y1,y2,y2) results in a substructure of Bthat witnesses that ( a,a,a) is an
allowed triple.
Theorem 4.4. LetAbe a ﬁnite symmetric relation algebra with a normal represen tation
B. Suppose that the following holds:
1.Ahas all1-cycles.
2.Aadmits a Siggers behavior.
Then the NSP(A)can be solved by the (4,6)-consistency procedure.
We will outline the proof of Theorem 4.4 and cite some results from the literature
that we will use. Assume that Ais a ﬁnite symmetric relation algebra that satisﬁes the
assumptions of Theorem 4.4. Since Aadmits a Siggers behavior there exists an operation
s:A6
0→A0that is by 1. and 2. in Deﬁnition 4.1 a polymorphism of the atom structure
A0(see Paragraph 2.4.2). By Remark 2.17, Pol( A0) is a conservative operation clone.
Recall the notion of semilattice, majority, and aﬃne edges f or conservative clones (cf. Def-
inition 2.18). Since sis by 3. in Deﬁnition 4.1 a Siggers operation, Theorem 2.19 im plies
that every edge in A0is semilattice, majority, or aﬃne.
Our goal is to show that there are no aﬃne edges in A0, since this implies that there
existsk∈Nsuch that CSP( A0) can be solved by k-consistency [ Bul11]. We present this
fact here via the characterization of ( k,l)-consistency in terms of weak near-unanimity
polymorphisms from Theorem 2.22.
Proposition 4.5 (cf. Corollary 3.2 in [ Kaz15]).LetA0be a ﬁnite conservative relational
structure with a Siggers polymorphism and no aﬃne edge. Then A0has a3-ary weak
near-unanimity polymorphism fand a4-ary weak near-unanimity polymorphism gsuch
that
∀x,y,z∈B. f(y,x,x) =g(y,x,x,x).
Notethattheexistenceoftheweaknear-unanimitypolymorp hismsfromProposition4.5
would ﬁnish the proof of Theorem 4.4, because Theorem 2.23 im plies that in this case
NSP(A) can be solved by the (4 ,6)-consistency procedure. We therefore want to prove
that there are no aﬃne edges in A0. We start in Section B.1 by analyzing the diﬀerent
types of edges in the atom structure A0and obtain results about their appearance.
Fortunately, there is the following result by Alexandr Kazd a about binary structures
withaconservative polymophismclone. A binary structure isastructurewhereall relations
have arity at most two.
Theorem 4.6 (Theorem 4.5 in [ Kaz15]).IfAis a ﬁnite binary conservative relational
structure with a Siggers polymorphism, then Ahas no aﬃne edges.
16Notice that we cannot simply apply this theorem to the atom st ructureA0, since the
maximal arity of its relations is three. We circumvent this o bstacle by deﬁning for A0a
closely related binary structure Ab
0, which we call the “binarisation of A0”. In Section B.2
we give the formal deﬁnition of Ab
0and investigate how Pol( A0) and Pol( Ab
0) relate to
each other. It follows from these observations that Ab
0does not have an aﬃne edge. In
other words, it only has semilattice and majority edges. The crucial step in our proof is to
transfer a witness of this fact to A0and conclude that also A0has no aﬃne edge. This is
done in Section B.3.
5k-Consistency and Symmetric Flexible-Atom Algebras
We apply our result from Section 4 to the class of ﬁnite symmet ric relation algebras with
a ﬂexible atom and obtain a k-consistency versus NP-complete complexity dichotomy.
A ﬁnite relation algebra Ais called integralif the element Id is an atom of A, i.e.,
Id∈A0. We deﬁne ﬂexible atoms for integral relation algebras only . For a discussion
about integrality and ﬂexible atoms consider Section 3 in [ BK22].
Deﬁnition 5.1. LetA∈RAbe ﬁnite and integral. An atom s∈A0is called ﬂexibleif
for alla,b∈A\{Id}it holds that s≤a◦b.
Relation algebras with a ﬂexible atom have been studied inte nsively in the context of
theﬂexible atoms conjecture [Mad94,AMM08]. It can be shown easily that ﬁnite relation
algebras withaﬂexibleatom haveanormalrepresentation [ BK21,BK22]. In[BK22]theau-
thors obtained a P versus NP-complete complexity dichotomy for NSPs of ﬁnite symmetric
relation algebras with a ﬂexible atom (assuming P /\e}atio\slash= NP). In the following we strengthen
this result and prove that every problem in this class can be s olved by k-consistency for
somek∈Nor is NP-complete (without any complexity-theoretic assum ptions).
We combine Theorem 4.4 with the main result of [ BK22] to obtain the following char-
acterization for NSPs of ﬁnite symmetric relation algebras with a ﬂexible atom that are
solved by the (4 ,6)-consistency procedure. Note that the diﬀerence of Theore m 5.2 and
the related result in [ BK22] is the algorithm that solves the problems in P.
Theorem 5.2. LetAbe a ﬁnite symmetric integral relation algebra with a ﬂexibl e atom.
Then the following are equivalent:
•Aadmits a Siggers behavior.
•NSP(A)can be solved by the (4,6)-consistency procedure.
Proof.Every ﬁnite symmetric relation algebra Awith a ﬂexible atom has a normal repre-
sentation Bby Proposition 3.5 in [ BK22].
If the ﬁrst item holds it follows from Proposition 6.1. in [ BK22] thatBhas a binary
injective polymorphism. By Lemma 4.3 the relation algebra Ahas all 1-cycles. We apply
Theorem 4.4 and get that the second item in Theorem 5.2 holds.
17We prove the converse implication by showingthe contraposi tion. Assumethat the ﬁrst
item is not satisﬁed. Then Theorem 9.1 in [ BK22] implies that there exists a polynomial-
timereductionfromCSP( K3)toNSP( A)whichpreservessolvability bythe( k,l)-consistency
procedure. The problem CSP( K3) is the 3-colorability problem which is known (e.g.,
by [BK09]) to be not solvable by the ( k,l)-consistency procedure for every k,l∈N. Hence
NSP(A) cannot be solved by the (4 ,6)-consistency procedure.
As a consequence of Theorem 5.2 we obtain the following stren gthening of the complex-
itydichotomyNSPsofﬁnitesymmetricintegralrelationalg ebrawithaﬂexibleatom[ BK22].
Corollary 5.3 (Complexity Dichotomy) .LetAbe a ﬁnite symmetric integral relation
algebra with a ﬂexible atom. Then NSP(A)can be solved by the (4,6)-consistency procedure,
or it is NP-complete.
Proof.Suppose that the ﬁrst condition in Theorem 5.2 holds. Then Th eorem 5.2 implies
that NSP( A) can be solved by the (4 ,6)-consistency procedure. If the ﬁrst condition in
Theorem 5.2 is not satisﬁed it follows from Theorem 9.1. in [ BK22] that NSP( A) is NP-
complete.
6 The Complexity of the Meta Problem
In this section we study the computational complexity of dec iding for a given ﬁnite sym-
metric relation algebra Awith a ﬂexible atom whether the k-consistency algorithm solves
NSP(A). We show that this problem is decidable in polynomial time e ven ifAis given
by the restriction of its composition table to the atoms of A: note that this determines
a symmetric relation algebra uniquely, and that this is an (e xponentially) more succinct
representation of Acompared to explicitly storing the full composition table.
Deﬁnition 6.1 (Meta Problem) .We deﬁne Metaas the following computational problem.
Input:the composition table of a ﬁnite symmetric relation algebra Arestricted to A0.
Question: is there a k∈Nsuch that k-consistency solves NSP(A)?
Our proof of Theorem 3.2 shows that Meta is undecidable as wel l. The proof of the
following theorem can be found in Appendix C.
Theorem 6.2. Metacan be decided in polynomial time if the input is restricted t o ﬁnite
symmetric integral relation algebras Awith a ﬂexible atom.
7 Conclusion and Open Questions
The question whether the network satisfaction problem for a given ﬁnite relation algebra
can be solved by the famous k-consistency procedure is undecidable. Our proof of this fa ct
18◦IdEN
IdIdEN
EEIdN
NNN1
Figure 2: Multiplication table of the relation algebra C.
heavily relies on prior work of Hirsch [ Hir99] and of Hirsch and Hodkinson [ HH01a] and
shows that almost any question about the network satisfacti on problem for ﬁnite relation
algebras is undecidable.
However, ifwefurtherrestricttheclass ofﬁniterelation a lgebras, onemayobtain strong
classiﬁcation results. We have demonstrated this for the cl ass of ﬁnite symmetric integral
relation algebras with a ﬂexible atom (Theorem 5.3); the com plexity of deciding whether
the conditions in our classiﬁcation result hold drops from u ndecidable to P (Theorem 6.2).
One of the remaining open problems is a characterisation of t he power of k-consistency for
the larger class of all ﬁnite relation algebras with a normal representation.
Our main result (Theorem 4.4) is a suﬃcient condition for the applicability of the k-
consistency procedure; the condition does not require the e xistence of a ﬂexible atom but
appliesmoregenerally toﬁnitesymmetricrelationalgebra sAwithanormalrepresentation.
Our condition consists of two parts: the ﬁrst is the existenc e of all 1-cycles in A, the second
is thatAadmits a Siggers behavior. We conjecture that dropping the ﬁ rst part of the
condition leads to a necessary and suﬃcient condition for so lvability by the k-consistency
procedure.
Conjecture 7.1. A ﬁnite symmetric relation algebra Awith a normal representation
admits a Siggers behavior if and only if NSP(A)can be solved by the k-consistency procedure
for some k∈N.
Note that this conjecture generalises Theorem 5.2. Both dir ections of the conjecture
are open. However, the forward direction of the conjecture i s true if Ahas a normal
representation withaprimitiveautomorphismgroup: inthi scase, it isknownthataSiggers
behavior implies the existence of all 1-cycles [ BK20], and hence the claim follows from
our main result (Theorem 5.2). The following example shows a ﬁnite symmetric relation
algebraAwhich does not have all 1-cycles and an imprimitive normal re presentation, but
still NSP( A) can be solved by the k-consistency procedure for some k∈N.
Example 7.2. Theorem 4.4 is a suﬃcient condition for the NSP of a relation al gebraA
to be solved by the k-consistency procedure for some k∈N. However, there exists a ﬁnite
symmetric relation algebra Csuch that NSP(C)is solved by the 2-consistency procedure,
but we cannot prove this by the methods used to obtain Theorem 4 .4. Consider the relation
algebraCwith atoms {Id,E,N}and the multiplication table in Figure 2. This relation
19algebra has a normal representation, namely the expansion o f the inﬁnite disjoint union
of the clique K2by all ﬁrst-order deﬁnable binary relations. We denote this structure by
ωK2. One can observe that CSP(ωK2)and therefore also the NSP of the relation algebra
can be solved by the (2,3)-consistency algorithm (for details see [ Kn¨ a23]).
The relation algebra Cdoes not have all 1-cycles and therefore does not fall into the
scope of Theorem 4.4. In fact, our proof of Theorem does not work f orC, because the CSP
of the atom structure C0ofCcannot be solved by the k-consistency procedure for some
k∈N. Hence, the reduction of NSP(C)toCSP(C0)(incorporated in Theorem 2.23) does
not imply that NSP(C)can be solved by k-consistency procedure for some k∈N.
The following problems are still open and are relevant for re solving Conjecture 7.1.
•Show Conjecture 7.1 if the normal representation of Ahas a primitive automorphism
group.
•Characterise the power of the k-consistency procedure for the NSP of ﬁnite relation
algebras with a normal representation whose automorphism g roup is imprimitive. In
this case, thereis anon-trivial deﬁnableequivalencerela tion. Itis alreadyknownthat
if this equivalence relation has ﬁnitely many classes, then the NSP is NP-complete
and thek-consistency procedure does not solve the NSP [ BK20]. Similarly, the NSP
is NP-complete if there are equivalence classes of ﬁnite siz e larger than two. It
therefore remains to study the case of inﬁnitely many two-el ement classes, and with
inﬁnitely many inﬁnite classes. In both cases we wish to redu ce the classiﬁcation to
the situation with a primitive automorphism group.
Finally, we ask whether it is true that if Ais a ﬁnite symmetric relation algebra with a
ﬂexible atom and NSP( A) can be solved by the k-consistency procedure for some k, then
it can also be solved by the (2 ,3)-consistency procedure? In other words, improve (4 ,6) in
Corollary 5.3 to (2 ,3).
References
[ABD07] Albert Atserias, Andrei A. Bulatov, and V´ ıctor Dal mau. On the power of
k-consistency. In ICALP, pages 279–290, 2007.
[AMM08] Jeremy F. Alm, Roger D. Maddux, and Jacob Manske. Chr omatic graphs,
Ramsey numbers and the ﬂexible atom conjecture. The Electronic Journal of
Combinatorics , 15(1), March 2008.
[Bar11] Libor Barto. The dichotomy for conservative constr aint satisfaction problems
revisited. In Proceedings of the Symposium on Logic in Computer Science
(LICS), Toronto, Canada, 2011.
20[BD13] Manuel Bodirsky and V´ ıctor Dalmau. Datalog and cons traint satisfaction
with inﬁnitetemplates. Journal on Computer and System Sciences , 79:79–100,
2013. A preliminary version appeared in the proceedings of t he Symposium
on Theoretical Aspects of Computer Science (STACS’05).
[BJ17] Manuel Bodirsky and Peter Jonsson. A model-theoreti c view on qualitative
constraint reasoning. Journal of Artiﬁcial Intelligence Research , 58:339–385,
2017.
[BK09] Libor Barto and Marcin Kozik. Constraint satisfacti on problems of bounded
width. In Proceedings of Symposium on Foundations of Computer Science
(FOCS), pages 595–603, 2009.
[BK14] Libor Barto and Marcin Kozik. Constraint satisfacti on problems solvable by
local consistency methods. Journal of the ACM , 61(1):3:1–3:19, 2014.
[BK20] Manuel Bodirsky and Simon Kn¨ auer. Hardness of netwo rk satisfaction for
relation algebras with normal representations. In Relational and Algebraic
Methods in Computer Science , pages 31–46. SpringerInternational Publishing,
2020.
[BK21] Manuel Bodirsky and Simon Kn¨ auer. Network satisfac tion for symmetric re-
lation algebras with a ﬂexible atom. In Proceedings of AAAI , 2021. Preprint
https://arxiv.org/abs/2008.11943.
[BK22] Manuel Bodirsky and Simon Kn¨ auer. The complexity of network satisfaction
problems for symmetric relation algebras with a ﬂexible ato m.Journal of
Artiﬁcial Intelligence Research , 75:1701–1744, December 2022.
[BKKR69] V. G. Bodnarˇ cuk, L. A. Kaluˇ znin, V. N. Kotov, and B . A. Romov. Galois
theory for Post algebras, part I and II. Cybernetics , 5:243–539, 1969.
[BM18] Manuel Bodirsky and Antoine Mottet. A dichotomy for ﬁ rst-order reducts of
unary structures. Logical Methods in Computer Science , 14(2), 2018.
[Bod12] Manuel Bodirsky. Complexity classiﬁcation in inﬁn ite-domain constraint sat-
isfaction. M´ emoire d’habilitation ` a diriger des recherc hes, Universit´ e Diderot
– Paris 7. Available at arXiv:1201.0856v8, 2012.
[Bod18] Manuel Bodirsky. Finite relation algebras with nor mal representations. In Re-
lational and Algebraic Methods in Computer Science - 17th Inte rnational Con-
ference, RAMiCS 2018, Groningen, The Netherlands, October 29 - November
1, 2018, Proceedings , pages 3–17, 2018.
21[Bul03] Andrei A. Bulatov. Tractable conservative constra int satisfaction problems.
InProceedings of the Symposium on Logic in Computer Science (LICS) , pages
321–330, Ottawa, Canada, 2003.
[Bul11] Andrei A. Bulatov. Complexity of conservative cons traint satisfaction prob-
lems.ACM Trans. Comput. Logic , 12(4), jul 2011.
[Bul16] Andrei A. Bulatov. Conservative constraint satisf action re-revisited. Journal
Computer and System Sciences , 82(2):347–356, 2016. ArXiv:1408.3690.
[Bul17] Andrei A. Bulatov. A dichotomy theorem for nonunifo rm CSPs. In 58th
IEEE Annual Symposium on Foundations of Computer Science, FOCS 2017,
Berkeley, CA, USA, October 15-17 , pages 319–330, 2017.
[CH04] Matteo Cristiani and Robin Hirsch. The complexity of the constraint sat-
isfaction problem for small relation algebras. Artiﬁcial Intelligence Journal ,
156:177–196, 2004.
[CL17] Hubie Chen and Benoˆ ıt Larose. Asking the metaquesti ons in constraint
tractability. TOCT, 9(3):11:1–11:27, 2017.
[D¨ un05] Ivo D¨ untsch. Relation algebras and their applica tion in temporal and spatial
reasoning. Artiﬁcial Intelligence Review , 23:315–357, 2005.
[FV99] Tom´ as Feder and Moshe Y. Vardi. The computational st ructure of monotone
monadic SNP and constraint satisfaction: a study through Da talog and group
theory.SIAM Journal on Computing , 28:57–104, 1999.
[Gei68] David Geiger. Closed systems of functions and predi cates.Paciﬁc Journal of
Mathematics , 27:95–100, 1968.
[HH01a] R. Hirsch andI. Hodkinson. Representability is not decidable for ﬁniterelation
algebras. Transactions of the American Mathematical Society , 353(4):1387–
1401), 2001.
[HH01b] R. Hirsch and I. Hodkinson. Strongly representable atom structures of relation
algebras. Transactions of the American Mathematical Society , 130(6):1819–
1831), 2001.
[HH02] RobinHirsch andIan Hodkinson. Relation Algebras by Games . North Holland,
2002.
[Hir96] Robin Hirsch. Relation algebras of intervals. Artiﬁcial Intelligence Journal ,
83:1–29, 1996.
22[Hir97] Robin Hirsch. Expressive power and complexity in al gebraic logic. Journal of
Logic and Computation , 7(3):309 – 351, 1997.
[Hir99] Robin Hirsch. A ﬁnite relation algebra with undecid able network satisfaction
problem. Logic Journal of the IGPL , 7(4):547–554, 1999.
[Kaz15] Alexandr Kazda. CSP for binary conservative relati onal structures. Algebra
universalis , 75(1):75–84, December 2015.
[KKVW15] Marcin Kozik, Andrei Krokhin, Matt Valeriote, and Ross Willard. Charac-
terizations of several Maltsev conditions. Algebra universalis , 73(3):205–224,
2015.
[Kn¨ a23] Simon Kn¨ auer. Constraint Network Satisfaction for Finite Relation Algebr as.
PhD thesis, Technische Universit¨ at Dresden, 2023.
[Lyn50] R. Lyndon. The representation of relational algebr as.Annals of Mathematics ,
51(3):707–729, 1950.
[Mad94] Roger D. Maddux. A perspective on the theory of relat ion algebras. Algebra
Universalis , 31(3):456–465, September 1994.
[Mad06] Roger D. Maddux. Relation Algebras: Volume 150 . Studies in logic and the
foundations of mathematics. Elsevier Science, London, Eng land, May 2006.
[McK66] Ralph McKenzie. The representation of relation algebras . PhD thesis, Univer-
sity of Colorado at Boulder, 1966.
[McK70] Ralph McKenzie. Representations of integral relat ion algebras. Michigan
Mathematical Journal , 17(3):279 – 287, 1970.
[MNPW21] Antoine Mottet, Tom´ as Nagy, Michael Pinsker, and Michal Wrona. Smooth
approximations and relational width collapses. In Nikhil B ansal, Emanuela
Merelli, and James Worrell, editors, 48th International Colloquium on Au-
tomata, Languages, and Programming, ICALP 2021, July 12-16, 20 21, Glas-
gow, Scotland (Virtual Conference) , volume 198of LIPIcs, pages 138:1–138:20.
Schloss Dagstuhl - Leibniz-Zentrum f¨ ur Informatik, 2021.
[RN07] Jochen Renz and Bernhard Nebel. Qualitative spatial reasoning using con-
straint calculi. In M. Aiello, I. Pratt-Hartmann, and J. van Benthem, editors,
Handbook of Spatial Logics , pages 161–215. Springer Verlag, Berlin, 2007.
[Tar48] Alfred Tarski. Representation problems for relati on algebras. Bulletin of the
AMS, 54(80), 1948.
23[Zhu17] Dmitriy N. Zhuk. A proof of CSP dichotomy conjecture . In58th IEEE Annual
Symposium on Foundations of Computer Science, FOCS 2017, Berk eley, CA,
USA, October 15-17 , pages 331–342, 2017. https://arxiv.org/abs/1704.01914 .
[Zhu20] Dmitriy Zhuk. A proof of the CSP dichotomy conjectur e.J. ACM, 67(5):30:1–
30:78, 2020.
A Preliminaries
A.1 The Network Satisfaction Problem
Lemma 2.9. LetA1andA2be relation algebras. Then the following holds:
1. IfB1andB2are representations of A1andA2with disjoint domains, then B1⊎B2
is a representation of A1×A2.
2. IfBis a representation of A1×A2, then there exist representations B1andB2of
A1andA2such that Bis isomorphic to B1⊎B2.
Proof.The ﬁrst item can be checked by a straightforward calculatio n. For the second item
note that elements of A1×A2are pairs ( a1,a2)∈A1×A2. SinceBis a representation of
A1×A2, there exists for every ( a1,a2)∈A1×A2a binary relation ( a1,a2)B. For better
readability, we denote constants of relation algebras by th e signature elements {0,1,Id}
(without the superscipt). It will always be clear from the co ntext which algebra is meant.
Forexample, (0 ,1)∈A1×A2ismeanttobetheelement (0A1,1A2)ofthealgebra A1×A2.
Consider the sets
B1:={x∈B|(x,x)∈(1,0)B}
andB2:={x∈B|(x,x)∈(0,1)B}.
We claim that {B1,B2}forms a partition of B. Clearly, B1∪B2=B, because
{(x,x)|x∈B}= (Id,Id)B⊆((1,0)B∪(0,1)B).
By the deﬁnition of the relation algebra A1×A2it holds that (0 ,0) = (1,0)∩A1×A2(0,1).
SinceBis a representation of A1×A2we have ∅= (0,0)B= (1,0)B∩(0,1)BandB=
(1,1)B= (1,0)B∪(0,1)Band it follows that ∅=B1∩B2andB=B1∪B2. Hence,
{B1,B2}is a partition of B.
Furthermore, we claim that there is no pair ( x,y)∈B1×B2in any relation ( a1,a2)B⊆
(1,1)BofB. So see this, note that for a tuple ( x,y)∈B1×B2with (x,y)∈(1,1)Bit
follows from the deﬁnition of the relational product ◦that{(x,y)}= ({(x,x)}◦{(x,y)})◦
{(y,y)}and therefore ( x,y)∈((1,0)B◦(1,1)B)◦(0,1)Bholds. Since this contradicts
∅= (0,0)B= ((1,0)B◦(1,1)B)◦(0,1)B, there is no pair ( x,y)∈B1×B2in any relation
(a1,a2)B⊆(1,1)B.
24Altogether we observe that B1is the domain of an ( A1× {0})-structure B1with
(a,0)B1:= (a,0)Bfor every a∈A1. Analogously, the ( {0} ×A2)-structure B2is deﬁned
by (0,a)B2:= (0,a)Bfor every a∈A2. One can check that the mapping a/mapsto→(a,0)B1is
indeed an isomorphism that witnesses that A1has the representation B1. Analogously, we
get that a/mapsto→(0,a)Bwitnesses that A2has the representation B2.
A.2 The Universal-Algebraic Approach
A.2.1 Conservative Clones
According to Deﬁnition 2.18, an “edge type” of a concrete set {a,b} ⊆Bis witnessed by
a certain operation. For another set {c,d} ⊆Bthis could a priori be a diﬀerent operation
(even if the two sets have the same edge type). However, Bulat ov obtained “uniform
witness operations” by the following proposition.
Proposition A.1 (Proposition 3.1.in [ Bul11]).LetBbe a ﬁnite structure. Then there are
a binary operation v∈Pol(B)and ternary operations g,h∈Pol(B)such that for every
two-element subset CofBwe have that
•v|Cis a semilattice operation whenever Chas a semilattice edge, and v|C(x,y) =x
otherwise;
•g|Cis a majority operation if Cis a majority edge, g|C(x,y,z) =xifCis aﬃne and
g|C(x,y,z) =v|C(v|C(x,y),z)ifChas a semilattice edge;
•h|Cis a minority operation if Cis an aﬃne edge, h|C(x,y,z) =xifCis majority
andh|C(x,y,z) =v|C(v|C(x,y),z)ifChas a semilattice edge.
B Tractability via k-Consistency
B.1 The Atom Structure
For the sake of notation, we make some global assumptions for Sections B.1-B.3. Let A
be a ﬁnite relation algebra that satisﬁes the assumptions fr om Theorem 4.4. We denote by
A0the atom structure of A(Deﬁnition 2.15). Since Ais a symmetric relation algebra, the
relationRA0is totally symmetric. Furthermore, we can drop the binary re lationEA0, since
it consists only of loops and does not change the set of polymo rphisms. Let s∈Pol(A0)
be the Siggers operation that exists by the assumptions in Th eorem 4.4. This implies by
Theorem 2.19 for every a,b∈A0that the set {a,b}is a majority edge or an aﬃne edge,
or that there is a semilattice edge on {a,b}. The diﬀerent types of edges are witnessed
by certain operations that we get from Proposition A.1: ther e exist a binary operation
f∈Pol(A0) and ternary operations g,h∈Pol(A0) such that for every two element subset
CofA0,
25•f|Cis a semilattice operation whenever Chas a semilattice edge, and f|C(x,y) =x
otherwise;
•g|Cis a majority operation if Cis a majority edge, g|C(x,y,z) =xifCis aﬃne and
g|C(x,y,z) =f|C(f|C(x,y),z) ifChas a semilattice edge;
•h|Cis a minority operation if Cis an aﬃne edge, h|C(x,y,z) =xifCis majority
andh|B(x,y,z) =f|C(f|C(x,y),z) ifChas a semilattice edge.
Wewillﬁxtheseoperationsandintroducethefollowingterm inology. Atuple( a,b)∈A0
is called f-sliff(a,b) =b=f(b,a) holds. Next, we prove several important properties of
the relation R: that it must contain certain triples (Lemma B.1), that it mu st not contain
certain other triples (Lemma B.2), and that it is aﬀected by th e presence of semilattice
edges in A0(Lemma B.3 and Lemma B.4).
Lemma B.1. The relation Rof the atom structure A0has the following properties:
•for alla∈A0we have (a,a,a)∈R.
•for alla,b∈A0we have (a,a,b)∈Ror(a,b,b)∈R;
Proof.The ﬁrst item follows from the assumption that Ahas all 1-cycles.
For the second item observe that {a,Id}cannot be a majority edge. Otherwise,
g((a,a,Id),(Id,a,a),(Id,Id,Id)) = (Id ,a,Id)∈R
is a contradiction to the properties of Id. Furthermore, ( a,Id) cannot be f-sl, since
f((a,a,Id),(Id,a,a)) = (Id,a,Id)∈R.
This is again a contradiction. Since these observations als o hold for binstead of awe have
the following case distinction.
1. (Id,a)isf-sland(Id ,b)isf-sl. Itfollowsthat f((a,a,Id),(Id,b,b))∈ {(a,a,b),(a,b,b)}.
Sincefpreserves R, (a,a,Id)∈R,and(Id,b,b)∈Rwegetthat f((a,a,Id),(Id,b,b))∈
R. This implies that ( a,a,b)∈Ror (a,b,b)∈R.
2. (Id,a) isf-sland{b,Id}is aﬃne. By the deﬁnitionof fwe getf((b,b,Id),(Id,a,a))∈
{(b,a,a),(b,b,a)}. By the same argument as in Case 1 we get that ( a,a,b)∈Ror
(a,b,b)∈R.
3. (Id,b) isf-sl and{a,Id}is aﬃne. This case is analogous to Case 2.
4.{a,Id}is aﬃne and {b,Id}is aﬃne. Observe that
g((a,Id,a),(Id,b,b),(Id,Id,Id))∈ {(a,b,a),(a,b,b)},
sinceg(a,b,Id)∈ {a,b,Id}and the triple ( a,b,Id) is forbidden. As in the cases before
it follows that ( a,a,b)∈Ror (a,b,b)∈R.
26abc
⇒
abc
Figure 3: The statement of Lemma B.2. The red shapemeans ( a,b,c)/∈R, the black arrow
means (a,a,b)/∈R.
This concludes the proof of the second item.
Lemma B.2. Leta,b,c∈A0be such that (a,b,c)/∈Rand|{a,b,c}|= 3. Then there are
x,y∈ {a,b,c}such that (x,x,y)/∈R.
Proof.We ﬁrst suppose that there is a semilattice edge on {a,b,c}. Without loss of gener-
ality we assume that ( a,b) isf-sl. Iff(c,a) =cthen (a,a,c)/∈Ror (b,a,a)/∈Rbecause
otherwise
f((a,a,c),(b,a,a)) = (b,a,c)∈R
contradicting our assumption. If f(c,a) =athen (b,c,c)/∈Ror (a,a,c)/∈Rbecause
otherwise
f((b,c,c),(a,a,c)) = (b,a,c)∈R
which is again a contradiction. Hence, in all the cases we fou ndx,y∈ {a,b,c}such that
(x,x,y)/∈Rand are done. In the following we therefore assume that there is no semilattice
edge on{a,b,c}.
Next we suppose that there is an aﬃne edge on {a,b,c}. Without loss of generality we
assume that {a,b}is an aﬃne edge. Since there are no semilattice edges on {a,b,c}we
distinguish the following two cases:
1.{a,c}is an aﬃne edge. In this case ( c,a,a)/∈Ror (a,b,a)/∈Rbecause otherwise
h((c,a,a),(a,a,a),(a,b,a)) = (c,b,a)∈R.
2.{a,c}is a majority edge. In this case ( a,a,c)/∈Ror (a,b,a)/∈Ror (b,b,c)/∈R,
because otherwise
h((a,a,c),(a,b,a),(b,b,c)) = (b,a,c)∈R.
In both cases we again found x,y∈ {a,b,c}such that ( x,x,y)/∈Rand are done. We
therefore suppose in the following that there are no aﬃne edg es on{a,b,c}. Hence, all
27a a′bc
⇒
a a′bc
×
Figure 4: The statement of Lemma B.4. The blue shape means ( a′,b,c)∈R, the crossed-
out red arrow means ( a′,a) is not a semilattice edge.
edges on {a,b,c}are majority edges. Then ( a,a,c)/∈Ror (a,b,a)/∈Ror (b,b,c)/∈R
because otherwise
g((a,a,c),(a,b,a),(b,b,c)) = (a,b,c)∈R.
Thus, also in this case we found x,y∈ {a,b,c}such that ( x,x,y)/∈R.
The next lemma states that the edge type on {a,b}is predetermined whenever a triple
(a,a,b) is not in R.
Lemma B.3. Leta,b∈A0be such that (a,a,b)/∈R. Then(a,b)is a semilattice edge in
A0but(b,a)is not.
Proof.By Lemma B.1 we know that ( a,b,b)∈R, (a,a,a)∈R, and (b,b,b)∈R. Assume
for contradiction that {a,b}is a majority edge. Then
g((a,a,a),(a,b,b),(b,b,a)) = (a,b,a)
which contradicts the fact that gpreserves R. Assume next that {a,b}is an aﬃne edge.
Then
h((a,b,b),(b,a,b),(b,b,b)) = (a,a,b)
which again contradicts the fact that hpreserves R. Finally, if ( b,a) is a semilattice edge
then
f((a,b,b),(b,a,b)) = (a,a,b)
which contradicts the assumption that fpreserves R. If follows that ( a,b) is the only
semilattice edge on {a,b}and therefore f(a,b) =b=f(b,a) holds.
Lemma B.4. Leta,a′,b,c∈A0be such that (a,b,c)/∈R,(a,a,b)/∈R, and(a′,b,c)∈R.
Then(a′,a)is not a semilattice edge.
Proof.Assume for contradiction ( a′,a) is a semilattice edge, i.e., there exists p∈Pol(A0)
withp(a,a′) =a=p(a′,a). Note that by Lemma B.1 it follows that ( a,a,a)∈Rand
(a,b,b)∈R.
28Claim 1: p(b,a) =aimpliesp(a,b) =b. This follows immediately, since otherwise
p((a,b,b),(b,a,b)) = (a,a,b)∈Ris a contradiction.
Claim 2: (a,a,c)/\e}atio\slash∈R. We assume the opposite and consider the only two possible ca ses
forp(b,a).
1.p(b,a) =b: We get a contradiction by p((a′,b,c),(a,a,c)) = (a,b,c)∈R.
2.p(b,a) =a: By Claim 1 we know that p(a,b) =bfollows. Then p((a,a,c),(a′,b,c)) =
(a,b,c)∈Rcontrary to our assumptions.
This proves Claim 2.
Claim 3: p(c,a) =aimpliesp(a,c) =c. Lemma B.1 together with Claim 2 implies that
(a,c,c)∈R. Now Claim 3 follows immediately, since otherwise p((a,c,c),(c,a,c)) =
(a,a,c)∈R, which contradicts Claim 2.
We ﬁnally make a case distinction for all possible values of pon (b,a) and (c,a).
1.p(b,a) =bandp(c,a) =c: We get a contradiction by p((a′,b,c),(a,a,a)) = (a,b,c)∈
R.
2.p(b,a) =bandp(c,a) =a: We get acontradiction by p((a′,b,c),(a,a,a)) = (a,b,a)∈
R.
3.p(b,a) =aandp(c,a) =c:p((a′,b,c),(a,a,a)) = (a,a,c)∈Rcontradicts Claim 2.
4.p(b,a) =aandp(c,a) =a: By Claim 1 we get p(a,b) =band by Claim 3 we get
p(a,c) =c. This yields a contradiction by p((a,a,a),(a′,b,c)) = (a,b,c)∈R.
This proves the lemma.
B.2 The Binarisation
We have announced in the introduction that we want to apply Ka zda’s theorem (Theo-
rem 4.6) for binary conservative structures, but the atom st ructureA0from Section B.1
has a ternary relation. We therefore associate a certain bin ary structure Ab
0toA0which
shares many properties with A0.
Deﬁnition B.5. We denote by Ab
0the structure with domain A0and the following rela-
tions:
•a unary relation USfor each subset SofA0;
•for every a∈A0the binary relation Ra:={(x,y)∈A2
0|(a,x,y)∈R};
•a relation for every union of relations of the form Ra.
29◦IdE
IdIdE
EE1
Figure 5: Multiplication table of the relation algebra K.
The binarisation of A0according to Deﬁnition B.5 will be denoted by Ab
0. We obtain
the following results about the relationship of Pol( A0) and Pol( Ab
0).
Lemma B.6. Pol(A0)⊆Pol(Ab
0).
Proof.Clearly, everyrelation Rahastheprimitivepositivedeﬁnition ∃z(U{a}(z)∧R(z,x,y))
inA0. A primitive positive deﬁnition of ∪a∈SRais∃z(US(z)∧R(z,x,y)) inA0. Then the
statement of the lemma follows by Theorem 2.14.
Lemma B.7. Pol(2)(Ab
0)⊆Pol(2)(A0).
Proof.Letf∈Pol(2)(Ab
0). Itsuﬃcestoprovethat fpreservestherelation RA0. Arbitrarily
choose (a1,b1,c1),(a2,b2,c2)∈R. We want to show that t:= (f(a1,a2),f(b1,b2),f(c1,c2))
is inRas well. If t∈ {(a1,b1,c1),(a2,b2,c2)}then there is nothingto beshown. Otherwise,
sincefmust preserve {a1,a2},{b1,b2}, and{c1,c2}, by the symmetry of Rand possibly
ﬂipping the arguments of fwe may assume without loss of generality that f(a1,a2) =a1,
f(b1,b2) =b1, andf(c1,c2) =c2. So we have to show that t= (a1,b1,c2)∈R. Note
that (b1,c1)∈Ra1and (b2,c2)∈Ra2, and therefore ( f(b1,b2),f(c1,c2))∈Ra1∪Ra2.
In the ﬁrst case, we obtain that ( b1,c2)∈Ra1, and hence ( a1,b1,c2)∈Rand we are
done. In the second case, we obtain that ( b1,c2)∈Ra2, and hence ( a2,b1,c2)∈R. In
partciular, ( a2,c2)∈Rb1. Since ( a1,c1)∈Rb1and since fpreserves Rb1we have that
(f(a1,a2),f(c1,c2)) = (a1,c2)∈Rb1, and hence ( a1,b1,c2)∈R, which concludes the
proof.
Observe that this implies that Ab
0andAhave exactly the same semilatice edges. The
following example shows that in general it does not hold that Pol(Ab
0)⊆Pol(A0).
Example B.8. LetKbe the relation algebra with two atoms {Id,E}and the multiplication
table given in Figure 5. It is easy to see that the expansion of t he inﬁnite clique Kωby all
ﬁrst-order deﬁnable binary relations is a normal represent ation of K. ThenK0does not
have a majority polymorphism, but Kb
0does since every binary relation on a two-element
set is preserved by the (unique) majority operation on a two- element set.
30B.3 No Aﬃne Edges in the Atom Structure
We show in this section that under the assumption that Ab
0has a Siggers polymorphism
and has no aﬃne edge, A0also has no aﬃne edge. So let us assume for the whole section
that Pol( Ab
0) contains a Siggers operation and that Ab
0has no aﬃne edge.
SinceAb
0isconservativeandhasnoaﬃneedge, thereexistsaccording toPropositionA.1
a binary operation v∈Pol(A0) and a ternary operation w∈Pol(A0) such that for every
two element subset CofA0,
•v|Cis a semilattice operation whenever Chas a semilattice edge, and v|C(x,y) =x
otherwise;
•w|Cisamajority operation if Cisamajority edgeand w|C(x,y,z) =v|C(v|C(x,y),z)
ifChas a semilattice edge.
We deﬁne
u(x,y,z) :=w(v(v(x,y),z),v(v(y,z),x),v(v(z,x),y)).
Lemma B.9. The structures A0andAb
0have exactly the same semilattice edges. Let
a,b∈A0be such that {a,b}has no semilattice edge in the two structures. Then the
restriction of uto{a,b}is a majority operation.
Proof.By Lemma B.6 and Lemma B.7, the structures A0andAb
0have exactly the same
semilattice edges, since they have the same binary polymorp hisms. The second statement
follows from the deﬁnition of uby means of wandv.
Deﬁnition B.10. Letfbe a binary operation on A0. Then we say that {a,b,c} ⊆A0has
thef-cycle (x,y,z)if{x,y,z}={a,b,c}and(x,y),(y,z), and(z,x)aref-sl.
Lemma B.11. Leta,b,c∈A0be such that (a,b)isv-sl but(a,b,c)is not av-cycle. Then
u(r,s,t)/\e}atio\slash=afor any choice of r,s,t∈A0such that {r,s,t}={a,b,c}.
Proof.We prove a series of intermediate claims.
Claim 1: If{x,y,z}={a,b,c}andv(v(x,y),z) =a, thenz=a. We assume for contradic-
tion that z/\e}atio\slash=aand distinguish the following cases.
1.x=a,y=b,z=c: Thenv(v(x,y),z) =v(b,c)∈ {b,c}.
2.x=a,y=c,z=b: Thenv(v(x,y),z)∈ {v(a,b),v(c,b)} ⊆ {b,c}.
3.x=b,y=a,z=c: Thenv(v(x,y),z) =v(b,c)∈ {b,c}.
4.x=c,y=a,z=b: Thenv(v(x,y),z)∈ {v(c,b),v(a,b)} ⊆ {b,c}.
31In all four cases we have v(v(x,y),z)/\e}atio\slash=a, which contradicts our assumption and proves
the claim.
Claim 2: If{x,y,z}={a,b,c}andv(v(x,y),z) =a, then (c,a) isv-sl.
By Claim 1 we get that z=aand furthermore we have v(x,y) =v(b,c) =csince
otherwise v(x,y) =v(b,c) =bandv(v(x,y),z) =v(b,a) =b, which contradicts our
assumption. Assume for contradiction that ( c,a) is not v-sl and therefore one of the
following holds:
1. (a,c) isv-sl. It follows that v(v(x,y),z) =v(c,a) =cwhich contradicts our assump-
tion.
2.{a,c}is a majority edge of Ab
0. It follows again that v(v(x,y),z) =v(c,a) =c,
sincevbehaves like the projection on the ﬁrst coordinate on majori ty edges. This
contradicts our assumption.
Claim 3: If{x,y,z}={a,b,c}andv(v(x,y),z) =a, then{b,c}is a majority edge of Ab
0.
Assume for contradiction that there is a semilattice edge on {b,c}={x,y}. By Claim
2 and our assumption that ( a,b,c) is not a v-cycle, the edge ( b,c) is notv-sl and therefore
(c,b) isv-sl. Therefore, we get v(v(x,y),z) =v(b,a) =bwhich contradicts our assumption.
Claim 4: If{x,y,z}={a,b,c}andv(v(x,y),z) =a, thenv(v(z,x),y) =b=v(v(y,z),x)
follows. By Claim 3, {b,c}is a majority edge of Ab
0and it follows that b=yandc=x
since otherwise v(v(x,y),z) =v(b,a) =b. Now we calculate
v(v(z,x),y)) =v(v(a,c),b)) =v(a,b) =b=v(b,c) =v(v(b,a),c) =v(v(y,z),x)
which proves the claim.
Now we are able to prove the statement of the lemma. Assume for contradiction that
u(r,s,t) =a. Sincewpreserves UA\{a}this is only possible if at least one of the terms
v(v(r,s),t),v(v(s,t),r), orv(v(t,r),s)) evaluates to a. By Claim 4 we get that the two
other terms evaluate to b. Since (a,b) isv-sl we get that w(a,b,b) =w(b,a,b) =w(b,b,a) =
bwhich contradicts our assumption u(r,s,t) =a.
Theorem B.12. Ifu∈Pol(Ab
0), thenu∈Pol(A0).
Proof.We have to prove that upreserves R. Let (a1,b1,c1),(a2,b2,c2),(a3,b3,c3)∈Rand
let
(a,b,c) := (u(a1,a2,a3),u(b1,b2,b3),u(c1,c2,c3)).
Assume for contradiction that ( a,b,c)/\e}atio\slash∈R. By Lemma B.2, we may assume without loss
of generality that ( a,a,b)/\e}atio\slash∈Rand hence by Lemma B.3 ( a,b) is a semilattice edge in
A0and (b,a) is not. By Lemma B.9 the structures A0andAb
0have exactly the same
semilattice edges. This implies that {a,b}has a semilattice edge; this semilattice edge can
32only be ( a,b) and therefore ( a,b) isv-sl. Since upreserves Ra1∪Ra2∪Ra3there exists
r∈ {a1,a2,a3}such that ( r,b,c)∈R. By Lemma B.4 we get that ( r,a) is not a semilattice
edge inA0and therefore Lemma B.7 implies that ( r,a) is not a semilattice edge in Ab
0and
we get that ( r,a) is notv-sl. Lets∈ {a1,a2,a3}\{a,r}.
Claim 1: {a,r,s}does not have a v-cycle. Assume for contradiction that {a,r,s}has a
v-cycle. Since ( r,a) is notv-sl it follows that ( a,r) isv-sl and therefore ( s,a) isv-sl. We
consider the following two cases:
1. (s,b,c)∈R. Then Lemma B.4 applied to a,s,b,cimplies that ( s,a) is not a semilat-
tice edge and therefore by Lemma B.7 ( s,a) is notv-sl, which is a contradiction.
2. (s,b,c)/\e}atio\slash∈R. Note that ( s,s,b)/\e}atio\slash∈Rholds, since ( s,a) isv-sl andv((s,s,b),(a,a,a)) =
(a,a,b)∈Ryields a contradiction to ( a,a,b)/\e}atio\slash∈R. Hence, Lemma B.4 applied to
s,r,b,cimplies that ( r,s) is not a semilattice edge and therefore by Lemma B.7 ( r,s)
is notv-sl, which is again a contradiction.
This proves that {a,r,s}cannot have a v-cycle.
Claim 2: u(a,a,r) =a. Assume for contradiction that u(a,a,r) =r. Then {a,r}is
clearly not a majority edge of Ab
0, and since Ab
0does not have aﬃne edges it follows that
(a,r) isv-sl. Furthermore, ( a,r,s) is not a v-cycle and therefore Lemma B.11 implies that
u(a1,a2,a3)/\e}atio\slash=awhich contradicts the deﬁnition of a.
Finally, consider the following application of the polymor phismu:
u/parenleftbig
(a,a),(a,a),(r,b)/parenrightbig
= (a,b).
Since (a,a)∈Raand (r,b)∈Rcand since uis in Pol( Ab
0) we get that ( a,b)∈Ra∪Rc.
Hence, (a,a,b)∈Ror (c,a,b)∈R, which contradicts our assumptions.
B.4 Proof of the Main Theorem
We can now prove the main result of this section.
Proof of Theorem 4.4. LetAbe a ﬁnite relation algebra that satisﬁes the assumptions of
Theorem 4.4 and let A0be the atom structure of A(Deﬁnition 2.15). We denote by Ab
0
the binarisation of A0according to Deﬁnition B.5. It follows from the assumptions onA
that Pol( A0) contains a Siggers operation. By Lemma B.6 we get that Pol( Ab
0) contains
a Siggers operation as well. Note that Ab
0is a ﬁnite binary conservative structure and
therefore Theorem 4.6 implies that Ab
0has no aﬃne edges. Therefore, Ab
0satisﬁes the
general assumption from Section B.3 and we can deﬁne the oper ationuas it is done in
the beginning of this section. Note that uwitnesses by Lemma B.9 that Ab
0does not have
an aﬃne edge. We can now apply Theorem B.12 and get that uis also a polymorphism
ofA0. Recall that A0andAb
0have by Lemma B.7 exactly the same semilattice edges and
33therefore Lemma B.9 and the fact that uis a polymorphism of A0imply that A0does
not have an aﬃne edge. By Proposition 4.5 we get that there exi sts a 3-ary weak near
unanimity polymorphism f∈Pol(A0) and a 4-ary weak near unanimity polymorphism
g∈Pol(A0) such that
∀x,y,z∈B. f(y,x,x) =g(y,x,x,x)
holds. Theorem 2.23 implies that CSP( B) and thus also NSP( A) can be solved by (4 ,6)-
consistency algorithm.
C The Complexity of the Meta Problem
Theorem 6.2. Metacan be decided in polynomial time if the input is restricted t o ﬁnite
symmetric integral relation algebras Awith a ﬂexible atom.
Proof.By Theorem 5.2 it suﬃces to test the existence of an operation f:A6
0→A0which
satisﬁes conditions 1.-3. in this theorem. The three condit ions can clearly be checked in
polynomial time, so we already know that Meta is in NP.
Notethatthesearchfor fmaybephrasedasaninstanceofCSP( A0)with|A|6variables.
Using the fact that the k-consistency procedure is one-sided correct even in the cas e that
CSP(A0) is NP-hard (i.e., if the procedure rejects a given instance of CSP(A0), then the
instance is always unsatisﬁable), we may use a standard self -reducibility argument (see,
e.g., [CL17]) to obtain a polynomial-time algorithm for ﬁnding f.
34
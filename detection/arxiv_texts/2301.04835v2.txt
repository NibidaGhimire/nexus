PySAGES: exible, advanced sampling methods
accelerated with /G.sc/P.sc/U.scs
Pablo F. Zubieta Ricoa, Ludwig Schneidera, Gustavo R. Pérez-Lemusa,
Riccardo Alessandria, Siva Dasettya, Cintia A. Menéndeza, Yiheng Wua,
Yezhi Jina, Yinan Xua, Trung D. Nguyenb, John A. Parkerb, Andrew L.
Fergusona, Jonathan K. Whitmerc, Juan J. de Pabloa
aPritzker School of Molecular Engineering, The University of Chicago, 5640 South Ellis
Avenue, Chicago, IL, 60637, USA
bResearch Computing Center, The University of Chicago, 6054 S. Drexel
Avenue, Chicago, IL, 60637, USA
cDepartment of Chemical and Biomolecular Engineering, University of Notre Dame, 250
Nieuwland Hall, Notre Dame, IN, 46556, USA
Abstract
Molecular simulations are an important tool for research in physics, chem-
istry, and biology. The capabilities of simulations can be greatly expanded by
providing access to advanced sampling methods and techniques that permit
calculation of the relevant underlying free energy landscapes. In this sense,
soware that can be seamlessly adapted to a broad range of complex systems
is essential. Building on past eorts to provide open-source community sup-
ported soware for advanced sampling, we introduce /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , a Python
implementation of the Soware Suite for Advanced General Ensemble Sim-
ulations ( /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc ) that provides full /G.sc/P.sc/U.sc support for massively parallel
applications of enhanced sampling methods such as adaptive biasing forces,
harmonic bias, or forward ux sampling in the context of molecular dy-
namics simulations. By providing an intuitive interface that facilitates the
management of a system’s conguration, the inclusion of new collective
variables, and the implementation of sophisticated free energy-based sam-
pling methods, the /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc library serves as a general platform for the
development and implementation of emerging simulation techniques. The
capabilities, core features, and computational performance of this new tool
are demonstrated with clear and concise examples pertaining to dierent
classes of molecular systems. We anticipate that /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc will provide the
scientic community with a robust and easily accessible platform to accel-
erate simulations, improve sampling, and enable facile estimation of free
energies for a wide range of materials and processes.
1arXiv:2301.04835v2  [physics.comp-ph]  4 Apr 2023Keywords: Enhanced sampling methods, /G.sc/P.sc/U.sc acceleration
1. Introduction
Molecular simulations are extensively used in a wide range of science and
engineering disciplines [ /one.sc]. As their use has grown for the discovery of new
phenomena and the interpretation of sophisticated experimental measure-
ments, so has the complexity of the systems that are considered. Classical
atomistic molecular dynamics ( /M.sc/D.sc) simulations are generally limited to mi-
crosecond time scales and length scales of tens of nanometers. For systems
that are characterized by rugged free energy landscapes, such time scales
can be inadequate to ensure sucient sampling of the relevant phase space,
and advanced methods must therefore be adopted to overcome free energy
barriers. In that regard, it is useful and increasingly common to identify
properly chosen collective variables ( /C.sc/V.scs), which are generally dieren-
tiable functions of the atomic coordinates of the system; then, biases can
be applied to explore the space dened by such /C.sc/V.scs, thereby overcoming
barriers and enhancing sampling of the thermally accessible phase space.
The rapid growth of hardware accelerators such as /G.sc/P.sc/U.scs or/T.sc/P.sc/U.scs, or
specialized hardware designed for fast /M.sc/D.sccomputations [ /two.sc,/three.sc], has provided
researchers with increased opportunities to perform longer simulations
of larger systems. G/P.sc/U.scs, in particular, provide a widely accessible option
for fast simulations, and several soware packages, such as /H.sc/O.sc/O.sc/M.sc/D.sc- blue
[/four.sc],Open /M.sc/M.sc [/five.sc],/J.sc/A.sc/X.sc /M.sc/D.sc [/six.sc,/seven.sc],LAMMPS [/eight.sc], and Gromacs [ /nine.sc], are now
available for /M.sc/D.scsimulations on such devices.
As mentioned above, enhanced sampling methods seek to surmount
the high energy barriers that separate multiple metastable states in a sys-
tem, while facilitating the calculation of relevant thermodynamic quantities
as functions of dierent /C.sc/V.scs such as free energy surfaces ( /F.sc/E.sc/S.sc). Several
libraries, such as /P.sc/L.sc/U.sc/M.sc/E.sc/D.sc [/one.sc/zero.sc], Colvars [ /one.sc/one.sc], and our own /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc pack-
age [ /one.sc/two.sc], provide out-of-the-box solutions for performing enhanced sam-
pling /M.sc/D.scsimulations.
Among the various enhanced sampling methods available in the litera-
ture, some of the most recently devised schemes rely on machine learning
(/M.sc/L.sc) strategies to approximate free energy surfaces and their gradients
(generalized forces) [ /one.sc/three.sc,/one.sc/four.sc,/one.sc/five.sc,/one.sc/six.sc]. Similarly, algorithms for identifying
meaningful /C.sc/V.scs that correlate with high variance or slow degrees of free-
doms ( /D.sc/O.sc/F.scs) are based on deep neural networks [ /one.sc/seven.sc,/one.sc/eight.sc,/one.sc/nine.sc,/two.sc/zero.sc,/two.sc/one.sc,/two.sc/two.sc]. These
2advances serve to highlight the need for seamless integration of /M.sc/L.scframe-
works with existing /M.sc/D.scsoware libraries.
To date, there are no solutions that combine enhanced sampling tech-
niques, hardware acceleration, and /M.sc/L.scframeworks to facilitate enhanced-
sampling /M.sc/D.scsimulations on /G.sc/P.sc/U.scs. While some /M.sc/D.sclibraries that sup-
port /G.sc/P.sc/U.scs provide access to a limited set of enhanced sampling meth-
ods [ /five.sc,/nine.sc,/two.sc/three.sc,/two.sc/four.sc,/two.sc/five.sc], there are currently no packages that enable users to
take advantage of all of these features within the same platform and in the
same backend-agnostic fashion that tools such as /P.sc/L.sc/U.sc/M.sc/E.sc/D.sc and/S.sc/S.sc/A.sc/G.sc/E.sc/S.sc
have provided for /C.sc/P.sc/U.sc-based /M.sc/D.scsimulations.
Here we present /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , a Python Suite for Advanced General Ensem-
ble Simulations. It is a free, open-source soware package written in Python
and based on /J.sc/A.sc/X.scthat follows the design ideas of /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc and enables users
to easily perform enhanced-sampling /M.sc/D.scsimulations on /C.sc/P.sc/U.scs,/G.sc/P.sc/U.scs, and
/T.sc/P.sc/U.scs.Py/S.sc/A.sc/G.sc/E.sc/S.sc can currently be coupled with /H.sc/O.sc/O.sc/M.sc/D.sc- blue, Open /M.sc/M.sc,
/J.sc/A.sc/X.sc /M.sc/D.sc and/A.sc/S.sc/E.sc and by extension from the latter to /C.sc/P.sc/two.sc/K.sc , Quantum
/E.sc/S.sc/P.sc/R.sc/E.sc/S.sc/S.sc/O.sc ,/V.sc/A.sc/S.sc/P.sc and Gaussian, among others. At this time, /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc of-
fers the following enhanced sampling methods: Umbrella Sampling, Meta-
dynamics, Well-tempered Metadynamics, Forward Flux Sampling, String
Method, Adaptive Biasing Force, Articial neural network sampling, Adap-
tive Biasing Force using neural networks, Combined Force Frequency, and
Spectral Adaptive Biasing Force. Py/S.sc/A.sc/G.sc/E.sc/S.sc also includes some of the most
commonly used /C.sc/V.scs and, importantly, dening new ones is relatively sim-
ple, as long as they can be expressed in terms of the NumPy [ /two.sc/six.sc] interface
provided by /J.sc/A.sc/X.sc. All/C.sc/V.scs can be automatically dierentiated through /J.sc/A.sc/X.sc
functional transforms. Py/S.sc/A.sc/G.sc/E.sc/S.sc is highly modular, thereby allowing for
the easy implementation of new methods as they emerge, even as part of a
user-facing script.
In the following sections, we provide a general overview of the design
and implementation of /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , and present a series of examples to show-
case its exibility for addressing research problems in dierent application
areas. We also discuss its performance in /G.sc/P.sc/U.scs and present a few perspec-
tives on how to grow and improve the package to cover more research use
cases through future development, as well as community involvement and
contributions.
2. Implementation
We begin by briey outlining the core components of /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , how they
function together, and how communication with each backend allows /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc
3to bias a simulation during runtime. A summary of the execution workow
of/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc along with a mapping of the user interface with the main stages
of the simulation and the interaction with the backends, is illustrated in
Figure 1.
To provide a uniform user interface while minimizing disruption to pre-
existing workows, /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc only requires the user to wrap their traditional
backend scripting code into simulation generator functions. This approach
accommodates the heterogeneity of Python interfaces across the dierent
simulation backends supported by /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc . An example of a simulation
generator function and how a traditional Open /M.sc/M.scscript can be modied
to perform an enhanced-sampling /M.sc/D.scsimulation is depicted in Figure 2.
At the start of a simulation, the simulation generator function is called
to instantiate as many replicas of the simulation as needed. Then, for each
replica, /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc queries the particle information and the device that the
backend will be using. In addition, during this initial stage /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc also
performs automatic dierentiation of the collective variables via /J.sc/A.sc/X.sc’sgrad
transform required to estimate the biasing forces, and generates special-
ized initialization and updating routines for the user-declared sampling
method.
Like /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc ,/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc wraps the simulation information into an object
called a Snapshot . This object exposes the most important simulation infor-
mation, such as particle positions, velocities, and forces in a backend- and
device-agnostic format. To achieve this, /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc uses /D.sc/L.sc/P.scack [ /two.sc/seven.sc]for
/C.sc++ based /M.sc/D.sclibraries to directly access the contents of the backend-
allocated buers for the dierent particle properties without creating data
copies whenever possible.
Once the setup of both the simulation and sampling method is completed,
/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc hands control back to the backend, which will run for a given
number of time steps or until some other stopping criteria is reached. In
order to exchange information back and forth, /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc adds a force-like
object or function to the backend which gets called as part of the time
integration routine. Here, the sampling method state gets updated and the
computed biasing forces are added to the backend net forces.
Finally, the information collected by the sampling method is returned
and can be used for calculating the free energy as function of the selected
/C.sc/V.scs. Unlike /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc ,/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc oers a user-friendly analyze interface that
simplies the process of performing post simulation analysis, including the
automatic calculation of free energies based the chosen sampling method.
This feature can greatly reduce the time and eort required to gain valuable
insights from simulations.
4pysages.run(  ,   ,  )
pysages.analyze(  )generate_simulation
function
Collective variable (CV)User Backend
Sampling method
generate_simulation
is called on every rank
Device query and
Snapshot creationCreation of replicas of
 the simulation system
Automatic diﬀerentiation
of the CV
Functional specialization
of the sampling method
Launch simulation Simulation time step
Simulation endsComputation of forces
Calculation of
free energyTransparent (zero-copying)
wrapping of particle data
Sampling method update,
computation of biasing forces
Addition of biasing forces
to the backend forcesrepeats until
stopping criterion
is reachedCVs and Sampling Methods
can be user defined or
imported from pysagesFigure 1: The /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc simulation owchart. For a simulation, a user sets up a script that
declares the /C.sc/V.scand sampling methods to be used.
5import openmm
import openmm.unit  as unit
import openmm.app  as app
pdb = app.PDBFile ("adp-vacuum.pdb" )
ff= app.ForceField ("amber99sb.xml" )
positions = pdb.getPositions (asNumpy=True)
system = ff.createSystem (
   pdb.topology, constraints =app.HBonds,
   nonbondedMethod =app.PME, nonbondedCutoff =1.0 * unit.nanometer
)
integrator =openmm.LangevinIntegrator (
   298.15 *unit.kelvin, 1 / unit.picosecond, 2.0 *unit.femtoseconds
)
simulation =app.Simulation (pdb.topology, system, integrator )
simulation.context.setPositions (positions )
simulation.minimizeEnergy ()
simulation.run (int(1e6))def generate_simulation ():
    pdb = app.PDBFile ("adp-vacuum.pdb" )
    ff = app.ForceField ("amber99sb.xml" )
    positions = pdb.getPositions (asNumpy=True)
    system = ff.createSystem (
        pdb.topology, constraints =app.HBonds,
        nonbondedMethod =app.PME, nonbondedCutoff =1.0 * unit.nanometer
    )
    integrator = openmm.LangevinIntegrator (
        298.15 * unit.kelvin, 1 / unit.picosecond, 2.0 * unit.femtoseconds
    )
    simulation = app.Simulation (pdb.topology, system, integrator )
    simulation.context.setPositions (positions )
    simulation.minimizeEnergy ()
    return simulationimport openmm
import openmm.unit  as unit
import openmm.app  as app
import pysages
from numpy import pi
from pysages import ABF, DihedralAngle, Grid
cvs = [DihedralAngle ([4, 6, 8, 14]), DihedralAngle ([6, 8, 14, 16])]
grid = Grid(lower=(-pi, -pi), upper=(pi, pi), shape=(32, 32), periodic =True)
method = ABF(cvs, grid )
raw_results = pysages.run (method, generate_simulation, int(1e6))
result = pysages.analyze (raw_result ) Lines removedLines added for pysagesPreserved user codeFigure 2: Example of how to use the Python interface for /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc . It is easy to extend
existing /M.sc/D.scscripts with /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc to perform enhanced-sampling /M.sc/D.sc, with minimal changes
to the code. In general, the only requirement is for the user to wrap the code that denes
the simulation system into a simulation generator function.
Py/S.sc/A.sc/G.sc/E.sc/S.sc oers an easy way to leverage dierent parallelism frameworks
including /M.sc/P.sc/I.sc with the same uniform fronted available to run enhanced
sampling simulations. This is achieved via Python’s concurrent.futures
interface. In particular, for /M.sc/P.sc/I.sc parallelism, the user only needs to pass an
additional MPIPoolExecutor (from mpi4py ) to/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc ’runmethod. If
the user selects a method such as UmbrellaSampling , the workload for
each image will be distributed across available /M.sc/P.sc/I.sc nodes. On the other
hand, for most of the sampling methods, the parallelization interface allows
the user to run multiple replicas of the same system to enable, for instance,
analysis of the uncertainties associated to computing the free energy of a
given system.
To ensure the reproducibility and correctness of our implementation
and to follow soware engineering best practices, we have implemented a
comprehensive unit tests suite, and leverage GitHub’s continuous integration
services. In addition, we use trunk.io [/two.sc/eight.sc] to adhere to quality standards
as well as to ease the collaboration of developers.
2.1. Enhanced Sampling Methods
While we assume the reader has some basic understanding of enhanced
sampling methods, here we provide an overview of these techniques. We
direct readers interested in learning more about the fundamentals of en-
hanced sampling to a number of excellent recent review articles [ /two.sc/nine.sc,/three.sc/zero.sc,/three.sc/one.sc,
/three.sc/two.sc,/three.sc/three.sc,/three.sc/four.sc,/three.sc/five.sc,/three.sc/six.sc,/three.sc/seven.sc,/three.sc/eight.sc]. In addition, we discuss the general structure of how
6enhanced sampling methods are implemented within /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , and also
present a summary of the various methods already available in the library.
Enhanced sampling methods are a class of simulation techniques that
manipulate regular /M.sc/D.scsimulations in order to more eectively sample the
conguration space. In /M.sc/D.sca collective variable, 𝜉, is typically a function of
the positions of all particles, ˆ𝜉¹f𝑟𝑖gº.
For a given statistical ensemble (such as the canonical, /N.sc/V.sc/T.sc), the cor-
responding free energy can be written as 𝐴= 𝑘B𝑇ln¹𝑍º, where𝐴is the
Helmholtz free energy and 𝑍is the canonical partition function. To make ex-
plicit the dependency of the free energy on 𝜉, let us write down the partition
function:
𝑍¹𝜉º/∫
d𝑁𝑟𝑖𝛿¹ˆ𝜉¹f𝑟𝑖gº 𝜉º𝑒 𝑈¹f𝑟𝑖gº𝑘B𝑇(1)
Normalizing this partition function gives us the probability of occur-
rence,𝑝¹𝜉º=𝑍¹𝜉º¹∫
d𝜉 𝑍¹𝜉ºº, for congurations in the /C.sc/V.scsubspace.
Substituting this probability into the expression for the free energy, we get:
𝐴¹𝜉º= 𝑘B𝑇ln¹𝑝¹𝜉ºº¸𝐶 (2)
where𝐶is a constant.
If we take the derivative of the free energy with respect to 𝜉we get
𝑑𝐴¹𝜉º
𝑑𝜉=∫
d𝑁𝑟𝑖𝑑𝑈
𝑑𝜉𝛿¹ˆ𝜉¹f𝑟𝑖gº 𝜉º𝑒 𝑈¹f𝑟𝑖gº𝑘B𝑇
∫
d𝑁𝑟𝑖𝛿¹ˆ𝜉¹f𝑟𝑖gº 𝜉º𝑒 𝑈¹f𝑟𝑖gº𝑘B𝑇=𝑑𝑈
𝑑𝜉
𝜉 (3)
wherehi𝜉denotes the conditional average.
The goal of /C.sc/V.sc-based enhanced sampling methods is to accurately de-
termine either 𝑝¹𝜉ºor𝑑𝐴¹𝜉º𝑑𝜉 from which 𝐴¹𝜉ºcan be recovered in
a computationally tractable manner.
In/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , the implementation of sampling methods follows the /J.sc/A.sc/X.sc
functional style programming model. New methods are implemented as
subclasses of the SamplingMethod class, and are required to dene a build
method. This method returns two methods, initialize andupdate , used
as part of the process of biasing the simulation. For readers familiar with
/J.sc/A.sc/X.sc /M.sc/D.sc , these could be thought of as analogues to the higher level functions
returned by /J.sc/A.sc/X.sc /M.sc/D.sc ’ssimulate integration methods. The initialize
method allocates all the necessary helper objects and stores them in a
State data structure, while the update method uses the information from
the simulation at any given time to update the State .
7While /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc allows new methods to be written seamlessly as part
of Python scripts used to set up molecular dynamics simulations, it also
provides out-of-the-box implementations of several of the most important
known sampling methods. We list and briey detail them next.
2.1.1. Harmonic Biasing
One simple way to sample a specic region of the phase space is to bias
the simulation around a point 𝜉0with harmonic bias. This adds a quadratic
potential energy term to the Hamiltonian that increases the potential energy
as a system moves away from the target point: H𝑏=H¸𝑘2¹𝜉 𝜉0º2, where
𝑘  0is the spring constant. The unbiased probability distribution 𝑝¹𝜉ºcan
be recovered by dividing the biased distribution by the known weight of the
bias𝑝¹𝜉º=𝑝𝑏¹𝜉º𝑒 𝑘2¹𝜉 𝜉0º2𝑘B𝑇.
The disadvantage of this approach is that it can only be used to explore
the free energy landscape near a well-know point in phase space. This may
not be sucient for many systems, where the free energy landscape is
complex.
2.1.2. Umbrella Sampling
Umbrella sampling is a technique that traditionally builds on harmonic
biasing by combining multiple harmonically-biased simulations. It is a well-
known method for exploring a known path in phase space to obtain a free
energy prole along that path [ /three.sc/nine.sc,/four.sc/zero.sc]. Typically, a path between to point of
interest is described by 𝑁points in phase space, 𝜉𝑖. At each of these points, a
harmonically biased simulation is performed, and the resulting occurrence
histograms are combined to obtain a single free energy prole.
In/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , we implement umbrella integration for multi-dimensional
/C.sc/V.scs. This method approximates the forces acting on the biasing points and
integrates these forces to nd the free energy prole 𝐴¹𝜉º, and allows to
explore complex high-dimensional free energy landscapes.
2.1.3. Improved String Method
When only the endpoints are known, but not the path itself, the improved
(spline-based) string method can be used to nd the mean free energy
pathway ( /M.sc/F.sc/E.sc/P.sc ) between these two endpoints [ /four.sc/one.sc]. The spline-based string
method improves upon the original string method by interpolating the
/M.sc/F.sc/E.sc/P.sc using cubic-splines. In this method, the intermediate points of the
path are moved according to the recorded mean forces acting on them, but
only in the direction perpendicular to the contour of the path. This ensures
that distances between the points along the path remain constant.
8This method has been widely used and has been shown to be an eective
way to nd the /M.sc/F.sc/E.sc/P.sc between two points in the phase space [ /four.sc/one.sc].
2.1.4. Adaptive Biasing Force sampling
The adaptive biasing force ( /A.sc/B.sc/F.sc) sampling method is a technique used
to map complex free-energy landscapes. It can be applied without prior
knowledge of the potential energy of the system, as it generates on-the-
y estimates of the derivative of the free energy at each point along the
integration pathway. A/B.sc/F.sc works by introducing an additional force to the
system that biases the motion of the atoms, with the strength and direction of
the bias continuously updated during the simulation. In the long-time limit,
this yields a Hamiltonian with no average force acting along the transition
coordinate of interest, resulting in a at free-energy surface and allowing
the system to display accelerated dynamics, thus providing reliable free-
energy estimates [ /four.sc/two.sc,/four.sc/three.sc]. Similarly to /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc ,/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc implementation of
/A.sc/B.sc/F.sc is based on the algorithm described in [ /four.sc/three.sc].
2.1.5. Metadynamics
Metadynamics is another popular approach for enhancing sampling of
complex systems. In metadynamics [ /four.sc/four.sc], a bias potential is applied along
one or more /C.sc/V.scs in the form of Gaussian functions. The height and width ( 𝜎)
of these Gaussians are controlled by the user. The Gaussian bias potentials
are cumulatively deposited at user-dened intervals during the simulation.
In standard metadynamics, the height of the Gaussian bias potentials is
xed.
In contrast, for well-tempered metadynamics ( /W.sc/T.sc/M.sc/D.sc ) [/four.sc/five.sc] simulations,
the height of the Gaussian bias potentials is adjusted at each timestep using
a preset temperature based bias factor. This scaling of Gaussian heights in
/W.sc/T.sc/M.sc/D.sc leads to faster convergence compared to standard metadynamics, as
it restricts the range of free energy explored to a range dened by the bias
factor.
In/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , we have implemented both standard metadynamics and
/W.sc/T.sc/M.sc/D.sc . The well-tempered variant is activated when a user sets a value for
the bias factor. To improve the computational performance, we have added
optional support for storing the bias potentials in both on a pre-dened grid.
This allows users to trade-o accuracy for faster simulations, depending on
their needs.
92.1.6. Forward Flux Sampling
Forward ux sampling ( /F.sc/F.sc/S.sc) belongs to a dierent family of enhanced sam-
pling methods than the ones described above. In the previously described
methods, the free energy change from a region in the phase space ( 𝐴) to the
region of interest ( 𝐵) is calculated by applying a bias to the system. In /F.sc/F.sc/S.sc
no bias is added and instead an ecient selection of trajectories that crosses
the phase space from 𝐴to𝐵is performed. Since no bias is used, the intrinsic
dynamics of the system is conserved and therefore kinetic and microscopic
information of the transition path can be studied [ /four.sc/six.sc]. In /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc we have
implemented the direct version of /F.sc/F.sc/S.sc[/four.sc/seven.sc,/four.sc/eight.sc].
2.1.7. Articial neural networks sampling
Articial neural networks sampling ( /A.sc/N.sc/N.sc ) [/one.sc/three.sc] employs regularized neural
networks to directly approximate the free energy from the histogram of
visits to each region of the /C.sc/V.scspace, and generates a biasing force that
avoids ringing and boundary artifacts [ /one.sc/three.sc], which are commonly observed
in methods such as metadynamics or basis functions sampling [ /four.sc/nine.sc]. This
approach is eective at quickly adapting to diverse free energy landscapes
by interpolating undersampled regions and extrapolating bias into new,
unexplored areas.
The implementation on /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc oers more exible approaches to
network regularization than /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc , which uses Bayesian regularization.
2.1.8. Force-biasing using neural networks
Force-biasing using neural networks ( /F.sc/U.sc/N.sc/N.sc ) [/one.sc/four.sc] is based upon the same
idea as /A.sc/N.sc/N.sc , that is, relying on articial neural networks to provide con-
tinuous functions to bias a simulation, but instead of using the histogram
to visits to /C.sc/V.scspace it updates its network parameters by training on the
/A.sc/B.sc/F.scestimates for the mean forces as the simulation advances. This method
shares all of the features of /A.sc/B.sc/F.sc, but the smooth approximation of the gen-
eralized mean force it produces enables much faster convergence to the
free energy of a system compared to /A.sc/B.sc/F.sc.
2.1.9. Combined Force Frequency sampling
The combined force frequency sampling ( /C.sc/F.sc/F.sc) method [ /one.sc/five.sc] combines the
speed of generalized-force based techniques such as /A.sc/B.sc/F.scor/F.sc/U.sc/N.sc/N.sc with the
advantages of frequency-based methods like metadynamics or /A.sc/N.sc/N.sc . No-
table improvements over earlier force-based methods include eliminating
the need for hyperparameters to dampen early-time estimates, automating
10the integration of forces to generate the free energy, and providing an ex-
plicit expression for the free energy at all times, enabling the use of replica
exchange or reweighing.
In principle, by using sparse storage of histograms, it should be possible
to scale the method to higher dimensions without encountering memory
limitations, such optimization is however not yet implemented in /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc .
2.1.10. Spectral Adaptive Biasing Force
Spectral /A.sc/B.sc/F.sc [/five.sc/zero.sc] is a method that follows the same principle as neural-
network-based sampling methods, in that it builds a continuous approxima-
tion to the free energy. However, in contrast to methods like /F.sc/U.sc/N.sc/N.sc it does so
by tting exponentially convergent basis functions expansions, and could
be thought as a generalization of the Basis Functions Sampling Method. In
contrast to the latter, and similar to /C.sc/F.sc/F.sc, it allows for the recovery of an
explicit expression for the free energy of a system. It is an extremely fast
method in terms of both runtime and convergence.
2.2. Collective variables
As previously mentioned, enhanced sampling calculations commonly in-
volve the selection of a /C.sc/V.sc. An appropriate /C.sc/V.scfor a given system could
simply be the distance between the centers of mass of two groups of atoms,
but could be a complex specialized quantity.
Below, we list a set of /C.sc/V.scs predened in /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , sorted by the number
of groups of atom coordinates necessary for their use:
1.TwoPointCV . This subclass is for /C.sc/V.scs that need two groups for their
denition. This includes Distance andDisplacement (vector).
2.ThreePointCV . Subclass of /C.sc/V.scs with three groups of atoms, such as
Angle .
3.FourPointCV . Subclass of /C.sc/V.scs with four groups of atoms, such as
DihedralAngle .
4.AxisCV . Subclass of /C.sc/V.scs that are projected on a determinate axis.
This includes Component andPrincipalMoment .
5.CollectiveVariable General base class for all /C.sc/V.scs. In /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc ,
/C.sc/V.scs that directly derive from this class, and do not belong to the
previous groups, include: RingPhaseAngle ,RingAmplitude ,
RadiusofGyration ,Asphericity ,Acylindricity ,
ShapeAnisotropy ,RingPuckeringCoordinates [/five.sc/one.sc] (vector).
In/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc we provide users with a simple framework for dening
/C.sc/V.scs, which are automatically dierentiated with /J.sc/A.sc/X.sc. To illustrate this, we
11compare how to write the calculation of a /C.sc/V.scthat measures the projection
of the vector between two groups of atoms over the axis that passes by other
two groups, in both /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc and/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc (see Figure 3). In /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc the
gradient calculation is done automatically whereas in /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc it has to be
coded explicitly.
Data-driven and dierentiable /C.sc/V.scs discovered using articial neural
networks (e.g. autoencoders) [ /two.sc/nine.sc,/two.sc/one.sc,/one.sc/eight.sc,/five.sc/two.sc,/five.sc/three.sc] with arbitrary featurizations
of atoms can in principle be implemented in /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc based on the above
general abstract classes of /C.sc/V.scs.
The following second example shows the power of dierential program-
ming for /C.sc/V.scdeclaration in /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc .
2.2.1. Case study: A collective variable for interfaces
When the two immiscible liquids are in contact with each other, the density
of one liquid experiences a gradual change. This transition region is the
liquid-liquid interface and its position has high importance in many studies
(see section 3.1.3). However, the location of such interface is not a trivial task
since it generally uctuates as the simulation progresses. As a representative
/C.sc/V.scfor the interface, we can utilize the position of the point where the
gradient of the density is maximized. More formally, let 𝜌¹𝑥ºdenote the
density of a liquid of interest at a coordinate 𝑥on the perpendicular axis.
We would like to nd the location of the interface:
𝐼=arg max
𝑥j𝜌0¹𝑥ºj (4)
However, the density function 𝜌¹𝑥ºis not directly measurable in a molec-
ular simulation, as the coordinates of atoms are discrete. To obtain an ap-
proximation of 𝜌¹𝑥º, we divide the coordinates into multiple bins, each with
a width of𝛿, and create a histogram 𝑝¹𝑥ºthat records the number of atoms
falling into the bin around position 𝑥. In other words,
𝑝¹𝑥º=∑︁
𝑖=1𝑛
j𝑥𝑖 𝑥j 𝛿2
(5)
in which𝑥𝑖denotes the coordinate of atom 𝑖. As written above, 𝑝¹𝑥ºis non-
dierentiable. Therefore, as in other works [ /five.sc/four.sc], we utilize the kernel density
trick with a Gaussian kernel to modify 𝑝¹𝑥º. The modied ˜𝑝¹𝑥º, is dened
as:
˜𝑝¹𝑥º=∑︁
𝑖=1𝑛exp
 ¹𝑥𝑖 𝑥º2
2𝜎2
(6)
12Gradient calculationCV calculation// Preamble ommited
class ParallelProjectionCV  : public CollectiveVariable {
public:
    ParallelProjectionCV (int atomid1, int atomid2, int atomid3 ) :
        atomids_ ({atomid1, atomid2, atomid3 })
    { }
    void Initialize (const Snapshot& snapshot ) override
    {
        // Code ommited for brievity
    }
    void Evaluate (const Snapshot& snapshot ) override
    {
        auto n = snapshot.GetNumAtoms ();
        auto idx_i = snapshot.GetLocalIndex (atomids_ [0]);
        auto idx_j = snapshot.GetLocalIndex (atomids_ [1]);
        auto idx_k = snapshot.GetLocalIndex (atomids_ [2]);
        
        auto com_i = snapshot.CenterOfMass (idx_i);
        auto com_j = snapshot.CenterOfMass (idx_j);
        auto com_k = snapshot.CenterOfMass (idx_k);
        auto rik = com_i - com_k;
        auto rjk = com_j - com_k;
        auto rij = rjk - rik;
        auto nrij = rij.norm ();
        auto  nij = (1.0 / nrij) * rij;
        val_ = nij.dot (-rik);  // This writes the CV value
        // Manual computation of the gradient
        std��fill (grad_.begin (), grad_.end (), Vector3 {0, 0, 0});
        grad_.resize (n, Vector3 {0, 0, 0});
        Matrix3 dij = Matrix3��Zero ();
        dij (0, 0) = ( -(nij[1] * nij[1] + nij[2] * nij[2]) / nrij );  // dx/dx
        dij (0, 1) = ( nij[0] * nij[1] / nrij );                       // dx/dy
        dij (0, 2) = ( nij[0] * nij[2] / nrij );                       // dx/dz
        dij (1, 0) = ( nij[1] * nij[0] / nrij );                       // dy/dx
        dij (1, 1) = ( -(nij[0] * nij[0] + nij[2] * nij[2]) / nrij );  // dy/dy
        dij (1, 2) = ( nij[1] * nij[2] / nrij );
        dij (2, 0) = ( nij[2] * nij[0] / nrij );
        dij (2, 1) = ( nij[2] * nij[1] / nrij );
        dij (2, 2) = ( -(nij[1] * nij[1] + nij[0] * nij[0]) / nrij );
        grad_ [idx_i] = dij * (-rik) - nij;
        grad_ [idx_j] = dij * rik;
        grad_ [idx_k] = nij;
    }
    static ParallelProjectionCV* Build(
        const Json��Value& json, const std��string& path
    ) {
        // Code ommited for brievity
    }
private:
    Label atomids_;
}; SSAGES// Preamble ommited
class ParallelProjection (ThreePointCV ):
   @property
   def function (self):
       return parallel_projection
def parallel_projection (p1, p2, p3 ):
   r1 = barycenter (p1)
   r2 = barycenter (p2)
   r3 = barycenter (p3)
   a = r3- r1
   b = r2- r1
   returnnp.dot(a, b) / norm(b)
PySAGES
Apart from the usual
overhead involved
in writting C++
code in comparison
to Python, the gradients
of a �� need to be
manually implemented
in ������, whereas in
 �y����� these are
 automatically
computed with ���.Figure 3: Example of how to write a /C.sc/V.scin/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc . On the le is the same /C.sc/V.scs written in
/S.sc/S.sc/A.sc/G.sc/E.sc/S.sc and on the right the /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc version. In general, the only requirement is for the
user to write the /C.sc/V.scas a dierentiable function in /J.sc/A.sc/X.sc.
13in which𝜎is a hyperparameter that decides the width of the Gaussian kernel.
Then, the gradient of the density can be approximated as:
˜𝑝0¹𝑥º=˜𝑝¹𝑥¸𝛿2º ˜𝑝¹𝑥 𝛿2º
𝛿(7)
and we calculate the location of the interface as 𝐼=arg max 𝑥j˜𝑝0¹𝑥ºj. The
arg max operator is also non-dierentiable. As a result, we replace it with a
somax function that transforms the raw input into a probability. Denote the
𝑚bins as𝑗=1𝑚 , and nally we calculate the location of the interface
as:
𝐼=Í
𝑗𝑥𝑗expj˜𝑝0¹𝑥𝑗ºj
Í
𝑗expj˜𝑝0¹𝑥𝑗ºj(8)
As demonstrated in the code snippet for this /C.sc/V.sc, provided in Appendix A,
/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc allows for the concise and straightforward implementation of
complex /C.sc/V.scs such as this one.
3. Results and Discussion
To evaluate a soware package like /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , we must consider at least two
factors: physical correctness and computational performance.
First, to assess the correctness of the enhanced sampling methods imple-
mented in /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , we present in Appendix B.1 the free-energy landscape
for the dihedral angles 𝜙and𝜓of alanine dipeptide ( /A.sc/D.sc/P.sc). This example is
commonly used to benchmark new enhanced sampling algorithms. Sim-
ilarly, we also show in Appendix B.2 the free-energy as a function of the
dihedral angle of butane. Our results show that /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc reproduces the
expected free-energy landscapes using dierent methods and backends.
In section 3.1, we further investigate the applicability and correctness of
/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc beyond these simple model systems.
Second, we demonstrate the performance of /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc on/G.sc/P.sc/U.scs with
two dierent backends in section 3.2. In particular, we compare the perfor-
mance of enhanced sampling simulations to the performance of pure /M.sc/D.sc
simulations, as well as other enhanced sampling implementations.
3.1. Example applications of enhanced sampling with /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc
To demonstrate the versatility and eectiveness of /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc in dierent
contexts, we present several examples of how enhanced sampling methods
can be used to gain valuable insights in various elds including biology, drug
design, materials engineering, polymer physics, and ab-initio simulations.
14These examples showcase how /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc can be used in diverse research
areas and the utility of dierent enhanced sampling methods and backends.
Overall, these examples conrm that the enhanced sampling methods
implemented in /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc work as intended and provide results consistent
with existing literature.
3.1.1. Structural Stability of Protein–Ligand Complexes for Drug Discovery
High-throughput docking techniques are a widely-used computational tech-
nique in drug lead discovery. However, these techniques are limited by the
lack of information about protein conformations and the stability of ligands
in the docked region [ /five.sc/five.sc]. To address this issue, the Dynamical Undocking
(/D.scu/C.sc/K.sc) method was developed to evaluate the stability of the ligand binding
by calculating the work required to break the most important native con-
tact (hydrogen bond interactions) in the protein-ligand complex [ /five.sc/six.sc]. This
method has been shown to be complementary and orthogonal to classical
docking, making both techniques work parallel in drug discovering [ /five.sc/seven.sc,/five.sc/eight.sc].
However, /D.scu/C.sc/K.sccan be slow to converge when combined with traditional en-
hanced sampling techniques [ /five.sc/six.sc], making it unsuitable for high-throughput
drug discovery protocols.
Here, we demonstrate how /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc with Open /M.sc/M.sccan be used e-
ciently in drug discovery applications, where the user-friendly interface,
native parallel capabilities, and new enhanced sampling methods with fast
convergence are synergistically combined to accelerate the virtual screen-
ing of ligand databases. In this example, we study the main protease (Mpro)
of Sars-CoV-2 virus ( /P.sc/D.sc/B.sc: /seven.sc/J.sc/U.sc/seven.sc [/five.sc/nine.sc]), where the ligands were removed and
the monomer A was selected as the docking receptor. A ligand with /S.sc/M.sc/I.sc/L.sc/E.sc/S.sc
string CCCCOCC(=O)c1ccc(C)cc1N[C@H]1N[C@@H](c2cccnc2)CS1 was
docked using RDock [ /six.sc/zero.sc]. The best scoring pose was used to initialize the sys-
tem, which was simulated using the ff/one.sc/four.sc/S.sc/B.sc [/six.sc/one.sc],/T.sc/I.sc/P.sc/three.sc/P.sc [/six.sc/two.sc], and /G.sc/A.sc/F.sc/F.sc [/six.sc/three.sc]
force elds. A 10 ns equilibration procedure was carried out to nd the most
stable hydrogen bond between the ligand and the protein. The last frame of
this equilibration was then used to initialize the enhanced sampling calcula-
tions in /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc with /A.sc/B.sc/F.sc, metadynamics, /F.sc/U.sc/N.sc/N.sc ,/A.sc/N.sc/N.sc, and Spectral /A.sc/B.sc/F.sc.
These methods were compared against the same system simulated using
Amber20 [ /six.sc/four.sc] with Steered Molecular Dynamics (see Figure 4b). Our results
suggest that we can reduce the simulation time by an order of magnitude
using new enhanced sampling methods like Spectral /A.sc/B.sc/F.sc or/F.sc/U.sc/N.sc/N.sc . This
can greatly accelerate the drug discovery process and help identify potential
drug leads more quickly.
15Figure 4: Dynamical Undocking ( /D.scu/C.sc/K.sc) method in detail. For a proposed binding mode
obtained from classical docking, a short run using /M.sc/D.scsimulations is carried out and the
most stable receptor-ligand native contact is selected from that run. In this case, it is the
hydrogen bond between the red and blue atoms highlighted in panel a). b) Comparison
between dierent methods in /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc for/D.scu/C.sc/K.sccalculations averaged over 5 dierent
replicas for each method. The reference, a Steered /M.sc/D.scsimulations simulations of 2 ns
is in red. In comparison, dierent methods in /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc are used considering simulation
period 10 times shorter: only /A.sc/N.sc/N.sc [/one.sc/three.sc] provides inferior performance against the reference;
Spectral /A.sc/B.sc/F.sc [/five.sc/zero.sc] or/F.sc/U.sc/N.sc/N.sc [/one.sc/four.sc] give the best performance.
3.1.2. Fission of a Diblock Copolymer Spherical Domain
We now investigate the ssion of a single spherical domain of a diblock
copolymer using a coarse-grained model. We use a so, coarse-grained
dissipative particle dynamics ( /D.sc/P.sc/D.sc) model published in previous studies [ /six.sc/five.sc,
/six.sc/six.sc,/six.sc/seven.sc]. The model consists of 𝑛=200chains with 𝑁=256beads each,
representing a liquid polymer melt. The rst 𝑁𝐴=16beads in each chain
are type A, while the remaining 𝑁𝐵=240are type B.
A standard /D.sc/P.sc/D.sc potential is used to enforce incompressibility with a
repulsion parameter of 𝐴𝑖𝑖=5𝑘𝐵𝑇𝜎2. However, a higher interaction of
𝐴𝐴𝐵=𝐴𝑖𝑖¸Δ𝐴𝑘𝐵𝑇𝜎2, with Δ𝐴2 »0104¼is applied between unlike
particles to create a repulsion that leads to a microphase separation. A Flory-
Huggins parameter Δ𝐴/𝜒𝑁  0can characterize this phase separation.
The interaction range of this non-bonded potential is 1𝜎, as well as the range
of the /D.sc/P.sc/D.sc thermostat that keeps the temperature at 𝑇=1𝑘𝐵𝑇=1𝜖.
In addition, a harmonic spring force with zero resting length is used
to connect the beads to polymer chains with a spring constant of 𝑘=
163𝑘𝐵𝜎2, resulting in an average bond length of 𝑏0=075𝜎. The equi-
librium phase for this polymer melt is a body-centered cubic ( /B.sc/C.sc/C.sc) phase of
spherical A droplets inside a B melt. [ /six.sc/eight.sc] However, we conne the polymer
to a tight cubic simulation box of length 𝐿0=10𝜎, which results in a single
160 1 2 3 4 5 6
distance R [ ]
0200400600800free energy [ ]
A= 0.1
A= 0.2
A= 0.3
A= 0.4
Figure 5: Free energy landscape of the ssion of a spherical diblock-copolymer domain. The
chain ends forming the spherical domain are split into two groups (blue) and (red), the other
chain ends not visible for clarity except for a single chain (grey). Initially, a single spherical
domain is formed, but as we constraint the center of mass between the blue and red groups
further, the domain rst elongates and then separates completely. During this separation, the
free energy continuously increases and the increase is steeper for high repulsion between
unlike type Δ𝐴. As soon as the domain is separated, the free energy plateaus.
17A spherical domain in the B matrix. We integrate the simulation with a
time step of Δ𝑡=10 3𝜏and each simulation is equilibrated for 𝑡=1000𝜏,
followed by a production run of 𝑡=1000𝜏as well. A discussion of the /G.sc/P.sc/U.sc
performance of this system with and without /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc can be found in
section 3.2.1.
Aer dening the diblock copolymer system, the next step is to dene
a/C.sc/V.scwithin the system. In this case, we are interested in the ssion of the
single spherical A domain into two equally sized smaller A domains. To
achieve this, we divide the polymer chains into two groups: the rst 𝑛=100
chains are going to form the rst small domain (blue in Figure 5) and the
second𝑛=100chains form the second spherical domain (red in Figure 5).
To dene and enforce the separation of the two groups, we dene our /C.sc/V.scas
the distance, 𝑅, between the center of mass of the blue A-tails and the center
of mass of the red A-tails. Initially, without biasing, the two groups form a
single spherical domain and blue and red polymer tails are well mixed, as
shown at small 𝑅  1𝜎in Figure 5.
To study the separation of the spherical domain, we use harmonic bias-
ing (see section 2.1.1) to enforce a separation distance 𝑅0between the two
groups. The high density in the systemp
¯N=𝜌0
𝑁𝑅3
𝑒0344, leads to low uc-
tuations and suppression of unfavorable conformations. Therefore, we use
a high spring force constant of 𝑘𝐶𝑉=1500𝜖𝜎2to facilitate the separation.
We investigate a separation of 𝑅2»06¼𝜎with 14 replicas and use um-
brella integration (see section 2.1.2) to determine the free energy prole, as
shown in Figure 5. As we increase the external separation distance 𝑅0, we
observe how the single domain splits into two. At a low separation distance
𝑅  2𝜎, the single domain is mostly undeformed, but the two groups sepa-
rate inside the single spherical domain. Increasing the separation distance
further goes beyond the dimensions of the spherical domain, leading to
the deformation of the domain into an elongated rod-like shape. The two
groups still maintain a connection to minimize the AB interface.
At a separation between 4𝜎and 5𝜎the deformation becomes so strong,
that the penalty of forming another AB interface between the two groups,
and hence forming two spherical domains, is lower than the entropic penalty
of the domain deformation and elongated AB interface of the droplet. Af-
ter the separation, the free energy landscape remains indierent to the
separation, since there is no interaction between the two domains le.
The free energy prole of separation is controlled by the repulsion of
unlike types 𝜒𝑁/Δ𝐴. The stronger the repulsion, the more energy is
necessary to enlarge the AB surface area for the ssion. For the strongest
18interaction Δ𝐴=04𝜖, the total free energy barrier reaches about 800𝜖, while
for the lowest Δ𝐴=01𝜖it remains below 400𝜖. Both barriers are orders of
magnitude larger than thermal uctuations 1𝑘𝐵𝑇=1𝜖, so a spontaneous
separation is not expected and the ssion can only be studied via enhanced
sampling.
It is interesting to note that at the lowest separation distance 𝑅0=0it is
not the lowest free energy state. Enforcing perfect mixing is not favorable,
as the two groups naturally want to separate slightly optimizing the entropy
of the chain end-tails.
3.1.3. Liquid Crystal Anchoring in Aqueous Interfaces
Liquid crystals ( /L.sc/C.scs), materials that ow like liquids but have anisotropic
properties as crystals, have been used lately as prototypes for molecular
sensors at interfaces given the high sensitivity in their anchoring behavior
relative to small concentration of molecules at aqueous interfaces [ /six.sc/nine.sc]. The
presence of molecules at the interface changes drastically the free energy
surface of /L.sc/C.scmolecules relative to their orientation and distance to such in-
terface. In this example, we are revisiting some canonical interfaces for /L.sc/C.sc;
4-cyano-4’-pentylbiphenyl ( /five.sc/C.sc/B.sc) at the interface of pure water and sodium
lauryl sulfate ( /S.sc/D.sc/S.sc). For /five.sc/C.sc/B.scand water, previous work has focused on ob-
taining the free energy surface of a /five.sc/C.sc/B.scat the water interface [ /seven.sc/zero.sc]. In our
case, hybrid anchoring conditions have been imposed on a 16 nm slab of
1000 /five.sc/C.sc/B.scmolecules in the nematic phase (300 K) interacting with a 3 nm
slab of water with 62 molecules of /S.sc/D.sc/S.scat one of the interfaces. The force
elds used are: united atom for/five.sc/C.sc/B.sc[/seven.sc/one.sc],/T.sc/I.sc/P.sc/three.sc/P.sc [/six.sc/two.sc] for water, /G.sc/A.sc/F.sc/F.sc [/six.sc/three.sc] and
Lipid 17 for /S.sc/D.sc/S.sc. The /C.sc/V.scs chosen to study this system are the distance of
the center of mass of one molecule of /five.sc/C.sc/B.sc at each one of the interfaces
(see Appendix A), and the tilt orientation of the same molecule with respect
to the z axis of the box. The free energy surfaces for the pure water and with
/S.sc/D.sc/S.scat the interface are both displayed in Figure 6. We can observe that the
free energy surface of pure water shows a minimum corresponding to a
parallel orientation to the surface with a similar shape that one calculated
in [/seven.sc/zero.sc]. On the contrary, the presence of /S.sc/D.sc/S.sctransforms the minimum to
a maximum in the same relative position and orientation to the interface
(Figure 6 top le), moving now the minima to a perpendicular orientation
of/five.sc/C.sc/B.scto the interface, in agreement to the experimental observation of
change from planar to homeotropic anchoring in the presence of /S.sc/D.sc/S.scin
water.
19Figure 6: Free energy surface of /five.sc/C.sc/B.scin a hybrid anchoring slab with /S.sc/D.sc/S.scand water. Right:
Snapshot of the system with water molecules in red, /five.sc/C.sc/B.scin purple, /S.sc/D.sc/S.scin green and sodium
ions in yellow. Top Le: /F.sc/E.sc/S.scof/five.sc/C.sc/B.scmolecule near the water– /S.sc/D.sc/S.scinterface. Bottom Le: /F.sc/E.sc/S.sc
of/five.sc/C.sc/B.scnear a pure water interface. Both /F.sc/E.sc/S.scwere obtained with /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc andOpen /M.sc/M.sc
using the /F.sc/U.sc/N.sc/N.sc method.
3.1.4. Ab Initio Enhanced Sampling Simulations
In the eld of ab initio simulations of heterogeneous catalysis, capturing
the dynamic and entropic eects is crucial for an accurate description of
the phenomena [ /three.sc/eight.sc]. Classical force elds are inadequate for capturing the
essential bond breaking events involved in catalysis, so /M.sc/D.scsimulations
based on rst-principles calculations are necessary. Given that reactive
events are oen limited by large free energy barriers, enhanced sampling
techniques are a crucial part of these simulations. Coupling /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc to
/A.sc/S.sc/E.sc, provides access to a wide range of rst-principle calculators.
As an example, we have used /V.sc/A.sc/S.sc/P.sc as a calculator for a simple ab initio
enhanced sampling simulation. The /C.sc/V.scis the separation distance between
a sodium and chlorine atom using the /P.sc/B.sc/E.scfunctional [ /seven.sc/two.sc], and Spectral /A.sc/B.sc/F.sc
as the enhanced sampling method (see section 2.1.10). The results are shown
in Figure 7, where the minimum in the free energy prole along the Na–Cl
distance corresponds to the equilibrium distance between Na and Cl atoms
in vacuum.
3.1.5. Enhanced Sampling with Machine Learning Force Fields
Deep neural network ( /N.sc/N.sc) force elds can retain the accuracy of ab initio
/M.sc/D.scwhile allowing for computational costs similar to those of classical /M.sc/D.sc.
202.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5 6.0
CV, Å0.00.51.01.52.02.5Energy results, eV
Free energy
Potential energy
Figure 7: Free energy ( 𝑇=300K) and potential energy calculations of Na–Cl distance with
/A.sc/S.sc/E.sc+/V.sc/A.sc/S.sc/P.sc using Spectral /A.sc/B.sc/F.sc in/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc .
Through /A.sc/S.sc/E.scit is possible to access /N.sc/N.scpotentials such as Deep /M.sc/D.sc[/seven.sc/three.sc], and
the Gaussian Approximation Potential ( /G.sc/A.sc/P.sc). Additionally, /J.sc/A.sc/X.sc /M.sc/D.sc allows to
leverage more general /N.sc/N.scpotentials that can be used in enhanced sampling
calculations. Coupling of /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc with /A.sc/S.sc/E.sc or/J.sc/A.sc/X.sc /M.sc/D.sc can be used in
active learning of /N.sc/N.scforce elds by eciently sampling rare events using
any of the enhanced sampling methods provided by /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc as described
in Ref. [ /seven.sc/four.sc] where parallel tempering metadynamics was used to generate
accurate /N.sc/N.scforce eld in urea decomposition in water.
To test the capabilities of /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc to handle dierent /N.sc/N.scforce elds,
we have selected three dierent systems trained with the methods men-
tioned above. For Deep /M.sc/D.sc, we use a pre-trained model for water, where
the enhanced sampling system is one single water molecule in vacuum, the
collective variable is the internal angle of the molecule and the sampling
method is /A.sc/B.sc/F.sc (section 2.1.4). The results in Figure 8 show that the mini-
mum for this free energy prole is around 105 degrees, which is within the
range of the experimental value.
Next, in Figure 8b, a /G.sc/A.sc/P.sc potential was used for Si–H amorphous mix-
tures [ /seven.sc/five.sc]. In this case, a system of 244 atoms was used, and the collective
variable is the bond angle between a triad of Si–Si–H atoms in the mixture.
The global minimum in free energy agrees with the histogram taken from
21unbiased simulations reported in [ /seven.sc/five.sc].
Lastly, we studied a Graph neural network ( /G.sc/N.sc/N.sc ) model of a Si crystal [ /seven.sc/six.sc]
with /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc and/J.sc/A.sc/X.sc /M.sc/D.sc . In this case, a crystalline Si system of 64 atoms
was used, and the /C.sc/V.scwas the Si–Si distance for the the crystal. The results
of Figure 8c show that for this model, the minimum in the free energy
corresponds almost exactly to the experimental value for the Si–Si nearest
distance of 2.35 Å.
Figure 8: Free energy calculation of: a) Water internal angle from a Deep /M.sc/D.scmodel with
/A.sc/S.sc/E.sc, b) Si–Si–H angle of /G.sc/A.sc/P.sc model with /A.sc/S.sc/E.scand c) Si–Si distance of a /G.sc/N.sc/N.sc model with
/J.sc/A.sc/X.sc /M.sc/D.sc .
3.2. Performance
Our analysis revealed that /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc is at least14–15 times faster than
/S.sc/S.sc/A.sc/G.sc/E.sc/S.sc on an Nvidia /V.sc/one.sc/zero.sc/zero.sc /G.sc/P.sc/U.sc machine. To obtain this estimate, we ran
enhanced sampling using umbrella sampling along the center of mass dis-
tance between two spherical polymer domains to measure the free energy
landscape of the ssion of a spherical diblock-copolymer blend (Figure 5)
described in section 3.1.2. For support and compatibility across libraries
and/M.sc/D.scengine versions, we estimated the performance with /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc v/zero.sc./nine.sc./two.sc-
alpha and /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc v/zero.sc./three.sc./zero.sc using /H.sc/O.sc/O.sc/M.sc/D.sc- blue v /two.sc./six.sc./zero.sc and/H.sc/O.sc/O.sc/M.sc/D.sc- blue
v/two.sc./nine.sc./seven.sc, respectively.
22Hoomd-blue, DPD simulation
PySAGES + Hoomd-blue, COM harmonic biasing
a b     c                                                                                                  d         e  fa b    c                                                                                                 f247μs Figure 9: The gure shows a 18ms section of proled timeline recorded with Nvidia Nsight
systems on an Nvidia /V.sc/one.sc/zero.sc/zero.sc /G.sc/P.sc/U.sc . The top row shows a vanilla /H.sc/O.sc/O.sc/M.sc/D.sc- blue simulation step,
while the bottom row shows a /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc //H.sc/O.sc/O.sc/M.sc/D.sc- blue simulation with harmonic biasing
of a center of mass /C.sc/V.sc. Light-blue represents the /G.sc/P.sc/U.sc activity while dark-blue represents
individual /C.sc/U.sc/D.sc/A.sc compute kernels. The maroon letters show case the same compute steps in
both simulations: a) First half-step of integration, b) compute of bond forces, c) pair-forces,
d) calculation of the /C.sc/V.sc, e) addition of the harmonic biasing force to the /H.sc/O.sc/O.sc/M.sc/D.sc- blue
simulation, and f) the second integration step. Sections d) and e) are /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc only and are
executed on the /G.sc/P.sc/U.sc. We observe /G.sc/P.sc/U.sc idle time during the /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc Python coordination
with /G.sc/P.sc/U.sc–/J.sc/A.sc/X.sc//C.scu/P.scy(green bar), but note that there is no memory copies even within the
/G.sc/P.sc/U.sc memory. The additional time for /C.sc/V.scbiasing per time step is 247μs (teal bar).
3.2.1. G/P.sc/U.sc utilization analysis
Py/S.sc/A.sc/G.sc/E.sc/S.sc is designed to execute every compute-intensive step of a simulation
on the /G.sc/P.sc/U.sc and have zero copy instruction between /G.sc/P.sc/U.sc device and host
/C.sc/P.sc/U.sc memory for its explicit backends for /H.sc/O.sc/O.sc/M.sc/D.sc- blue [ /four.sc] and Open /M.sc/M.sc
[/five.sc], while still providing Python code for the user through /J.sc/A.sc/X.sc [/seven.sc/seven.sc]. In this
section, we investigate the calculation eciency of /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc by examining
two example systems, one for each backend.
For/H.sc/O.sc/O.sc/M.sc/D.sc- blue, we are investigating a system of highly coarse-grained
/D.sc/P.sc/D.sc diblock-copolymers as discussed in section 3.1.2. The simulation box
contains a total of 𝑛𝑁=51 200 particles at a density of 𝜌=512𝜎3, which
we use for benchmarking purposes with an Nvidia /V.sc/one.sc/zero.sc/zero.sc /G.sc/P.sc/U.sc hosted on an
Intel Xeon Gold /six.sc/two.sc/four.sc/eight.sc/R.sc /C.sc/P.sc/U.sc @ 3.00GHz. Running only with /H.sc/O.sc/O.sc/M.sc/D.sc- blue
v/two.sc./nine.sc./seven.sc we achieve an average time steps per second ( /T.sc/P.sc/S.sc) of754, which is
the expected high performance of /H.sc/O.sc/O.sc/M.sc/D.sc- blue on /G.sc/P.sc/U.scs.
Figure 9 shows a detailed proled timeline during the execution of a
single time step. During 18ms,/H.sc/O.sc/O.sc/M.sc/D.sc- blue spends the most computa-
tional eort on the calculation of pairwise /D.sc/P.sc/D.sc forces. It can be noted that
/H.sc/O.sc/O.sc/M.sc/D.sc- blue is designed to have almost no idle time of the /G.sc/P.sc/U.sc during a
time step. As soon as /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc is added computation part, we observe that
an additional part is added to calculate the /C.sc/V.scand add the forces to every
particle. This causes a small period of idle of the /G.sc/P.sc/U.sc, since the execution
also requires action of the Python runtime interface with /J.sc/A.sc/X.sc. In the future,
we plan to launch the calculation of /C.sc/V.scasynchronously with the regular
23OpenMM OPLS all-atom simulation 636μsb             c                                  af 
b     c                           af                                                       d             e PySAGES + OpenMM 31 COM harmonic biasingFigure 10: 16ms proled time line of an Open /M.sc/M.sc /O.sc/P.sc/L.sc/S.sc simulation of 40981particles as
polymers with particle mesh Ewald ( /P.sc/M.sc/E.sc) summation for long-range Coulomb forces. The
colors and labels are identical to Figure 9. Open /M.sc/M.scworks with asynchronous /G.sc/P.sc/U.sc kernel
execution, which leads to less linearly sorted timelines, compared with /H.sc/O.sc/O.sc/M.sc/D.sc- blue, but
we can still identify the /C.sc/V.sccalculation d) and force biasing e) and the synchronization idle of
the/G.sc/P.sc/U.sc (green). Overall, the performance degradation is more pronounced with Open /M.sc/M.sc
compared to /H.sc/O.sc/O.sc/M.sc/D.sc- blue.
force calculation, which would hide this small /C.sc/P.sc/U.sc-intensive /G.sc/P.sc/U.sc idle time.
However, we measure that the total delay due to the extra computation is
only about 247μs only. We regard this to be an acceptable overhead for the
user-friendly denition of /C.sc/V.scs.
In order to connect multiple points in /C.sc/V.scspace we can use enhanced
sampling methods such as umbrella sampling (see section 2.1.2) or the
improved string method (see section 2.1.3) to calculate the /M.sc/F.sc/E.sc/P.sc . Common
for these advanced sampling methods that multiple replica of the system
are simulations. With /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc we easily parallelize their execution using
the Python module mpi4py and its MPIPoolExecutor . This enables us
to execute replica of the simulations on multiple /G.sc/P.sc/U.scs even as they span
dierent host machines. In our example, we used 14 replicas for umbrella
integration with 7 Nvidia /V.sc/one.sc/zero.sc/zero.sc /G.sc/P.sc/U.sc s. The use of a single /V.sc/one.sc/zero.sc/zero.sc /G.sc/P.sc/U.sc to execute
the simulations with 5105time steps for all replicas takes 2hours and 59
minutes. Ideal scaling with 7 /G.sc/P.sc/U.scs reduces the time to solution to about
26minutes. With our /M.sc/P.sc/I.sc-parallel implementation, we achieve a time-to-
solution of 28minutes. Synchronization overhead and nonparallel aspects
like nal analysis sum up to 2minutes or about 9%overhead. This multi- /G.sc/P.sc/U.sc
implementation via /M.sc/P.sc/I.scenables automatically ecient enhanced sampling
in high performance computing ( /H.sc/P.sc/C.sc) environments.
For enhanced sampling methods that are designed for single replica sim-
ulations, we oer an implementation that allows multiple replicas to run in
parallel, known as embarrassingly parallel computing. In this situation, the
build-in analysis averages the results from multiple replicas and estimates
uncertainties.
24In the previous section, we have demonstrated the fast /G.sc/P.sc/U.sc interoper-
ability between /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc and/H.sc/O.sc/O.sc/M.sc/D.sc- blue via /J.sc/A.sc/X.sc. However, the concept
of/P.scy/S.sc/A.sc/G.sc/E.sc/S.sc is to develop enhanced sampling methods independently of the
simulation backend, so here we demonstrate that similar performance can
be achieved with Open /M.sc/M.sc. Since Open /M.sc/M.scfocuses on all-atom simulations,
we simulate an all-atom model of a polymer with the Big/S.sc/M.sc/I.sc/L.sc/E.sc/S.sc [/seven.sc/eight.sc] no-
tation {[$]CC([$])(C)C(OCC(O)CSC1=CC=C(F)C(F)=C1)=O} with an
/O.sc/P.sc/L.sc/S.sc -/A.sc/A.scforce eld [ /seven.sc/nine.sc,/eight.sc/zero.sc] including long-range Coulomb forces via particle
mesh Ewald ( /P.sc/M.sc/E.sc ). We simulate a bulk system of 40mers with 31 macro-
molecules present, adding up to 40 981 atoms. As a proof of concept, we
calculated the center of mass for every polymer chain and biased it harmon-
ically via /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc . As a performance metric, we evaluate the nano-seconds
per day ( /N.sc/S.sc//D.sc/A.sc/Y.sc ) executed on the same hardware conguration as a the
/H.sc/O.sc/O.sc/M.sc/D.sc- blue example above. For the unbiased, pure Open /M.sc/M.scsimulation
we achieve a performance of 136/N.sc/S.sc//D.sc/A.sc/Y.sc . For the /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc biased sim-
ulation, we achieve a performance of 75/N.sc/S.sc//D.sc/A.sc/Y.sc , equating to a biasing
overhead of approximately 50%. Figure 10 shows a similar time series anal-
ysis as for /H.sc/O.sc/O.sc/M.sc/D.sc- blue.
It is notable that Open /M.sc/M.sc’s execution model makes more use of parallel
execution of independent kernels, which also changes the order of execu-
tion compared to /H.sc/O.sc/O.sc/M.sc/D.sc- blue. As a result, the same /C.sc/P.sc/U.sc synchronization
changes the execution more drastically than in /H.sc/O.sc/O.sc/M.sc/D.sc- blue. Additionally,
a single time step for this system is faster executed compared to /H.sc/O.sc/O.sc/M.sc/D.sc-
blue, making the synchronization overhead more noticeable. In this case,
parallelization of /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc andOpen /M.sc/M.scis projected to have a bigger perfor-
mance advantage. Furthermore, we notice that the calculation of the center
of mass and the biasing of all 31 polymer chains is more costly than the
single /C.sc/V.scin the previous example. The combination of these factors explain
the higher /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc overhead for this Open /M.sc/M.scsimulation, but overall per-
formance is good and signicantly better for alternative implementations
that require /C.sc/V.sccalculations on the /C.sc/P.sc/U.sc.
4. Conclusion
We have introduced /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , a library for enhanced sampling in molecular
dynamics simulations, which allows users to utilize a variety of enhanced
sampling methods and collective variables, as well as to implement new
ones via a simple Python and /J.sc/A.sc/X.sc-based interface.
We showed how /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc can be used through a number of example
applications in dierent elds such as drug design, materials engineering,
25polymer physics, and ab-initio MD simulations. We hope that these convey
for the reader the exibility and potential of the library for addressing a
diverse set of problems in a high-performance manner.
As our analysis showcased, for large problems, /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc can perform
biased simulation well over one order of magnitude faster than a library
such as /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc even when the backend already performs computations on
a/G.sc/P.sc/U.sc.
Nevertheless, as with any newly developed soware, /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc is still
under development and we are continually working to improve it. In the
near term, we plan to add the ability for users to perform restarts, which
will provide greater exibility running long simulations. Moreover, we plan
to optimize /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc -side computations to run fully asynchronously with
the computation of the forces of the backend, which will further enhance
its current performance. We also invite the community to contribute to the
development of /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc , whether by suggesting new features, reporting
bugs, or contributing code.
Overall, we believe that /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc provides a useful tool for researchers
interested in performing molecular and ab-initio simulations in multiple
elds, due to its user-friendly framework for dening and using sampling
methods and collective variables, as well as its high performance on /G.sc/P.sc/U.sc
devices.
Looking further ahead, we are excited about the potential for /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc
to enable fully end-to-end dierentiable free energy calculations. This will
provide new possibilities for force-eld and materials design, which would
drive signicant advances in these areas.
Code avalability
The code for /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc is available in the GitHub repository: https://
github.com/SSAGESLabs/PySAGES .
Acknowledgements
This work is supported by the Department of Energy, Basic Energy Sciences,
Materials Science and Engineering Division, through the Midwest Integrated
Center for Computational Materials ( /M.sc/I.sc/C.sc/C.sc o/M.sc). L. S. is grateful for the sup-
port of the Eric and Wendy Schmidt AI in Science Postdoctoral Fellowship at
the University of Chicago. R. A. is supported by the Dutch Research Council
(/N.sc/W.sc/O.sc Rubicon /zero.sc/one.sc/nine.sc./two.sc/zero.sc/two.sc/E.sc/N.sc./zero.sc/two.sc/eight.sc ). The authors also acknowledge the Research
Computing Center of the University of Chicago for computational resources.
26Conict of Interest Statement
A. L. F. is a co-founder and consultant of Evozyne, Inc. and a co-author of US
Patent Applications /one.sc/six.sc//eight.sc/eight.sc/seven.sc,/seven.sc/one.sc/zero.sc and/one.sc/seven.sc//six.sc/four.sc/two.sc,/five.sc/eight.sc/two.sc , US Provisional Patent Appli-
cations /six.sc/two.sc//eight.sc/five.sc/three.sc,/nine.sc/one.sc/nine.sc ,/six.sc/two.sc//nine.sc/zero.sc/zero.sc,/four.sc/two.sc/zero.sc ,/six.sc/three.sc//three.sc/one.sc/four.sc,/eight.sc/nine.sc/eight.sc , and /six.sc/three.sc//four.sc/seven.sc/nine.sc,/three.sc/seven.sc/eight.sc and International
Patent Applications /P.sc/C.sc/T.sc//U.sc/S.sc/two.sc/zero.sc/two.sc/zero.sc//zero.sc/three.sc/five.sc/two.sc/zero.sc/six.sc and/P.sc/C.sc/T.sc//U.sc/S.sc/two.sc/zero.sc/two.sc/zero.sc//zero.sc/five.sc/zero.sc/four.sc/six.sc/six.sc .
27Appendix A. Collective variable for the distance to an interface
Implementation of the /C.sc/V.scdescribed in section 2.2.1, that is, the distance
between a group of atoms to an interface dened by another group of atoms.
class DistanceToInterface (TwoPointCV):
def __init__(self, indices, axis, sigma, scope, bins=100, coeff=1):
super().__init__(indices)
self.axis = axis
self.sigma = sigma
self.scope = scope
self.bins = bins
self.coeff = coeff
@property
def function(self):
return lambda r1, r2: distance_to_interface(
r1, r2, axis=self.axis,
sigma=self.sigma, scope=self.scope,
bins=self.bins, coeff=self.coeff
)
def distance_to_interface(p1, p2, axis, sigma, scope, bins, coeff):
mobile_axis = barycenter(p1)[axis]
positions_axis = p2.flatten()[axis::3]
centers = np.linspace(scope[0], scope[1], bins)
centers = np.expand_dims(centers, 1)
positions_axis = np.expand_dims(positions_axis, 0)
diff = positions_axis - centers
mass = np.exp(-0.5 * (diff / sigma) ** 2)
mass = np.sum(mass, axis=1)
mass_diff = np.abs(mass[1:] - mass[:-1])
centers = np.squeeze(centers)
centers_mean = (centers[1:] + centers[:-1]) / 2
probability = nn.softmax(mass_diff * coeff)
interface = np.sum(probability * centers_mean)
return mobile_axis - interface
28Appendix B. Benchmark test systems
In the following sections, we present the results of the free energy calcula-
tion for the benchmark test systems of alanine dipeptide and butane. The
details of all the parameters chosen to perform the enhanced sampling
simulation of these are summarized in Appendix B.3.
Appendix B.1. Alanine Dipeptide
The rst test system involves alanine dipeptide in vacuum (Figure B.11), a
benchmark system for enhanced sampling methods that is frequently used
in the literature.
3 2 1 0 1 2 33210123SpectralABF - 2.0 ns
020406080A (kJ mol1)
3 2 1 0 1 2 33210123Metadynamics - 12.0 ns
020406080A (kJ mol1)
3 2 1 0 1 2 33210123ANN - 4.0 ns
020406080A (kJ mol1)
3 2 1 0 1 2 33210123CFF - 16.0 ns
020406080A (kJ mol1)
Figure B.11: Free energy landscape of alanine dipeptide (Amber f f /nine.sc/nine.sc/S.sc/B.sc [/eight.sc/one.sc]) in vacuum as
a function of the dihedral angles 𝜙and𝜓obtained with /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc andOpen /M.sc/M.scvia dierent
enhanced sampling methods: /A.sc/B.sc/F.sc, Metadynamics, Spectral /A.sc/B.sc/F.sc,/A.sc/N.sc/N.sc ,/F.sc/U.sc/N.sc/N.sc ,/C.sc/F.sc/F.sc. Each
panel also indicates the length of the simulation necessary for the free energy to converge.
The long /A.sc/B.sc/F.sc simulations represent the ground truth.
Appendix B.2. Butane
As a second test system, we compute the free energy prole along the C-C-
C-C dihedral angle, 𝜙𝐶𝐶𝐶𝐶, of a butane molecule (in vacuum), Figure B.12.
Appendix B.3. Example System Details
293
 2
 1
 0 1 2 3
CCCC
0123456A (kcal mol1)
ANN (2.0 ns)
CFF (1.0 ns)
FUNN (2.0 ns)
WTMD (16.0 ns)
SpectralABF (1.0 ns)Figure B.12: Free energy prole along the dihedral angle of a butane molecule (using an /O.sc/P.sc/L.sc/S.sc -
based force eld [ /seven.sc/nine.sc]) obtained via dierent enhanced sampling methods with /P.scy/S.sc/A.sc/G.sc/E.sc/S.sc and
/H.sc/O.sc/O.sc/M.sc/D.sc- blue: /A.sc/N.sc/N.sc,/C.sc/F.sc/F.sc,/F.sc/U.sc/N.sc/N.sc , Spectral /A.sc/B.sc/F.sc,/W.sc/T.sc/M.sc/D.sc . The legend also indicates the length
of the simulation. The long /A.sc/B.sc/F.sc simulations represent the ground truth.
Table B.1: Parameters and methods details for the various examples. For all methods but
Metadynamics, we used a grid with 50 points along each /C.sc/V.scfor/A.sc/D.sc/P.sc and with 64 points along
the/C.sc/V.scfor butane.
𝑁(/A.sc/B.sc/F.sc) = Threshold parameter before accounting for the full average of the adaptive biasing
force.
/A.sc/D.sc/P.sc = alanine dipeptide
System Backend /C.sc/V.sc Method Settings Fig.
/A.sc/D.sc/P.sc Open /M.sc/M.sc 𝜙and𝜓/A.sc/B.sc/F.sc 𝑁=500(default)
B.11/A.sc/N.sc/N.sc topology =¹88º
/C.sc/F.sc/F.sc topology =¹14º
/F.sc/U.sc/N.sc/N.sc topology =¹14º
Metadynamics𝜎=035rad
ℎ=12kJ/mol
stride =500
Spectral /A.sc/B.sc/F.sc —
Butane /H.sc/O.sc/O.sc/M.sc/D.sc- blue𝜙𝐶𝐶𝐶𝐶/A.sc/N.sc/N.sc topology =¹88º
B.12/C.sc/F.sc/F.sc topology =¹8º
/F.sc/U.sc/N.sc/N.sc topology =¹8º
/W.sc/T.sc/M.sc/D.sc𝜎=010rad
ℎ=001kJ/mol
stride =50
Δ𝑇=5000
Spectral /A.sc/B.sc/F.sc —
30References
/one.tosf. nobelprize.org, The nobel prize in chemistry /two.tosf/zero.tosf/one.tosf/three.tosf ( https://
nobelprize.org/prizes/chemistry/2013/summary/ , accessed
November /two.tosf/zero.tosf/two.tosf/two.tosf).
/two.tosf. D. E. Shaw, M. M. Denero, R. O. Dror, J. S. Kuskin, R. H. Larson, J. K.
Salmon, C. Young, B. Batson, K. J. Bowers, J. C. Chao, et al., Anton, a
special-purpose machine for molecular dynamics simulation, Com-
munications of the /A.sc/C.sc/M.sc /five.tosf/one.tosf (/seven.tosf) (/two.tosf/zero.tosf/zero.tosf/eight.tosf) /nine.tosf/one.tosf–/nine.tosf/seven.tosf.
/three.tosf. D. E. Shaw, J. Grossman, J. A. Bank, B. Batson, J. A. Butts, J. C. Chao,
M. M. Denero, R. O. Dror, A. Even, C. H. Fenton, et al., Anton /two.tosf:
raising the bar for performance and programmability in a special-
purpose molecular dynamics supercomputer, in: /S.sc/C.sc’/one.sc/four.sc : Proceedings
of the International Conference for High Performance Computing,
Networking, Storage and Analysis, /I.sc/E.sc/E.sc/E.sc , /two.tosf/zero.tosf/one.tosf/four.tosf, pp. /four.tosf/one.tosf–/five.tosf/three.tosf.
/four.tosf. J. A. Anderson, J. Glaser, S. C. Glotzer, /H.sc/O.sc/O.sc/M.sc/D.sc -blue: A Python pack-
age for high-performance molecular dynamics and hard particle
Monte Carlo simulations, Computational Materials Science /one.tosf/seven.tosf/three.tosf (/two.tosf/zero.tosf/two.tosf/zero.tosf)
/one.tosf/zero.tosf/nine.tosf/three.tosf/six.tosf/three.tosf.
/five.tosf. P. Eastman, J. Swails, J. D. Chodera, R. T. McGibbon, Y. Zhao, K. A.
Beauchamp, L.-P. Wang, A. C. Simmonett, M. P. Harrigan, C. D. Stern,
R. P. Wiewiora, B. R. Brooks, V . S. Pande, Open /M.sc/M.sc/seven.tosf: Rapid develop-
ment of high performance algorithms for molecular dynamics, /P.sc/L.sc/O.sc/S.sc
Computational Biology /one.tosf/three.tosf (/seven.tosf) (/two.tosf/zero.tosf/one.tosf/seven.tosf) /one.tosf–/one.tosf/seven.tosf.
/six.tosf. S. Schoenholz, E. D. Cubuk, /J.sc/A.sc/X.sc, /M.sc./D.sc. a framework for dierentiable
physics, in: Advances in Neural Information Processing Systems,
Vol. /three.tosf/three.tosf, /two.tosf/zero.tosf/two.tosf/zero.tosf, pp. /one.tosf/one.tosf/four.tosf/two.tosf/eight.tosf–/one.tosf/one.tosf/four.tosf/four.tosf/one.tosf.
/seven.tosf. S. S. Schoenholz, E. D. Cubuk, /J.sc/A.sc/X.sc, /M.sc./D.sc. a framework for dieren-
tiable physics, Journal of Statistical Mechanics: Theory and Experi-
ment /two.tosf/zero.tosf/two.tosf/one.tosf (/one.tosf/two.tosf) (/two.tosf/zero.tosf/two.tosf/one.tosf) /one.tosf/two.tosf/four.tosf/zero.tosf/one.tosf/six.tosf.
/eight.tosf. A. P. Thompson, H. M. Aktulga, R. Berger, D. S. Bolintineanu, W. M.
Brown, P. S. Crozier, P. J. in ’t Veld, A. Kohlmeyer, S. G. Moore, T. D.
Nguyen, R. Shan, M. J. Stevens, J. Tranchida, C. Trott, S. J. Plimpton,
/L.sc/A.sc/M.sc/M.sc/P.sc/S.sc - a exible simulation tool for particle-based materials mod-
eling at the atomic, meso, and continuum scales, Comp. Phys. Comm.
/two.tosf/seven.tosf/one.tosf (/two.tosf/zero.tosf/two.tosf/two.tosf) /one.tosf/zero.tosf/eight.tosf/one.tosf/seven.tosf/one.tosf.
31/nine.tosf. M. J. Abraham, T. Murtola, R. Schulz, S. Páll, J. C. Smith, B. Hess,
E. Lindahl, Gromacs: High performance molecular simulations
through multi-level parallelism from laptops to supercomputers, So-
wareX /one.tosf (/two.tosf/zero.tosf/one.tosf/five.tosf) /one.tosf/nine.tosf–/two.tosf/five.tosf.
/one.tosf/zero.tosf. G. A. Tribello, M. Bonomi, D. Branduardi, C. Camilloni, G. Bussi,
/P.sc/L.sc/U.sc/M.sc/E.sc/D.sc /two.sc : New feathers for an old bird, Computer Physics Commu-
nications /one.tosf/eight.tosf/five.tosf (/two.tosf) (/two.tosf/zero.tosf/one.tosf/four.tosf) /six.tosf/zero.tosf/four.tosf–/six.tosf/one.tosf/three.tosf.
/one.tosf/one.tosf. G. Fiorin, M. L. Klein, J. Hénin, Using collective variables to drive
molecular dynamics simulations, Molecular Physics /one.tosf/one.tosf/one.tosf (/two.tosf/two.tosf-/two.tosf/three.tosf) (/two.tosf/zero.tosf/one.tosf/three.tosf)
/three.tosf/three.tosf/four.tosf/five.tosf–/three.tosf/three.tosf/six.tosf/two.tosf.
/one.tosf/two.tosf. H. Sidky, Y. J. Colón, J. Helerich, B. J. Sikora, C. Bezik, W. Chu,
F. Giberti, A. Z. Guo, X. Jiang, J. Lequieu, J. Li, J. Moller, M. J. Quevil-
lon, M. Rahimi, H. Ramezani-Dakhel, V . S. Rathee, D. R. Reid, E. Sev-
gen, V . Thapar, M. A. Webb, J. K. Whitmer, J. J. de Pablo, /S.sc/S.sc/A.sc/G.sc/E.sc/S.sc : So-
ware suite for advanced general ensemble simulations, The Journal of
Chemical Physics /one.tosf/four.tosf/eight.tosf (/four.tosf) (/two.tosf/zero.tosf/one.tosf/eight.tosf) /zero.tosf/four.tosf/four.tosf/one.tosf/zero.tosf/four.tosf.
/one.tosf/three.tosf. H. Sidky, J. K. Whitmer, Learning free energy landscapes using arti-
cial neural networks, The Journal of Chemical Physics /one.tosf/four.tosf/eight.tosf (/one.tosf/zero.tosf) (/two.tosf/zero.tosf/one.tosf/eight.tosf)
/one.tosf/zero.tosf/four.tosf/one.tosf/one.tosf/one.tosf.
/one.tosf/four.tosf. A. Z. Guo, E. Sevgen, H. Sidky, J. K. Whitmer, J. A. Hubbell, J. J.
de Pablo, Adaptive enhanced sampling by force-biasing using neural
networks, The Journal of Chemical Physics /one.tosf/four.tosf/eight.tosf (/one.tosf/three.tosf) (/two.tosf/zero.tosf/one.tosf/eight.tosf) /one.tosf/three.tosf/four.tosf/one.tosf/zero.tosf/eight.tosf.
/one.tosf/five.tosf. E. Sevgen, A. Z. Guo, H. Sidky, J. K. Whitmer, J. J. de Pablo, Combined
force-frequency sampling for simulation of systems having rugged
free energy landscapes, Journal of Chemical Theory and Computa-
tion /one.tosf/six.tosf (/three.tosf) (/two.tosf/zero.tosf/two.tosf/zero.tosf) /one.tosf/four.tosf/four.tosf/eight.tosf–/one.tosf/four.tosf/five.tosf/five.tosf.
/one.tosf/six.tosf. D. Wang, Y. Wang, J. Chang, L. Zhang, H. Wang, et al., Ecient sam-
pling of high-dimensional free energy landscapes using adaptive rein-
forced dynamics, Nature Computational Science /two.tosf (/one.tosf) (/two.tosf/zero.tosf/two.tosf/two.tosf) /two.tosf/zero.tosf–/two.tosf/nine.tosf.
/one.tosf/seven.tosf. C. R. Schwantes, V . S. Pande, Improvements in markov state model
construction reveal many non-native interactions in the folding of
/N.sc/T.sc/L.sc/nine.sc , Journal of Chemical Theory and Computation /nine.tosf (/four.tosf) (/two.tosf/zero.tosf/one.tosf/three.tosf) /two.tosf/zero.tosf/zero.tosf/zero.tosf–
/two.tosf/zero.tosf/zero.tosf/nine.tosf.
32/one.tosf/eight.tosf. W. Chen, A. L. Ferguson, Molecular enhanced sampling with autoen-
coders: On-the-y collective variable discovery and accelerated free
energy landscape exploration, Journal of computational chemistry
/three.tosf/nine.tosf (/two.tosf/five.tosf) (/two.tosf/zero.tosf/one.tosf/eight.tosf) /two.tosf/zero.tosf/seven.tosf/nine.tosf–/two.tosf/one.tosf/zero.tosf/two.tosf.
/one.tosf/nine.tosf. A. Mardt, L. Pasquali, H. Wu, F. Noé, /V.sc/A.sc/M.sc/P.sc nets for deep learning of
molecular kinetics, Nature communications /nine.tosf (/one.tosf) (/two.tosf/zero.tosf/one.tosf/eight.tosf) /one.tosf–/one.tosf/one.tosf.
/two.tosf/zero.tosf. W. Chen, H. Sidky, A. L. Ferguson, Capabilities and limitations of
time-lagged autoencoders for slow mode discovery in dynamical sys-
tems, The Journal of Chemical Physics /one.tosf/five.tosf/one.tosf (/six.tosf) (/two.tosf/zero.tosf/one.tosf/nine.tosf) /zero.tosf/six.tosf/four.tosf/one.tosf/two.tosf/three.tosf.
/two.tosf/one.tosf. W. Chen, H. Sidky, A. L. Ferguson, Nonlinear discovery of slow molec-
ular modes using state-free reversible /V.sc/A.sc/M.sc/P.sc nets, The Journal of
Chemical Physics /one.tosf/five.tosf/zero.tosf (/two.tosf/one.tosf) (/two.tosf/zero.tosf/one.tosf/nine.tosf) /two.tosf/one.tosf/four.tosf/one.tosf/one.tosf/four.tosf.
/two.tosf/two.tosf. H. Sidky, W. Chen, A. L. Ferguson, Molecular latent space simulators,
Chemical Science /one.tosf/one.tosf (/three.tosf/five.tosf) (/two.tosf/zero.tosf/two.tosf/zero.tosf) /nine.tosf/four.tosf/five.tosf/nine.tosf–/nine.tosf/four.tosf/six.tosf/seven.tosf.
/two.tosf/three.tosf. T.-S. Lee, D. S. Cerutti, D. Mermelstein, C. Lin, S. LeGrand, T. J. Giese,
A. Roitberg, D. A. Case, R. C. Walker, D. M. York, G/P.sc/U.sc-accelerated
molecular dynamics and free energy methods in Amber/one.tosf/eight.tosf: perfor-
mance enhancements and new features, Journal of chemical informa-
tion and modeling /five.tosf/eight.tosf (/one.tosf/zero.tosf) (/two.tosf/zero.tosf/one.tosf/eight.tosf) /two.tosf/zero.tosf/four.tosf/three.tosf–/two.tosf/zero.tosf/five.tosf/zero.tosf.
/two.tosf/four.tosf. J. C. Phillips, D. J. Hardy, J. D. Maia, J. E. Stone, J. V . Ribeiro, R. C.
Bernardi, R. Buch, G. Fiorin, J. Hénin, W. Jiang, et al., Scalable molec-
ular dynamics on /C.sc/P.sc/U.sc and/G.sc/P.sc/U.sc architectures with /N.sc/A.sc/M.sc/D.sc , The Journal
of Chemical Physics /one.tosf/five.tosf/three.tosf (/four.tosf) (/two.tosf/zero.tosf/two.tosf/zero.tosf) /zero.tosf/four.tosf/four.tosf/one.tosf/three.tosf/zero.tosf.
/two.tosf/five.tosf. C. Kobayashi, J. Jung, Y. Matsunaga, T. Mori, T. Ando, K. Tamura,
M. Kamiya, Y. Sugita, /G.sc/E.sc/N.sc/E.sc/S.sc/I.sc/S.sc /one.sc./one.sc : A hybrid-parallel molecular dy-
namics simulator with enhanced sampling algorithms on multiple
computational platforms (/two.tosf/zero.tosf/one.tosf/seven.tosf).
/two.tosf/six.tosf. C. R. Harris, K. J. Millman, S. J. van der Walt, R. Gommers, P. Virta-
nen, D. Cournapeau, E. Wieser, J. Taylor, S. Berg, N. J. Smith, R. Kern,
M. Picus, S. Hoyer, M. H. van Kerkwijk, M. Brett, A. Haldane, J. F.
del Río, M. Wiebe, P. Peterson, P. Gérard-Marchant, K. Sheppard,
T. Reddy, W. Weckesser, H. Abbasi, C. Gohlke, T. E. Oliphant, Array
programming with NumPy, Nature /five.tosf/eight.tosf/five.tosf (/seven.tosf/eight.tosf/two.tosf/five.tosf) (/two.tosf/zero.tosf/two.tosf/zero.tosf) /three.tosf/five.tosf/seven.tosf–/three.tosf/six.tosf/two.tosf.
/two.tosf/seven.tosf. DLPack ( https://github.com/dmlc/dlpack , accessed November
/two.tosf/zero.tosf/two.tosf/two.tosf).
33/two.tosf/eight.tosf. trunk.io, Trunk.IO ( https://trunk.io , accessed September /two.tosf/zero.tosf/two.tosf/two.tosf).
/two.tosf/nine.tosf. H. Sidky, W. Chen, A. L. Ferguson, Machine learning for collective
variable discovery and enhanced sampling in biomolecular simula-
tion, Molecular Physics /one.tosf/one.tosf/eight.tosf (/five.tosf) (/two.tosf/zero.tosf/two.tosf/zero.tosf) e/one.tosf/seven.tosf/three.tosf/seven.tosf/seven.tosf/four.tosf/two.tosf.
/three.tosf/zero.tosf. N. E. Jackson, M. A. Webb, J. J. de Pablo, Recent advances in machine
learning towards multiscale so materials design, Current Opinion in
Chemical Engineering /two.tosf/three.tosf (/two.tosf/zero.tosf/one.tosf/nine.tosf) /one.tosf/zero.tosf/six.tosf–/one.tosf/one.tosf/four.tosf.
/three.tosf/one.tosf. P. Tiwary, A. v. d. Walle, A review of enhanced sampling approaches
for accelerated molecular dynamics, Multiscale materials modeling
for nanomechanics (/two.tosf/zero.tosf/one.tosf/six.tosf) /one.tosf/nine.tosf/five.tosf–/two.tosf/two.tosf/one.tosf.
/three.tosf/two.tosf. A.-h. Wang, Z.-c. Zhang, G.-h. Li, Advances in enhanced sampling
molecular dynamics simulations for biomolecules, Chinese Journal
of Chemical Physics /three.tosf/two.tosf (/three.tosf) (/two.tosf/zero.tosf/one.tosf/nine.tosf) /two.tosf/seven.tosf/seven.tosf.
/three.tosf/three.tosf. A. Mitsutake, Y. Mori, Y. Okamoto, Enhanced sampling algorithms,
Biomolecular Simulations (/two.tosf/zero.tosf/one.tosf/three.tosf) /one.tosf/five.tosf/three.tosf–/one.tosf/nine.tosf/five.tosf.
/three.tosf/four.tosf. Y. Miao, J. A. McCammon, Unconstrained enhanced sampling for free
energy calculations of biomolecules: a review, Molecular simulation
/four.tosf/two.tosf (/one.tosf/three.tosf) (/two.tosf/zero.tosf/one.tosf/six.tosf) /one.tosf/zero.tosf/four.tosf/six.tosf–/one.tosf/zero.tosf/five.tosf/five.tosf.
/three.tosf/five.tosf. Y. I. Yang, Q. Shao, J. Zhang, L. Yang, Y. Q. Gao, Enhanced sampling in
molecular dynamics, The Journal of Chemical Physics /one.tosf/five.tosf/one.tosf (/seven.tosf) (/two.tosf/zero.tosf/one.tosf/nine.tosf)
/zero.tosf/seven.tosf/zero.tosf/nine.tosf/zero.tosf/two.tosf.
/three.tosf/six.tosf. C. Abrams, G. Bussi, Enhanced sampling in molecular dynamics us-
ing metadynamics, replica-exchange, and temperature-acceleration,
Entropy /one.tosf/six.tosf (/one.tosf) (/two.tosf/zero.tosf/one.tosf/four.tosf) /one.tosf/six.tosf/three.tosf–/one.tosf/nine.tosf/nine.tosf.
/three.tosf/seven.tosf. V . Limongelli, Ligand binding free energy and kinetics calculation in
/two.tosf/zero.tosf/two.tosf/zero.tosf, /W.sc/I.sc/R.sc/E.sc s Computational Molecular Science /one.tosf/zero.tosf (/four.tosf) (/two.tosf/zero.tosf/two.tosf/zero.tosf) e/one.tosf/four.tosf/five.tosf/five.tosf.
/three.tosf/eight.tosf. G. Piccini, M.-S. Lee, S. F. Yuk, D. Zhang, G. Collinge, L. Kollias, M.-T.
Nguyen, V .-A. Glezakou, R. Rousseau, Ab initio molecular dynamics
with enhanced sampling in heterogeneous catalysis, Catal. Sci. Tech-
nol. /one.tosf/two.tosf (/two.tosf/zero.tosf/two.tosf/two.tosf) /one.tosf/two.tosf–/three.tosf/seven.tosf.
/three.tosf/nine.tosf. J. Kästner, Umbrella integration in two or more reaction coordinates,
The Journal of Chemical Physics /one.tosf/three.tosf/one.tosf (/three.tosf) (/two.tosf/zero.tosf/zero.tosf/nine.tosf) /zero.tosf/three.tosf/four.tosf/one.tosf/zero.tosf/nine.tosf.
34/four.tosf/zero.tosf. J. Kästner, Umbrella sampling, Wiley Interdisciplinary Reviews: Com-
putational Molecular Science /one.tosf (/six.tosf) (/two.tosf/zero.tosf/one.tosf/one.tosf) /nine.tosf/three.tosf/two.tosf–/nine.tosf/four.tosf/two.tosf.
/four.tosf/one.tosf. E. Weinan, W. Ren, E. Vanden-Eijnden, Simplied and improved
string method for computing the minimum energy paths in barrier-
crossing events, Journal of Chemical Physics /one.tosf/two.tosf/six.tosf (/one.tosf/six.tosf) (/two.tosf/zero.tosf/zero.tosf/seven.tosf) /one.tosf/six.tosf/four.tosf/one.tosf/zero.tosf/three.tosf.
/four.tosf/two.tosf. J. Comer, J. C. Gumbart, J. Hénin, T. Lelièvre, A. Pohorille, C. Chipot,
The adaptive biasing force method: Everything you always wanted
to know but were afraid to ask, The Journal of Physical Chemistry B
/one.tosf/one.tosf/nine.tosf (/three.tosf) (/two.tosf/zero.tosf/one.tosf/five.tosf) /one.tosf/one.tosf/two.tosf/nine.tosf–/one.tosf/one.tosf/five.tosf/one.tosf.
/four.tosf/three.tosf. E. Darve, D. Rodríguez-Gómez, A. Pohorille, Adaptive biasing force
method for scalar and vector free energy calculations, The Journal of
Chemical Physics /one.tosf/two.tosf/eight.tosf (/one.tosf/four.tosf) (/two.tosf/zero.tosf/zero.tosf/eight.tosf) /one.tosf/four.tosf/four.tosf/one.tosf/two.tosf/zero.tosf.
/four.tosf/four.tosf. A. Laio, M. Parrinello, Escaping free-energy minima, Proceedings of
the National Academy of Sciences /nine.tosf/nine.tosf (/two.tosf/zero.tosf) (/two.tosf/zero.tosf/zero.tosf/two.tosf) /one.tosf/two.tosf/five.tosf/six.tosf/two.tosf–/one.tosf/two.tosf/five.tosf/six.tosf/six.tosf.
/four.tosf/five.tosf. A. Barducci, G. Bussi, M. Parrinello, Well-tempered metadynamics:
a smoothly converging and tunable free-energy method, Physical re-
view letters /one.tosf/zero.tosf/zero.tosf (/two.tosf) (/two.tosf/zero.tosf/zero.tosf/eight.tosf) /zero.tosf/two.tosf/zero.tosf/six.tosf/zero.tosf/three.tosf.
/four.tosf/six.tosf. S. Hussain, A. Haji-Akbari, Studying rare events using forward-ux
sampling: Recent breakthroughs and future outlook, The Journal of
Chemical Physics /one.tosf/five.tosf/two.tosf (/six.tosf) (/two.tosf/zero.tosf/two.tosf/zero.tosf) /zero.tosf/six.tosf/zero.tosf/nine.tosf/zero.tosf/one.tosf.
/four.tosf/seven.tosf. R. J. Allen, P. B. Warren, P. R. ten Wolde, Sampling rare switching
events in biochemical networks, Phys. Rev. Lett. /nine.tosf/four.tosf (/two.tosf/zero.tosf/zero.tosf/five.tosf) /zero.tosf/one.tosf/eight.tosf/one.tosf/zero.tosf/four.tosf.
/four.tosf/eight.tosf. R. J. Allen, D. Frenkel, P. R. ten Wolde, Simulating rare events in equi-
librium or nonequilibrium stochastic systems, The Journal of Chemi-
cal Physics /one.tosf/two.tosf/four.tosf (/two.tosf) (/two.tosf/zero.tosf/zero.tosf/six.tosf) /zero.tosf/two.tosf/four.tosf/one.tosf/zero.tosf/two.tosf.
/four.tosf/nine.tosf. J. K. Whitmer, C.-c. Chiu, A. A. Joshi, J. J. De Pablo, Basis function
sampling: A new paradigm for material property computation, Physi-
cal review letters /one.tosf/one.tosf/three.tosf (/one.tosf/nine.tosf) (/two.tosf/zero.tosf/one.tosf/four.tosf) /one.tosf/nine.tosf/zero.tosf/six.tosf/zero.tosf/two.tosf.
/five.tosf/zero.tosf. P. F. Zubieta Rico, J. J. de Pablo, Sobolev sampling of free energy land-
scapes, arXiv (/two.tosf/zero.tosf/two.tosf/two.tosf). arXiv:2202.01876 .
/five.tosf/one.tosf. D. Cremer, J. A. Pople, General denition of ring puckering coordi-
nates, Journal of the American Chemical Society /nine.tosf/seven.tosf (/six.tosf) (/one.tosf/nine.tosf/seven.tosf/five.tosf) /one.tosf/three.tosf/five.tosf/four.tosf–
/one.tosf/three.tosf/five.tosf/eight.tosf.
35/five.tosf/two.tosf. J. M. L. Ribeiro, P. Bravo, Y. Wang, P. Tiwary, Reweighted autoen-
coded variational bayes for enhanced sampling (rave), The Journal
of Chemical Physics /one.tosf/four.tosf/nine.tosf (/seven.tosf) (/two.tosf/zero.tosf/one.tosf/eight.tosf) /zero.tosf/seven.tosf/two.tosf/three.tosf/zero.tosf/one.tosf.
/five.tosf/three.tosf. C. Wehmeyer, F. Noé, Time-lagged autoencoders: Deep learning of
slow collective variables for molecular kinetics, The Journal of Chemi-
cal Physics /one.tosf/four.tosf/eight.tosf (/two.tosf/four.tosf) (/two.tosf/zero.tosf/one.tosf/eight.tosf) /two.tosf/four.tosf/one.tosf/seven.tosf/zero.tosf/three.tosf.
/five.tosf/four.tosf. W. Wang, Z. Wu, R. Gómez-Bombarelli, Learning pair potentials using
dierentiable simulations (/two.tosf/zero.tosf/two.tosf/two.tosf). arXiv:2209.07679 .
/five.tosf/five.tosf. A. Sethi, K. Joshi, K. Sasikala, M. Alvala, Molecular docking in
modern drug discovery: Principles and recent applications, in:
V . Gaitonde, P. Karmakar, A. Trivedi (Eds.), Drug Discovery and De-
velopment, Vol. /two.tosf, IntechOpen, /two.tosf/zero.tosf/one.tosf/nine.tosf, Ch. /three.tosf, pp. /one.tosf–/two.tosf/one.tosf.
/five.tosf/six.tosf. S. Ruiz-Carmona, P. Schmidtke, F. J. Luque, L. Baker, N. Matassova,
B. Davis, S. Roughley, J. Murray, R. Hubbard, X. Barril, Dynamic un-
docking and the quasi-bound state as tools for drug discovery, Nature
Chemistry /nine.tosf (/three.tosf) (/two.tosf/zero.tosf/one.tosf/seven.tosf) /one.tosf/seven.tosf/five.tosf/five.tosf–/four.tosf/three.tosf/four.tosf/nine.tosf.
/five.tosf/seven.tosf. M. Majewski, X. Barril, Structural stability predicts the binding mode
of protein–ligand complexes, Journal of Chemical Information and
Modeling /six.tosf/zero.tosf (/three.tosf) (/two.tosf/zero.tosf/two.tosf/zero.tosf) /one.tosf/six.tosf/four.tosf/four.tosf–/one.tosf/six.tosf/five.tosf/one.tosf.
/five.tosf/eight.tosf. M. Rachman, D. Bajusz, A. Hetényi, A. Scarpino, B. Merő, A. Egyed,
L. Buday, X. Barril, G. M. Keserű, Discovery of a novel kinase hinge
binder fragment by dynamic undocking, /R.sc/S.sc/C.sc Med. Chem. /one.tosf/one.tosf (/two.tosf/zero.tosf/two.tosf/zero.tosf)
/five.tosf/five.tosf/two.tosf–/five.tosf/five.tosf/eight.tosf.
/five.tosf/nine.tosf. N. Drayman, J. K. DeMarco, K. A. Jones, S.-A. Azizi, H. M. Froggatt,
K. Tan, N. I. Maltseva, S. Chen, V . Nicolaescu, S. Dvorkin, K. Fur-
long, R. S. Kathayat, M. R. Firpo, V . Mastrodomenico, E. A. Bruce,
M. M. Schmidt, R. Jedrzejczak, M. A. Munoz-Alia, B. Schuster, V . Nair,
K. yeon Han, A. O’Brien, A. Tomatsidou, B. Meyer, M. Vignuzzi,
D. Missiakas, J. W. Botten, C. B. Brooke, H. Lee, S. C. Baker, B. C.
Mounce, N. S. Heaton, W. E. Severson, K. E. Palmer, B. C. Dickin-
son, A. Joachimiak, G. Randall, S. Tay, Masitinib is a broad coron-
avirus /three.sc/C.sc/L.scinhibitor that blocks replication of /S.sc/A.sc/R.sc/S.sc-/C.sc o/V.sc-/two.sc, Science
/three.tosf/seven.tosf/three.tosf (/six.tosf/five.tosf/five.tosf/seven.tosf) (/two.tosf/zero.tosf/two.tosf/one.tosf) /nine.tosf/three.tosf/one.tosf–/nine.tosf/three.tosf/six.tosf.
/six.tosf/zero.tosf. S. Ruiz-Carmona, D. Alvarez-Garcia, N. Foloppe, A. B. Garmendia-
Doval, S. Juhos, P. Schmidtke, X. Barril, R. E. Hubbard, S. D. Morley,
36rdock: A fast, versatile and open source program for docking ligands
to proteins and nucleic acids, /P.sc/L.sc/O.sc/S.sc Computational Biology /one.tosf/zero.tosf (/four.tosf)
(/two.tosf/zero.tosf/one.tosf/four.tosf) /one.tosf–/seven.tosf.
/six.tosf/one.tosf. J. A. Maier, C. Martinez, K. Kasavajhala, L. Wickstrom, K. E. Hauser,
C. Simmerling, f f /one.sc/four.sc/S.sc/B.sc : Improving the accuracy of protein side chain
and backbone parameters from f f /nine.sc/nine.sc/S.sc/B.sc , Journal of Chemical Theory
and Computation /one.tosf/one.tosf (/eight.tosf) (/two.tosf/zero.tosf/one.tosf/five.tosf) /three.tosf/six.tosf/nine.tosf/six.tosf–/three.tosf/seven.tosf/one.tosf/three.tosf.
/six.tosf/two.tosf. W. L. Jorgensen, J. Chandrasekhar, J. D. Madura, R. W. Impey, M. L.
Klein, Comparison of simple potential functions for simulating liquid
water, J. Chem. Phys. /seven.tosf/nine.tosf (/two.tosf) (/one.tosf/nine.tosf/eight.tosf/three.tosf) /nine.tosf/two.tosf/six.tosf–/nine.tosf/three.tosf/five.tosf.
/six.tosf/three.tosf. J. Wang, R. M. Wolf, J. W. Caldwell, P. A. Kollman, D. A. Case, Devel-
opment and testing of a general amber force eld, J. Comput. Chem.
/two.tosf/five.tosf (/nine.tosf) (/two.tosf/zero.tosf/zero.tosf/four.tosf) /one.tosf/one.tosf/five.tosf/seven.tosf–/one.tosf/one.tosf/seven.tosf/four.tosf.
/six.tosf/four.tosf. D. A. Case, K. Belfon, I. Y. Ben-Shalom, S. R. Brozell, D. S. Cerutti,
T. E. Cheatham, III, V . W. D. Cruzeiro, T. A. Darden, R. E. Duke, G. Gi-
ambasu, M. K. Gilson, H. Gohlke, A. W. Goetz, R. Harris, S. Izadi, S. A.
Izmailov, K. Kasavajhala, A. Kovalenko, R. Krasny, T. Kurtzman, T. S.
Lee, S. LeGrand, P. Li, C. Lin, J. Liu, T. Luchko, R. Luo, V . Man, K. M.
Merz, Y. Miao, O. Mikhailovskii, G. Monard, H. Nguyen, A. Onufriev,
F. Pan, S. Pantano, R. Qi, D. R. Roe, A. Roitberg, C. Sagui, S. Schott-
Verdugo, J. Shen, C. L. Simmerling, N. R. Skrynnikov, J. Smith,
J. Swails, R. C. Walker, J. Wang, L. Wilson, R. M. Wolf, X. Wu, Y. Xiong,
Y. Xue, D. M. York, P. A. Kollman, Amber /two.tosf/zero.tosf/two.tosf/zero.tosf (/two.tosf/zero.tosf/two.tosf/zero.tosf).
/six.tosf/five.tosf. L. Schneider, M. Heck, M. Wilhelm, M. Müller, Transitions between
lamellar orientations in shear ow, Macromolecules /five.tosf/one.tosf (/one.tosf/two.tosf) (/two.tosf/zero.tosf/one.tosf/eight.tosf)
/four.tosf/six.tosf/four.tosf/two.tosf–/four.tosf/six.tosf/five.tosf/nine.tosf.
/six.tosf/six.tosf. L. Schneider, M. Müller, Rheology of symmetric diblock copolymers,
Computational Materials Science /one.tosf/six.tosf/nine.tosf (/two.tosf/zero.tosf/one.tosf/nine.tosf) /one.tosf/zero.tosf/nine.tosf/one.tosf/zero.tosf/seven.tosf.
/six.tosf/seven.tosf. L. Schneider, G. Lichtenberg, D. Vega, M. Müller, Symmetric diblock
copolymers in cylindrical connement: A way to chiral morpholo-
gies?, /A.sc/C.sc/S.scApplied Materials & Interfaces /one.tosf/two.tosf (/four.tosf/four.tosf) (/two.tosf/zero.tosf/two.tosf/zero.tosf) /five.tosf/zero.tosf/zero.tosf/seven.tosf/seven.tosf–/five.tosf/zero.tosf/zero.tosf/nine.tosf/five.tosf.
/six.tosf/eight.tosf. M. W. Matsen, The standard gaussian model for block copolymer
melts, Journal of Physics: Condensed Matter /one.tosf/four.tosf (/two.tosf) (/two.tosf/zero.tosf/zero.tosf/one.tosf) R/two.tosf/one.tosf.
/six.tosf/nine.tosf. Z. Wang, T. Xu, A. Noel, Y.-C. Chen, T. Liu, Applications of liquid crys-
tals in biosensing, So Matter /one.tosf/seven.tosf (/two.tosf/zero.tosf/two.tosf/one.tosf) /four.tosf/six.tosf/seven.tosf/five.tosf–/four.tosf/seven.tosf/zero.tosf/two.tosf.
37/seven.tosf/zero.tosf. H. Ramezani-Dakhel, M. Sadati, M. Rahimi, A. Ramirez-Hernandez,
B. Roux, J. J. de Pablo, Understanding atomic-scale behavior of liquid
crystals at aqueous interfaces, Journal of Chemical Theory and Com-
putation /one.tosf/three.tosf (/one.tosf) (/two.tosf/zero.tosf/one.tosf/seven.tosf) /two.tosf/three.tosf/seven.tosf–/two.tosf/four.tosf/four.tosf.
/seven.tosf/one.tosf. G. Tiberio, L. Muccioli, R. Berardi, C. Zannoni, Towards in silico
liquid crystals. realistic transition temperatures and physical prop-
erties for n-cyanobiphenyls via molecular dynamics simulations,
ChemPhysChem /one.tosf/zero.tosf (/one.tosf) (/two.tosf/zero.tosf/zero.tosf/nine.tosf) /one.tosf/two.tosf/five.tosf–/one.tosf/three.tosf/six.tosf.
/seven.tosf/two.tosf. J. P. Perdew, K. Burke, M. Ernzerhof, Generalized gradient approxima-
tion made simple [Phys. Rev. Lett. /seven.tosf/seven.tosf, /three.tosf/eight.tosf/six.tosf/five.tosf (/one.tosf/nine.tosf/nine.tosf/six.tosf)], Phys. Rev. Lett. /seven.tosf/eight.tosf
(/one.tosf/nine.tosf/nine.tosf/seven.tosf) /one.tosf/three.tosf/nine.tosf/six.tosf–/one.tosf/three.tosf/nine.tosf/six.tosf.
/seven.tosf/three.tosf. L. Zhang, J. Han, H. Wang, R. Car, W. E, Deep potential molecular dy-
namics: A scalable model with the accuracy of quantum mechanics,
Phys. Rev. Lett. /one.tosf/two.tosf/zero.tosf (/two.tosf/zero.tosf/one.tosf/eight.tosf) /one.tosf/four.tosf/three.tosf/zero.tosf/zero.tosf/one.tosf.
/seven.tosf/four.tosf. M. Yang, L. Bonati, D. Polino, M. Parrinello, Using metadynamics to
build neural network potentials for reactive events: the case of urea
decomposition in water, Catalysis Today /three.tosf/eight.tosf/seven.tosf (/two.tosf/zero.tosf/two.tosf/two.tosf) /one.tosf/four.tosf/three.tosf–/one.tosf/four.tosf/nine.tosf, /one.tosf/zero.tosf/zero.tosf years
of/C.sc/A.sc/S.sc/A.sc/L.sc/E.sc /S.sc/A.sc : a scientic perspective on catalytic processes.
/seven.tosf/five.tosf. D. Unruh, R. V . Meidanshahi, S. M. Goodnick, G. Csányi, G. T.
Zimányi, Gaussian approximation potential for amorphous si : H,
Phys. Rev. Materials /six.tosf (/two.tosf/zero.tosf/two.tosf/two.tosf) /zero.tosf/six.tosf/five.tosf/six.tosf/zero.tosf/three.tosf.
/seven.tosf/six.tosf. E. D. Cubuk, B. D. Malone, B. Onat, A. Waterland, E. Kaxiras, Repre-
sentations in neural network based empirical potentials, The Journal
of Chemical Physics /one.tosf/four.tosf/seven.tosf (/two.tosf) (/two.tosf/zero.tosf/one.tosf/seven.tosf) /zero.tosf/two.tosf/four.tosf/one.tosf/zero.tosf/four.tosf.
/seven.tosf/seven.tosf. R. Frostig, M. J. Johnson, C. Leary, Compiling machine learning pro-
grams via high-level tracing, Systems for Machine Learning /four.tosf (/nine.tosf)
(/two.tosf/zero.tosf/one.tosf/eight.tosf).
/seven.tosf/eight.tosf. T.-S. Lin, C. W. Coley, H. Mochigase, H. K. Beech, W. Wang, Z. Wang,
E. Woods, S. L. Craig, J. A. Johnson, J. A. Kalow, et al., Big /S.sc/M.sc/I.sc/L.sc/E.sc/S.sc : a
structurally-based line notation for describing macromolecules, /A.sc/C.sc/S.sc
Central Science /five.tosf (/nine.tosf) (/two.tosf/zero.tosf/one.tosf/nine.tosf) /one.tosf/five.tosf/two.tosf/three.tosf–/one.tosf/five.tosf/three.tosf/one.tosf.
/seven.tosf/nine.tosf. W. L. Jorgensen, D. S. Maxwell, J. Tirado-Rives, Development and test-
ing of the /O.sc/P.sc/L.sc/S.sc all-atom force eld on conformational energetics and
properties of organic liquids, Journal of the American Chemical Soci-
ety /one.tosf/one.tosf/eight.tosf (/four.tosf/five.tosf) (/one.tosf/nine.tosf/nine.tosf/six.tosf) /one.tosf/one.tosf/two.tosf/two.tosf/five.tosf–/one.tosf/one.tosf/two.tosf/three.tosf/six.tosf.
38/eight.tosf/zero.tosf. L. Schneider, M. Schwarting, J. Mysona, H. Liang, M. Han, P. M.
Rauscher, J. M. Ting, S. Venkatram, R. B. Ross, K. J. Schmidt,
B. Blaiszik, I. Foster, J. J. de Pablo, In silico active learning for small
molecule properties, Mol. Syst. Des. Eng. (/two.tosf/zero.tosf/two.tosf/two.tosf).
/eight.tosf/one.tosf. V . Hornak, R. Abel, A. Okur, B. Strockbine, A. Roitberg, C. Simmer-
ling, Comparison of multiple amber force elds and development of
improved protein backbone parameters, Proteins: Structure, Func-
tion, and Bioinformatics /six.tosf/five.tosf (/three.tosf) (/two.tosf/zero.tosf/zero.tosf/six.tosf) /seven.tosf/one.tosf/two.tosf–/seven.tosf/two.tosf/five.tosf.
39
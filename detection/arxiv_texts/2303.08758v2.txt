arXiv:2303.08758v2  [q-bio.GN]  10 May 2023EGC: a format for expressing prokaryotic
genomes content expectations
Giorgio Gonnella1,2 /A0
1Center for Bioinformatics (ZBH), Universität Hamburg, Bun desstrasse 43, 20146 Hamburg
2Institute for Microbiology and Genetics, Georg-August-Un iversität Göttingen, Goldschmidtstr. 1, 37077 Göttingen
The number of available genomes of prokaryotic organisms is rapidly growing enabling comparative genomics studies. Th e compar-
ison of genomes of organisms with a common phenotype, habita t or phylogeny often shows that these genomes share some comm on
contents.
Collecting rules expressing common genome traits dependin g on given factors is useful, as such rules could be used for qu ality
control or for identifying interesting exceptions and form ulating hypothesis. Automatizing the rules veriﬁcation us ing computation
tools requires the deﬁnition of a representation schema.
In this study, we present EGC (Expected Genome Contents), a ﬂ at-text ﬁle format for the representation of expectation ru les about
the content of prokaryotic genomes. A parser for the EGC form at has been implemented using the TextFormats software libr ary,
accompanied by a set of related Python packages.
KEYWORDS: Expected Genome Content | EGC | Genomics | Text representati on | Association rules | Format speciﬁcation | Flat text form at | File format |
Microbial genomics
Correspondence: giorgio.gonnella@uni-goettingen.de
The application of comparative genomics techniques to the
growing amount of available prokaryotic genomes create ex-
pectations about the genetic contents of organisms sharing a
particular trait, living in a common environment, or descen d-
ing from a common ancestor. Whenever expectations arise,
it is interesting to verify if these hold whenever new data be -
comes available. Thereby, unexpected results can sometime s
be an indication of low quality, or in other cases, more inter -
estingly, be conﬁrmed and become the primer of new scien-
tiﬁc theories.
In order to automatize the collection and veriﬁcation of rul es
of expectations, it is necessary to create a suitable repres en-
tation system. In a recent study (Gonnella, 2023a), we in-
troduced a framework for expressing such rules consisting
in the analysis of the logical structure of an expectation in to
its structural components (deﬁnition of groups of organism s,
deﬁnition of genome contents, structure of different type o f
rules) and the introduction of ontology systems to be used in
the different deﬁnitions. The system represents a foundati on
for representing rules, but does not include concrete repre sen-
tation conventions.
In the present study we introduce a representation system
for expectations about the contents of prokaryotic genomes ,
build on that foundation, in the form of a ﬂat text format,
called EGC (Expected Genome Contents). The format has
been implemented as a speciﬁcation for the TextFormats
library (Gonnella, 2022). The implementation is comple-mented by several Python packages. TabRec is a tools col-
lection for handling ﬁles in tabular records formats, inclu d-
ing EGC. Conventions were developed for representing par-
ticular types of data, accompanied by Python packages for
handling such data: Lexpr, for the logical expressions in th e
deﬁnition of combined organism groups, Fardes, for the de-
scription of genome feature arrangements, and TabRecPath,
an addressing system for tabular record formats, used in EGC
for specifying the usage contexts of user-deﬁned tags and ex -
ternal links.
Design principles of the EGC ﬁle format
The EGC format was designed based on the same structure of
the GFA2 format (GFA Format Speciﬁcation Working Group,
2018). I.e. it consists of a list of records of different type s,
where each record is expressed in a single line of the format.
The ﬁelds of each record are tab-separated.
The type of record is expressed in the ﬁrst ﬁeld and consists
of a single upcase letter. The following ﬁelds are in ﬁxed
number and format, different for each type of record. If the
content of a ﬁeld is optional, a single dot ( .) is used to indi-
cate the absence of information (placeholder). After the ﬁx ed
ﬁelds (positional ﬁelds), the line can contain any number of
additional ﬁelds, called tags. These have a semantic and
datatype which is deﬁned using the system originally used
in the SAM format: a two letter tag name, a single letter tag
datatype symbol, and the tag content are separated by colons
Gonnella | arXiv | May 11, 2023 | 1–8Scope Record type Description
Organism Groups Group Ggroups of organisms (e.g. by taxonomy, habitat, phenotype) for which
the rules are deﬁned, or which are compared in rules
Genome ContentsGenome Content Unit (GCU) U element of the genome sequence an d/or annotation
Attribute A measurable entity based on one or multiple genom e content units
Model M reference to an external model useful for the identiﬁ cation of GCUs
Expectation RulesValue rule V expectation of the value of an attribute based on reference values
Comparative rule C expectation of the relation of the values of an attribute in two groups
SourcesDocument D reference to an external text document, from whic h rules are derived
Text Snippet S snippet of a document text from which rules are derived
Table T name of a table in a document from which rules are deriv ed
MetadataExternal resource X database or ontology, of which elements are used in other records
Tag speciﬁcation Y usage semantics and format of user-deﬁne d tags
Table 1. List of record types in EGC in ﬁve scopes.
(:) and can include any spacing characters except newlines
and tabs.
The format described until this point reﬂects the same conve n-
tions used in SAM and GFA records. Additionally, in EGC,
each record may contain a last ﬁeld starting with a #, which
is handled as a record comment.
A speciﬁcation of the format in the TextFormats Speciﬁca-
tion Language has been implemented, based on the design
principles illustrated in Gonnella (2023b).
Information which applies to different kind of records incl ude
identiﬁers and names, links to external resources (several
records can be linked to external database, ontologies, sci en-
tiﬁc literature or web resources), tags (used to add further op-
tional information to records) and comments (free texts add ed
to different kind of records).
In some kind of records, both an identiﬁer and a name or a
description are present. The main difference between these
ﬁelds is their purpose. Identiﬁers are compact strings whos e
main feature is stability, and are used as keys, i.e. allow
a record to be referred from others. Conversely, names or
descriptions are supposed to be more verbose texts, which
may be subject to change without impacting their connec-
tions from other records.
For sake of clarity and to allow combining multiple identi-
ﬁers, they only consists of letters, numbers and underscore s.
Instead, names and descriptions can also include spacing an d
other symbols (except tabs and newlines).
Each line in EGC can contain a free text comment, given af-
ter the last positional ﬁeld or tag (if any tag is present). Th e
comment ﬁeld is preceded by a ﬁeld separator (tab) and starts
with a preﬁx consisting of #and a space. Comments may not
contain tabs and end at the end of the line.Overview of the record types
The format includes different type of records, summarized
in Table 1. The different record types include the deﬁni-
tion of groups (G records), of genome contents (A, U and M
records), of the expectation rules (V and C records), as well
as the documentation of the textual sources from which the
rules are derived (D, S and T records) and optional metadata
(X and Y records).
Organism groups deﬁnition
The deﬁnition of organism groups follows the conventions
described in Gonnella (2023a). Records for the deﬁnition of
groups have the record type G. The record contain, in the or-
der, the record type (G), a group identiﬁer, a group name, the
group type and a deﬁnition. Examples are given in Figure 1.
The group identiﬁer is used in cross-references to groups
from other records, is unique among all deﬁned groups, and
consists of letters, numbers and underscores only. The grou p
name is a more descriptive text, e.g. the scientiﬁc name of a
taxon.
Groups are classiﬁed in group types , whose deﬁnition is given
in the Prokaryotic Group Types Ontology (Gonnella, 2023a)
(group types must be leaf nodes of the subtree under the
group_types_category term).
The group deﬁnition aims at providing a way to determine
an exact set of organisms contained in the group. This can
be done as a reference to an external database or ontology.
For example in the case of taxonomic groups, the deﬁnition
contains an ID of the NCBI taxonomy database (in the form
taxid:NNNNN ). When no external source is available, the
deﬁnition may be provided as the string def: followed by a
free text description.
Forderived groups (combinations or inversion of groups) the
identiﬁers of other groups are joined by the logical operato rs
2 | arXiv Gonnella | Expected Genome Contents format (EGC)G G_bacteria Bacteria taxonomic taxid:2 TR:Z:domain
G G_Xanthomonas Xanthomonas taxonomic taxid:338 TR:Z:gen us
G G_Rickettsia Rickettsia taxonomic taxid:780 TR:Z:genus
G G_Thaumarchaeota Thaumarchaeota taxonomic taxid:65113 7 TR:Z:phylum
G G_copiotrophic copiotrophic nutrients_level_requirem ent \
Wikipedia:Copiotroph XR:O:ENVO:00002224
G G_oligotrophic oligotrophic nutrients_level_requirem ent \
Wikipedia:Oligotroph XR:O:ENVO:00002223
G G_copiotrophic_B copiotr. bact. combined G_copiotrophi c & G_bacteria
G G_oligotrophic_B oligotr. bact. combined G_oligotrophi c & G_bacteria
Fig. 1. Examples of deﬁnitions of organisms groups in EGC format, us ing G records. For ease of representation, some lines have be en wrapped.
&(and),|(or), (not), possibly using round parentheses for
indicating precedence. Circular deﬁnitions are forbidden .
Tags can be added to the group records. The predeﬁned tag
XRcan be used to provide links to external resources, re-
lated to the group deﬁnition and is recommended when using
def: .
Genome contents deﬁnition
The framework for the deﬁnition of genome contents is de-
scribed in Gonnella (2023a) and makes use of deﬁnitions
given in the Prokaryotic Genome Contents Deﬁnition On-
tology (PGTO; Gonnella (2023a)). The genome attributes
are measurable quantities deﬁned in records of type Aas the
value (presence/absence, relative or absolute count) of a m ea-
surement (observation, computation, prediction) of entit ies
belonging or derived from the genome sequence or annota-
tion (termed genome content units, GCUs, deﬁned in records
of typeU), in the entire genome or a region thereof. Finally,
feature model records (M) are a means to provide further in-
formation about GCUs, for identifying them in a genome. Ex-
amples of genome contents deﬁnitions, including U, M and
A records, are given in Figure 2.
Genomic content units. Genome content units (GCUs)
records contain, in the order: the record type ( U), GCU iden-
tiﬁer (an identiﬁer, unique among all U records), unit type,
deﬁnition, symbol and description.
Unit type. Regarding the unit type, it shall be distinguished
between simple units, category units and sets units. In the
case of simple units (i.e. single, speciﬁc features, which a re
not considered as composed of multiple parts), the type con-
sists of a single identiﬁer.
Category units are groups of features which share some as-
pects, e.g. derivation from a common ancestor (e.g. group
of ortholog genes), structure (e.g feature types) or func-
tion. They can be deﬁned by enumerating all its members
(in which case, the type identiﬁer is preﬁxed by ctg!: ),
or by other means (in which case the preﬁx is ctg: ),
such as referring to an external database accession, by de-
scribing the category, or by enumerating its members. In
case the components are enumerated, the preﬁx will be
ctg!: . The identiﬁer itself can either refer to the cate-gory in its entirety (e.g. ctg:function ), or rather iden-
tify each element of it, in which case it is preﬁxed by
+(e.g.ctg:+specific_protein ). When an exter-
nal database is used for the deﬁnition, a resource identi-
ﬁer is added as sufﬁx after a further ( :). An example is
ctg:ortholog_group:COG for ortholog groups deﬁned
in the COG database Galperin et al. (2020)).
Sets of units are units, in which distinct sub-units or com-
ponents can be distinguished (e.g. their presence or absenc e
is evaluated separately). The same notation conventions ar e
used, as for categories, with the preﬁx set!: if the members
are enumerated, set: otherwise, and preceding the iden-
tiﬁer by a+(e.g.set!:+specific_protein ), if this
refers to type of the single elements. Also in this cases, en-
tries of external resources can be provided as deﬁnitions, a nd
the resource identiﬁer is added as a sufﬁx.
Different types, following these conventions, and their us e
cases are summarized in Table 2. Speciﬁc sequence letters or
genes and proteins are deﬁned by their name. Categories are
deﬁned by function or homology to other units or member-
ship in groups, deﬁned by homology, such as gene ortholog
groups, e.g. COG (Galperin et al., 2020)) or protein familie s,
e.g. PFAM (Mistry et al., 2020). Set are deﬁned e.g. by
their common transcriptional regulation (operons), by the ir
proximity (gene clusters, gene islands), or common functio ns
(gene systems, metabolic pathways).
Deﬁnition, symbol and description. Three ﬁelds are available,
to describe the contents of a unit: thereby “deﬁnition” has a
format appropriate to the type, as described below, “symbol ”
is a compact identiﬁer, by which the unit is known in litera-
ture or a databases, and “description” is a free-text descri p-
tion. At least one of these must be provided (the remaining
are ﬁlled with a single dot).
For enumeration types (with preﬁx ctg!: orset!: ),
the deﬁnition ﬁeld contains a comma-separated list of IDs
of other units deﬁned in the data set. An exception are
set!:arrangements for which the more complex fardes
format has been developed, which is described in the next sec -
tion (in the simplest case, it is also a comma-separated list of
unit IDs).
For non-enumeration types, in which a resource identiﬁer is
provided (e.g. ctg:ortholog_group:arCOG , the def-
Gonnella | Expected Genome Contents format (EGC) arXiv | 3U Uo_CypX ctg:ortholog_group:COG COG2124 CypX Cytochrome P450
U Uo_aCOG ctg:+ortholog_group:COG * . assigned to any COG
A Ac_CypX Uo_CypX count_relative:Uo_aCOG
U Uy_T3SS set:gene_system . T3SS Type III secretion system
A Ap_T3SS Uy_T3SS complete_presence
U Ug_16S specific_gene . 16S_rRNA 16S rRNA gene
U Ug_23S specific_gene . 23S_rRNA 23S rRNA gene
U Ug_5S specific_gene . 5S_rRNA 5S rRNA gene
U Ur_rbs set!:arrangement Ug_16S,<>,Ug_23S,><,Ug_5S . \
16S rRNA separated from 23s rRNA gene and 5S rRNA gene
A Ap_rbs Ur_rbs complete_presence
U Up_hxr specific_protein . . hydroxylamine oxidoreduct.
M Up_hxr InterPro IPR010048 Hydroxylam_reduct
U Uh_hxr ctg:protein_homologs homolog:Up_hxr . \
hydroxylamine oxidoreductase homolog
A Aph_hxr Uh_hxr presence!replicon_type:plasmid
Fig. 2. Examples of deﬁnitions of genome contents in EGC format. For ease of representation, some contents have been abbreviate d and some lines wrapped.
inition ﬁeld contains the accession or term ID in that re-
source. For +types (e.g.ctg:+ortholog_group :COG),
a comma-separated list of accessions or term IDs is given,
or the special symbol *, meaning “any members of the re-
source”.
In other cases, when a unit deﬁnition is given by providing a
link to an external document (e.g. a scientiﬁc article), the def-
inition ﬁeld contains ref: followed by the external resource
link (e.g.ref:doi:... ).
Speciﬁc genes and proteins are deﬁned by their names or sym-
bols, which can be often be ambiguous (e.g. in different or-
ganisms, the same symbol may refer to different genes, or
the same gene may have different names). To provide addi-
tional information, model records can be added, which refer
to external databases and give possibility to the user to op-
erationally transform the speciﬁc unit deﬁnition into clea rer
category deﬁnitions. These records have record type M, fol-
lowed by the unit ID, the ID of the external database ID, the
model ID and name its name in the database.
Features arrangement description Format (Fardes).
For units describing feature arrangements, the deﬁnition ﬁ eld
content is encoded using a string notation here introduced,
named Fardes (feature arrangement description).
A fardes string consists of a list of named feature and, op-
tionally, interval speciﬁers. Named features are identiﬁe d by
an ID, which in EGC must be the ID of a GCU deﬁnition
record (type U). If they are optional, their ID is followed by
a question mark (e.g. U1?).
Interval speciﬁers are optional and describe what is in be-
tween two subsequent named features: sequence length, num-
ber and type of features. A full speciﬁer has the form
a:b(type)[c:d] and can be shortened if defaults apply.Thereby,a:b is the range of number of features in the inter-
val,type their feature types, c:d the length of the interval
sequence. Instead of the a:b andc:d form, a number pre-
ceded by a comparison operator (e.g. >2) can be given. The
number of features can be omitted if it is just >=0. For the
length a symbol can be used to indicate an approximate
length, and units can be optionally used (e.g. 3Mb). The
length can be omitted if it is [>=0] . If a single number is
given instead of a range, it is used as both minimum and max-
imum of the range. If no interval speciﬁer is used, the defaul t
is0:0[0:*], i.e. there no features between the two named
features and no interval length constraint.
Special interval speciﬁers are used to indicate fuzzy terms ,
such as overlapping ( &), near (><), distant (<>), distant but
in the same molecule ( <.>) or in different molecules ( <|>).
The relative strand arrangement can be speciﬁed, by preﬁxin g
the ID of a feature with >. This then becomes the reference
point, and subsequent features ID preﬁxed with =andˆin-
dicate the same or the opposite strand to it. The ﬁrst feature
of the arrangement and the ﬁrst feature after a <|> speciﬁer
have an implicit >.
An example of arrangements string in fardes format
isU1,U2?,>1(tRNA;rRNA),U3,1:3,=U4,<>,
>U5,[ 1kb],Û6,<|>,U7 . Its meaning is: U1 is option-
ally followed by U2, then at least one tRNA or rRNA gene,
but possibly more, then U3, one to three other features and
U4, which must be on the same strand as U1. Distant from
this cluster, is U5, and about 1 kb downstream U6, which
is on the opposite strand of U5. Finally U7 is on another
molecule from the previously named features.
Genome attributes. The genome attributes are the entities
that can be measured in a genome, whose values are com-
pared in rules to reference values or to other genomes. They
4 | arXiv Gonnella | Expected Genome Contents format (EGC)always refer to a genome content unit.
The records for the deﬁnition of an attribute contains the
record type (A), an identiﬁer (unique among all A records),
the genome content unit ID, and an attribute deﬁnition ﬁeld.
The contents of the deﬁnition ﬁelds specify the measurement
mode, the reference unit for relative measurements and the
genomic region where the measurement is computed. Table
3 summarizes the possible choices. For speciﬁc units and cat -
egories, these include the presence, count and total sequen ce
length of speciﬁc units and categories. Count and length can
be relative, in which case a reference unit ID must be pro-
vided. For sets, it must always be speciﬁed if the mode is in-
tended to be applied to the complete set (preﬁx complete_ )
or to any of the members (preﬁx members_ ).
By default, the value is computed from the entire genome, but
a region can be speciﬁed, in terms of molecule type or name,
using the syntax summarized in Table 4.
Rules of expectations
The purpose of the EGC format is to describe expectations
about the genome contents in given groups. The expecta-
tions can be given as relative to reference values, describe d
in records of type V (value), or relative to other groups, de-
scribed in records of type C (comparison). Examples of this
records are given in Figure 3.
The value records contain the record type (V), an identiﬁer
(unique among all V and C records), a source, an attribute ID,
a group descriptor, an operator and a reference.
The comparison records contain the record type (C), an ident i-
ﬁer (unique among all V and C records), a source, an attribute
ID, a ﬁrst group descriptor, an operator and a second group
descriptor.
For comparing between two regions of the same genome (e.g.
two chromosomes), two distinct attributes are deﬁned and
their IDs are concatenated by a comma in the attribute ID
ﬁeld. In this case both group descriptor will be identical.
The source consists of a single identiﬁer of S or T record, or
a list, comma-separated.
The group descriptor is either just a group ID, indicating th at
the expectation concerns all members of the group, or a group
ID followed by a semicolon and one of the following terms:
rare ,some ,many ormost , or a symbol >or<and a per-
centage (e.g. >90% ).
Operators for exact comparisons and fuzzy comparison are
indicated in Table 5. The deﬁnition of exact values for the
veriﬁcation of rules including fuzzy operators are left to t he
veriﬁcation tools implementation.
Documentation of textual sources
The EGC format aims at documenting the sources of the ex-
pectation rules. The system includes records for storing re fer-
ences to documents (D) and snippets of text (S) or referencesto tables (T) inside the documents. An example is given in
Figure 4.
The document description records contain the following
ﬁelds, in the order: record type (D), document ID, full-text
link. Thereby the document ID is a link to an external re-
source listing the document. For example, the Pubmed ID
can be used, by preceding it with the preﬁx pmid: , or the
DOI by preceding it with the preﬁx doi: . The full-text link
is an optional ﬁeld. It can be set to a placeholder character .
if not necessary. (since e.g. it is trivial to ﬁnd a document i f
the DOI is provided). Each record of type SorTrefers to a
record of type D(many can refer to the same one).
The text snippets records contain, in the order: record type
(S), snippet ID, document ID, text snippet. The snippet ID is
an identiﬁer, unique among all S records. The document ID
refers to a D record. The text snippet is the text of the sen-
tence(s) or part thereof, from which a rule can be extracted,
without any newline or tab character.
The structure of the table records is similar, but the conten ts
of the table are not included, replaced instead by a referenc e
to it. They contain: record type (T), table ID (a unique iden-
tiﬁer among all T), document ID (referring to a D record),
table reference (e.g. table number in the document).
Tags
EGC records support the use of tags, which provide a ﬂex-
ible way to store additional information. Tags, ﬁrst intro-
duced by the SAM format (Li et al., 2009) and later extended
to other formats, such as VCF (Danecek et al., 2011) and
GFA (GFA Format Speciﬁcation Working Group, 2018), are
optional ﬁelds to store information about the record that is
not captured in the other ﬁelds.
Tags in the EGC format use the same formatting as SAM tags:
each tag consists of a name of two letters, representing the s e-
mantics of the information, followed by a type code, and a
value of that type.
In EGC only uppercase tag names are allowed and the type
codes described in Table 6 are supported. Compared to SAM,
the JSON code Jhas been introduced (which also exists in
GFA2), as well as specialized codes for lists of strings ( L)
and of ontology terms ( O).
The list of predeﬁned tags is reported in Table 7. User-deﬁne d
tags can be used. In this case a tag deﬁnition records (type
Y) can be employed to document the semantics and format of
such tags. These records contain, after the record type, the
tag name (a 2 letter code), the tag type, usage contexts (as
explained later), semantics and format. An example is given
in Figure 5.
References to external resources
Some ﬁelds contains references to external resources, such as
an ontology term, or an item in an external database. These
are given in the form:
Gonnella | Expected Genome Contents format (EGC) arXiv | 5Kind Type Description
Sequence
Speciﬁc base single base of DNA/RNA
amino_acid an amino-acid
Category ctg!:+base one of a set of bases
Annotation
Speciﬁc specific_gene gene with given name
specific_protein protein with given name
Category ctg:function function of a gene/protein, e.g. enzymatic activity
ctg:feature_type any feature of a given type, e.g. CRISPR
ctg:gene_homologs any homolog of a unit of type specific_gene
ctg:ortholog_group group of ortholog genes
ctg:ortholog_group: <ID> ortholog group from database <ID>
ctg:ortholog_groups_category multiple ortholog groups with similar functions
ctg:protein_homologs any homolog of a unit of type specific_protein
ctg:family_or_domain protein family or group of proteins contanining a given doma in
Set set:metabolic_pathway set of gene/protein functions, which together create a path way
set:protein_complex protein whose units are coded by multiple genes
set:+specific_gene generic set of multiple genes
set:gene_system genes with a common function (can be distant to each other)
set:gene_cluster genes with a common function and next to each other
set:operon genes in an operon
set:genomic_island genes in a genomic island
set:arrangement relative positioning of genes
Table 2. Overview of the types of genome content units in EGC. The list is not exhaustive and further types can be deﬁned if necessar y. The set and category deﬁnitions can
be provided as enumeration by using the preﬁx set! /ctg! instead ofset/ctg.
Kind Type Datatype Description
Speciﬁc / presence boolean presence of the speciﬁc feature, or of a member of the group
Category count integer number of instances of the speciﬁc feature or catego ry
length integer total sequence length of instances of the speciﬁc fe ature or category
count_relative :<ID> ﬂoat count , divided by the number of instances of reference unit <ID>
length_relative :<ID> ﬂoat length divided by the total length of instances of reference unit <ID>
Set complete_... any mode considering all members of the set, e.g.:
complete_presence boolean presence of all members of the set
complete_count integer number of complete copies of the set
members_... any mode considering any member of the set, e.g.:
members_presence boolean presence of at least one member of the set
members_count integer count of the instances of any member of the set
Table 3. Overview of the attribute deﬁnition ﬁeld syntax for differe nt kind of units and measurement modes.
Region Type sufﬁx Description
Whole genome none attribute measured in the whole genome
Molecule type !replicon_type: ID attribute measured only in replicons of the given type (e.g.
chromosome orplasmid )
Speciﬁc molecule !type:name attribute measured in replicons of the given type (e.g. chromosome or
plasmid ) and with the given name
Table 4. Overview of the attribute deﬁnition ﬁeld sufﬁx syntax for sp ecifying different regions of the genome.
6 | arXiv Gonnella | Expected Genome Contents format (EGC)Category Values Operators N. ref. Description
Exact Numerical ==,!= 1 identity or difference from given value
<,>,>=,<= 1 numerical comparison with given value
Numerical in_range 2 in the range for which the (inclusive) minimum and max-
imum limits of a reference range are given
Boolean == 1 compare a boolean value to True or False.
Fuzzy Numerical >>,<< 1 much larger or smaller than the reference
>˜,<˜ 1 slightly larger or smaller than the reference
Numerical level 1 rough level category, i.e. none_or_lowlow orhigh
Table 5. Operators which can be used in value rules.
Type code Purpose Format
Z generic string not containing tabs and newlines
A character single character, except tab and newline
J JSON not containing tabs and newlines
i integer value signed or unsigned integer
f ﬂoating-point value IEEE 754 text representation, single p recision
L list of strings semicolon-separated, elements may not cont ain semicolons, tabs, and newlines
O list of ontology terms semicolon-separated, no newlines, t abs,;,:,#
format:ont_pfx:term_id#term_label oront_pfx:term_id ;
H byte array in hex format, as in SAM format speciﬁcation (*)
B numeric array as in SAM format speciﬁcation (*)
Table 6. Tag-type codes in the EGC format. (*) SAM format speciﬁcatio n, see reference: The SAM/BAM Format Speciﬁcation Working G roup (2021)
Name Label Type Context Description Value format
XR eXternal Resource Z G link related information external r esource format
XL eXternal List Z G link members enumeration external resou rce format
XD eXternal Deﬁnition Z G:combined link deﬁnition external resource format
TS Taxon Species Z G:strain link species of a strain taxid:
TG Taxon Genus Z G:strain link genus of a strain taxid:
TR Taxonomic Rank Z G:taxonomic rank of the taxon rank from NC BI taxonomy
Table 7. List of predeﬁned tags in the EGC format. These tags may be use d directly, while for using any other tag, a tag deﬁnition rec ord must be included in the data.
Gonnella | Expected Genome Contents format (EGC) arXiv | 7resource_prefix:item[#location][!term]
Thereby:
• the resource preﬁx identiﬁes a resource (website, dic-
tionary, ontology, database or similar)
• the item identiﬁes the relevant element of the resource,
e.g. term in a dictionary or ontology, or record in a
database
• the following parts are optional
• the#part is used for providing further information
about the location of the item inside the pointed doc-
ument, if needed; for URLs this is part of the URL
itself.
• the!part can be used for resources such as ontologies
and dictionaries for annotating the name of the linked
term; this is especially useful when the item ID is unre-
lated to the term itself, such as it is usually the case in
ontologies.
Some external resources are predeﬁned, i.e. have the same
name, point to the same URL and share the same allowed us-
age context in all documents. The list of predeﬁned external
resources is reported in Table 8. This includes some common
databases and all ontologies registered in the OBO foundry
(and listed at https://ontobee.org/).
For other external resources, the user may want, for clarity ,
include a deﬁnition record. These records have type X and
contain, in the order, a resource preﬁx (unique among all re-
sources), a resource name, the usage contexts (as explained
later), the URL pattern for addressing single items (if appl i-
cable), the URL of the homepage of the resource, and a refer-
ence to a scientiﬁc article or other descriptive text. An exa m-
ple is given in Figure 5.
Usage contexts
In the deﬁnition of tags and external resources, a usage con-
text for the deﬁned items is speciﬁed. This is done by means
of a ﬁelds and records selection path format, called TabRec-
Path and presented here, which can be applied to any tabular
records ﬁles, i.e. ﬁles whose structure resembles that of EG C.
The mini-format can be used for addressing ﬁelds in a record,
e.g. necessary for specifying the allowed usage contexts of
external resources. It can also be used for addressing recor ds,
e.g. necessary for specifying the usage contexts of tags. Be -
sides selecting a record type, record subtypes can also be se -
lected, if a subtype exists for a given record type. In order t o
have a compact string representation, multiple subtypes an dﬁeld names or numbers can be speciﬁed. Multiple addresses
can be concatenated.
Records are addressed by a string in the form
rt1;rt2:st1|st2;... and ﬁelds are addressed by a
string in the form rt1.f1;rt2:st1|st2.f3|f4;... .
Thereby:
•rtare record types (e.g. Gfor groups)
•stare the optional subtypes, can be added for records
for which subtypes exists, e.g. EGC groups (e.g.
G:combined )
•f(ﬁelds) are the numbers (1-based) or names of posi-
tional ﬁelds, or tag names (e.g. G:strain.TS )
• multiple addresses are separated by semicolons ( ;)
• multiple subtypes or ﬁeld names are separated by ver-
tical lines (|)
• identiﬁers of record types, subtypes and ﬁelds may
only contain letters, numbers and underscores and may
not start with a number
For example, the usage context:
G:strain.TS|TG;G:taxon|comb.XR
means that the corresponding feature can be used in the ﬁelds
TSandTGof the strain subtype of Grecords and in the XR
ﬁeld of the taxon andcomb subtype of Grecords.
Implementation
The format has been implemented in Python packages. These
include the EGC speciﬁcation package and additional pack-
ages for speciﬁc parts of the format, which can be useful also
in other contexts (Lexpr parser for logical expressions use d
in the deﬁnition of combined groups, Fardes for the features
arrangement descriptions, TabRecPath for selecting speci ﬁc
records and ﬁelds) and for handling ﬁles with a similar struc -
ture to EGC (TabRec package).
EGC TextFormats speciﬁcation. A parser for the format
has been implemented as a speciﬁcation for the TextFor-
mats library. This allows to read and write the format
from different programming languages, such as Nim, Python,
C and C++. The speciﬁcation is available in Github at
https://github.com/ggonnella/egc-spec.
The main module, which can be employed in external code
using the TextFormats library is the egc.tf.yaml .
The different classes of records are deﬁned in different sep -
arate modules included in it, for the deﬁnitions of groups,
C C1 S1 A_rel_COG2124 G_copiotrophic_B << G_oligotrophic_ B
V V1 S2 A_has_T3SS_sys G_Xanthomonas:most == True
V V2 S3 A_has_rRNA_arr1 G_Rickettsia == True
V V3 S4 A_has_hydroxylam_reduct_hom G_Thaumarchaeota == F alse
Fig. 3. Examples of deﬁnitions of expectation rules in EGC format
8 | arXiv Gonnella | Expected Genome Contents format (EGC)D pmid:19805210 https://www.pnas.org/doi/abs/10.1073/ pnas.0903507106
D pmid:32983016 https://www.frontiersin.org/articles/ 10.3389/fmicb.2020.01991
D pmid:15317790 https://journals.asm.org/doi/10.1128/ JB.186.17.5842-5855.2004
D pmid:25587132 https://www.pnas.org/content/112/4/11 73.long
S S1 pmid:19805210 In addition, cytochrome P450 genes (COG2 124) are present in
S. alaskensis RB2256 (six copies) and absent in P. angustum
S14, and the high frequency by which these genes occur is a
conserved feature of oligotroph genomes.
S S2 pmid:32983016 The assessment of 133 pathogenicity-rel ated genes identified
that the three Xanthomonas strains (GW, SS and SI) was devoid
of the T3SS that is critical for pathogenicity of most
Xanthomonas species.
S S3 pmid:15317790 As in the other rickettsiae, the 16S rRNA g ene was separated
from the 23S and 5S rRNA genes.
S S4 pmid:25587132 As with all previously sequenced Thaumar chaeota, no
hydroxylamine oxidoreductase homologs were identified.
Fig. 4. Examples of documentation of sources in EGC format. Note tha t the S records texts have been displayed wrapped to multiple lines in order to display it here, but is in
reality all contained in a single line. The sentences are ext racted from Lauro et al. (2009) (S1), Li et al. (2020) (S2), Mc Leod et al. (2004) (S3) and Santoro et al. (2015) (S4).
X Wikipedia English-language Wikipedia G.definition;U.d efinition \
https://en.wikipedia.org/wiki/\{\} https://en.wikipe dia.org .
Y XR Z external resource with related information external r esource link
Fig. 5. Examples of metadata records for describing external resou rces (X) and tags (Y). The X record content has been wrapped in order to allow displaying its whole
content, but is in fact contained in a single line.
Preﬁx Name Item URL [Homepage URL]
taxid NCBI taxonomy database https://www.ncbi.nlm.nih.gov/ta xonomy/?term={}
[ https://www.ncbi.nlm.nih.gov/taxonomy ]
http generic http URL http:{}
https generic https URL https:{}
ftp generic ftp URL ftp:{}
doi Digital Object Identiﬁer https://doi.org/{} [ https://do i.org ]
bacdive Strain in BacDive database https://bacdive.dsmz.de/stra in/{} [ https://bacdive.dsmz.de/ ]
biosample NCBI BioSample database https://www.ncbi.nlm.nih.gov/b iosample/?term={}
[ https://www.ncbi.nlm.nih.gov/biosample/ ]
dsmz Strain in DSMZ database https://www.dsmz.de/collection/ catalogue/details/culture/{}
[ https://www.dsmz.de/ ]
sctid SNOMED Clinical Terms https://browser.ihtsdotools.org/ ?perspective=full&conceptId1={}
[ https://www.snomed.org/ ]
OBO pfx (*) OBO foundry ontology http://purl.obolibrary.o rg/obo/PFX_{}
[ https://ontobee.org/ontology/ ]
Table 8. List of predeﬁned external resources in the EGC format. The i tem URLs are URL patters containing {} as a placeholder, whic h is substituted in the URL with the
ID of the element. (*) For OBO ontologies the preﬁx is the one r egistered in the OBO foundry (https://obofoundry.org/), a nd is indicated as PFX in the item URL pattern and
homepage URL.
Gonnella | Expected Genome Contents format (EGC) arXiv | 9genome contents, textual sources, expectation rules, tags , ex-
ternal resources links and usage contexts.
Lexpr parser. The logical expressions contained in derived
group deﬁnitions can be parsed using the Lexpr package, im-
plemented by creating a grammar for the Python library Lark.
The package can be installed by pip and is available in
Github (https://github.com/ggonnella/lexpr).
Fardes format. The Feature Arrangements Description for-
mat is implemented using Python and TextFormats in the
Python package Fardes, installable by pip. The source code
is available on Github (https://github.com/ggonnella/fa rdes).
The module fardes/parser.py in the package imple-
ments a parser and validator for the format.
TabRec CLI tools. A Python package has been imple-
mented for analysing and editing ﬁles which has a struc-
ture similar to EGC (tab-separated records). It can be in-
stalled bypip and the source code is available in Github
(https://github.com/ggonnella/tabrec).
Thereby, the tabrec-analyse tool is a versatile CLI tool
for the analysis of the contents of a tabular records ﬁle, e.g . a
EGC ﬁle. It allows to show the values set and statistics about
the value distributions of single ﬁelds or all ﬁelds of recor ds
of a given type in the ﬁle.
Other CLI tools in the package allow extracting a few or all
lines of a given record type, or editing operations, such as
swapping the contents of two ﬁelds, limited to a given record
type.
TabRecPath format. In the text, we described the TabRec-
Path format for the selection of records and ﬁelds in tabular
record formats, such as EGC.
A description of the format ( docs/TabRecPath.md ),
a TextFormats speciﬁcation ﬁle including examples
(tabrec/data/tabrecpath.tf.yaml , a Python
implementation ( tabrec/path.py ), and a CLI tool
for extracting ﬁelds based on TabRecPath ﬁelds paths
(bin/tabrec-extract ) are available in the TabRec
github repository (https://github.com/ggonnella/tabre c).
Discussion and Conclusion
In this paper, we present a representation for rules of expec -
tations about the contents of prokaryotic genomes. In par-
ticular, a ﬁle format was developed, named EGC (expected
genome contents), on the base of a logical analysis of such
expectations, described in a separate manuscript (Gonnell a,
2023a). The purpose of the format is to store rules of expec-
tations, so that a concrete veriﬁcation of those rules becom es
possible. To the best of our knowledge, this is the ﬁrst repre -
sentation available for this purpose.
The structure of the EGC format was based
on existing bioinformatics formats, such as GFA(GFA Format Speciﬁcation Working Group, 2016, 2018),
which consists of tab-separated ﬁles, where each line is a
record, and where different record types are possible, dist in-
guished by the content of the ﬁrst ﬁeld. Such structure has
the advantage to be ﬂexible and extensible and more com-
pact, compared to other solutions, such as JSON (Pezoa et al. ,
2016).
We propose to use the term tabular records format as a
general term for this kind of formats and provide some
command-line tools, implemented in Python, which can be
used for such formats (TabRec), and an addressing system
(TabRecPath) for referring to given ﬁelds or records (dis-
tinguished by their type and an optional subtype). This
system is inspired by similar systems for XML (XPath,
World Wide Web Consortium (W3C)) and JSON (JSON-
Path, Gössner).
Rules stored in EGC ﬁles are likely to be derived from scien-
tiﬁc literature and the format aims at documenting the sourc es
exactly. The structure of the format is ﬂexible, and new
record types can be added to it, to extend is function to the
representation of rules derived differently.
Convention necessities arose, when developing the format.
For example, no notation was available, for expressing ar-
rangements of sequence features in a genome. Thus, a no-
tation for this purpose, named Fardes (Features Arrangemen t
Description), was developed and implemented as a separate
Python package.
Furthermore, the deﬁnitions of organism groups and ge-
nomic contents require references to elements of external
resources. For this purpose a link format similar to URIs
(Berners-Lee et al., 1998) was deﬁned, unifying references
to ontologies, databases, websites and dictionaries. Addi tion-
ally we provided a method for giving optional descriptions o f
the resources themselves.
The formats adopts the tag system originally developed for
SAM (The SAM/BAM Format Speciﬁcation Working Group,
2021). The system was here modiﬁed by introducing new
types for lists of identiﬁers and ontology term links. As for
external resources, we provided a method for giving optiona l
description of the semantics and format of user-deﬁned tags .
To conclude, the format described in this article allow repr e-
senting a kind of data, expectations about genome contents i n
different groups of organisms, which has not been handled in
other ﬁle formats before. Thus, this study represents a prac ti-
cal and necessary foundation for implementing tools for the
veriﬁcation of such expectations.
ACKNOWLEDGEMENTS
Giorgio Gonnella has been supported by the DFG Grant GO 3192/ 1-1 “Automated
characterization of microbial genomes and metagenomes by c ollection and veriﬁca-
tion of association rules”. The funders had no role in study d esign, data collection
and analysis, decision to publish, or preparation of the man uscript.
The author would like to thank Serena Lam (University of Gött ingen) for discussions
regarding the expectation rules representation, which wer e helpful in the format
speciﬁcation, and for providing the examples rules mention ed in the text.
10 | arXiv Gonnella | Expected Genome Contents format (EGC)AUTHOR CONTRIBUTIONS
These contributions follow the Contributor Roles Taxonomy guidelines:
https://casrai.org/credit/. Conceptualization: G.G.; D ata curation: G.G.; Formal
analysis: G.G.; Funding acquisition: G.G.; Investigation : G.G.; Methodology: G.G.;
Project administration: G.G.; Resources: G.G.; Software: G.G.; Supervision: G.G.;
Validation: G.G.; Visualization: G.G.; Writing – original draft: G.G.; Writing – review
& editing: G.G.
COMPETING FINANCIAL INTERESTS
The authors declare no competing ﬁnancial interests.
References
Giorgio Gonnella. Unambiguosly expressing expectations
about the content of prokaryotic genomes. arXiv ,
2023a. doi: 10.48550/arXiv.2302.02919. URL
https://arxiv.org/abs/2302.02919.
Giorgio Gonnella. Textformats: Simplifying the deﬁnition
and parsing of text formats in bioinformatics. PLOS ONE ,
17(5):1–17, 05 2022. doi: 10.1371/journal.pone.0268910.
URL https://doi.org/10.1371/journal.pone.0268910.
GFA Format Speciﬁcation Working Group. Graphical frag-
ment assembly (GFA) 2.0 format speciﬁcation, 2018. URL
http://gfa-spec.github.io/GFA-spec/GFA2.html.
Giorgio Gonnella. Designing text representations for exis t-
ing data using the TextFormats Speciﬁcation Language.
arXiv , 2023b. doi: 10.48550/arXiv.2301.13551. URL
https://arxiv.org/abs/2301.13551.
Michael Y Galperin, Yuri I Wolf, Kira S Makarova,
Roberto Vera Alvarez, David Landsman, and Eugene V
Koonin. COG database update: focus on microbial
diversity, model organisms, and widespread pathogens.
Nucleic Acids Research , 49(D1):D274–D281, Novem-
ber 2020. doi: 1 0 . 1 0 9 3 / n a r / g k a a 1 0 18. URL
https://doi.org/10.1093/nar/gkaa1018.
Jaina Mistry, Sara Chuguransky, Lowri Williams, Matloob
Qureshi, Gustavo A Salazar, Erik L L Sonnhammer, Silvio
C E Tosatto, Lisanna Paladin, Shriya Raj, Lorna J Richard-
son, Robert D Finn, and Alex Bateman. Pfam: The protein
families database in 2021. Nucleic Acids Research , 49(D1):
D412–D419, October 2020. doi: 10.1093/nar/gkaa913.
URL https://doi.org/10.1093/nar/gkaa913.
Federico M. Lauro, Diane McDougald, Torsten Thomas,
Timothy J. Williams, Suhelen Egan, Scott Rice,
Matthew Z. DeMaere, Lily Ting, Haluk Ertan, Justin
Johnson, Steven Ferriera, Alla Lapidus, Iain Anderson,
Nikos Kyrpides, A. Christine Munk, Chris Detter, Cliff S.
Han, Mark V . Brown, Frank T. Robb, Staffan Kjelle-
berg, and Ricardo Cavicchioli. The genomic basis of
trophic strategy in marine bacteria. Proceedings of the
National Academy of Sciences , 106(37):15527–15533,
September 2009. doi: 10.1073/pnas.0903507106. URL
https://doi.org/10.1073/pnas.0903507106.Tongda Li, Ross Mann, Timothy Sawbridge, Jatinder Kaur,
Desmond Auer, and German Spangenberg. Novel xan-
thomonas species from the perennial ryegrass seed mi-
crobiome – assessing the bioprotection activity of non-
pathogenic relatives of pathogens. Frontiers in Microbi-
ology , 11, August 2020. doi: 10.3389/fmicb.2020.01991.
URL https://doi.org/10.3389/fmicb.2020.01991.
Michael P. McLeod, Xiang Qin, Sandor E. Karpathy, Jason
Gioia, Sarah K. Highlander, George E. Fox, Thomas Z.
McNeill, Huaiyang Jiang, Donna Muzny, Leni S. Ja-
cob, Alicia C. Hawes, Erica Sodergren, Rachel Gill, Jen-
nifer Hume, Maggie Morgan, Guangwei Fan, Anita G.
Amin, Richard A. Gibbs, Chao Hong, Xue jie Yu,
David H. Walker, and George M. Weinstock. Com-
plete genome sequence of Rickettsia typhi and com-
parison with sequences of other rickettsiae. Journal
of Bacteriology , 186(17):5842–5855, September 2004.
doi: 10.1128/jb.186.17.5842- 5855.2004. URL
https://doi.org/10.1128/jb.186.17.5842-5855.2004.
Alyson E. Santoro, Christopher L. Dupont, R. Alex Richter,
Matthew T. Craig, Paul Carini, Matthew R. McIlvin,
Youngik Yang, William D. Orsi, Dawn M. Moran, and
Mak A. Saito. Genomic and proteomic characteriza-
tion of Candidatus Nitrosopelagicus brevis: An ammonia-
oxidizing archaeon from the open ocean. Proceedings
of the National Academy of Sciences , 112(4):1173–1178,
January 2015. doi: 10.1073/pnas.1416223112. URL
https://doi.org/10.1073/pnas.1416223112.
Heng Li, Bob Handsaker, Alec Wysoker, Tim Fennell,
Jue Ruan, Nils Homer, Gabor Marth, Goncalo Abecasis,
Richard Durbin, and 1000 Genome Project Data Process-
ing Subgroup. The Sequence Alignment/Map format and
SAMtools. Bioinformatics , 25(16):2078–2079, 06 2009.
ISSN 1367-4803. doi: 10.1093/bioinformatics/btp352.
URL https://doi.org/10.1093/bioinformatics/btp352.
Petr Danecek, Adam Auton, Goncalo Abecasis, Cornelis A.
Albers, Eric Banks, Mark A. DePristo, Robert E. Hand-
saker, Gerton Lunter, Gabor T. Marth, Stephen T. Sherry,
Gilean McVean, Richard Durbin, and 1000 Genomes
Project Analysis Group. The variant call format and
VCFtools. Bioinformatics , 27(15):2156–2158, 06 2011.
ISSN 1367-4803. doi: 10.1093/bioinformatics/btr330.
URL https://doi.org/10.1093/bioinformatics/btr330.
The SAM/BAM Format Speciﬁcation Working Group. Se-
quence alignment/map format speciﬁcation, 06 2021. URL
https://samtools.github.io/hts-specs/SAMv1.pdf.
GFA Format Speciﬁcation Working Group. The
GFA format speciﬁcation, 2016. URL
http://gfa-spec.github.io/GFA-spec/GFA1.html.
Felipe Pezoa, Juan L Reutter, Fernando Suarez, Martín
Ugarte, and Domagoj Vrgo ˇc. Foundations of json schema.
InProceedings of the 25th International Conference on
World Wide Web , pages 263–273. International World
Wide Web Conferences Steering Committee, 2016.
Gonnella | Expected Genome Contents format (EGC) arXiv | 11World Wide Web Consortium (W3C). XML Path Language
(XPath) 3.1. https://www.w3.org/TR/xpath-31/. Accessed :
2023-03-15.
Stefan Gössner. JSONPath - XPath for JSON.https://goessner.net/articles/JsonPath/. Accessed: 20 23-
03-15.
T. Berners-Lee, R. Fielding, and L. Masinter. Uniform re-
source identiﬁers (URI): Generic syntax. Technical report ,
August 1998. URL https://doi.org/10.17487/rfc2396.
12 | arXiv Gonnella | Expected Genome Contents format (EGC)